"use strict";
(self.webpackChunkangularapp = self.webpackChunkangularapp || []).push([
    [179],
    {
        2011: (pt, Me, P) => {
            P.d(Me, {
                Dh: () => ge,
                GT: () => _e,
                cc: () => Ee,
                hO: () => Le,
                on: () => U,
                pX: () => he,
                xv: () => fe,
            });
            var p = P(4650),
                Q = P(127),
                O = P(880);
            pt = P.hmd(pt);
            const ie = ["ngOnDestroy"],
                he = (de, nt, Qe, Ae = {}) =>
                    new Proxy(de, {
                        get: (ve, De) =>
                            Qe.runOutsideAngular(() => {
                                var We;
                                if (de[De])
                                    return (
                                        !(
                                            null === (We = Ae?.spy) ||
                                            void 0 === We
                                        ) &&
                                            We.get &&
                                            Ae.spy.get(De, de[De]),
                                        de[De]
                                    );
                                if (ie.indexOf(De) > -1) return () => {};
                                const Ue = nt.toPromise().then((j) => {
                                    const Ce = j && j[De];
                                    return "function" == typeof Ce
                                        ? Ce.bind(j)
                                        : Ce && Ce.then
                                        ? Ce.then((Y) => Qe.run(() => Y))
                                        : Qe.run(() => Ce);
                                });
                                return new Proxy(() => {}, {
                                    get: (j, Ce) => Ue[Ce],
                                    apply: (j, Ce, Y) =>
                                        Ue.then((te) => {
                                            var X;
                                            const pe = te && te(...Y);
                                            return (
                                                !(
                                                    null === (X = Ae?.spy) ||
                                                    void 0 === X
                                                ) &&
                                                    X.apply &&
                                                    Ae.spy.apply(De, Y, pe),
                                                pe
                                            );
                                        }),
                                });
                            }),
                    }),
                _e = (de, nt) => {
                    nt.forEach((Qe) => {
                        Object.getOwnPropertyNames(Qe.prototype || Qe).forEach(
                            (Ae) => {
                                Object.defineProperty(
                                    de.prototype,
                                    Ae,
                                    Object.getOwnPropertyDescriptor(
                                        Qe.prototype || Qe,
                                        Ae
                                    )
                                );
                            }
                        );
                    });
                };
            class se {
                constructor(nt) {
                    return nt;
                }
            }
            const ge = new p.OlP("angularfire2.app.options"),
                fe = new p.OlP("angularfire2.app.name");
            function U(de, nt, Qe) {
                const ve = ("object" == typeof Qe && Qe) || {};
                ve.name =
                    ve.name || ("string" == typeof Qe && Qe) || "[DEFAULT]";
                const We =
                    Q.Z.apps.filter((Ue) => Ue && Ue.name === ve.name)[0] ||
                    nt.runOutsideAngular(() => Q.Z.initializeApp(de, ve));
                try {
                    JSON.stringify(de) !== JSON.stringify(We.options) &&
                        B(
                            "error",
                            `${
                                We.name
                            } Firebase App already initialized with different options${
                                pt.hot
                                    ? ", you may need to reload as Firebase is not HMR aware."
                                    : "."
                            }`
                        );
                } catch {}
                return new se(We);
            }
            const B = (de, ...nt) => {
                    (0, p.X6Q)() && typeof console < "u" && console[de](...nt);
                },
                J = {
                    provide: se,
                    useFactory: U,
                    deps: [ge, p.R0b, [new p.FiY(), fe]],
                };
            let Le = (() => {
                class de {
                    constructor(Qe) {
                        Q.Z.registerVersion("angularfire", O.q4.full, "core"),
                            Q.Z.registerVersion(
                                "angularfire",
                                O.q4.full,
                                "app-compat"
                            ),
                            Q.Z.registerVersion(
                                "angular",
                                p.q4F.full,
                                Qe.toString()
                            );
                    }
                    static initializeApp(Qe, Ae) {
                        return {
                            ngModule: de,
                            providers: [
                                { provide: ge, useValue: Qe },
                                { provide: fe, useValue: Ae },
                            ],
                        };
                    }
                }
                return (
                    (de.ɵfac = function (Qe) {
                        return new (Qe || de)(p.LFG(p.Lbi));
                    }),
                    (de.ɵmod = p.oAB({ type: de })),
                    (de.ɵinj = p.cJS({ providers: [J] })),
                    de
                );
            })();
            function Ee(de, nt, Qe, Ae, ve) {
                const [, De, We] =
                    globalThis.ɵAngularfireInstanceCache.find(
                        (Ue) => Ue[0] === de
                    ) || [];
                if (De)
                    return (
                        (function Se(de, nt) {
                            try {
                                return de.toString() === nt.toString();
                            } catch {
                                return de === nt;
                            }
                        })(ve, We) ||
                            (ce(
                                "error",
                                `${nt} was already initialized on the ${Qe} Firebase App with different settings.${
                                    He
                                        ? " You may need to reload as Firebase is not HMR aware."
                                        : ""
                                }`
                            ),
                            ce("warn", { is: ve, was: We })),
                        De
                    );
                {
                    const Ue = Ae();
                    return (
                        globalThis.ɵAngularfireInstanceCache.push([de, Ue, ve]),
                        Ue
                    );
                }
            }
            const He = !!pt.hot,
                ce = (de, ...nt) => {
                    (0, p.X6Q)() && typeof console < "u" && console[de](...nt);
                };
            globalThis.ɵAngularfireInstanceCache ||
                (globalThis.ɵAngularfireInstanceCache = []);
        },
        880: (pt, Me, P) => {
            P.d(Me, {
                q4: () => ra,
                iC: () => Ai,
                fc: () => Ks,
                HU: () => ia,
                vb: () => pc,
                JM: () => fc,
            });
            var p = P(4650),
                Q = P(5867),
                O = P(5861),
                ie = P(9681),
                he = P(2090),
                _e = P(4859),
                se = P(1877);
            P(2833);
            const fe = "@firebase/remote-config",
                U = "0.3.11",
                Ee = new he.LL("remoteconfig", "Remote Config", {
                    "registration-window":
                        "Undefined window object. This SDK only supports usage in a browser environment.",
                    "registration-project-id":
                        "Undefined project identifier. Check Firebase app initialization.",
                    "registration-api-key":
                        "Undefined API key. Check Firebase app initialization.",
                    "registration-app-id":
                        "Undefined app identifier. Check Firebase app initialization.",
                    "storage-open":
                        "Error thrown when opening storage. Original error: {$originalErrorMessage}.",
                    "storage-get":
                        "Error thrown when reading from storage. Original error: {$originalErrorMessage}.",
                    "storage-set":
                        "Error thrown when writing to storage. Original error: {$originalErrorMessage}.",
                    "storage-delete":
                        "Error thrown when deleting from storage. Original error: {$originalErrorMessage}.",
                    "fetch-client-network":
                        "Fetch client failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.",
                    "fetch-timeout":
                        'The config fetch request timed out.  Configure timeout using "fetchTimeoutMillis" SDK setting.',
                    "fetch-throttle":
                        'The config fetch request timed out while in an exponential backoff state. Configure timeout using "fetchTimeoutMillis" SDK setting. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',
                    "fetch-client-parse":
                        "Fetch client could not parse response. Original error: {$originalErrorMessage}.",
                    "fetch-status":
                        "Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.",
                    "indexed-db-unavailable":
                        "Indexed DB is not supported by current browser",
                });
            class ct {
                constructor(M, q, ae, Pe) {
                    (this.client = M),
                        (this.storage = q),
                        (this.storageCache = ae),
                        (this.logger = Pe);
                }
                isCachedDataFresh(M, q) {
                    if (!q)
                        return (
                            this.logger.debug(
                                "Config fetch cache check. Cache unpopulated."
                            ),
                            !1
                        );
                    const ae = Date.now() - q,
                        Pe = ae <= M;
                    return (
                        this.logger.debug(
                            `Config fetch cache check. Cache age millis: ${ae}. Cache max age millis (minimumFetchIntervalMillis setting): ${M}. Is cache hit: ${Pe}.`
                        ),
                        Pe
                    );
                }
                fetch(M) {
                    var q = this;
                    return (0, O.Z)(function* () {
                        const [ae, Pe] = yield Promise.all([
                            q.storage.getLastSuccessfulFetchTimestampMillis(),
                            q.storage.getLastSuccessfulFetchResponse(),
                        ]);
                        if (Pe && q.isCachedDataFresh(M.cacheMaxAgeMillis, ae))
                            return Pe;
                        M.eTag = Pe && Pe.eTag;
                        const Ye = yield q.client.fetch(M),
                            ht = [
                                q.storageCache.setLastSuccessfulFetchTimestampMillis(
                                    Date.now()
                                ),
                            ];
                        return (
                            200 === Ye.status &&
                                ht.push(
                                    q.storage.setLastSuccessfulFetchResponse(Ye)
                                ),
                            yield Promise.all(ht),
                            Ye
                        );
                    })();
                }
            }
            function Gt(N = navigator) {
                return (N.languages && N.languages[0]) || N.language;
            }
            class Pt {
                constructor(M, q, ae, Pe, Ye, ht) {
                    (this.firebaseInstallations = M),
                        (this.sdkVersion = q),
                        (this.namespace = ae),
                        (this.projectId = Pe),
                        (this.apiKey = Ye),
                        (this.appId = ht);
                }
                fetch(M) {
                    var q = this;
                    return (0, O.Z)(function* () {
                        var ae, Pe, Ye;
                        const [ht, qt] = yield Promise.all([
                                q.firebaseInstallations.getId(),
                                q.firebaseInstallations.getToken(),
                            ]),
                            Ct = `${
                                window.FIREBASE_REMOTE_CONFIG_URL_BASE ||
                                "https://firebaseremoteconfig.googleapis.com"
                            }/v1/projects/${q.projectId}/namespaces/${
                                q.namespace
                            }:fetch?key=${q.apiKey}`,
                            Tn = {
                                "Content-Type": "application/json",
                                "Content-Encoding": "gzip",
                                "If-None-Match": M.eTag || "*",
                            },
                            St = {
                                sdk_version: q.sdkVersion,
                                app_instance_id: ht,
                                app_instance_id_token: qt,
                                app_id: q.appId,
                                language_code: Gt(),
                            },
                            Sn = {
                                method: "POST",
                                headers: Tn,
                                body: JSON.stringify(St),
                            },
                            Ss = fetch(Ct, Sn),
                            As = new Promise((ua, ei) => {
                                M.signal.addEventListener(() => {
                                    const cr = new Error(
                                        "The operation was aborted."
                                    );
                                    (cr.name = "AbortError"), ei(cr);
                                });
                            });
                        let Tr;
                        try {
                            yield Promise.race([Ss, As]), (Tr = yield Ss);
                        } catch (ua) {
                            let ei = "fetch-client-network";
                            throw (
                                ("AbortError" ===
                                    (null === (ae = ua) || void 0 === ae
                                        ? void 0
                                        : ae.name) && (ei = "fetch-timeout"),
                                Ee.create(ei, {
                                    originalErrorMessage:
                                        null === (Pe = ua) || void 0 === Pe
                                            ? void 0
                                            : Pe.message,
                                }))
                            );
                        }
                        let xs = Tr.status;
                        const aa = Tr.headers.get("ETag") || void 0;
                        let bo, Rs;
                        if (200 === Tr.status) {
                            let ua;
                            try {
                                ua = yield Tr.json();
                            } catch (ei) {
                                throw Ee.create("fetch-client-parse", {
                                    originalErrorMessage:
                                        null === (Ye = ei) || void 0 === Ye
                                            ? void 0
                                            : Ye.message,
                                });
                            }
                            (bo = ua.entries), (Rs = ua.state);
                        }
                        if (
                            ("INSTANCE_STATE_UNSPECIFIED" === Rs
                                ? (xs = 500)
                                : "NO_CHANGE" === Rs
                                ? (xs = 304)
                                : ("NO_TEMPLATE" === Rs ||
                                      "EMPTY_CONFIG" === Rs) &&
                                  (bo = {}),
                            304 !== xs && 200 !== xs)
                        )
                            throw Ee.create("fetch-status", { httpStatus: xs });
                        return { status: xs, eTag: aa, config: bo };
                    })();
                }
            }
            class Yn {
                constructor(M, q) {
                    (this.client = M), (this.storage = q);
                }
                fetch(M) {
                    var q = this;
                    return (0, O.Z)(function* () {
                        const ae = (yield q.storage.getThrottleMetadata()) || {
                            backoffCount: 0,
                            throttleEndTimeMillis: Date.now(),
                        };
                        return q.attemptFetch(M, ae);
                    })();
                }
                attemptFetch(
                    M,
                    { throttleEndTimeMillis: q, backoffCount: ae }
                ) {
                    var Pe = this;
                    return (0, O.Z)(function* () {
                        yield (function Ke(N, M) {
                            return new Promise((q, ae) => {
                                const Pe = Math.max(M - Date.now(), 0),
                                    Ye = setTimeout(q, Pe);
                                N.addEventListener(() => {
                                    clearTimeout(Ye),
                                        ae(
                                            Ee.create("fetch-throttle", {
                                                throttleEndTimeMillis: M,
                                            })
                                        );
                                });
                            });
                        })(M.signal, q);
                        try {
                            const Ye = yield Pe.client.fetch(M);
                            return (
                                yield Pe.storage.deleteThrottleMetadata(), Ye
                            );
                        } catch (Ye) {
                            if (
                                !(function rn(N) {
                                    if (!(N instanceof he.ZR && N.customData))
                                        return !1;
                                    const M = Number(N.customData.httpStatus);
                                    return (
                                        429 === M ||
                                        500 === M ||
                                        503 === M ||
                                        504 === M
                                    );
                                })(Ye)
                            )
                                throw Ye;
                            const ht = {
                                throttleEndTimeMillis:
                                    Date.now() + (0, he.$s)(ae),
                                backoffCount: ae + 1,
                            };
                            return (
                                yield Pe.storage.setThrottleMetadata(ht),
                                Pe.attemptFetch(M, ht)
                            );
                        }
                    })();
                }
            }
            class qn {
                constructor(M, q, ae, Pe, Ye) {
                    (this.app = M),
                        (this._client = q),
                        (this._storageCache = ae),
                        (this._storage = Pe),
                        (this._logger = Ye),
                        (this._isInitializationComplete = !1),
                        (this.settings = {
                            fetchTimeoutMillis: 6e4,
                            minimumFetchIntervalMillis: 432e5,
                        }),
                        (this.defaultConfig = {});
                }
                get fetchTimeMillis() {
                    return (
                        this._storageCache.getLastSuccessfulFetchTimestampMillis() ||
                        -1
                    );
                }
                get lastFetchStatus() {
                    return (
                        this._storageCache.getLastFetchStatus() ||
                        "no-fetch-yet"
                    );
                }
            }
            function kt(N, M) {
                var q;
                const ae = N.target.error || void 0;
                return Ee.create(M, {
                    originalErrorMessage:
                        ae &&
                        (null === (q = ae) || void 0 === q
                            ? void 0
                            : q.message),
                });
            }
            const xt = "app_namespace_store";
            class Nn {
                constructor(
                    M,
                    q,
                    ae,
                    Pe = (function ir() {
                        return new Promise((N, M) => {
                            var q;
                            try {
                                const ae = indexedDB.open(
                                    "firebase_remote_config",
                                    1
                                );
                                (ae.onerror = (Pe) => {
                                    M(kt(Pe, "storage-open"));
                                }),
                                    (ae.onsuccess = (Pe) => {
                                        N(Pe.target.result);
                                    }),
                                    (ae.onupgradeneeded = (Pe) => {
                                        0 === Pe.oldVersion &&
                                            Pe.target.result.createObjectStore(
                                                xt,
                                                { keyPath: "compositeKey" }
                                            );
                                    });
                            } catch (ae) {
                                M(
                                    Ee.create("storage-open", {
                                        originalErrorMessage:
                                            null === (q = ae) || void 0 === q
                                                ? void 0
                                                : q.message,
                                    })
                                );
                            }
                        });
                    })()
                ) {
                    (this.appId = M),
                        (this.appName = q),
                        (this.namespace = ae),
                        (this.openDbPromise = Pe);
                }
                getLastFetchStatus() {
                    return this.get("last_fetch_status");
                }
                setLastFetchStatus(M) {
                    return this.set("last_fetch_status", M);
                }
                getLastSuccessfulFetchTimestampMillis() {
                    return this.get("last_successful_fetch_timestamp_millis");
                }
                setLastSuccessfulFetchTimestampMillis(M) {
                    return this.set(
                        "last_successful_fetch_timestamp_millis",
                        M
                    );
                }
                getLastSuccessfulFetchResponse() {
                    return this.get("last_successful_fetch_response");
                }
                setLastSuccessfulFetchResponse(M) {
                    return this.set("last_successful_fetch_response", M);
                }
                getActiveConfig() {
                    return this.get("active_config");
                }
                setActiveConfig(M) {
                    return this.set("active_config", M);
                }
                getActiveConfigEtag() {
                    return this.get("active_config_etag");
                }
                setActiveConfigEtag(M) {
                    return this.set("active_config_etag", M);
                }
                getThrottleMetadata() {
                    return this.get("throttle_metadata");
                }
                setThrottleMetadata(M) {
                    return this.set("throttle_metadata", M);
                }
                deleteThrottleMetadata() {
                    return this.delete("throttle_metadata");
                }
                get(M) {
                    var q = this;
                    return (0, O.Z)(function* () {
                        const ae = yield q.openDbPromise;
                        return new Promise((Pe, Ye) => {
                            var ht;
                            const we = ae
                                    .transaction([xt], "readonly")
                                    .objectStore(xt),
                                Ct = q.createCompositeKey(M);
                            try {
                                const Tn = we.get(Ct);
                                (Tn.onerror = (St) => {
                                    Ye(kt(St, "storage-get"));
                                }),
                                    (Tn.onsuccess = (St) => {
                                        const Sn = St.target.result;
                                        Pe(Sn ? Sn.value : void 0);
                                    });
                            } catch (Tn) {
                                Ye(
                                    Ee.create("storage-get", {
                                        originalErrorMessage:
                                            null === (ht = Tn) || void 0 === ht
                                                ? void 0
                                                : ht.message,
                                    })
                                );
                            }
                        });
                    })();
                }
                set(M, q) {
                    var ae = this;
                    return (0, O.Z)(function* () {
                        const Pe = yield ae.openDbPromise;
                        return new Promise((Ye, ht) => {
                            var qt;
                            const Ct = Pe.transaction(
                                    [xt],
                                    "readwrite"
                                ).objectStore(xt),
                                Tn = ae.createCompositeKey(M);
                            try {
                                const St = Ct.put({
                                    compositeKey: Tn,
                                    value: q,
                                });
                                (St.onerror = (Sn) => {
                                    ht(kt(Sn, "storage-set"));
                                }),
                                    (St.onsuccess = () => {
                                        Ye();
                                    });
                            } catch (St) {
                                ht(
                                    Ee.create("storage-set", {
                                        originalErrorMessage:
                                            null === (qt = St) || void 0 === qt
                                                ? void 0
                                                : qt.message,
                                    })
                                );
                            }
                        });
                    })();
                }
                delete(M) {
                    var q = this;
                    return (0, O.Z)(function* () {
                        const ae = yield q.openDbPromise;
                        return new Promise((Pe, Ye) => {
                            var ht;
                            const we = ae
                                    .transaction([xt], "readwrite")
                                    .objectStore(xt),
                                Ct = q.createCompositeKey(M);
                            try {
                                const Tn = we.delete(Ct);
                                (Tn.onerror = (St) => {
                                    Ye(kt(St, "storage-delete"));
                                }),
                                    (Tn.onsuccess = () => {
                                        Pe();
                                    });
                            } catch (Tn) {
                                Ye(
                                    Ee.create("storage-delete", {
                                        originalErrorMessage:
                                            null === (ht = Tn) || void 0 === ht
                                                ? void 0
                                                : ht.message,
                                    })
                                );
                            }
                        });
                    })();
                }
                createCompositeKey(M) {
                    return [this.appId, this.appName, this.namespace, M].join();
                }
            }
            class Ir {
                constructor(M) {
                    this.storage = M;
                }
                getLastFetchStatus() {
                    return this.lastFetchStatus;
                }
                getLastSuccessfulFetchTimestampMillis() {
                    return this.lastSuccessfulFetchTimestampMillis;
                }
                getActiveConfig() {
                    return this.activeConfig;
                }
                loadFromStorage() {
                    var M = this;
                    return (0, O.Z)(function* () {
                        const q = M.storage.getLastFetchStatus(),
                            ae =
                                M.storage.getLastSuccessfulFetchTimestampMillis(),
                            Pe = M.storage.getActiveConfig(),
                            Ye = yield q;
                        Ye && (M.lastFetchStatus = Ye);
                        const ht = yield ae;
                        ht && (M.lastSuccessfulFetchTimestampMillis = ht);
                        const qt = yield Pe;
                        qt && (M.activeConfig = qt);
                    })();
                }
                setLastFetchStatus(M) {
                    return (
                        (this.lastFetchStatus = M),
                        this.storage.setLastFetchStatus(M)
                    );
                }
                setLastSuccessfulFetchTimestampMillis(M) {
                    return (
                        (this.lastSuccessfulFetchTimestampMillis = M),
                        this.storage.setLastSuccessfulFetchTimestampMillis(M)
                    );
                }
                setActiveConfig(M) {
                    return (
                        (this.activeConfig = M), this.storage.setActiveConfig(M)
                    );
                }
            }
            function dt() {
                return or.apply(this, arguments);
            }
            function or() {
                return (or = (0, O.Z)(function* () {
                    if (!(0, he.hl)()) return !1;
                    try {
                        return yield (0, he.eu)();
                    } catch {
                        return !1;
                    }
                })).apply(this, arguments);
            }
            !(function Cr() {
                (0, ie._registerComponent)(
                    new _e.wA(
                        "remote-config",
                        function N(M, { instanceIdentifier: q }) {
                            const ae = M.getProvider("app").getImmediate(),
                                Pe = M.getProvider(
                                    "installations-internal"
                                ).getImmediate();
                            if (typeof window > "u")
                                throw Ee.create("registration-window");
                            if (!(0, he.hl)())
                                throw Ee.create("indexed-db-unavailable");
                            const {
                                projectId: Ye,
                                apiKey: ht,
                                appId: qt,
                            } = ae.options;
                            if (!Ye) throw Ee.create("registration-project-id");
                            if (!ht) throw Ee.create("registration-api-key");
                            if (!qt) throw Ee.create("registration-app-id");
                            const we = new Nn(
                                    qt,
                                    ae.name,
                                    (q = q || "firebase")
                                ),
                                Ct = new Ir(we),
                                Tn = new se.Yd(fe);
                            Tn.logLevel = se.in.ERROR;
                            const St = new Pt(
                                    Pe,
                                    ie.SDK_VERSION,
                                    q,
                                    Ye,
                                    ht,
                                    qt
                                ),
                                Sn = new Yn(St, we),
                                Ss = new ct(Sn, we, Ct, Tn),
                                As = new qn(ae, Ss, Ct, we, Tn);
                            return (
                                (function We(N) {
                                    const M = (0, he.m9)(N);
                                    M._initializePromise ||
                                        (M._initializePromise = M._storageCache
                                            .loadFromStorage()
                                            .then(() => {
                                                M._isInitializationComplete =
                                                    !0;
                                            }));
                                })(As),
                                As
                            );
                        },
                        "PUBLIC"
                    ).setMultipleInstances(!0)
                ),
                    (0, ie.registerVersion)(fe, U),
                    (0, ie.registerVersion)(fe, U, "esm2017");
            })();
            var an = P(8766);
            const Pn = "/firebase-messaging-sw.js",
                br = "/firebase-cloud-messaging-push-scope",
                Qr =
                    "BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4",
                Fn = "google.c.a.c_id",
                Lr = "google.c.a.c_l",
                Dr = "google.c.a.ts",
                Wt = "google.c.a.e";
            var at = (() => {
                return (
                    ((N = at || (at = {})).PUSH_RECEIVED = "push-received"),
                    (N.NOTIFICATION_CLICKED = "notification-clicked"),
                    at
                );
                var N;
            })();
            function gn(N) {
                const M = new Uint8Array(N);
                return btoa(String.fromCharCode(...M))
                    .replace(/=/g, "")
                    .replace(/\+/g, "-")
                    .replace(/\//g, "_");
            }
            function Qn(N) {
                const q = (N + "=".repeat((4 - (N.length % 4)) % 4))
                        .replace(/\-/g, "+")
                        .replace(/_/g, "/"),
                    ae = atob(q),
                    Pe = new Uint8Array(ae.length);
                for (let Ye = 0; Ye < ae.length; ++Ye)
                    Pe[Ye] = ae.charCodeAt(Ye);
                return Pe;
            }
            const Tt = "fcm_token_details_db",
                Ln = "fcm_token_object_Store";
            function vr(N) {
                return Xt.apply(this, arguments);
            }
            function Xt() {
                return (
                    (Xt = (0, O.Z)(function* (N) {
                        if (
                            "databases" in indexedDB &&
                            !(yield indexedDB.databases())
                                .map((Ye) => Ye.name)
                                .includes(Tt)
                        )
                            return null;
                        let M = null;
                        return (
                            (yield (0, an.X3)(Tt, 5, {
                                upgrade:
                                    ((ae = (0, O.Z)(function* (Pe, Ye, ht, qt) {
                                        var we;
                                        if (
                                            Ye < 2 ||
                                            !Pe.objectStoreNames.contains(Ln)
                                        )
                                            return;
                                        const Ct = qt.objectStore(Ln),
                                            Tn = yield Ct.index(
                                                "fcmSenderId"
                                            ).get(N);
                                        if ((yield Ct.clear(), Tn))
                                            if (2 === Ye) {
                                                const St = Tn;
                                                if (
                                                    !St.auth ||
                                                    !St.p256dh ||
                                                    !St.endpoint
                                                )
                                                    return;
                                                M = {
                                                    token: St.fcmToken,
                                                    createTime:
                                                        null !==
                                                            (we =
                                                                St.createTime) &&
                                                        void 0 !== we
                                                            ? we
                                                            : Date.now(),
                                                    subscriptionOptions: {
                                                        auth: St.auth,
                                                        p256dh: St.p256dh,
                                                        endpoint: St.endpoint,
                                                        swScope: St.swScope,
                                                        vapidKey:
                                                            "string" ==
                                                            typeof St.vapidKey
                                                                ? St.vapidKey
                                                                : gn(
                                                                      St.vapidKey
                                                                  ),
                                                    },
                                                };
                                            } else if (3 === Ye) {
                                                const St = Tn;
                                                M = {
                                                    token: St.fcmToken,
                                                    createTime: St.createTime,
                                                    subscriptionOptions: {
                                                        auth: gn(St.auth),
                                                        p256dh: gn(St.p256dh),
                                                        endpoint: St.endpoint,
                                                        swScope: St.swScope,
                                                        vapidKey: gn(
                                                            St.vapidKey
                                                        ),
                                                    },
                                                };
                                            } else if (4 === Ye) {
                                                const St = Tn;
                                                M = {
                                                    token: St.fcmToken,
                                                    createTime: St.createTime,
                                                    subscriptionOptions: {
                                                        auth: gn(St.auth),
                                                        p256dh: gn(St.p256dh),
                                                        endpoint: St.endpoint,
                                                        swScope: St.swScope,
                                                        vapidKey: gn(
                                                            St.vapidKey
                                                        ),
                                                    },
                                                };
                                            }
                                    })),
                                    function (Ye, ht, qt, we) {
                                        return ae.apply(this, arguments);
                                    }),
                            })).close(),
                            yield (0, an.Lj)(Tt),
                            yield (0, an.Lj)("fcm_vapid_details_db"),
                            yield (0, an.Lj)("undefined"),
                            Jn(M) ? M : null
                        );
                        var ae;
                    })),
                    Xt.apply(this, arguments)
                );
            }
            function Jn(N) {
                if (!N || !N.subscriptionOptions) return !1;
                const { subscriptionOptions: M } = N;
                return (
                    "number" == typeof N.createTime &&
                    N.createTime > 0 &&
                    "string" == typeof N.token &&
                    N.token.length > 0 &&
                    "string" == typeof M.auth &&
                    M.auth.length > 0 &&
                    "string" == typeof M.p256dh &&
                    M.p256dh.length > 0 &&
                    "string" == typeof M.endpoint &&
                    M.endpoint.length > 0 &&
                    "string" == typeof M.swScope &&
                    M.swScope.length > 0 &&
                    "string" == typeof M.vapidKey &&
                    M.vapidKey.length > 0
                );
            }
            const L = "firebase-messaging-store";
            let $ = null;
            function G() {
                return (
                    $ ||
                        ($ = (0, an.X3)("firebase-messaging-database", 1, {
                            upgrade: (N, M) => {
                                0 === M && N.createObjectStore(L);
                            },
                        })),
                    $
                );
            }
            function xe(N) {
                return Ze.apply(this, arguments);
            }
            function Ze() {
                return (Ze = (0, O.Z)(function* (N) {
                    const M = le(N),
                        ae = yield (yield G())
                            .transaction(L)
                            .objectStore(L)
                            .get(M);
                    if (ae) return ae;
                    {
                        const Pe = yield vr(N.appConfig.senderId);
                        if (Pe) return yield ot(N, Pe), Pe;
                    }
                })).apply(this, arguments);
            }
            function ot(N, M) {
                return sn.apply(this, arguments);
            }
            function sn() {
                return (sn = (0, O.Z)(function* (N, M) {
                    const q = le(N),
                        Pe = (yield G()).transaction(L, "readwrite");
                    return yield Pe.objectStore(L).put(M, q), yield Pe.done, M;
                })).apply(this, arguments);
            }
            function Zt(N) {
                return ne.apply(this, arguments);
            }
            function ne() {
                return (ne = (0, O.Z)(function* (N) {
                    const M = le(N),
                        ae = (yield G()).transaction(L, "readwrite");
                    yield ae.objectStore(L).delete(M), yield ae.done;
                })).apply(this, arguments);
            }
            function le({ appConfig: N }) {
                return N.appId;
            }
            const Oe = new he.LL("messaging", "Messaging", {
                "missing-app-config-values":
                    'Missing App configuration value: "{$valueName}"',
                "only-available-in-window":
                    "This method is available in a Window context.",
                "only-available-in-sw":
                    "This method is available in a service worker context.",
                "permission-default":
                    "The notification permission was not granted and dismissed instead.",
                "permission-blocked":
                    "The notification permission was not granted and blocked instead.",
                "unsupported-browser":
                    "This browser doesn't support the API's required to use the Firebase SDK.",
                "indexed-db-unsupported":
                    "This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)",
                "failed-service-worker-registration":
                    "We are unable to register the default service worker. {$browserErrorMessage}",
                "token-subscribe-failed":
                    "A problem occurred while subscribing the user to FCM: {$errorInfo}",
                "token-subscribe-no-token":
                    "FCM returned no token when subscribing the user to push.",
                "token-unsubscribe-failed":
                    "A problem occurred while unsubscribing the user from FCM: {$errorInfo}",
                "token-update-failed":
                    "A problem occurred while updating the user from FCM: {$errorInfo}",
                "token-update-no-token":
                    "FCM returned no token when updating the user to push.",
                "use-sw-after-get-token":
                    "The useServiceWorker() method may only be called once and must be called before calling getToken() to ensure your service worker is used.",
                "invalid-sw-registration":
                    "The input to useServiceWorker() must be a ServiceWorkerRegistration.",
                "invalid-bg-handler":
                    "The input to setBackgroundMessageHandler() must be a function.",
                "invalid-vapid-key": "The public VAPID key must be a string.",
                "use-vapid-key-after-get-token":
                    "The usePublicVapidKey() method may only be called once and must be called before calling getToken() to ensure your VAPID key is used.",
            });
            function ze(N, M) {
                return ut.apply(this, arguments);
            }
            function ut() {
                return (ut = (0, O.Z)(function* (N, M) {
                    var q;
                    const ae = yield ar(N),
                        Pe = Vn(M),
                        Ye = {
                            method: "POST",
                            headers: ae,
                            body: JSON.stringify(Pe),
                        };
                    let ht;
                    try {
                        ht = yield (yield fetch(Ut(N.appConfig), Ye)).json();
                    } catch (qt) {
                        throw Oe.create("token-subscribe-failed", {
                            errorInfo:
                                null === (q = qt) || void 0 === q
                                    ? void 0
                                    : q.toString(),
                        });
                    }
                    if (ht.error)
                        throw Oe.create("token-subscribe-failed", {
                            errorInfo: ht.error.message,
                        });
                    if (!ht.token) throw Oe.create("token-subscribe-no-token");
                    return ht.token;
                })).apply(this, arguments);
            }
            function wt(N, M) {
                return Ne.apply(this, arguments);
            }
            function Ne() {
                return (Ne = (0, O.Z)(function* (N, M) {
                    var q;
                    const ae = yield ar(N),
                        Pe = Vn(M.subscriptionOptions),
                        Ye = {
                            method: "PATCH",
                            headers: ae,
                            body: JSON.stringify(Pe),
                        };
                    let ht;
                    try {
                        ht = yield (yield fetch(
                            `${Ut(N.appConfig)}/${M.token}`,
                            Ye
                        )).json();
                    } catch (qt) {
                        throw Oe.create("token-update-failed", {
                            errorInfo:
                                null === (q = qt) || void 0 === q
                                    ? void 0
                                    : q.toString(),
                        });
                    }
                    if (ht.error)
                        throw Oe.create("token-update-failed", {
                            errorInfo: ht.error.message,
                        });
                    if (!ht.token) throw Oe.create("token-update-no-token");
                    return ht.token;
                })).apply(this, arguments);
            }
            function tt(N, M) {
                return It.apply(this, arguments);
            }
            function It() {
                return (It = (0, O.Z)(function* (N, M) {
                    var q;
                    const Pe = { method: "DELETE", headers: yield ar(N) };
                    try {
                        const ht = yield (yield fetch(
                            `${Ut(N.appConfig)}/${M}`,
                            Pe
                        )).json();
                        if (ht.error)
                            throw Oe.create("token-unsubscribe-failed", {
                                errorInfo: ht.error.message,
                            });
                    } catch (Ye) {
                        throw Oe.create("token-unsubscribe-failed", {
                            errorInfo:
                                null === (q = Ye) || void 0 === q
                                    ? void 0
                                    : q.toString(),
                        });
                    }
                })).apply(this, arguments);
            }
            function Ut({ projectId: N }) {
                return `https://fcmregistrations.googleapis.com/v1/projects/${N}/registrations`;
            }
            function ar(N) {
                return cn.apply(this, arguments);
            }
            function cn() {
                return (cn = (0, O.Z)(function* ({
                    appConfig: N,
                    installations: M,
                }) {
                    const q = yield M.getToken();
                    return new Headers({
                        "Content-Type": "application/json",
                        Accept: "application/json",
                        "x-goog-api-key": N.apiKey,
                        "x-goog-firebase-installations-auth": `FIS ${q}`,
                    });
                })).apply(this, arguments);
            }
            function Vn({ p256dh: N, auth: M, endpoint: q, vapidKey: ae }) {
                const Pe = { web: { endpoint: q, auth: M, p256dh: N } };
                return ae !== Qr && (Pe.web.applicationPubKey = ae), Pe;
            }
            const In = 6048e5;
            function $s(N) {
                return Jr.apply(this, arguments);
            }
            function Jr() {
                return (Jr = (0, O.Z)(function* (N) {
                    const M = yield Cn(N.swRegistration, N.vapidKey),
                        q = {
                            vapidKey: N.vapidKey,
                            swScope: N.swRegistration.scope,
                            endpoint: M.endpoint,
                            auth: gn(M.getKey("auth")),
                            p256dh: gn(M.getKey("p256dh")),
                        },
                        ae = yield xe(N.firebaseDependencies);
                    if (ae) {
                        if (bn(ae.subscriptionOptions, q))
                            return Date.now() >= ae.createTime + In
                                ? Z(N, {
                                      token: ae.token,
                                      createTime: Date.now(),
                                      subscriptionOptions: q,
                                  })
                                : ae.token;
                        try {
                            yield tt(N.firebaseDependencies, ae.token);
                        } catch (Pe) {
                            console.warn(Pe);
                        }
                        return Fe(N.firebaseDependencies, q);
                    }
                    return Fe(N.firebaseDependencies, q);
                })).apply(this, arguments);
            }
            function Ot(N) {
                return bs.apply(this, arguments);
            }
            function bs() {
                return (bs = (0, O.Z)(function* (N) {
                    const M = yield xe(N.firebaseDependencies);
                    M &&
                        (yield tt(N.firebaseDependencies, M.token),
                        yield Zt(N.firebaseDependencies));
                    const q =
                        yield N.swRegistration.pushManager.getSubscription();
                    return !q || q.unsubscribe();
                })).apply(this, arguments);
            }
            function Z(N, M) {
                return ye.apply(this, arguments);
            }
            function ye() {
                return (ye = (0, O.Z)(function* (N, M) {
                    try {
                        const q = yield wt(N.firebaseDependencies, M),
                            ae = Object.assign(Object.assign({}, M), {
                                token: q,
                                createTime: Date.now(),
                            });
                        return yield ot(N.firebaseDependencies, ae), q;
                    } catch (q) {
                        throw (yield Ot(N), q);
                    }
                })).apply(this, arguments);
            }
            function Fe(N, M) {
                return et.apply(this, arguments);
            }
            function et() {
                return (et = (0, O.Z)(function* (N, M) {
                    const ae = {
                        token: yield ze(N, M),
                        createTime: Date.now(),
                        subscriptionOptions: M,
                    };
                    return yield ot(N, ae), ae.token;
                })).apply(this, arguments);
            }
            function Cn(N, M) {
                return Yt.apply(this, arguments);
            }
            function Yt() {
                return (Yt = (0, O.Z)(function* (N, M) {
                    return (
                        (yield N.pushManager.getSubscription()) ||
                        N.pushManager.subscribe({
                            userVisibleOnly: !0,
                            applicationServerKey: Qn(M),
                        })
                    );
                })).apply(this, arguments);
            }
            function bn(N, M) {
                return (
                    M.vapidKey === N.vapidKey &&
                    M.endpoint === N.endpoint &&
                    M.auth === N.auth &&
                    M.p256dh === N.p256dh
                );
            }
            function Dn(N) {
                const M = {
                    from: N.from,
                    collapseKey: N.collapse_key,
                    messageId: N.fcmMessageId,
                };
                return (
                    (function Ci(N, M) {
                        if (!M.notification) return;
                        N.notification = {};
                        const q = M.notification.title;
                        q && (N.notification.title = q);
                        const ae = M.notification.body;
                        ae && (N.notification.body = ae);
                        const Pe = M.notification.image;
                        Pe && (N.notification.image = Pe);
                    })(M, N),
                    (function jt(N, M) {
                        !M.data || (N.data = M.data);
                    })(M, N),
                    (function La(N, M) {
                        var q, ae, Pe, Ye, ht;
                        if (
                            !(
                                M.fcmOptions ||
                                (null !== (q = M.notification) &&
                                    void 0 !== q &&
                                    q.click_action)
                            )
                        )
                            return;
                        N.fcmOptions = {};
                        const qt =
                            null !==
                                (Pe =
                                    null === (ae = M.fcmOptions) ||
                                    void 0 === ae
                                        ? void 0
                                        : ae.link) && void 0 !== Pe
                                ? Pe
                                : null === (Ye = M.notification) ||
                                  void 0 === Ye
                                ? void 0
                                : Ye.click_action;
                        qt && (N.fcmOptions.link = qt);
                        const we =
                            null === (ht = M.fcmOptions) || void 0 === ht
                                ? void 0
                                : ht.analytics_label;
                        we && (N.fcmOptions.analyticsLabel = we);
                    })(M, N),
                    M
                );
            }
            function $u(N) {
                return "object" == typeof N && !!N && Fn in N;
            }
            function Xo(N, M) {
                const q = [];
                for (let ae = 0; ae < N.length; ae++)
                    q.push(N.charAt(ae)), ae < M.length && q.push(M.charAt(ae));
                return q.join("");
            }
            function Ds(N) {
                return Oe.create("missing-app-config-values", { valueName: N });
            }
            Xo(
                "hts/frbslgigp.ogepscmv/ieo/eaylg",
                "tp:/ieaeogn-agolai.o/1frlglgc/o"
            ),
                Xo("AzSCbw63g1R0nCw85jG8", "Iaya3yLKwmgvh7cF0q4");
            class vo {
                constructor(M, q, ae) {
                    (this.deliveryMetricsExportedToBigQueryEnabled = !1),
                        (this.onBackgroundMessageHandler = null),
                        (this.onMessageHandler = null),
                        (this.logEvents = []),
                        (this.isLogServiceStarted = !1);
                    const Pe = (function yo(N) {
                        if (!N || !N.options)
                            throw Ds("App Configuration Object");
                        if (!N.name) throw Ds("App Name");
                        const M = [
                                "projectId",
                                "apiKey",
                                "appId",
                                "messagingSenderId",
                            ],
                            { options: q } = N;
                        for (const ae of M) if (!q[ae]) throw Ds(ae);
                        return {
                            appName: N.name,
                            projectId: q.projectId,
                            apiKey: q.apiKey,
                            appId: q.appId,
                            senderId: q.messagingSenderId,
                        };
                    })(M);
                    this.firebaseDependencies = {
                        app: M,
                        appConfig: Pe,
                        installations: q,
                        analyticsProvider: ae,
                    };
                }
                _delete() {
                    return Promise.resolve();
                }
            }
            function pi(N) {
                return $n.apply(this, arguments);
            }
            function $n() {
                return ($n = (0, O.Z)(function* (N) {
                    var M;
                    try {
                        (N.swRegistration =
                            yield navigator.serviceWorker.register(Pn, {
                                scope: br,
                            })),
                            N.swRegistration.update().catch(() => {});
                    } catch (q) {
                        throw Oe.create("failed-service-worker-registration", {
                            browserErrorMessage:
                                null === (M = q) || void 0 === M
                                    ? void 0
                                    : M.message,
                        });
                    }
                })).apply(this, arguments);
            }
            function ch(N, M) {
                return Xn.apply(this, arguments);
            }
            function Xn() {
                return (Xn = (0, O.Z)(function* (N, M) {
                    if (
                        (!M && !N.swRegistration && (yield pi(N)),
                        M || !N.swRegistration)
                    ) {
                        if (!(M instanceof ServiceWorkerRegistration))
                            throw Oe.create("invalid-sw-registration");
                        N.swRegistration = M;
                    }
                })).apply(this, arguments);
            }
            function bi(N, M) {
                return Ts.apply(this, arguments);
            }
            function Ts() {
                return (Ts = (0, O.Z)(function* (N, M) {
                    M ? (N.vapidKey = M) : N.vapidKey || (N.vapidKey = Qr);
                })).apply(this, arguments);
            }
            function Hi() {
                return (Hi = (0, O.Z)(function* (N, M) {
                    if (!navigator) throw Oe.create("only-available-in-window");
                    if (
                        ("default" === Notification.permission &&
                            (yield Notification.requestPermission()),
                        "granted" !== Notification.permission)
                    )
                        throw Oe.create("permission-blocked");
                    return (
                        yield bi(N, M?.vapidKey),
                        yield ch(N, M?.serviceWorkerRegistration),
                        $s(N)
                    );
                })).apply(this, arguments);
            }
            function Di(N, M, q) {
                return ea.apply(this, arguments);
            }
            function ea() {
                return (ea = (0, O.Z)(function* (N, M, q) {
                    const ae = ay(M);
                    (yield N.firebaseDependencies.analyticsProvider.get()).logEvent(
                        ae,
                        {
                            message_id: q[Fn],
                            message_name: q[Lr],
                            message_time: q[Dr],
                            message_device_time: Math.floor(Date.now() / 1e3),
                        }
                    );
                })).apply(this, arguments);
            }
            function ay(N) {
                switch (N) {
                    case at.NOTIFICATION_CLICKED:
                        return "notification_open";
                    case at.PUSH_RECEIVED:
                        return "notification_foreground";
                    default:
                        throw new Error();
                }
            }
            function Gu() {
                return (Gu = (0, O.Z)(function* (N, M) {
                    const q = M.data;
                    if (!q.isFirebaseMessaging) return;
                    N.onMessageHandler &&
                        q.messageType === at.PUSH_RECEIVED &&
                        ("function" == typeof N.onMessageHandler
                            ? N.onMessageHandler(Dn(q))
                            : N.onMessageHandler.next(Dn(q)));
                    const ae = q.data;
                    $u(ae) &&
                        "1" === ae[Wt] &&
                        (yield Di(N, q.messageType, ae));
                })).apply(this, arguments);
            }
            const Wu = "@firebase/messaging",
                Ws = (N) => {
                    const M = new vo(
                        N.getProvider("app").getImmediate(),
                        N.getProvider("installations-internal").getImmediate(),
                        N.getProvider("analytics-internal")
                    );
                    return (
                        navigator.serviceWorker.addEventListener(
                            "message",
                            (q) =>
                                (function Va(N, M) {
                                    return Gu.apply(this, arguments);
                                })(M, q)
                        ),
                        M
                    );
                },
                gi = (N) => {
                    const M = N.getProvider("messaging").getImmediate();
                    return {
                        getToken: (ae) =>
                            (function Gs(N, M) {
                                return Hi.apply(this, arguments);
                            })(M, ae),
                    };
                };
            function $i() {
                return uc.apply(this, arguments);
            }
            function uc() {
                return (uc = (0, O.Z)(function* () {
                    try {
                        yield (0, he.eu)();
                    } catch {
                        return !1;
                    }
                    return (
                        typeof window < "u" &&
                        (0, he.hl)() &&
                        (0, he.zI)() &&
                        "serviceWorker" in navigator &&
                        "PushManager" in window &&
                        "Notification" in window &&
                        "fetch" in window &&
                        ServiceWorkerRegistration.prototype.hasOwnProperty(
                            "showNotification"
                        ) &&
                        PushSubscription.prototype.hasOwnProperty("getKey")
                    );
                })).apply(this, arguments);
            }
            !(function Up() {
                (0, ie._registerComponent)(
                    new _e.wA("messaging", Ws, "PUBLIC")
                ),
                    (0, ie._registerComponent)(
                        new _e.wA("messaging-internal", gi, "PRIVATE")
                    ),
                    (0, ie.registerVersion)(Wu, "0.9.16"),
                    (0, ie.registerVersion)(Wu, "0.9.16", "esm2017");
            })();
            var Xi = P(6148),
                Bp = P(4408),
                Ua = P(7565);
            const qu = new (class wo extends Ua.v {})(
                class jp extends Bp.o {
                    constructor(M, q) {
                        super(M, q), (this.scheduler = M), (this.work = q);
                    }
                    schedule(M, q = 0) {
                        return q > 0
                            ? super.schedule(M, q)
                            : ((this.delay = q),
                              (this.state = M),
                              this.scheduler.flush(this),
                              this);
                    }
                    execute(M, q) {
                        return q > 0 || this.closed
                            ? super.execute(M, q)
                            : this._execute(M, q);
                    }
                    requestAsyncId(M, q, ae = 0) {
                        return (null != ae && ae > 0) ||
                            (null == ae && this.delay > 0)
                            ? super.requestAsyncId(M, q, ae)
                            : M.flush(this);
                    }
                }
            );
            var zs = P(4986),
                Eo = P(8505),
                Ku = P(5363),
                na = P(9468);
            const ra = new p.GfV("7.4.1"),
                Zu = "__angularfire_symbol__analyticsIsSupportedValue",
                es = "__angularfire_symbol__analyticsIsSupported",
                Yu = "__angularfire_symbol__remoteConfigIsSupportedValue",
                ur = "__angularfire_symbol__remoteConfigIsSupported",
                Io = "__angularfire_symbol__messagingIsSupportedValue",
                Ba = "__angularfire_symbol__messagingIsSupported";
            function fc(N, M, q) {
                if (M) {
                    if (1 === M.length) return M[0];
                    const Ye = M.filter((ht) => ht.app === q);
                    if (1 === Ye.length) return Ye[0];
                }
                return q.container
                    .getProvider(N)
                    .getImmediate({ optional: !0 });
            }
            globalThis[es] ||
                (globalThis[es] = (0, Xi.Gb)()
                    .then((N) => (globalThis[Zu] = N))
                    .catch(() => (globalThis[Zu] = !1))),
                globalThis[Ba] ||
                    (globalThis[Ba] = $i()
                        .then((N) => (globalThis[Io] = N))
                        .catch(() => (globalThis[Io] = !1))),
                globalThis[ur] ||
                    (globalThis[ur] = dt()
                        .then((N) => (globalThis[Yu] = N))
                        .catch(() => (globalThis[Yu] = !1)));
            const pc = (N, M) => {
                const q = M ? [M] : (0, Q.C6)(),
                    ae = [];
                return (
                    q.forEach((Pe) => {
                        Pe.container.getProvider(N).instances.forEach((ht) => {
                            ae.includes(ht) || ae.push(ht);
                        });
                    }),
                    ae
                );
            };
            function Wi() {}
            class jr {
                constructor(M, q = qu) {
                    (this.zone = M), (this.delegate = q);
                }
                now() {
                    return this.delegate.now();
                }
                schedule(M, q, ae) {
                    const Pe = this.zone;
                    return this.delegate.schedule(
                        function (ht) {
                            Pe.runGuarded(() => {
                                M.apply(this, [ht]);
                            });
                        },
                        q,
                        ae
                    );
                }
            }
            class gc {
                constructor(M) {
                    (this.zone = M), (this.task = null);
                }
                call(M, q) {
                    const ae = this.unscheduleTask.bind(this);
                    return (
                        (this.task = this.zone.run(() =>
                            Zone.current.scheduleMacroTask(
                                "firebaseZoneBlock",
                                Wi,
                                {},
                                Wi,
                                Wi
                            )
                        )),
                        q
                            .pipe(
                                (0, Eo.b)({ next: ae, complete: ae, error: ae })
                            )
                            .subscribe(M)
                            .add(ae)
                    );
                }
                unscheduleTask() {
                    setTimeout(() => {
                        null != this.task &&
                            "scheduled" === this.task.state &&
                            (this.task.invoke(), (this.task = null));
                    }, 10);
                }
            }
            let ia = (() => {
                class N {
                    constructor(q) {
                        (this.ngZone = q),
                            (this.outsideAngular = q.runOutsideAngular(
                                () => new jr(Zone.current)
                            )),
                            (this.insideAngular = q.run(
                                () => new jr(Zone.current, zs.z)
                            )),
                            globalThis.ɵAngularFireScheduler ||
                                (globalThis.ɵAngularFireScheduler = this);
                    }
                }
                return (
                    (N.ɵfac = function (q) {
                        return new (q || N)(p.LFG(p.R0b));
                    }),
                    (N.ɵprov = p.Yz7({
                        token: N,
                        factory: N.ɵfac,
                        providedIn: "root",
                    })),
                    N
                );
            })();
            function Xr() {
                const N = globalThis.ɵAngularFireScheduler;
                if (!N)
                    throw new Error(
                        "Either AngularFireModule has not been provided in your AppModule (this can be done manually or implictly using\nprovideFirebaseApp) or you're calling an AngularFire method outside of an NgModule (which is not supported)."
                    );
                return N;
            }
            function Ks(N) {
                return N.pipe((0, Ku.Q)(Xr().outsideAngular));
            }
            function Ai(N) {
                return (
                    Xr(),
                    (function Co(N) {
                        return function (q) {
                            return (q = q.lift(new gc(N.ngZone))).pipe(
                                (0, na.R)(N.outsideAngular),
                                (0, Ku.Q)(N.insideAngular)
                            );
                        };
                    })(Xr())(N)
                );
            }
        },
        2090: (pt, Me, P) => {
            P.d(Me, {
                $s: () => Ln,
                BH: () => Le,
                DV: () => kt,
                Dv: () => Qr,
                G6: () => Ue,
                GJ: () => Jt,
                L: () => ge,
                LL: () => oe,
                Mn: () => De,
                Pz: () => Pt,
                Sg: () => Ee,
                UG: () => ce,
                UI: () => Or,
                US: () => _e,
                Wj: () => Lr,
                Yr: () => We,
                ZB: () => B,
                ZR: () => pe,
                b$: () => Qe,
                cI: () => Gt,
                d: () => Ae,
                dS: () => Wt,
                eu: () => Ce,
                g5: () => O,
                gK: () => ln,
                gQ: () => sr,
                h$: () => se,
                hl: () => j,
                hu: () => Q,
                jU: () => de,
                lb: () => Dr,
                m9: () => Jn,
                ne: () => dt,
                p$: () => U,
                pd: () => Fr,
                r3: () => qn,
                ru: () => nt,
                tV: () => fe,
                uI: () => He,
                ug: () => qe,
                vZ: () => fi,
                w1: () => ve,
                w9: () => yn,
                xO: () => Ir,
                xb: () => xt,
                z$: () => Se,
                zI: () => Y,
                zd: () => Cr,
            });
            const Q = function (V, W) {
                    if (!V) throw O(W);
                },
                O = function (V) {
                    return new Error(
                        "Firebase Database (${JSCORE_VERSION}) INTERNAL ASSERT FAILED: " +
                            V
                    );
                },
                ie = function (V) {
                    const W = [];
                    let L = 0;
                    for (let $ = 0; $ < V.length; $++) {
                        let G = V.charCodeAt($);
                        G < 128
                            ? (W[L++] = G)
                            : G < 2048
                            ? ((W[L++] = (G >> 6) | 192),
                              (W[L++] = (63 & G) | 128))
                            : 55296 == (64512 & G) &&
                              $ + 1 < V.length &&
                              56320 == (64512 & V.charCodeAt($ + 1))
                            ? ((G =
                                  65536 +
                                  ((1023 & G) << 10) +
                                  (1023 & V.charCodeAt(++$))),
                              (W[L++] = (G >> 18) | 240),
                              (W[L++] = ((G >> 12) & 63) | 128),
                              (W[L++] = ((G >> 6) & 63) | 128),
                              (W[L++] = (63 & G) | 128))
                            : ((W[L++] = (G >> 12) | 224),
                              (W[L++] = ((G >> 6) & 63) | 128),
                              (W[L++] = (63 & G) | 128));
                    }
                    return W;
                },
                _e = {
                    byteToCharMap_: null,
                    charToByteMap_: null,
                    byteToCharMapWebSafe_: null,
                    charToByteMapWebSafe_: null,
                    ENCODED_VALS_BASE:
                        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
                    get ENCODED_VALS() {
                        return this.ENCODED_VALS_BASE + "+/=";
                    },
                    get ENCODED_VALS_WEBSAFE() {
                        return this.ENCODED_VALS_BASE + "-_.";
                    },
                    HAS_NATIVE_SUPPORT: "function" == typeof atob,
                    encodeByteArray(V, W) {
                        if (!Array.isArray(V))
                            throw Error(
                                "encodeByteArray takes an array as a parameter"
                            );
                        this.init_();
                        const L = W
                                ? this.byteToCharMapWebSafe_
                                : this.byteToCharMap_,
                            $ = [];
                        for (let G = 0; G < V.length; G += 3) {
                            const xe = V[G],
                                Ze = G + 1 < V.length,
                                ot = Ze ? V[G + 1] : 0,
                                sn = G + 2 < V.length,
                                Zt = sn ? V[G + 2] : 0;
                            let be = ((15 & ot) << 2) | (Zt >> 6),
                                Oe = 63 & Zt;
                            sn || ((Oe = 64), Ze || (be = 64)),
                                $.push(
                                    L[xe >> 2],
                                    L[((3 & xe) << 4) | (ot >> 4)],
                                    L[be],
                                    L[Oe]
                                );
                        }
                        return $.join("");
                    },
                    encodeString(V, W) {
                        return this.HAS_NATIVE_SUPPORT && !W
                            ? btoa(V)
                            : this.encodeByteArray(ie(V), W);
                    },
                    decodeString(V, W) {
                        return this.HAS_NATIVE_SUPPORT && !W
                            ? atob(V)
                            : (function (V) {
                                  const W = [];
                                  let L = 0,
                                      $ = 0;
                                  for (; L < V.length; ) {
                                      const G = V[L++];
                                      if (G < 128)
                                          W[$++] = String.fromCharCode(G);
                                      else if (G > 191 && G < 224) {
                                          const xe = V[L++];
                                          W[$++] = String.fromCharCode(
                                              ((31 & G) << 6) | (63 & xe)
                                          );
                                      } else if (G > 239 && G < 365) {
                                          const sn =
                                              (((7 & G) << 18) |
                                                  ((63 & V[L++]) << 12) |
                                                  ((63 & V[L++]) << 6) |
                                                  (63 & V[L++])) -
                                              65536;
                                          (W[$++] = String.fromCharCode(
                                              55296 + (sn >> 10)
                                          )),
                                              (W[$++] = String.fromCharCode(
                                                  56320 + (1023 & sn)
                                              ));
                                      } else {
                                          const xe = V[L++],
                                              Ze = V[L++];
                                          W[$++] = String.fromCharCode(
                                              ((15 & G) << 12) |
                                                  ((63 & xe) << 6) |
                                                  (63 & Ze)
                                          );
                                      }
                                  }
                                  return W.join("");
                              })(this.decodeStringToByteArray(V, W));
                    },
                    decodeStringToByteArray(V, W) {
                        this.init_();
                        const L = W
                                ? this.charToByteMapWebSafe_
                                : this.charToByteMap_,
                            $ = [];
                        for (let G = 0; G < V.length; ) {
                            const xe = L[V.charAt(G++)],
                                ot = G < V.length ? L[V.charAt(G)] : 0;
                            ++G;
                            const Zt = G < V.length ? L[V.charAt(G)] : 64;
                            ++G;
                            const le = G < V.length ? L[V.charAt(G)] : 64;
                            if (
                                (++G,
                                null == xe ||
                                    null == ot ||
                                    null == Zt ||
                                    null == le)
                            )
                                throw Error();
                            $.push((xe << 2) | (ot >> 4)),
                                64 !== Zt &&
                                    ($.push(((ot << 4) & 240) | (Zt >> 2)),
                                    64 !== le &&
                                        $.push(((Zt << 6) & 192) | le));
                        }
                        return $;
                    },
                    init_() {
                        if (!this.byteToCharMap_) {
                            (this.byteToCharMap_ = {}),
                                (this.charToByteMap_ = {}),
                                (this.byteToCharMapWebSafe_ = {}),
                                (this.charToByteMapWebSafe_ = {});
                            for (let V = 0; V < this.ENCODED_VALS.length; V++)
                                (this.byteToCharMap_[V] =
                                    this.ENCODED_VALS.charAt(V)),
                                    (this.charToByteMap_[
                                        this.byteToCharMap_[V]
                                    ] = V),
                                    (this.byteToCharMapWebSafe_[V] =
                                        this.ENCODED_VALS_WEBSAFE.charAt(V)),
                                    (this.charToByteMapWebSafe_[
                                        this.byteToCharMapWebSafe_[V]
                                    ] = V),
                                    V >= this.ENCODED_VALS_BASE.length &&
                                        ((this.charToByteMap_[
                                            this.ENCODED_VALS_WEBSAFE.charAt(V)
                                        ] = V),
                                        (this.charToByteMapWebSafe_[
                                            this.ENCODED_VALS.charAt(V)
                                        ] = V));
                        }
                    },
                },
                se = function (V) {
                    const W = ie(V);
                    return _e.encodeByteArray(W, !0);
                },
                ge = function (V) {
                    return se(V).replace(/\./g, "");
                },
                fe = function (V) {
                    try {
                        return _e.decodeString(V, !0);
                    } catch (W) {
                        console.error("base64Decode failed: ", W);
                    }
                    return null;
                };
            function U(V) {
                return B(void 0, V);
            }
            function B(V, W) {
                if (!(W instanceof Object)) return W;
                switch (W.constructor) {
                    case Date:
                        return new Date(W.getTime());
                    case Object:
                        void 0 === V && (V = {});
                        break;
                    case Array:
                        V = [];
                        break;
                    default:
                        return W;
                }
                for (const L in W)
                    !W.hasOwnProperty(L) || !J(L) || (V[L] = B(V[L], W[L]));
                return V;
            }
            function J(V) {
                return "__proto__" !== V;
            }
            class Le {
                constructor() {
                    (this.reject = () => {}),
                        (this.resolve = () => {}),
                        (this.promise = new Promise((W, L) => {
                            (this.resolve = W), (this.reject = L);
                        }));
                }
                wrapCallback(W) {
                    return (L, $) => {
                        L ? this.reject(L) : this.resolve($),
                            "function" == typeof W &&
                                (this.promise.catch(() => {}),
                                1 === W.length ? W(L) : W(L, $));
                    };
                }
            }
            function Ee(V, W) {
                if (V.uid)
                    throw new Error(
                        'The "uid" field is no longer supported by mockUserToken. Please use "sub" instead for Firebase Auth User ID.'
                    );
                const $ = W || "demo-project",
                    G = V.iat || 0,
                    xe = V.sub || V.user_id;
                if (!xe)
                    throw new Error(
                        "mockUserToken must contain 'sub' or 'user_id' field!"
                    );
                const Ze = Object.assign(
                    {
                        iss: `https://securetoken.google.com/${$}`,
                        aud: $,
                        iat: G,
                        exp: G + 3600,
                        auth_time: G,
                        sub: xe,
                        user_id: xe,
                        firebase: {
                            sign_in_provider: "custom",
                            identities: {},
                        },
                    },
                    V
                );
                return [
                    ge(JSON.stringify({ alg: "none", type: "JWT" })),
                    ge(JSON.stringify(Ze)),
                    "",
                ].join(".");
            }
            function Se() {
                return typeof navigator < "u" &&
                    "string" == typeof navigator.userAgent
                    ? navigator.userAgent
                    : "";
            }
            function He() {
                return (
                    typeof window < "u" &&
                    !!(window.cordova || window.phonegap || window.PhoneGap) &&
                    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(
                        Se()
                    )
                );
            }
            function ce() {
                try {
                    return (
                        "[object process]" ===
                        Object.prototype.toString.call(global.process)
                    );
                } catch {
                    return !1;
                }
            }
            function de() {
                return "object" == typeof self && self.self === self;
            }
            function nt() {
                const V =
                    "object" == typeof chrome
                        ? chrome.runtime
                        : "object" == typeof browser
                        ? browser.runtime
                        : void 0;
                return "object" == typeof V && void 0 !== V.id;
            }
            function Qe() {
                return (
                    "object" == typeof navigator &&
                    "ReactNative" === navigator.product
                );
            }
            function Ae() {
                return Se().indexOf("Electron/") >= 0;
            }
            function ve() {
                const V = Se();
                return V.indexOf("MSIE ") >= 0 || V.indexOf("Trident/") >= 0;
            }
            function De() {
                return Se().indexOf("MSAppHost/") >= 0;
            }
            function We() {
                return !1;
            }
            function Ue() {
                return (
                    !ce() &&
                    navigator.userAgent.includes("Safari") &&
                    !navigator.userAgent.includes("Chrome")
                );
            }
            function j() {
                return "object" == typeof indexedDB;
            }
            function Ce() {
                return new Promise((V, W) => {
                    try {
                        let L = !0;
                        const $ =
                                "validate-browser-context-for-indexeddb-analytics-module",
                            G = self.indexedDB.open($);
                        (G.onsuccess = () => {
                            G.result.close(),
                                L || self.indexedDB.deleteDatabase($),
                                V(!0);
                        }),
                            (G.onupgradeneeded = () => {
                                L = !1;
                            }),
                            (G.onerror = () => {
                                var xe;
                                W(
                                    (null === (xe = G.error) || void 0 === xe
                                        ? void 0
                                        : xe.message) || ""
                                );
                            });
                    } catch (L) {
                        W(L);
                    }
                });
            }
            function Y() {
                return !(typeof navigator > "u" || !navigator.cookieEnabled);
            }
            class pe extends Error {
                constructor(W, L, $) {
                    super(L),
                        (this.code = W),
                        (this.customData = $),
                        (this.name = "FirebaseError"),
                        Object.setPrototypeOf(this, pe.prototype),
                        Error.captureStackTrace &&
                            Error.captureStackTrace(this, oe.prototype.create);
                }
            }
            class oe {
                constructor(W, L, $) {
                    (this.service = W),
                        (this.serviceName = L),
                        (this.errors = $);
                }
                create(W, ...L) {
                    const $ = L[0] || {},
                        G = `${this.service}/${W}`,
                        xe = this.errors[W],
                        Ze = xe
                            ? (function Be(V, W) {
                                  return V.replace(ct, (L, $) => {
                                      const G = W[$];
                                      return null != G ? String(G) : `<${$}?>`;
                                  });
                              })(xe, $)
                            : "Error";
                    return new pe(G, `${this.serviceName}: ${Ze} (${G}).`, $);
                }
            }
            const ct = /\{\$([^}]+)}/g;
            function Gt(V) {
                return JSON.parse(V);
            }
            function Pt(V) {
                return JSON.stringify(V);
            }
            const Ke = function (V) {
                    let W = {},
                        L = {},
                        $ = {},
                        G = "";
                    try {
                        const xe = V.split(".");
                        (W = Gt(fe(xe[0]) || "")),
                            (L = Gt(fe(xe[1]) || "")),
                            (G = xe[2]),
                            ($ = L.d || {}),
                            delete L.d;
                    } catch {}
                    return { header: W, claims: L, data: $, signature: G };
                },
                yn = function (V) {
                    const L = Ke(V).claims;
                    return (
                        !!L && "object" == typeof L && L.hasOwnProperty("iat")
                    );
                },
                Jt = function (V) {
                    const W = Ke(V).claims;
                    return "object" == typeof W && !0 === W.admin;
                };
            function qn(V, W) {
                return Object.prototype.hasOwnProperty.call(V, W);
            }
            function kt(V, W) {
                if (Object.prototype.hasOwnProperty.call(V, W)) return V[W];
            }
            function xt(V) {
                for (const W in V)
                    if (Object.prototype.hasOwnProperty.call(V, W)) return !1;
                return !0;
            }
            function Or(V, W, L) {
                const $ = {};
                for (const G in V)
                    Object.prototype.hasOwnProperty.call(V, G) &&
                        ($[G] = W.call(L, V[G], G, V));
                return $;
            }
            function fi(V, W) {
                if (V === W) return !0;
                const L = Object.keys(V),
                    $ = Object.keys(W);
                for (const G of L) {
                    if (!$.includes(G)) return !1;
                    const xe = V[G],
                        Ze = W[G];
                    if (ir(xe) && ir(Ze)) {
                        if (!fi(xe, Ze)) return !1;
                    } else if (xe !== Ze) return !1;
                }
                for (const G of $) if (!L.includes(G)) return !1;
                return !0;
            }
            function ir(V) {
                return null !== V && "object" == typeof V;
            }
            function Ir(V) {
                const W = [];
                for (const [L, $] of Object.entries(V))
                    Array.isArray($)
                        ? $.forEach((G) => {
                              W.push(
                                  encodeURIComponent(L) +
                                      "=" +
                                      encodeURIComponent(G)
                              );
                          })
                        : W.push(
                              encodeURIComponent(L) +
                                  "=" +
                                  encodeURIComponent($)
                          );
                return W.length ? "&" + W.join("&") : "";
            }
            function Cr(V) {
                const W = {};
                return (
                    V.replace(/^\?/, "")
                        .split("&")
                        .forEach(($) => {
                            if ($) {
                                const [G, xe] = $.split("=");
                                W[decodeURIComponent(G)] =
                                    decodeURIComponent(xe);
                            }
                        }),
                    W
                );
            }
            function Fr(V) {
                const W = V.indexOf("?");
                if (!W) return "";
                const L = V.indexOf("#", W);
                return V.substring(W, L > 0 ? L : void 0);
            }
            class sr {
                constructor() {
                    (this.chain_ = []),
                        (this.buf_ = []),
                        (this.W_ = []),
                        (this.pad_ = []),
                        (this.inbuf_ = 0),
                        (this.total_ = 0),
                        (this.blockSize = 64),
                        (this.pad_[0] = 128);
                    for (let W = 1; W < this.blockSize; ++W) this.pad_[W] = 0;
                    this.reset();
                }
                reset() {
                    (this.chain_[0] = 1732584193),
                        (this.chain_[1] = 4023233417),
                        (this.chain_[2] = 2562383102),
                        (this.chain_[3] = 271733878),
                        (this.chain_[4] = 3285377520),
                        (this.inbuf_ = 0),
                        (this.total_ = 0);
                }
                compress_(W, L) {
                    L || (L = 0);
                    const $ = this.W_;
                    if ("string" == typeof W)
                        for (let le = 0; le < 16; le++)
                            ($[le] =
                                (W.charCodeAt(L) << 24) |
                                (W.charCodeAt(L + 1) << 16) |
                                (W.charCodeAt(L + 2) << 8) |
                                W.charCodeAt(L + 3)),
                                (L += 4);
                    else
                        for (let le = 0; le < 16; le++)
                            ($[le] =
                                (W[L] << 24) |
                                (W[L + 1] << 16) |
                                (W[L + 2] << 8) |
                                W[L + 3]),
                                (L += 4);
                    for (let le = 16; le < 80; le++) {
                        const be =
                            $[le - 3] ^ $[le - 8] ^ $[le - 14] ^ $[le - 16];
                        $[le] = 4294967295 & ((be << 1) | (be >>> 31));
                    }
                    let Zt,
                        ne,
                        G = this.chain_[0],
                        xe = this.chain_[1],
                        Ze = this.chain_[2],
                        ot = this.chain_[3],
                        sn = this.chain_[4];
                    for (let le = 0; le < 80; le++) {
                        le < 40
                            ? le < 20
                                ? ((Zt = ot ^ (xe & (Ze ^ ot))),
                                  (ne = 1518500249))
                                : ((Zt = xe ^ Ze ^ ot), (ne = 1859775393))
                            : le < 60
                            ? ((Zt = (xe & Ze) | (ot & (xe | Ze))),
                              (ne = 2400959708))
                            : ((Zt = xe ^ Ze ^ ot), (ne = 3395469782));
                        const be =
                            (((G << 5) | (G >>> 27)) + Zt + sn + ne + $[le]) &
                            4294967295;
                        (sn = ot),
                            (ot = Ze),
                            (Ze = 4294967295 & ((xe << 30) | (xe >>> 2))),
                            (xe = G),
                            (G = be);
                    }
                    (this.chain_[0] = (this.chain_[0] + G) & 4294967295),
                        (this.chain_[1] = (this.chain_[1] + xe) & 4294967295),
                        (this.chain_[2] = (this.chain_[2] + Ze) & 4294967295),
                        (this.chain_[3] = (this.chain_[3] + ot) & 4294967295),
                        (this.chain_[4] = (this.chain_[4] + sn) & 4294967295);
                }
                update(W, L) {
                    if (null == W) return;
                    void 0 === L && (L = W.length);
                    const $ = L - this.blockSize;
                    let G = 0;
                    const xe = this.buf_;
                    let Ze = this.inbuf_;
                    for (; G < L; ) {
                        if (0 === Ze)
                            for (; G <= $; )
                                this.compress_(W, G), (G += this.blockSize);
                        if ("string" == typeof W) {
                            for (; G < L; )
                                if (
                                    ((xe[Ze] = W.charCodeAt(G)),
                                    ++Ze,
                                    ++G,
                                    Ze === this.blockSize)
                                ) {
                                    this.compress_(xe), (Ze = 0);
                                    break;
                                }
                        } else
                            for (; G < L; )
                                if (
                                    ((xe[Ze] = W[G]),
                                    ++Ze,
                                    ++G,
                                    Ze === this.blockSize)
                                ) {
                                    this.compress_(xe), (Ze = 0);
                                    break;
                                }
                    }
                    (this.inbuf_ = Ze), (this.total_ += L);
                }
                digest() {
                    const W = [];
                    let L = 8 * this.total_;
                    this.update(
                        this.pad_,
                        this.inbuf_ < 56
                            ? 56 - this.inbuf_
                            : this.blockSize - (this.inbuf_ - 56)
                    );
                    for (let G = this.blockSize - 1; G >= 56; G--)
                        (this.buf_[G] = 255 & L), (L /= 256);
                    this.compress_(this.buf_);
                    let $ = 0;
                    for (let G = 0; G < 5; G++)
                        for (let xe = 24; xe >= 0; xe -= 8)
                            (W[$] = (this.chain_[G] >> xe) & 255), ++$;
                    return W;
                }
            }
            function dt(V, W) {
                const L = new or(V, W);
                return L.subscribe.bind(L);
            }
            class or {
                constructor(W, L) {
                    (this.observers = []),
                        (this.unsubscribes = []),
                        (this.observerCount = 0),
                        (this.task = Promise.resolve()),
                        (this.finalized = !1),
                        (this.onNoObservers = L),
                        this.task
                            .then(() => {
                                W(this);
                            })
                            .catch(($) => {
                                this.error($);
                            });
                }
                next(W) {
                    this.forEachObserver((L) => {
                        L.next(W);
                    });
                }
                error(W) {
                    this.forEachObserver((L) => {
                        L.error(W);
                    }),
                        this.close(W);
                }
                complete() {
                    this.forEachObserver((W) => {
                        W.complete();
                    }),
                        this.close();
                }
                subscribe(W, L, $) {
                    let G;
                    if (void 0 === W && void 0 === L && void 0 === $)
                        throw new Error("Missing Observer.");
                    (G = (function Pn(V, W) {
                        if ("object" != typeof V || null === V) return !1;
                        for (const L of W)
                            if (L in V && "function" == typeof V[L]) return !0;
                        return !1;
                    })(W, ["next", "error", "complete"])
                        ? W
                        : { next: W, error: L, complete: $ }),
                        void 0 === G.next && (G.next = br),
                        void 0 === G.error && (G.error = br),
                        void 0 === G.complete && (G.complete = br);
                    const xe = this.unsubscribeOne.bind(
                        this,
                        this.observers.length
                    );
                    return (
                        this.finalized &&
                            this.task.then(() => {
                                try {
                                    this.finalError
                                        ? G.error(this.finalError)
                                        : G.complete();
                                } catch {}
                            }),
                        this.observers.push(G),
                        xe
                    );
                }
                unsubscribeOne(W) {
                    void 0 === this.observers ||
                        void 0 === this.observers[W] ||
                        (delete this.observers[W],
                        (this.observerCount -= 1),
                        0 === this.observerCount &&
                            void 0 !== this.onNoObservers &&
                            this.onNoObservers(this));
                }
                forEachObserver(W) {
                    if (!this.finalized)
                        for (let L = 0; L < this.observers.length; L++)
                            this.sendOne(L, W);
                }
                sendOne(W, L) {
                    this.task.then(() => {
                        if (
                            void 0 !== this.observers &&
                            void 0 !== this.observers[W]
                        )
                            try {
                                L(this.observers[W]);
                            } catch ($) {
                                typeof console < "u" &&
                                    console.error &&
                                    console.error($);
                            }
                    });
                }
                close(W) {
                    this.finalized ||
                        ((this.finalized = !0),
                        void 0 !== W && (this.finalError = W),
                        this.task.then(() => {
                            (this.observers = void 0),
                                (this.onNoObservers = void 0);
                        }));
                }
            }
            function br() {}
            const Qr = function (V, W, L, $) {
                let G;
                if (
                    ($ < W
                        ? (G = "at least " + W)
                        : $ > L && (G = 0 === L ? "none" : "no more than " + L),
                    G)
                )
                    throw new Error(
                        V +
                            " failed: Was called with " +
                            $ +
                            (1 === $ ? " argument." : " arguments.") +
                            " Expects " +
                            G +
                            "."
                    );
            };
            function ln(V, W) {
                return `${V} failed: ${W} argument `;
            }
            function Lr(V, W, L, $) {
                if ((!$ || L) && "function" != typeof L)
                    throw new Error(ln(V, W) + "must be a valid function.");
            }
            function Dr(V, W, L, $) {
                if ((!$ || L) && ("object" != typeof L || null === L))
                    throw new Error(
                        ln(V, W) + "must be a valid context object."
                    );
            }
            const Wt = function (V) {
                    const W = [];
                    let L = 0;
                    for (let $ = 0; $ < V.length; $++) {
                        let G = V.charCodeAt($);
                        if (G >= 55296 && G <= 56319) {
                            const xe = G - 55296;
                            $++,
                                Q(
                                    $ < V.length,
                                    "Surrogate pair missing trail surrogate."
                                ),
                                (G =
                                    65536 +
                                    (xe << 10) +
                                    (V.charCodeAt($) - 56320));
                        }
                        G < 128
                            ? (W[L++] = G)
                            : G < 2048
                            ? ((W[L++] = (G >> 6) | 192),
                              (W[L++] = (63 & G) | 128))
                            : G < 65536
                            ? ((W[L++] = (G >> 12) | 224),
                              (W[L++] = ((G >> 6) & 63) | 128),
                              (W[L++] = (63 & G) | 128))
                            : ((W[L++] = (G >> 18) | 240),
                              (W[L++] = ((G >> 12) & 63) | 128),
                              (W[L++] = ((G >> 6) & 63) | 128),
                              (W[L++] = (63 & G) | 128));
                    }
                    return W;
                },
                qe = function (V) {
                    let W = 0;
                    for (let L = 0; L < V.length; L++) {
                        const $ = V.charCodeAt(L);
                        $ < 128
                            ? W++
                            : $ < 2048
                            ? (W += 2)
                            : $ >= 55296 && $ <= 56319
                            ? ((W += 4), L++)
                            : (W += 3);
                    }
                    return W;
                };
            function Ln(V, W = 1e3, L = 2) {
                const $ = W * Math.pow(L, V),
                    G = Math.round(0.5 * $ * (Math.random() - 0.5) * 2);
                return Math.min(144e5, $ + G);
            }
            function Jn(V) {
                return V && V._delegate ? V._delegate : V;
            }
        },
        7515: (pt, Me, P) => {
            var p = P(4650);
            let Q = null;
            function O() {
                return Q;
            }
            const se = new p.OlP("DocumentToken");
            let ge = (() => {
                class n {
                    historyGo(t) {
                        throw new Error("Not implemented");
                    }
                }
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)();
                    }),
                    (n.ɵprov = p.Yz7({
                        token: n,
                        factory: function () {
                            return (function fe() {
                                return (0, p.LFG)(B);
                            })();
                        },
                        providedIn: "platform",
                    })),
                    n
                );
            })();
            const U = new p.OlP("Location Initialized");
            let B = (() => {
                class n extends ge {
                    constructor(t) {
                        super(), (this._doc = t), this._init();
                    }
                    _init() {
                        (this.location = window.location),
                            (this._history = window.history);
                    }
                    getBaseHrefFromDOM() {
                        return O().getBaseHref(this._doc);
                    }
                    onPopState(t) {
                        const r = O().getGlobalEventTarget(this._doc, "window");
                        return (
                            r.addEventListener("popstate", t, !1),
                            () => r.removeEventListener("popstate", t)
                        );
                    }
                    onHashChange(t) {
                        const r = O().getGlobalEventTarget(this._doc, "window");
                        return (
                            r.addEventListener("hashchange", t, !1),
                            () => r.removeEventListener("hashchange", t)
                        );
                    }
                    get href() {
                        return this.location.href;
                    }
                    get protocol() {
                        return this.location.protocol;
                    }
                    get hostname() {
                        return this.location.hostname;
                    }
                    get port() {
                        return this.location.port;
                    }
                    get pathname() {
                        return this.location.pathname;
                    }
                    get search() {
                        return this.location.search;
                    }
                    get hash() {
                        return this.location.hash;
                    }
                    set pathname(t) {
                        this.location.pathname = t;
                    }
                    pushState(t, r, i) {
                        J()
                            ? this._history.pushState(t, r, i)
                            : (this.location.hash = i);
                    }
                    replaceState(t, r, i) {
                        J()
                            ? this._history.replaceState(t, r, i)
                            : (this.location.hash = i);
                    }
                    forward() {
                        this._history.forward();
                    }
                    back() {
                        this._history.back();
                    }
                    historyGo(t = 0) {
                        this._history.go(t);
                    }
                    getState() {
                        return this._history.state;
                    }
                }
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)(p.LFG(se));
                    }),
                    (n.ɵprov = p.Yz7({
                        token: n,
                        factory: function () {
                            return (function Le() {
                                return new B((0, p.LFG)(se));
                            })();
                        },
                        providedIn: "platform",
                    })),
                    n
                );
            })();
            function J() {
                return !!window.history.pushState;
            }
            function Ee(n, e) {
                if (0 == n.length) return e;
                if (0 == e.length) return n;
                let t = 0;
                return (
                    n.endsWith("/") && t++,
                    e.startsWith("/") && t++,
                    2 == t ? n + e.substring(1) : 1 == t ? n + e : n + "/" + e
                );
            }
            function Se(n) {
                const e = n.match(/#|\?|$/),
                    t = (e && e.index) || n.length;
                return n.slice(0, t - ("/" === n[t - 1] ? 1 : 0)) + n.slice(t);
            }
            function He(n) {
                return n && "?" !== n[0] ? "?" + n : n;
            }
            let ce = (() => {
                class n {
                    historyGo(t) {
                        throw new Error("Not implemented");
                    }
                }
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)();
                    }),
                    (n.ɵprov = p.Yz7({
                        token: n,
                        factory: function () {
                            return (function de() {
                                const n = (0, p.LFG)(se).location;
                                return new Qe(
                                    (0, p.LFG)(ge),
                                    (n && n.origin) || ""
                                );
                            })();
                        },
                        providedIn: "root",
                    })),
                    n
                );
            })();
            const nt = new p.OlP("appBaseHref");
            let Qe = (() => {
                    class n extends ce {
                        constructor(t, r) {
                            if (
                                (super(),
                                (this._platformLocation = t),
                                (this._removeListenerFns = []),
                                null == r &&
                                    (r =
                                        this._platformLocation.getBaseHrefFromDOM()),
                                null == r)
                            )
                                throw new Error(
                                    "No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document."
                                );
                            this._baseHref = r;
                        }
                        ngOnDestroy() {
                            for (; this._removeListenerFns.length; )
                                this._removeListenerFns.pop()();
                        }
                        onPopState(t) {
                            this._removeListenerFns.push(
                                this._platformLocation.onPopState(t),
                                this._platformLocation.onHashChange(t)
                            );
                        }
                        getBaseHref() {
                            return this._baseHref;
                        }
                        prepareExternalUrl(t) {
                            return Ee(this._baseHref, t);
                        }
                        path(t = !1) {
                            const r =
                                    this._platformLocation.pathname +
                                    He(this._platformLocation.search),
                                i = this._platformLocation.hash;
                            return i && t ? `${r}${i}` : r;
                        }
                        pushState(t, r, i, a) {
                            const l = this.prepareExternalUrl(i + He(a));
                            this._platformLocation.pushState(t, r, l);
                        }
                        replaceState(t, r, i, a) {
                            const l = this.prepareExternalUrl(i + He(a));
                            this._platformLocation.replaceState(t, r, l);
                        }
                        forward() {
                            this._platformLocation.forward();
                        }
                        back() {
                            this._platformLocation.back();
                        }
                        getState() {
                            return this._platformLocation.getState();
                        }
                        historyGo(t = 0) {
                            this._platformLocation.historyGo?.(t);
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(p.LFG(ge), p.LFG(nt, 8));
                        }),
                        (n.ɵprov = p.Yz7({ token: n, factory: n.ɵfac })),
                        n
                    );
                })(),
                Ae = (() => {
                    class n extends ce {
                        constructor(t, r) {
                            super(),
                                (this._platformLocation = t),
                                (this._baseHref = ""),
                                (this._removeListenerFns = []),
                                null != r && (this._baseHref = r);
                        }
                        ngOnDestroy() {
                            for (; this._removeListenerFns.length; )
                                this._removeListenerFns.pop()();
                        }
                        onPopState(t) {
                            this._removeListenerFns.push(
                                this._platformLocation.onPopState(t),
                                this._platformLocation.onHashChange(t)
                            );
                        }
                        getBaseHref() {
                            return this._baseHref;
                        }
                        path(t = !1) {
                            let r = this._platformLocation.hash;
                            return (
                                null == r && (r = "#"),
                                r.length > 0 ? r.substring(1) : r
                            );
                        }
                        prepareExternalUrl(t) {
                            const r = Ee(this._baseHref, t);
                            return r.length > 0 ? "#" + r : r;
                        }
                        pushState(t, r, i, a) {
                            let l = this.prepareExternalUrl(i + He(a));
                            0 == l.length &&
                                (l = this._platformLocation.pathname),
                                this._platformLocation.pushState(t, r, l);
                        }
                        replaceState(t, r, i, a) {
                            let l = this.prepareExternalUrl(i + He(a));
                            0 == l.length &&
                                (l = this._platformLocation.pathname),
                                this._platformLocation.replaceState(t, r, l);
                        }
                        forward() {
                            this._platformLocation.forward();
                        }
                        back() {
                            this._platformLocation.back();
                        }
                        getState() {
                            return this._platformLocation.getState();
                        }
                        historyGo(t = 0) {
                            this._platformLocation.historyGo?.(t);
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(p.LFG(ge), p.LFG(nt, 8));
                        }),
                        (n.ɵprov = p.Yz7({ token: n, factory: n.ɵfac })),
                        n
                    );
                })(),
                ve = (() => {
                    class n {
                        constructor(t) {
                            (this._subject = new p.vpe()),
                                (this._urlChangeListeners = []),
                                (this._urlChangeSubscription = null),
                                (this._locationStrategy = t);
                            const r = this._locationStrategy.getBaseHref();
                            (this._baseHref = Se(Ue(r))),
                                this._locationStrategy.onPopState((i) => {
                                    this._subject.emit({
                                        url: this.path(!0),
                                        pop: !0,
                                        state: i.state,
                                        type: i.type,
                                    });
                                });
                        }
                        ngOnDestroy() {
                            this._urlChangeSubscription?.unsubscribe(),
                                (this._urlChangeListeners = []);
                        }
                        path(t = !1) {
                            return this.normalize(
                                this._locationStrategy.path(t)
                            );
                        }
                        getState() {
                            return this._locationStrategy.getState();
                        }
                        isCurrentPathEqualTo(t, r = "") {
                            return this.path() == this.normalize(t + He(r));
                        }
                        normalize(t) {
                            return n.stripTrailingSlash(
                                (function We(n, e) {
                                    return n && e.startsWith(n)
                                        ? e.substring(n.length)
                                        : e;
                                })(this._baseHref, Ue(t))
                            );
                        }
                        prepareExternalUrl(t) {
                            return (
                                t && "/" !== t[0] && (t = "/" + t),
                                this._locationStrategy.prepareExternalUrl(t)
                            );
                        }
                        go(t, r = "", i = null) {
                            this._locationStrategy.pushState(i, "", t, r),
                                this._notifyUrlChangeListeners(
                                    this.prepareExternalUrl(t + He(r)),
                                    i
                                );
                        }
                        replaceState(t, r = "", i = null) {
                            this._locationStrategy.replaceState(i, "", t, r),
                                this._notifyUrlChangeListeners(
                                    this.prepareExternalUrl(t + He(r)),
                                    i
                                );
                        }
                        forward() {
                            this._locationStrategy.forward();
                        }
                        back() {
                            this._locationStrategy.back();
                        }
                        historyGo(t = 0) {
                            this._locationStrategy.historyGo?.(t);
                        }
                        onUrlChange(t) {
                            return (
                                this._urlChangeListeners.push(t),
                                this._urlChangeSubscription ||
                                    (this._urlChangeSubscription =
                                        this.subscribe((r) => {
                                            this._notifyUrlChangeListeners(
                                                r.url,
                                                r.state
                                            );
                                        })),
                                () => {
                                    const r =
                                        this._urlChangeListeners.indexOf(t);
                                    this._urlChangeListeners.splice(r, 1),
                                        0 === this._urlChangeListeners.length &&
                                            (this._urlChangeSubscription?.unsubscribe(),
                                            (this._urlChangeSubscription =
                                                null));
                                }
                            );
                        }
                        _notifyUrlChangeListeners(t = "", r) {
                            this._urlChangeListeners.forEach((i) => i(t, r));
                        }
                        subscribe(t, r, i) {
                            return this._subject.subscribe({
                                next: t,
                                error: r,
                                complete: i,
                            });
                        }
                    }
                    return (
                        (n.normalizeQueryParams = He),
                        (n.joinWithSlash = Ee),
                        (n.stripTrailingSlash = Se),
                        (n.ɵfac = function (t) {
                            return new (t || n)(p.LFG(ce));
                        }),
                        (n.ɵprov = p.Yz7({
                            token: n,
                            factory: function () {
                                return (function De() {
                                    return new ve((0, p.LFG)(ce));
                                })();
                            },
                            providedIn: "root",
                        })),
                        n
                    );
                })();
            function Ue(n) {
                return n.replace(/\/index.html$/, "");
            }
            class vo {
                constructor(e, t, r, i) {
                    (this.$implicit = e),
                        (this.ngForOf = t),
                        (this.index = r),
                        (this.count = i);
                }
                get first() {
                    return 0 === this.index;
                }
                get last() {
                    return this.index === this.count - 1;
                }
                get even() {
                    return this.index % 2 == 0;
                }
                get odd() {
                    return !this.even;
                }
            }
            let pi = (() => {
                class n {
                    constructor(t, r, i) {
                        (this._viewContainer = t),
                            (this._template = r),
                            (this._differs = i),
                            (this._ngForOf = null),
                            (this._ngForOfDirty = !0),
                            (this._differ = null);
                    }
                    set ngForOf(t) {
                        (this._ngForOf = t), (this._ngForOfDirty = !0);
                    }
                    set ngForTrackBy(t) {
                        this._trackByFn = t;
                    }
                    get ngForTrackBy() {
                        return this._trackByFn;
                    }
                    set ngForTemplate(t) {
                        t && (this._template = t);
                    }
                    ngDoCheck() {
                        if (this._ngForOfDirty) {
                            this._ngForOfDirty = !1;
                            const t = this._ngForOf;
                            !this._differ &&
                                t &&
                                (this._differ = this._differs
                                    .find(t)
                                    .create(this.ngForTrackBy));
                        }
                        if (this._differ) {
                            const t = this._differ.diff(this._ngForOf);
                            t && this._applyChanges(t);
                        }
                    }
                    _applyChanges(t) {
                        const r = this._viewContainer;
                        t.forEachOperation((i, a, l) => {
                            if (null == i.previousIndex)
                                r.createEmbeddedView(
                                    this._template,
                                    new vo(i.item, this._ngForOf, -1, -1),
                                    null === l ? void 0 : l
                                );
                            else if (null == l)
                                r.remove(null === a ? void 0 : a);
                            else if (null !== a) {
                                const h = r.get(a);
                                r.move(h, l), $n(h, i);
                            }
                        });
                        for (let i = 0, a = r.length; i < a; i++) {
                            const h = r.get(i).context;
                            (h.index = i),
                                (h.count = a),
                                (h.ngForOf = this._ngForOf);
                        }
                        t.forEachIdentityChange((i) => {
                            $n(r.get(i.currentIndex), i);
                        });
                    }
                    static ngTemplateContextGuard(t, r) {
                        return !0;
                    }
                }
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)(
                            p.Y36(p.s_b),
                            p.Y36(p.Rgc),
                            p.Y36(p.ZZ4)
                        );
                    }),
                    (n.ɵdir = p.lG2({
                        type: n,
                        selectors: [["", "ngFor", "", "ngForOf", ""]],
                        inputs: {
                            ngForOf: "ngForOf",
                            ngForTrackBy: "ngForTrackBy",
                            ngForTemplate: "ngForTemplate",
                        },
                    })),
                    n
                );
            })();
            function $n(n, e) {
                n.context.$implicit = e.item;
            }
            let Xn = (() => {
                class n {
                    constructor(t, r) {
                        (this._viewContainer = t),
                            (this._context = new bi()),
                            (this._thenTemplateRef = null),
                            (this._elseTemplateRef = null),
                            (this._thenViewRef = null),
                            (this._elseViewRef = null),
                            (this._thenTemplateRef = r);
                    }
                    set ngIf(t) {
                        (this._context.$implicit = this._context.ngIf = t),
                            this._updateView();
                    }
                    set ngIfThen(t) {
                        Ts("ngIfThen", t),
                            (this._thenTemplateRef = t),
                            (this._thenViewRef = null),
                            this._updateView();
                    }
                    set ngIfElse(t) {
                        Ts("ngIfElse", t),
                            (this._elseTemplateRef = t),
                            (this._elseViewRef = null),
                            this._updateView();
                    }
                    _updateView() {
                        this._context.$implicit
                            ? this._thenViewRef ||
                              (this._viewContainer.clear(),
                              (this._elseViewRef = null),
                              this._thenTemplateRef &&
                                  (this._thenViewRef =
                                      this._viewContainer.createEmbeddedView(
                                          this._thenTemplateRef,
                                          this._context
                                      )))
                            : this._elseViewRef ||
                              (this._viewContainer.clear(),
                              (this._thenViewRef = null),
                              this._elseTemplateRef &&
                                  (this._elseViewRef =
                                      this._viewContainer.createEmbeddedView(
                                          this._elseTemplateRef,
                                          this._context
                                      )));
                    }
                    static ngTemplateContextGuard(t, r) {
                        return !0;
                    }
                }
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)(p.Y36(p.s_b), p.Y36(p.Rgc));
                    }),
                    (n.ɵdir = p.lG2({
                        type: n,
                        selectors: [["", "ngIf", ""]],
                        inputs: {
                            ngIf: "ngIf",
                            ngIfThen: "ngIfThen",
                            ngIfElse: "ngIfElse",
                        },
                    })),
                    n
                );
            })();
            class bi {
                constructor() {
                    (this.$implicit = null), (this.ngIf = null);
                }
            }
            function Ts(n, e) {
                if (e && !e.createEmbeddedView)
                    throw new Error(
                        `${n} must be a TemplateRef, but received '${(0, p.AaK)(
                            e
                        )}'.`
                    );
            }
            let Yu = (() => {
                class n {}
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)();
                    }),
                    (n.ɵmod = p.oAB({ type: n })),
                    (n.ɵinj = p.cJS({})),
                    n
                );
            })();
            function hh(n) {
                return "server" === n;
            }
            let Wi = (() => {
                class n {}
                return (
                    (n.ɵprov = (0, p.Yz7)({
                        token: n,
                        providedIn: "root",
                        factory: () => new jr((0, p.LFG)(se), window),
                    })),
                    n
                );
            })();
            class jr {
                constructor(e, t) {
                    (this.document = e),
                        (this.window = t),
                        (this.offset = () => [0, 0]);
                }
                setOffset(e) {
                    this.offset = Array.isArray(e) ? () => e : e;
                }
                getScrollPosition() {
                    return this.supportsScrolling()
                        ? [this.window.pageXOffset, this.window.pageYOffset]
                        : [0, 0];
                }
                scrollToPosition(e) {
                    this.supportsScrolling() &&
                        this.window.scrollTo(e[0], e[1]);
                }
                scrollToAnchor(e) {
                    if (!this.supportsScrolling()) return;
                    const t = (function ia(n, e) {
                        const t =
                            n.getElementById(e) || n.getElementsByName(e)[0];
                        if (t) return t;
                        if (
                            "function" == typeof n.createTreeWalker &&
                            n.body &&
                            (n.body.createShadowRoot || n.body.attachShadow)
                        ) {
                            const r = n.createTreeWalker(
                                n.body,
                                NodeFilter.SHOW_ELEMENT
                            );
                            let i = r.currentNode;
                            for (; i; ) {
                                const a = i.shadowRoot;
                                if (a) {
                                    const l =
                                        a.getElementById(e) ||
                                        a.querySelector(`[name="${e}"]`);
                                    if (l) return l;
                                }
                                i = r.nextNode();
                            }
                        }
                        return null;
                    })(this.document, e);
                    t && (this.scrollToElement(t), t.focus());
                }
                setHistoryScrollRestoration(e) {
                    if (this.supportScrollRestoration()) {
                        const t = this.window.history;
                        t && t.scrollRestoration && (t.scrollRestoration = e);
                    }
                }
                scrollToElement(e) {
                    const t = e.getBoundingClientRect(),
                        r = t.left + this.window.pageXOffset,
                        i = t.top + this.window.pageYOffset,
                        a = this.offset();
                    this.window.scrollTo(r - a[0], i - a[1]);
                }
                supportScrollRestoration() {
                    try {
                        if (!this.supportsScrolling()) return !1;
                        const e =
                            gc(this.window.history) ||
                            gc(Object.getPrototypeOf(this.window.history));
                        return !(!e || (!e.writable && !e.set));
                    } catch {
                        return !1;
                    }
                }
                supportsScrolling() {
                    try {
                        return (
                            !!this.window &&
                            !!this.window.scrollTo &&
                            "pageXOffset" in this.window
                        );
                    } catch {
                        return !1;
                    }
                }
            }
            function gc(n) {
                return Object.getOwnPropertyDescriptor(n, "scrollRestoration");
            }
            class Ks extends class Si extends class _e {} {
                constructor() {
                    super(...arguments), (this.supportsDOMEvents = !0);
                }
            } {
                static makeCurrent() {
                    !(function he(n) {
                        Q || (Q = n);
                    })(new Ks());
                }
                onAndCancel(e, t, r) {
                    return (
                        e.addEventListener(t, r, !1),
                        () => {
                            e.removeEventListener(t, r, !1);
                        }
                    );
                }
                dispatchEvent(e, t) {
                    e.dispatchEvent(t);
                }
                remove(e) {
                    e.parentNode && e.parentNode.removeChild(e);
                }
                createElement(e, t) {
                    return (t = t || this.getDefaultDocument()).createElement(
                        e
                    );
                }
                createHtmlDocument() {
                    return document.implementation.createHTMLDocument(
                        "fakeTitle"
                    );
                }
                getDefaultDocument() {
                    return document;
                }
                isElementNode(e) {
                    return e.nodeType === Node.ELEMENT_NODE;
                }
                isShadowRoot(e) {
                    return e instanceof DocumentFragment;
                }
                getGlobalEventTarget(e, t) {
                    return "window" === t
                        ? window
                        : "document" === t
                        ? e
                        : "body" === t
                        ? e.body
                        : null;
                }
                getBaseHref(e) {
                    const t = (function Ai() {
                        return (
                            (sa = sa || document.querySelector("base")),
                            sa ? sa.getAttribute("href") : null
                        );
                    })();
                    return null == t
                        ? null
                        : (function oa(n) {
                              (Co = Co || document.createElement("a")),
                                  Co.setAttribute("href", n);
                              const e = Co.pathname;
                              return "/" === e.charAt(0) ? e : `/${e}`;
                          })(t);
                }
                resetBaseElement() {
                    sa = null;
                }
                getUserAgent() {
                    return window.navigator.userAgent;
                }
                getCookie(e) {
                    return (function La(n, e) {
                        e = encodeURIComponent(e);
                        for (const t of n.split(";")) {
                            const r = t.indexOf("="),
                                [i, a] =
                                    -1 == r
                                        ? [t, ""]
                                        : [t.slice(0, r), t.slice(r + 1)];
                            if (i.trim() === e) return decodeURIComponent(a);
                        }
                        return null;
                    })(document.cookie, e);
                }
            }
            let Co,
                sa = null;
            const Rt = new p.OlP("TRANSITION_ID"),
                M = [
                    {
                        provide: p.ip1,
                        useFactory: function N(n, e, t) {
                            return () => {
                                t.get(p.CZH).donePromise.then(() => {
                                    const r = O(),
                                        i = e.querySelectorAll(
                                            `style[ng-transition="${n}"]`
                                        );
                                    for (let a = 0; a < i.length; a++)
                                        r.remove(i[a]);
                                });
                            };
                        },
                        deps: [Rt, se, p.zs3],
                        multi: !0,
                    },
                ];
            let ae = (() => {
                class n {
                    build() {
                        return new XMLHttpRequest();
                    }
                }
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)();
                    }),
                    (n.ɵprov = p.Yz7({ token: n, factory: n.ɵfac })),
                    n
                );
            })();
            const Pe = new p.OlP("EventManagerPlugins");
            let Ye = (() => {
                class n {
                    constructor(t, r) {
                        (this._zone = r),
                            (this._eventNameToPlugin = new Map()),
                            t.forEach((i) => (i.manager = this)),
                            (this._plugins = t.slice().reverse());
                    }
                    addEventListener(t, r, i) {
                        return this._findPluginFor(r).addEventListener(t, r, i);
                    }
                    addGlobalEventListener(t, r, i) {
                        return this._findPluginFor(r).addGlobalEventListener(
                            t,
                            r,
                            i
                        );
                    }
                    getZone() {
                        return this._zone;
                    }
                    _findPluginFor(t) {
                        const r = this._eventNameToPlugin.get(t);
                        if (r) return r;
                        const i = this._plugins;
                        for (let a = 0; a < i.length; a++) {
                            const l = i[a];
                            if (l.supports(t))
                                return this._eventNameToPlugin.set(t, l), l;
                        }
                        throw new Error(
                            `No event manager plugin found for event ${t}`
                        );
                    }
                }
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)(p.LFG(Pe), p.LFG(p.R0b));
                    }),
                    (n.ɵprov = p.Yz7({ token: n, factory: n.ɵfac })),
                    n
                );
            })();
            class ht {
                constructor(e) {
                    this._doc = e;
                }
                addGlobalEventListener(e, t, r) {
                    const i = O().getGlobalEventTarget(this._doc, e);
                    if (!i)
                        throw new Error(
                            `Unsupported event target ${i} for event ${t}`
                        );
                    return this.addEventListener(i, t, r);
                }
            }
            let qt = (() => {
                    class n {
                        constructor() {
                            this._stylesSet = new Set();
                        }
                        addStyles(t) {
                            const r = new Set();
                            t.forEach((i) => {
                                this._stylesSet.has(i) ||
                                    (this._stylesSet.add(i), r.add(i));
                            }),
                                this.onStylesAdded(r);
                        }
                        onStylesAdded(t) {}
                        getAllStyles() {
                            return Array.from(this._stylesSet);
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)();
                        }),
                        (n.ɵprov = p.Yz7({ token: n, factory: n.ɵfac })),
                        n
                    );
                })(),
                we = (() => {
                    class n extends qt {
                        constructor(t) {
                            super(),
                                (this._doc = t),
                                (this._hostNodes = new Map()),
                                this._hostNodes.set(t.head, []);
                        }
                        _addStylesToHost(t, r, i) {
                            t.forEach((a) => {
                                const l = this._doc.createElement("style");
                                (l.textContent = a), i.push(r.appendChild(l));
                            });
                        }
                        addHost(t) {
                            const r = [];
                            this._addStylesToHost(this._stylesSet, t, r),
                                this._hostNodes.set(t, r);
                        }
                        removeHost(t) {
                            const r = this._hostNodes.get(t);
                            r && r.forEach(Ct), this._hostNodes.delete(t);
                        }
                        onStylesAdded(t) {
                            this._hostNodes.forEach((r, i) => {
                                this._addStylesToHost(t, i, r);
                            });
                        }
                        ngOnDestroy() {
                            this._hostNodes.forEach((t) => t.forEach(Ct));
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(p.LFG(se));
                        }),
                        (n.ɵprov = p.Yz7({ token: n, factory: n.ɵfac })),
                        n
                    );
                })();
            function Ct(n) {
                O().remove(n);
            }
            const Tn = {
                    svg: "http://www.w3.org/2000/svg",
                    xhtml: "http://www.w3.org/1999/xhtml",
                    xlink: "http://www.w3.org/1999/xlink",
                    xml: "http://www.w3.org/XML/1998/namespace",
                    xmlns: "http://www.w3.org/2000/xmlns/",
                    math: "http://www.w3.org/1998/MathML/",
                },
                St = /%COMP%/g;
            function bo(n, e, t) {
                for (let r = 0; r < e.length; r++) {
                    let i = e[r];
                    Array.isArray(i)
                        ? bo(n, i, t)
                        : ((i = i.replace(St, n)), t.push(i));
                }
                return t;
            }
            function Rs(n) {
                return (e) => {
                    if ("__ngUnwrap__" === e) return n;
                    !1 === n(e) && (e.preventDefault(), (e.returnValue = !1));
                };
            }
            let ei = (() => {
                class n {
                    constructor(t, r, i) {
                        (this.eventManager = t),
                            (this.sharedStylesHost = r),
                            (this.appId = i),
                            (this.rendererByCompId = new Map()),
                            (this.defaultRenderer = new cr(t));
                    }
                    createRenderer(t, r) {
                        if (!t || !r) return this.defaultRenderer;
                        switch (r.encapsulation) {
                            case p.ifc.Emulated: {
                                let i = this.rendererByCompId.get(r.id);
                                return (
                                    i ||
                                        ((i = new ns(
                                            this.eventManager,
                                            this.sharedStylesHost,
                                            r,
                                            this.appId
                                        )),
                                        this.rendererByCompId.set(r.id, i)),
                                    i.applyToHost(t),
                                    i
                                );
                            }
                            case 1:
                            case p.ifc.ShadowDom:
                                return new cy(
                                    this.eventManager,
                                    this.sharedStylesHost,
                                    t,
                                    r
                                );
                            default:
                                if (!this.rendererByCompId.has(r.id)) {
                                    const i = bo(r.id, r.styles, []);
                                    this.sharedStylesHost.addStyles(i),
                                        this.rendererByCompId.set(
                                            r.id,
                                            this.defaultRenderer
                                        );
                                }
                                return this.defaultRenderer;
                        }
                    }
                    begin() {}
                    end() {}
                }
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)(p.LFG(Ye), p.LFG(we), p.LFG(p.AFp));
                    }),
                    (n.ɵprov = p.Yz7({ token: n, factory: n.ɵfac })),
                    n
                );
            })();
            class cr {
                constructor(e) {
                    (this.eventManager = e),
                        (this.data = Object.create(null)),
                        (this.destroyNode = null);
                }
                destroy() {}
                createElement(e, t) {
                    return t
                        ? document.createElementNS(Tn[t] || t, e)
                        : document.createElement(e);
                }
                createComment(e) {
                    return document.createComment(e);
                }
                createText(e) {
                    return document.createTextNode(e);
                }
                appendChild(e, t) {
                    (la(e) ? e.content : e).appendChild(t);
                }
                insertBefore(e, t, r) {
                    e && (la(e) ? e.content : e).insertBefore(t, r);
                }
                removeChild(e, t) {
                    e && e.removeChild(t);
                }
                selectRootElement(e, t) {
                    let r =
                        "string" == typeof e ? document.querySelector(e) : e;
                    if (!r)
                        throw new Error(
                            `The selector "${e}" did not match any elements`
                        );
                    return t || (r.textContent = ""), r;
                }
                parentNode(e) {
                    return e.parentNode;
                }
                nextSibling(e) {
                    return e.nextSibling;
                }
                setAttribute(e, t, r, i) {
                    if (i) {
                        t = i + ":" + t;
                        const a = Tn[i];
                        a ? e.setAttributeNS(a, t, r) : e.setAttribute(t, r);
                    } else e.setAttribute(t, r);
                }
                removeAttribute(e, t, r) {
                    if (r) {
                        const i = Tn[r];
                        i
                            ? e.removeAttributeNS(i, t)
                            : e.removeAttribute(`${r}:${t}`);
                    } else e.removeAttribute(t);
                }
                addClass(e, t) {
                    e.classList.add(t);
                }
                removeClass(e, t) {
                    e.classList.remove(t);
                }
                setStyle(e, t, r, i) {
                    i & (p.JOm.DashCase | p.JOm.Important)
                        ? e.style.setProperty(
                              t,
                              r,
                              i & p.JOm.Important ? "important" : ""
                          )
                        : (e.style[t] = r);
                }
                removeStyle(e, t, r) {
                    r & p.JOm.DashCase
                        ? e.style.removeProperty(t)
                        : (e.style[t] = "");
                }
                setProperty(e, t, r) {
                    e[t] = r;
                }
                setValue(e, t) {
                    e.nodeValue = t;
                }
                listen(e, t, r) {
                    return "string" == typeof e
                        ? this.eventManager.addGlobalEventListener(e, t, Rs(r))
                        : this.eventManager.addEventListener(e, t, Rs(r));
                }
            }
            function la(n) {
                return "TEMPLATE" === n.tagName && void 0 !== n.content;
            }
            class ns extends cr {
                constructor(e, t, r, i) {
                    super(e), (this.component = r);
                    const a = bo(i + "-" + r.id, r.styles, []);
                    t.addStyles(a),
                        (this.contentAttr = (function xs(n) {
                            return "_ngcontent-%COMP%".replace(St, n);
                        })(i + "-" + r.id)),
                        (this.hostAttr = (function aa(n) {
                            return "_nghost-%COMP%".replace(St, n);
                        })(i + "-" + r.id));
                }
                applyToHost(e) {
                    super.setAttribute(e, this.hostAttr, "");
                }
                createElement(e, t) {
                    const r = super.createElement(e, t);
                    return super.setAttribute(r, this.contentAttr, ""), r;
                }
            }
            class cy extends cr {
                constructor(e, t, r, i) {
                    super(e),
                        (this.sharedStylesHost = t),
                        (this.hostEl = r),
                        (this.shadowRoot = r.attachShadow({ mode: "open" })),
                        this.sharedStylesHost.addHost(this.shadowRoot);
                    const a = bo(i.id, i.styles, []);
                    for (let l = 0; l < a.length; l++) {
                        const h = document.createElement("style");
                        (h.textContent = a[l]), this.shadowRoot.appendChild(h);
                    }
                }
                nodeOrShadowRoot(e) {
                    return e === this.hostEl ? this.shadowRoot : e;
                }
                destroy() {
                    this.sharedStylesHost.removeHost(this.shadowRoot);
                }
                appendChild(e, t) {
                    return super.appendChild(this.nodeOrShadowRoot(e), t);
                }
                insertBefore(e, t, r) {
                    return super.insertBefore(this.nodeOrShadowRoot(e), t, r);
                }
                removeChild(e, t) {
                    return super.removeChild(this.nodeOrShadowRoot(e), t);
                }
                parentNode(e) {
                    return this.nodeOrShadowRoot(
                        super.parentNode(this.nodeOrShadowRoot(e))
                    );
                }
            }
            let Hp = (() => {
                class n extends ht {
                    constructor(t) {
                        super(t);
                    }
                    supports(t) {
                        return !0;
                    }
                    addEventListener(t, r, i) {
                        return (
                            t.addEventListener(r, i, !1),
                            () => this.removeEventListener(t, r, i)
                        );
                    }
                    removeEventListener(t, r, i) {
                        return t.removeEventListener(r, i);
                    }
                }
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)(p.LFG(se));
                    }),
                    (n.ɵprov = p.Yz7({ token: n, factory: n.ɵfac })),
                    n
                );
            })();
            const mc = ["alt", "control", "meta", "shift"],
                Qu = {
                    "\b": "Backspace",
                    "\t": "Tab",
                    "\x7f": "Delete",
                    "\x1b": "Escape",
                    Del: "Delete",
                    Esc: "Escape",
                    Left: "ArrowLeft",
                    Right: "ArrowRight",
                    Up: "ArrowUp",
                    Down: "ArrowDown",
                    Menu: "ContextMenu",
                    Scroll: "ScrollLock",
                    Win: "OS",
                },
                _c = {
                    A: "1",
                    B: "2",
                    C: "3",
                    D: "4",
                    E: "5",
                    F: "6",
                    G: "7",
                    H: "8",
                    I: "9",
                    J: "*",
                    K: "+",
                    M: "-",
                    N: ".",
                    O: "/",
                    "`": "0",
                    "\x90": "NumLock",
                },
                yc = {
                    alt: (n) => n.altKey,
                    control: (n) => n.ctrlKey,
                    meta: (n) => n.metaKey,
                    shift: (n) => n.shiftKey,
                };
            let ph = (() => {
                class n extends ht {
                    constructor(t) {
                        super(t);
                    }
                    supports(t) {
                        return null != n.parseEventName(t);
                    }
                    addEventListener(t, r, i) {
                        const a = n.parseEventName(r),
                            l = n.eventCallback(
                                a.fullKey,
                                i,
                                this.manager.getZone()
                            );
                        return this.manager
                            .getZone()
                            .runOutsideAngular(() =>
                                O().onAndCancel(t, a.domEventName, l)
                            );
                    }
                    static parseEventName(t) {
                        const r = t.toLowerCase().split("."),
                            i = r.shift();
                        if (
                            0 === r.length ||
                            ("keydown" !== i && "keyup" !== i)
                        )
                            return null;
                        const a = n._normalizeKey(r.pop());
                        let l = "";
                        if (
                            (mc.forEach((_) => {
                                const E = r.indexOf(_);
                                E > -1 && (r.splice(E, 1), (l += _ + "."));
                            }),
                            (l += a),
                            0 != r.length || 0 === a.length)
                        )
                            return null;
                        const h = {};
                        return (h.domEventName = i), (h.fullKey = l), h;
                    }
                    static getEventFullKey(t) {
                        let r = "",
                            i = (function gh(n) {
                                let e = n.key;
                                if (null == e) {
                                    if (((e = n.keyIdentifier), null == e))
                                        return "Unidentified";
                                    e.startsWith("U+") &&
                                        ((e = String.fromCharCode(
                                            parseInt(e.substring(2), 16)
                                        )),
                                        3 === n.location &&
                                            _c.hasOwnProperty(e) &&
                                            (e = _c[e]));
                                }
                                return Qu[e] || e;
                            })(t);
                        return (
                            (i = i.toLowerCase()),
                            " " === i
                                ? (i = "space")
                                : "." === i && (i = "dot"),
                            mc.forEach((a) => {
                                a != i && yc[a](t) && (r += a + ".");
                            }),
                            (r += i),
                            r
                        );
                    }
                    static eventCallback(t, r, i) {
                        return (a) => {
                            n.getEventFullKey(a) === t &&
                                i.runGuarded(() => r(a));
                        };
                    }
                    static _normalizeKey(t) {
                        return "esc" === t ? "escape" : t;
                    }
                }
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)(p.LFG(se));
                    }),
                    (n.ɵprov = p.Yz7({ token: n, factory: n.ɵfac })),
                    n
                );
            })();
            const fy = (0, p.eFA)(p._c5, "browser", [
                    { provide: p.Lbi, useValue: "browser" },
                    {
                        provide: p.g9A,
                        useValue: function Ec() {
                            Ks.makeCurrent();
                        },
                        multi: !0,
                    },
                    {
                        provide: se,
                        useFactory: function Ic() {
                            return (0, p.RDi)(document), document;
                        },
                        deps: [],
                    },
                ]),
                mh = new p.OlP(""),
                Sr = [
                    {
                        provide: p.rWj,
                        useClass: class q {
                            addToWindow(e) {
                                (p.dqk.getAngularTestability = (r, i = !0) => {
                                    const a = e.findTestabilityInTree(r, i);
                                    if (null == a)
                                        throw new Error(
                                            "Could not find testability for element."
                                        );
                                    return a;
                                }),
                                    (p.dqk.getAllAngularTestabilities = () =>
                                        e.getAllTestabilities()),
                                    (p.dqk.getAllAngularRootElements = () =>
                                        e.getAllRootElements()),
                                    p.dqk.frameworkStabilizers ||
                                        (p.dqk.frameworkStabilizers = []),
                                    p.dqk.frameworkStabilizers.push((r) => {
                                        const i =
                                            p.dqk.getAllAngularTestabilities();
                                        let a = i.length,
                                            l = !1;
                                        const h = function (_) {
                                            (l = l || _), a--, 0 == a && r(l);
                                        };
                                        i.forEach(function (_) {
                                            _.whenStable(h);
                                        });
                                    });
                            }
                            findTestabilityInTree(e, t, r) {
                                return null == t
                                    ? null
                                    : e.getTestability(t) ??
                                          (r
                                              ? O().isShadowRoot(t)
                                                  ? this.findTestabilityInTree(
                                                        e,
                                                        t.host,
                                                        !0
                                                    )
                                                  : this.findTestabilityInTree(
                                                        e,
                                                        t.parentElement,
                                                        !0
                                                    )
                                              : null);
                            }
                        },
                        deps: [],
                    },
                    {
                        provide: p.lri,
                        useClass: p.dDg,
                        deps: [p.R0b, p.eoX, p.rWj],
                    },
                    {
                        provide: p.dDg,
                        useClass: p.dDg,
                        deps: [p.R0b, p.eoX, p.rWj],
                    },
                ],
                Zs = [
                    { provide: p.zSh, useValue: "root" },
                    {
                        provide: p.qLn,
                        useFactory: function $p() {
                            return new p.qLn();
                        },
                        deps: [],
                    },
                    {
                        provide: Pe,
                        useClass: Hp,
                        multi: !0,
                        deps: [se, p.R0b, p.Lbi],
                    },
                    { provide: Pe, useClass: ph, multi: !0, deps: [se] },
                    { provide: ei, useClass: ei, deps: [Ye, we, p.AFp] },
                    { provide: p.FYo, useExisting: ei },
                    { provide: qt, useExisting: we },
                    { provide: we, useClass: we, deps: [se] },
                    { provide: Ye, useClass: Ye, deps: [Pe, p.R0b] },
                    { provide: class Vr {}, useClass: ae, deps: [] },
                    [],
                ];
            let Rn = (() => {
                    class n {
                        constructor(t) {}
                        static withServerTransition(t) {
                            return {
                                ngModule: n,
                                providers: [
                                    { provide: p.AFp, useValue: t.appId },
                                    { provide: Rt, useExisting: p.AFp },
                                    M,
                                ],
                            };
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(p.LFG(mh, 12));
                        }),
                        (n.ɵmod = p.oAB({ type: n })),
                        (n.ɵinj = p.cJS({
                            providers: [...Zs, ...Sr],
                            imports: [Yu, p.hGG],
                        })),
                        n
                    );
                })(),
                Gp = (() => {
                    class n {
                        constructor(t) {
                            this._doc = t;
                        }
                        getTitle() {
                            return this._doc.title;
                        }
                        setTitle(t) {
                            this._doc.title = t || "";
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(p.LFG(se));
                        }),
                        (n.ɵprov = p.Yz7({
                            token: n,
                            factory: function (t) {
                                let r = null;
                                return (
                                    (r = t
                                        ? new t()
                                        : (function my() {
                                              return new Gp((0, p.LFG)(se));
                                          })()),
                                    r
                                );
                            },
                            providedIn: "root",
                        })),
                        n
                    );
                })();
            typeof window < "u" && window;
            var dn = P(8996),
                rs = P(8306);
            const { isArray: An } = Array,
                { getPrototypeOf: Dy, prototype: da, keys: vh } = Object;
            var So = P(8421),
                Ao = P(7669),
                dr = P(5403),
                Mt = P(4004);
            const { isArray: wh } = Array;
            let Qy = (() => {
                    class n {}
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)();
                        }),
                        (n.ɵmod = p.oAB({ type: n })),
                        (n.ɵinj = p.cJS({})),
                        n
                    );
                })(),
                El = (() => {
                    class n {}
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)();
                        }),
                        (n.ɵmod = p.oAB({ type: n })),
                        (n.ɵinj = p.cJS({ imports: [Qy] })),
                        n
                    );
                })(),
                Ri = (() => {
                    class n {}
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)();
                        }),
                        (n.ɵmod = p.oAB({ type: n })),
                        (n.ɵinj = p.cJS({ imports: [El] })),
                        n
                    );
                })();
            var Zc = P(5867),
                ss = P(6148);
            const Wh_firebaseConfig = {
                apiKey: "AIzaSyClD21a4Yb_O2e__nm-sqI_LsdocEieF54",
                authDomain: "my-test-project-450cf.firebaseapp.com",
                projectId: "my-test-project-450cf",
                storageBucket: "my-test-project-450cf.appspot.com",
                messagingSenderId: "781922575005",
                appId: "1:781922575005:web:25d346cef985b1b201ea74",
                measurementId: "G-T2GBSCH2D1",
            };
            var zh = P(4986);
            function bt(...n) {
                const e = (0, Ao.yG)(n);
                return (0, dn.D)(n, e);
            }
            var vn = P(6451),
                ru = P(3099),
                hr = P(4482);
            function fr(n, e) {
                return (0, hr.e)((t, r) => {
                    let i = null,
                        a = 0,
                        l = !1;
                    const h = () => l && !i && r.complete();
                    t.subscribe(
                        (0, dr.x)(
                            r,
                            (_) => {
                                i?.unsubscribe();
                                let E = 0;
                                const D = a++;
                                (0, So.Xf)(n(_, D)).subscribe(
                                    (i = (0, dr.x)(
                                        r,
                                        (T) => r.next(e ? e(_, T, D, E++) : T),
                                        () => {
                                            (i = null), h();
                                        }
                                    ))
                                );
                            },
                            () => {
                                (l = !0), h();
                            }
                        )
                    );
                });
            }
            function Bn(n, e, t, r, i) {
                return (a, l) => {
                    let h = t,
                        _ = e,
                        E = 0;
                    a.subscribe(
                        (0, dr.x)(
                            l,
                            (D) => {
                                const T = E++;
                                (_ = h ? n(_, D, T) : ((h = !0), D)),
                                    r && l.next(_);
                            },
                            i &&
                                (() => {
                                    h && l.next(_), l.complete();
                                })
                        )
                    );
                };
            }
            function ni(n, e) {
                return (0, hr.e)(Bn(n, e, arguments.length >= 2, !0));
            }
            var ro = P(4671);
            function qh(n, e = ro.y) {
                return (
                    (n = n ?? dv),
                    (0, hr.e)((t, r) => {
                        let i,
                            a = !0;
                        t.subscribe(
                            (0, dr.x)(r, (l) => {
                                const h = e(l);
                                (a || !n(i, h)) &&
                                    ((a = !1), (i = h), r.next(l));
                            })
                        );
                    })
                );
            }
            function dv(n, e) {
                return n === e;
            }
            var Yc = P(5032),
                hn = P(880),
                pr = P(2011),
                f = (P(1451), P(3942)),
                m = P(4859),
                y = P(5861),
                A = P(9681),
                C = P(2090),
                H = P(1877);
            const re = "@firebase/database";
            let it = "";
            function At(n) {
                it = n;
            }
            class vt {
                constructor(e) {
                    (this.domStorage_ = e), (this.prefix_ = "firebase:");
                }
                set(e, t) {
                    null == t
                        ? this.domStorage_.removeItem(this.prefixedName_(e))
                        : this.domStorage_.setItem(
                              this.prefixedName_(e),
                              (0, C.Pz)(t)
                          );
                }
                get(e) {
                    const t = this.domStorage_.getItem(this.prefixedName_(e));
                    return null == t ? null : (0, C.cI)(t);
                }
                remove(e) {
                    this.domStorage_.removeItem(this.prefixedName_(e));
                }
                prefixedName_(e) {
                    return this.prefix_ + e;
                }
                toString() {
                    return this.domStorage_.toString();
                }
            }
            class xr {
                constructor() {
                    (this.cache_ = {}), (this.isInMemoryStorage = !0);
                }
                set(e, t) {
                    null == t ? delete this.cache_[e] : (this.cache_[e] = t);
                }
                get(e) {
                    return (0, C.r3)(this.cache_, e) ? this.cache_[e] : null;
                }
                remove(e) {
                    delete this.cache_[e];
                }
            }
            const tr = function (n) {
                    try {
                        if (typeof window < "u" && typeof window[n] < "u") {
                            const e = window[n];
                            return (
                                e.setItem("firebase:sentinel", "cache"),
                                e.removeItem("firebase:sentinel"),
                                new vt(e)
                            );
                        }
                    } catch {}
                    return new xr();
                },
                zi = tr("localStorage"),
                iu = tr("sessionStorage"),
                Oo = new H.Yd("@firebase/database"),
                Qc = (function () {
                    let n = 1;
                    return function () {
                        return n++;
                    };
                })(),
                Kh = function (n) {
                    const e = (0, C.dS)(n),
                        t = new C.gQ();
                    t.update(e);
                    const r = t.digest();
                    return C.US.encodeByteArray(r);
                },
                os = function (...n) {
                    let e = "";
                    for (let t = 0; t < n.length; t++) {
                        const r = n[t];
                        Array.isArray(r) ||
                        (r &&
                            "object" == typeof r &&
                            "number" == typeof r.length)
                            ? (e += os.apply(null, r))
                            : (e += "object" == typeof r ? (0, C.Pz)(r) : r),
                            (e += " ");
                    }
                    return e;
                };
            let Fo = null,
                Jc = !0;
            const su = function (n, e) {
                    (0, C.hu)(
                        !e || !0 === n || !1 === n,
                        "Can't turn on custom loggers persistently."
                    ),
                        !0 === n
                            ? ((Oo.logLevel = H.in.VERBOSE),
                              (Fo = Oo.log.bind(Oo)),
                              e && iu.set("logging_enabled", !0))
                            : "function" == typeof n
                            ? (Fo = n)
                            : ((Fo = null), iu.remove("logging_enabled"));
                },
                nr = function (...n) {
                    if (
                        (!0 === Jc &&
                            ((Jc = !1),
                            null === Fo &&
                                !0 === iu.get("logging_enabled") &&
                                su(!0)),
                        Fo)
                    ) {
                        const e = os.apply(null, n);
                        Fo(e);
                    }
                },
                ou = function (n) {
                    return function (...e) {
                        nr(n, ...e);
                    };
                },
                Xc = function (...n) {
                    const e = "FIREBASE INTERNAL ERROR: " + os(...n);
                    Oo.error(e);
                },
                ri = function (...n) {
                    const e = `FIREBASE FATAL ERROR: ${os(...n)}`;
                    throw (Oo.error(e), new Error(e));
                },
                $r = function (...n) {
                    const e = "FIREBASE WARNING: " + os(...n);
                    Oo.warn(e);
                },
                Ag = function (n) {
                    return (
                        "number" == typeof n &&
                        (n != n ||
                            n === Number.POSITIVE_INFINITY ||
                            n === Number.NEGATIVE_INFINITY)
                    );
                },
                va = "[MIN_NAME]",
                Lo = "[MAX_NAME]",
                Il = function (n, e) {
                    if (n === e) return 0;
                    if (n === va || e === Lo) return -1;
                    if (e === va || n === Lo) return 1;
                    {
                        const t = Yh(n),
                            r = Yh(e);
                        return null !== t
                            ? null !== r
                                ? t - r == 0
                                    ? n.length - e.length
                                    : t - r
                                : -1
                            : null !== r
                            ? 1
                            : n < e
                            ? -1
                            : 1;
                    }
                },
                jT = function (n, e) {
                    return n === e ? 0 : n < e ? -1 : 1;
                },
                Zh = function (n, e) {
                    if (e && n in e) return e[n];
                    throw new Error(
                        "Missing required key (" +
                            n +
                            ") in object: " +
                            (0, C.Pz)(e)
                    );
                },
                pv = function (n) {
                    if ("object" != typeof n || null === n) return (0, C.Pz)(n);
                    const e = [];
                    for (const r in n) e.push(r);
                    e.sort();
                    let t = "{";
                    for (let r = 0; r < e.length; r++)
                        0 !== r && (t += ","),
                            (t += (0, C.Pz)(e[r])),
                            (t += ":"),
                            (t += pv(n[e[r]]));
                    return (t += "}"), t;
                },
                gv = function (n, e) {
                    const t = n.length;
                    if (t <= e) return [n];
                    const r = [];
                    for (let i = 0; i < t; i += e)
                        r.push(n.substring(i, i + e > t ? t : i + e));
                    return r;
                };
            function Rr(n, e) {
                for (const t in n) n.hasOwnProperty(t) && e(t, n[t]);
            }
            const mv = function (n) {
                    (0, C.hu)(!Ag(n), "Invalid JSON number");
                    const r = 1023;
                    let i, a, l, h, _;
                    0 === n
                        ? ((a = 0), (l = 0), (i = 1 / n == -1 / 0 ? 1 : 0))
                        : ((i = n < 0),
                          (n = Math.abs(n)) >= Math.pow(2, 1 - r)
                              ? ((h = Math.min(
                                    Math.floor(Math.log(n) / Math.LN2),
                                    r
                                )),
                                (a = h + r),
                                (l = Math.round(
                                    n * Math.pow(2, 52 - h) - Math.pow(2, 52)
                                )))
                              : ((a = 0),
                                (l = Math.round(n / Math.pow(2, -1074)))));
                    const E = [];
                    for (_ = 52; _; _ -= 1)
                        E.push(l % 2 ? 1 : 0), (l = Math.floor(l / 2));
                    for (_ = 11; _; _ -= 1)
                        E.push(a % 2 ? 1 : 0), (a = Math.floor(a / 2));
                    E.push(i ? 1 : 0), E.reverse();
                    const D = E.join("");
                    let T = "";
                    for (_ = 0; _ < 64; _ += 8) {
                        let R = parseInt(D.substr(_, 8), 2).toString(16);
                        1 === R.length && (R = "0" + R), (T += R);
                    }
                    return T.toLowerCase();
                },
                iI = new RegExp("^-?(0*)\\d{1,10}$"),
                yv = -2147483648,
                wa = 2147483647,
                Yh = function (n) {
                    if (iI.test(n)) {
                        const e = Number(n);
                        if (e >= yv && e <= wa) return e;
                    }
                    return null;
                },
                Cl = function (n) {
                    try {
                        n();
                    } catch (e) {
                        setTimeout(() => {
                            throw (
                                ($r(
                                    "Exception was thrown by user callback.",
                                    e.stack || ""
                                ),
                                e)
                            );
                        }, Math.floor(0));
                    }
                },
                xg = function (n, e) {
                    const t = setTimeout(n, e);
                    return "object" == typeof t && t.unref && t.unref(), t;
                };
            class Rg {
                constructor(e, t) {
                    (this.appName_ = e),
                        (this.appCheckProvider = t),
                        (this.appCheck = t?.getImmediate({ optional: !0 })),
                        this.appCheck ||
                            t?.get().then((r) => (this.appCheck = r));
                }
                getToken(e) {
                    return this.appCheck
                        ? this.appCheck.getToken(e)
                        : new Promise((t, r) => {
                              setTimeout(() => {
                                  this.appCheck
                                      ? this.getToken(e).then(t, r)
                                      : t(null);
                              }, 0);
                          });
                }
                addTokenChangeListener(e) {
                    var t;
                    null === (t = this.appCheckProvider) ||
                        void 0 === t ||
                        t.get().then((r) => r.addTokenListener(e));
                }
                notifyForInvalidToken() {
                    $r(
                        `Provided AppCheck credentials for the app named "${this.appName_}" are invalid. This usually indicates your app was not initialized correctly.`
                    );
                }
            }
            class WT {
                constructor(e, t, r) {
                    (this.appName_ = e),
                        (this.firebaseOptions_ = t),
                        (this.authProvider_ = r),
                        (this.auth_ = null),
                        (this.auth_ = r.getImmediate({ optional: !0 })),
                        this.auth_ || r.onInit((i) => (this.auth_ = i));
                }
                getToken(e) {
                    return this.auth_
                        ? this.auth_
                              .getToken(e)
                              .catch((t) =>
                                  t && "auth/token-not-initialized" === t.code
                                      ? (nr(
                                            "Got auth/token-not-initialized error.  Treating as null token."
                                        ),
                                        null)
                                      : Promise.reject(t)
                              )
                        : new Promise((t, r) => {
                              setTimeout(() => {
                                  this.auth_
                                      ? this.getToken(e).then(t, r)
                                      : t(null);
                              }, 0);
                          });
                }
                addTokenChangeListener(e) {
                    this.auth_
                        ? this.auth_.addAuthTokenListener(e)
                        : this.authProvider_
                              .get()
                              .then((t) => t.addAuthTokenListener(e));
                }
                removeTokenChangeListener(e) {
                    this.authProvider_
                        .get()
                        .then((t) => t.removeAuthTokenListener(e));
                }
                notifyForInvalidToken() {
                    let e =
                        'Provided authentication credentials for the app named "' +
                        this.appName_ +
                        '" are invalid. This usually indicates your app was not initialized correctly. ';
                    (e +=
                        "credential" in this.firebaseOptions_
                            ? 'Make sure the "credential" property provided to initializeApp() is authorized to access the specified "databaseURL" and is from the correct project.'
                            : "serviceAccount" in this.firebaseOptions_
                            ? 'Make sure the "serviceAccount" property provided to initializeApp() is authorized to access the specified "databaseURL" and is from the correct project.'
                            : 'Make sure the "apiKey" and "databaseURL" properties provided to initializeApp() match the values provided for your app at https://console.firebase.google.com/.'),
                        $r(e);
                }
            }
            let ed = (() => {
                class n {
                    constructor(t) {
                        this.accessToken = t;
                    }
                    getToken(t) {
                        return Promise.resolve({
                            accessToken: this.accessToken,
                        });
                    }
                    addTokenChangeListener(t) {
                        t(this.accessToken);
                    }
                    removeTokenChangeListener(t) {}
                    notifyForInvalidToken() {}
                }
                return (n.OWNER = "owner"), n;
            })();
            const Xh =
                    /(console\.firebase|firebase-console-\w+\.corp|firebase\.corp)\.google\.com/,
                kg = "websocket",
                td = "long_polling";
            class Iv {
                constructor(e, t, r, i, a = !1, l = "", h = !1) {
                    (this.secure = t),
                        (this.namespace = r),
                        (this.webSocketOnly = i),
                        (this.nodeAdmin = a),
                        (this.persistenceKey = l),
                        (this.includeNamespaceInQueryParams = h),
                        (this._host = e.toLowerCase()),
                        (this._domain = this._host.substr(
                            this._host.indexOf(".") + 1
                        )),
                        (this.internalHost = zi.get("host:" + e) || this._host);
                }
                isCacheableHost() {
                    return "s-" === this.internalHost.substr(0, 2);
                }
                isCustomHost() {
                    return (
                        "firebaseio.com" !== this._domain &&
                        "firebaseio-demo.com" !== this._domain
                    );
                }
                get host() {
                    return this._host;
                }
                set host(e) {
                    e !== this.internalHost &&
                        ((this.internalHost = e),
                        this.isCacheableHost() &&
                            zi.set("host:" + this._host, this.internalHost));
                }
                toString() {
                    let e = this.toURLString();
                    return (
                        this.persistenceKey &&
                            (e += "<" + this.persistenceKey + ">"),
                        e
                    );
                }
                toURLString() {
                    return `${this.secure ? "https://" : "http://"}${
                        this.host
                    }/${
                        this.includeNamespaceInQueryParams
                            ? `?ns=${this.namespace}`
                            : ""
                    }`;
                }
            }
            function oI(n, e, t) {
                let r;
                if (
                    ((0, C.hu)(
                        "string" == typeof e,
                        "typeof type must == string"
                    ),
                    (0, C.hu)(
                        "object" == typeof t,
                        "typeof params must == object"
                    ),
                    e === kg)
                )
                    r =
                        (n.secure ? "wss://" : "ws://") +
                        n.internalHost +
                        "/.ws?";
                else {
                    if (e !== td)
                        throw new Error("Unknown connection type: " + e);
                    r =
                        (n.secure ? "https://" : "http://") +
                        n.internalHost +
                        "/.lp?";
                }
                (function sI(n) {
                    return (
                        n.host !== n.internalHost ||
                        n.isCustomHost() ||
                        n.includeNamespaceInQueryParams
                    );
                })(n) && (t.ns = n.namespace);
                const i = [];
                return (
                    Rr(t, (a, l) => {
                        i.push(a + "=" + l);
                    }),
                    r + i.join("&")
                );
            }
            class zT {
                constructor() {
                    this.counters_ = {};
                }
                incrementCounter(e, t = 1) {
                    (0, C.r3)(this.counters_, e) || (this.counters_[e] = 0),
                        (this.counters_[e] += t);
                }
                get() {
                    return (0, C.p$)(this.counters_);
                }
            }
            const Og = {},
                ef = {};
            function Fg(n) {
                const e = n.toString();
                return Og[e] || (Og[e] = new zT()), Og[e];
            }
            class aI {
                constructor(e) {
                    (this.onMessage_ = e),
                        (this.pendingResponses = []),
                        (this.currentResponseNum = 0),
                        (this.closeAfterResponse = -1),
                        (this.onClose = null);
                }
                closeAfter(e, t) {
                    (this.closeAfterResponse = e),
                        (this.onClose = t),
                        this.closeAfterResponse < this.currentResponseNum &&
                            (this.onClose(), (this.onClose = null));
                }
                handleResponse(e, t) {
                    for (
                        this.pendingResponses[e] = t;
                        this.pendingResponses[this.currentResponseNum];

                    ) {
                        const r =
                            this.pendingResponses[this.currentResponseNum];
                        delete this.pendingResponses[this.currentResponseNum];
                        for (let i = 0; i < r.length; ++i)
                            r[i] &&
                                Cl(() => {
                                    this.onMessage_(r[i]);
                                });
                        if (
                            this.currentResponseNum === this.closeAfterResponse
                        ) {
                            this.onClose &&
                                (this.onClose(), (this.onClose = null));
                            break;
                        }
                        this.currentResponseNum++;
                    }
                }
            }
            class Ea {
                constructor(e, t, r, i, a, l, h) {
                    (this.connId = e),
                        (this.repoInfo = t),
                        (this.applicationId = r),
                        (this.appCheckToken = i),
                        (this.authToken = a),
                        (this.transportSessionId = l),
                        (this.lastSessionId = h),
                        (this.bytesSent = 0),
                        (this.bytesReceived = 0),
                        (this.everConnected_ = !1),
                        (this.log_ = ou(e)),
                        (this.stats_ = Fg(t)),
                        (this.urlFn = (_) => (
                            this.appCheckToken && (_.ac = this.appCheckToken),
                            oI(t, td, _)
                        ));
                }
                open(e, t) {
                    (this.curSegmentNum = 0),
                        (this.onDisconnect_ = t),
                        (this.myPacketOrderer = new aI(e)),
                        (this.isClosed_ = !1),
                        (this.connectTimeoutTimer_ = setTimeout(() => {
                            this.log_("Timed out trying to connect."),
                                this.onClosed_(),
                                (this.connectTimeoutTimer_ = null);
                        }, Math.floor(3e4))),
                        (function (n) {
                            if (
                                (0, C.Yr)() ||
                                "complete" === document.readyState
                            )
                                n();
                            else {
                                let e = !1;
                                const t = function () {
                                    document.body
                                        ? e || ((e = !0), n())
                                        : setTimeout(t, Math.floor(10));
                                };
                                document.addEventListener
                                    ? (document.addEventListener(
                                          "DOMContentLoaded",
                                          t,
                                          !1
                                      ),
                                      window.addEventListener("load", t, !1))
                                    : document.attachEvent &&
                                      (document.attachEvent(
                                          "onreadystatechange",
                                          () => {
                                              "complete" ===
                                                  document.readyState && t();
                                          }
                                      ),
                                      window.attachEvent("onload", t));
                            }
                        })(() => {
                            if (this.isClosed_) return;
                            this.scriptTagHolder = new Lg(
                                (...a) => {
                                    const [l, h, _, E, D] = a;
                                    if (
                                        (this.incrementIncomingBytes_(a),
                                        this.scriptTagHolder)
                                    )
                                        if (
                                            (this.connectTimeoutTimer_ &&
                                                (clearTimeout(
                                                    this.connectTimeoutTimer_
                                                ),
                                                (this.connectTimeoutTimer_ =
                                                    null)),
                                            (this.everConnected_ = !0),
                                            "start" === l)
                                        )
                                            (this.id = h), (this.password = _);
                                        else {
                                            if ("close" !== l)
                                                throw new Error(
                                                    "Unrecognized command received: " +
                                                        l
                                                );
                                            h
                                                ? ((this.scriptTagHolder.sendNewPolls =
                                                      !1),
                                                  this.myPacketOrderer.closeAfter(
                                                      h,
                                                      () => {
                                                          this.onClosed_();
                                                      }
                                                  ))
                                                : this.onClosed_();
                                        }
                                },
                                (...a) => {
                                    const [l, h] = a;
                                    this.incrementIncomingBytes_(a),
                                        this.myPacketOrderer.handleResponse(
                                            l,
                                            h
                                        );
                                },
                                () => {
                                    this.onClosed_();
                                },
                                this.urlFn
                            );
                            const r = { start: "t" };
                            (r.ser = Math.floor(1e8 * Math.random())),
                                this.scriptTagHolder.uniqueCallbackIdentifier &&
                                    (r.cb =
                                        this.scriptTagHolder.uniqueCallbackIdentifier),
                                (r.v = "5"),
                                this.transportSessionId &&
                                    (r.s = this.transportSessionId),
                                this.lastSessionId &&
                                    (r.ls = this.lastSessionId),
                                this.applicationId &&
                                    (r.p = this.applicationId),
                                this.appCheckToken &&
                                    (r.ac = this.appCheckToken),
                                typeof location < "u" &&
                                    location.hostname &&
                                    Xh.test(location.hostname) &&
                                    (r.r = "f");
                            const i = this.urlFn(r);
                            this.log_("Connecting via long-poll to " + i),
                                this.scriptTagHolder.addTag(i, () => {});
                        });
                }
                start() {
                    this.scriptTagHolder.startLongPoll(this.id, this.password),
                        this.addDisconnectPingFrame(this.id, this.password);
                }
                static forceAllow() {
                    Ea.forceAllow_ = !0;
                }
                static forceDisallow() {
                    Ea.forceDisallow_ = !0;
                }
                static isAvailable() {
                    return !(
                        (0, C.Yr)() ||
                        (!Ea.forceAllow_ &&
                            (Ea.forceDisallow_ ||
                                !(typeof document < "u") ||
                                null == document.createElement ||
                                ("object" == typeof window &&
                                    window.chrome &&
                                    window.chrome.extension &&
                                    !/^chrome/.test(window.location.href)) ||
                                ("object" == typeof Windows &&
                                    "object" == typeof Windows.UI)))
                    );
                }
                markConnectionHealthy() {}
                shutdown_() {
                    (this.isClosed_ = !0),
                        this.scriptTagHolder &&
                            (this.scriptTagHolder.close(),
                            (this.scriptTagHolder = null)),
                        this.myDisconnFrame &&
                            (document.body.removeChild(this.myDisconnFrame),
                            (this.myDisconnFrame = null)),
                        this.connectTimeoutTimer_ &&
                            (clearTimeout(this.connectTimeoutTimer_),
                            (this.connectTimeoutTimer_ = null));
                }
                onClosed_() {
                    this.isClosed_ ||
                        (this.log_("Longpoll is closing itself"),
                        this.shutdown_(),
                        this.onDisconnect_ &&
                            (this.onDisconnect_(this.everConnected_),
                            (this.onDisconnect_ = null)));
                }
                close() {
                    this.isClosed_ ||
                        (this.log_("Longpoll is being closed."),
                        this.shutdown_());
                }
                send(e) {
                    const t = (0, C.Pz)(e);
                    (this.bytesSent += t.length),
                        this.stats_.incrementCounter("bytes_sent", t.length);
                    const r = (0, C.h$)(t),
                        i = gv(r, 1840);
                    for (let a = 0; a < i.length; a++)
                        this.scriptTagHolder.enqueueSegment(
                            this.curSegmentNum,
                            i.length,
                            i[a]
                        ),
                            this.curSegmentNum++;
                }
                addDisconnectPingFrame(e, t) {
                    if ((0, C.Yr)()) return;
                    this.myDisconnFrame = document.createElement("iframe");
                    const r = { dframe: "t" };
                    (r.id = e),
                        (r.pw = t),
                        (this.myDisconnFrame.src = this.urlFn(r)),
                        (this.myDisconnFrame.style.display = "none"),
                        document.body.appendChild(this.myDisconnFrame);
                }
                incrementIncomingBytes_(e) {
                    const t = (0, C.Pz)(e).length;
                    (this.bytesReceived += t),
                        this.stats_.incrementCounter("bytes_received", t);
                }
            }
            class Lg {
                constructor(e, t, r, i) {
                    if (
                        ((this.onDisconnect = r),
                        (this.urlFn = i),
                        (this.outstandingRequests = new Set()),
                        (this.pendingSegs = []),
                        (this.currentSerial = Math.floor(1e8 * Math.random())),
                        (this.sendNewPolls = !0),
                        (0, C.Yr)())
                    )
                        (this.commandCB = e), (this.onMessageCB = t);
                    else {
                        (this.uniqueCallbackIdentifier = Qc()),
                            (window[
                                "pLPCommand" + this.uniqueCallbackIdentifier
                            ] = e),
                            (window["pRTLPCB" + this.uniqueCallbackIdentifier] =
                                t),
                            (this.myIFrame = Lg.createIFrame_());
                        let a = "";
                        this.myIFrame.src &&
                            "javascript:" === this.myIFrame.src.substr(0, 11) &&
                            (a =
                                '<script>document.domain="' +
                                document.domain +
                                '";</script>');
                        const l = "<html><body>" + a + "</body></html>";
                        try {
                            this.myIFrame.doc.open(),
                                this.myIFrame.doc.write(l),
                                this.myIFrame.doc.close();
                        } catch (h) {
                            nr("frame writing exception"),
                                h.stack && nr(h.stack),
                                nr(h);
                        }
                    }
                }
                static createIFrame_() {
                    const e = document.createElement("iframe");
                    if (((e.style.display = "none"), !document.body))
                        throw "Document body has not initialized. Wait to initialize Firebase until after the document is ready.";
                    document.body.appendChild(e);
                    try {
                        e.contentWindow.document ||
                            nr("No IE domain setting required");
                    } catch {
                        const r = document.domain;
                        e.src =
                            "javascript:void((function(){document.open();document.domain='" +
                            r +
                            "';document.close();})())";
                    }
                    return (
                        e.contentDocument
                            ? (e.doc = e.contentDocument)
                            : e.contentWindow
                            ? (e.doc = e.contentWindow.document)
                            : e.document && (e.doc = e.document),
                        e
                    );
                }
                close() {
                    (this.alive = !1),
                        this.myIFrame &&
                            ((this.myIFrame.doc.body.innerHTML = ""),
                            setTimeout(() => {
                                null !== this.myIFrame &&
                                    (document.body.removeChild(this.myIFrame),
                                    (this.myIFrame = null));
                            }, Math.floor(0)));
                    const e = this.onDisconnect;
                    e && ((this.onDisconnect = null), e());
                }
                startLongPoll(e, t) {
                    for (
                        this.myID = e, this.myPW = t, this.alive = !0;
                        this.newRequest_();

                    );
                }
                newRequest_() {
                    if (
                        this.alive &&
                        this.sendNewPolls &&
                        this.outstandingRequests.size <
                            (this.pendingSegs.length > 0 ? 2 : 1)
                    ) {
                        this.currentSerial++;
                        const e = {};
                        (e.id = this.myID),
                            (e.pw = this.myPW),
                            (e.ser = this.currentSerial);
                        let t = this.urlFn(e),
                            r = "",
                            i = 0;
                        for (
                            ;
                            this.pendingSegs.length > 0 &&
                            this.pendingSegs[0].d.length + 30 + r.length <=
                                1870;

                        ) {
                            const l = this.pendingSegs.shift();
                            (r =
                                r +
                                "&seg" +
                                i +
                                "=" +
                                l.seg +
                                "&ts" +
                                i +
                                "=" +
                                l.ts +
                                "&d" +
                                i +
                                "=" +
                                l.d),
                                i++;
                        }
                        return (
                            (t += r),
                            this.addLongPollTag_(t, this.currentSerial),
                            !0
                        );
                    }
                    return !1;
                }
                enqueueSegment(e, t, r) {
                    this.pendingSegs.push({ seg: e, ts: t, d: r }),
                        this.alive && this.newRequest_();
                }
                addLongPollTag_(e, t) {
                    this.outstandingRequests.add(t);
                    const r = () => {
                            this.outstandingRequests.delete(t),
                                this.newRequest_();
                        },
                        i = setTimeout(r, Math.floor(25e3));
                    this.addTag(e, () => {
                        clearTimeout(i), r();
                    });
                }
                addTag(e, t) {
                    (0, C.Yr)()
                        ? this.doNodeLongPoll(e, t)
                        : setTimeout(() => {
                              try {
                                  if (!this.sendNewPolls) return;
                                  const r =
                                      this.myIFrame.doc.createElement("script");
                                  (r.type = "text/javascript"),
                                      (r.async = !0),
                                      (r.src = e),
                                      (r.onload = r.onreadystatechange =
                                          function () {
                                              const i = r.readyState;
                                              (!i ||
                                                  "loaded" === i ||
                                                  "complete" === i) &&
                                                  ((r.onload =
                                                      r.onreadystatechange =
                                                          null),
                                                  r.parentNode &&
                                                      r.parentNode.removeChild(
                                                          r
                                                      ),
                                                  t());
                                          }),
                                      (r.onerror = () => {
                                          nr(
                                              "Long-poll script failed to load: " +
                                                  e
                                          ),
                                              (this.sendNewPolls = !1),
                                              this.close();
                                      }),
                                      this.myIFrame.doc.body.appendChild(r);
                              } catch {}
                          }, Math.floor(1));
                }
            }
            let tf = null;
            typeof MozWebSocket < "u"
                ? (tf = MozWebSocket)
                : typeof WebSocket < "u" && (tf = WebSocket);
            let nd = (() => {
                    class n {
                        constructor(t, r, i, a, l, h, _) {
                            (this.connId = t),
                                (this.applicationId = i),
                                (this.appCheckToken = a),
                                (this.authToken = l),
                                (this.keepaliveTimer = null),
                                (this.frames = null),
                                (this.totalFrames = 0),
                                (this.bytesSent = 0),
                                (this.bytesReceived = 0),
                                (this.log_ = ou(this.connId)),
                                (this.stats_ = Fg(r)),
                                (this.connURL = n.connectionURL_(
                                    r,
                                    h,
                                    _,
                                    a,
                                    i
                                )),
                                (this.nodeAdmin = r.nodeAdmin);
                        }
                        static connectionURL_(t, r, i, a, l) {
                            const h = { v: "5" };
                            return (
                                !(0, C.Yr)() &&
                                    typeof location < "u" &&
                                    location.hostname &&
                                    Xh.test(location.hostname) &&
                                    (h.r = "f"),
                                r && (h.s = r),
                                i && (h.ls = i),
                                a && (h.ac = a),
                                l && (h.p = l),
                                oI(t, kg, h)
                            );
                        }
                        open(t, r) {
                            (this.onDisconnect = r),
                                (this.onMessage = t),
                                this.log_(
                                    "Websocket connecting to " + this.connURL
                                ),
                                (this.everConnected_ = !1),
                                zi.set("previous_websocket_failure", !0);
                            try {
                                let i;
                                if ((0, C.Yr)()) {
                                    (i = {
                                        headers: {
                                            "User-Agent": `Firebase/5/${it}/${
                                                process.platform
                                            }/${
                                                this.nodeAdmin
                                                    ? "AdminNode"
                                                    : "Node"
                                            }`,
                                            "X-Firebase-GMPID":
                                                this.applicationId || "",
                                        },
                                    }),
                                        this.authToken &&
                                            (i.headers.Authorization = `Bearer ${this.authToken}`),
                                        this.appCheckToken &&
                                            (i.headers["X-Firebase-AppCheck"] =
                                                this.appCheckToken);
                                    const l = process.env,
                                        h =
                                            0 === this.connURL.indexOf("wss://")
                                                ? l.HTTPS_PROXY || l.https_proxy
                                                : l.HTTP_PROXY || l.http_proxy;
                                    h && (i.proxy = { origin: h });
                                }
                                this.mySock = new tf(this.connURL, [], i);
                            } catch (i) {
                                this.log_("Error instantiating WebSocket.");
                                const a = i.message || i.data;
                                return a && this.log_(a), void this.onClosed_();
                            }
                            (this.mySock.onopen = () => {
                                this.log_("Websocket connected."),
                                    (this.everConnected_ = !0);
                            }),
                                (this.mySock.onclose = () => {
                                    this.log_(
                                        "Websocket connection was disconnected."
                                    ),
                                        (this.mySock = null),
                                        this.onClosed_();
                                }),
                                (this.mySock.onmessage = (i) => {
                                    this.handleIncomingFrame(i);
                                }),
                                (this.mySock.onerror = (i) => {
                                    this.log_(
                                        "WebSocket error.  Closing connection."
                                    );
                                    const a = i.message || i.data;
                                    a && this.log_(a), this.onClosed_();
                                });
                        }
                        start() {}
                        static forceDisallow() {
                            n.forceDisallow_ = !0;
                        }
                        static isAvailable() {
                            let t = !1;
                            if (typeof navigator < "u" && navigator.userAgent) {
                                const i = navigator.userAgent.match(
                                    /Android ([0-9]{0,}\.[0-9]{0,})/
                                );
                                i &&
                                    i.length > 1 &&
                                    parseFloat(i[1]) < 4.4 &&
                                    (t = !0);
                            }
                            return !t && null !== tf && !n.forceDisallow_;
                        }
                        static previouslyFailed() {
                            return (
                                zi.isInMemoryStorage ||
                                !0 === zi.get("previous_websocket_failure")
                            );
                        }
                        markConnectionHealthy() {
                            zi.remove("previous_websocket_failure");
                        }
                        appendFrame_(t) {
                            if (
                                (this.frames.push(t),
                                this.frames.length === this.totalFrames)
                            ) {
                                const r = this.frames.join("");
                                this.frames = null;
                                const i = (0, C.cI)(r);
                                this.onMessage(i);
                            }
                        }
                        handleNewFrameCount_(t) {
                            (this.totalFrames = t), (this.frames = []);
                        }
                        extractFrameCount_(t) {
                            if (
                                ((0, C.hu)(
                                    null === this.frames,
                                    "We already have a frame buffer"
                                ),
                                t.length <= 6)
                            ) {
                                const r = Number(t);
                                if (!isNaN(r))
                                    return this.handleNewFrameCount_(r), null;
                            }
                            return this.handleNewFrameCount_(1), t;
                        }
                        handleIncomingFrame(t) {
                            if (null === this.mySock) return;
                            const r = t.data;
                            if (
                                ((this.bytesReceived += r.length),
                                this.stats_.incrementCounter(
                                    "bytes_received",
                                    r.length
                                ),
                                this.resetKeepAlive(),
                                null !== this.frames)
                            )
                                this.appendFrame_(r);
                            else {
                                const i = this.extractFrameCount_(r);
                                null !== i && this.appendFrame_(i);
                            }
                        }
                        send(t) {
                            this.resetKeepAlive();
                            const r = (0, C.Pz)(t);
                            (this.bytesSent += r.length),
                                this.stats_.incrementCounter(
                                    "bytes_sent",
                                    r.length
                                );
                            const i = gv(r, 16384);
                            i.length > 1 && this.sendString_(String(i.length));
                            for (let a = 0; a < i.length; a++)
                                this.sendString_(i[a]);
                        }
                        shutdown_() {
                            (this.isClosed_ = !0),
                                this.keepaliveTimer &&
                                    (clearInterval(this.keepaliveTimer),
                                    (this.keepaliveTimer = null)),
                                this.mySock &&
                                    (this.mySock.close(), (this.mySock = null));
                        }
                        onClosed_() {
                            this.isClosed_ ||
                                (this.log_("WebSocket is closing itself"),
                                this.shutdown_(),
                                this.onDisconnect &&
                                    (this.onDisconnect(this.everConnected_),
                                    (this.onDisconnect = null)));
                        }
                        close() {
                            this.isClosed_ ||
                                (this.log_("WebSocket is being closed"),
                                this.shutdown_());
                        }
                        resetKeepAlive() {
                            clearInterval(this.keepaliveTimer),
                                (this.keepaliveTimer = setInterval(() => {
                                    this.mySock && this.sendString_("0"),
                                        this.resetKeepAlive();
                                }, Math.floor(45e3)));
                        }
                        sendString_(t) {
                            try {
                                this.mySock.send(t);
                            } catch (r) {
                                this.log_(
                                    "Exception thrown from WebSocket.send():",
                                    r.message || r.data,
                                    "Closing connection."
                                ),
                                    setTimeout(this.onClosed_.bind(this), 0);
                            }
                        }
                    }
                    return (
                        (n.responsesRequiredToBeHealthy = 2),
                        (n.healthyTimeout = 3e4),
                        n
                    );
                })(),
                bv = (() => {
                    class n {
                        constructor(t) {
                            this.initTransports_(t);
                        }
                        static get ALL_TRANSPORTS() {
                            return [Ea, nd];
                        }
                        static get IS_TRANSPORT_INITIALIZED() {
                            return this.globalTransportInitialized_;
                        }
                        initTransports_(t) {
                            const r = nd && nd.isAvailable();
                            let i = r && !nd.previouslyFailed();
                            if (
                                (t.webSocketOnly &&
                                    (r ||
                                        $r(
                                            "wss:// URL used, but browser isn't known to support websockets.  Trying anyway."
                                        ),
                                    (i = !0)),
                                i)
                            )
                                this.transports_ = [nd];
                            else {
                                const a = (this.transports_ = []);
                                for (const l of n.ALL_TRANSPORTS)
                                    l && l.isAvailable() && a.push(l);
                                n.globalTransportInitialized_ = !0;
                            }
                        }
                        initialTransport() {
                            if (this.transports_.length > 0)
                                return this.transports_[0];
                            throw new Error("No transports available");
                        }
                        upgradeTransport() {
                            return this.transports_.length > 1
                                ? this.transports_[1]
                                : null;
                        }
                    }
                    return (n.globalTransportInitialized_ = !1), n;
                })();
            class au {
                constructor(e, t, r, i, a, l, h, _, E, D) {
                    (this.id = e),
                        (this.repoInfo_ = t),
                        (this.applicationId_ = r),
                        (this.appCheckToken_ = i),
                        (this.authToken_ = a),
                        (this.onMessage_ = l),
                        (this.onReady_ = h),
                        (this.onDisconnect_ = _),
                        (this.onKill_ = E),
                        (this.lastSessionId = D),
                        (this.connectionCount = 0),
                        (this.pendingDataMessages = []),
                        (this.state_ = 0),
                        (this.log_ = ou("c:" + this.id + ":")),
                        (this.transportManager_ = new bv(t)),
                        this.log_("Connection created"),
                        this.start_();
                }
                start_() {
                    const e = this.transportManager_.initialTransport();
                    (this.conn_ = new e(
                        this.nextTransportId_(),
                        this.repoInfo_,
                        this.applicationId_,
                        this.appCheckToken_,
                        this.authToken_,
                        null,
                        this.lastSessionId
                    )),
                        (this.primaryResponsesRequired_ =
                            e.responsesRequiredToBeHealthy || 0);
                    const t = this.connReceiver_(this.conn_),
                        r = this.disconnReceiver_(this.conn_);
                    (this.tx_ = this.conn_),
                        (this.rx_ = this.conn_),
                        (this.secondaryConn_ = null),
                        (this.isHealthy_ = !1),
                        setTimeout(() => {
                            this.conn_ && this.conn_.open(t, r);
                        }, Math.floor(0));
                    const i = e.healthyTimeout || 0;
                    i > 0 &&
                        (this.healthyTimeout_ = xg(() => {
                            (this.healthyTimeout_ = null),
                                this.isHealthy_ ||
                                    (this.conn_ &&
                                    this.conn_.bytesReceived > 102400
                                        ? (this.log_(
                                              "Connection exceeded healthy timeout but has received " +
                                                  this.conn_.bytesReceived +
                                                  " bytes.  Marking connection healthy."
                                          ),
                                          (this.isHealthy_ = !0),
                                          this.conn_.markConnectionHealthy())
                                        : this.conn_ &&
                                          this.conn_.bytesSent > 10240
                                        ? this.log_(
                                              "Connection exceeded healthy timeout but has sent " +
                                                  this.conn_.bytesSent +
                                                  " bytes.  Leaving connection alive."
                                          )
                                        : (this.log_(
                                              "Closing unhealthy connection after timeout."
                                          ),
                                          this.close()));
                        }, Math.floor(i)));
                }
                nextTransportId_() {
                    return "c:" + this.id + ":" + this.connectionCount++;
                }
                disconnReceiver_(e) {
                    return (t) => {
                        e === this.conn_
                            ? this.onConnectionLost_(t)
                            : e === this.secondaryConn_
                            ? (this.log_("Secondary connection lost."),
                              this.onSecondaryConnectionLost_())
                            : this.log_("closing an old connection");
                    };
                }
                connReceiver_(e) {
                    return (t) => {
                        2 !== this.state_ &&
                            (e === this.rx_
                                ? this.onPrimaryMessageReceived_(t)
                                : e === this.secondaryConn_
                                ? this.onSecondaryMessageReceived_(t)
                                : this.log_("message on old connection"));
                    };
                }
                sendRequest(e) {
                    this.sendData_({ t: "d", d: e });
                }
                tryCleanupConnection() {
                    this.tx_ === this.secondaryConn_ &&
                        this.rx_ === this.secondaryConn_ &&
                        (this.log_(
                            "cleaning up and promoting a connection: " +
                                this.secondaryConn_.connId
                        ),
                        (this.conn_ = this.secondaryConn_),
                        (this.secondaryConn_ = null));
                }
                onSecondaryControl_(e) {
                    if ("t" in e) {
                        const t = e.t;
                        "a" === t
                            ? this.upgradeIfSecondaryHealthy_()
                            : "r" === t
                            ? (this.log_(
                                  "Got a reset on secondary, closing it"
                              ),
                              this.secondaryConn_.close(),
                              (this.tx_ === this.secondaryConn_ ||
                                  this.rx_ === this.secondaryConn_) &&
                                  this.close())
                            : "o" === t &&
                              (this.log_("got pong on secondary."),
                              this.secondaryResponsesRequired_--,
                              this.upgradeIfSecondaryHealthy_());
                    }
                }
                onSecondaryMessageReceived_(e) {
                    const t = Zh("t", e),
                        r = Zh("d", e);
                    if ("c" === t) this.onSecondaryControl_(r);
                    else {
                        if ("d" !== t)
                            throw new Error("Unknown protocol layer: " + t);
                        this.pendingDataMessages.push(r);
                    }
                }
                upgradeIfSecondaryHealthy_() {
                    this.secondaryResponsesRequired_ <= 0
                        ? (this.log_("Secondary connection is healthy."),
                          (this.isHealthy_ = !0),
                          this.secondaryConn_.markConnectionHealthy(),
                          this.proceedWithUpgrade_())
                        : (this.log_("sending ping on secondary."),
                          this.secondaryConn_.send({
                              t: "c",
                              d: { t: "p", d: {} },
                          }));
                }
                proceedWithUpgrade_() {
                    this.secondaryConn_.start(),
                        this.log_("sending client ack on secondary"),
                        this.secondaryConn_.send({
                            t: "c",
                            d: { t: "a", d: {} },
                        }),
                        this.log_("Ending transmission on primary"),
                        this.conn_.send({ t: "c", d: { t: "n", d: {} } }),
                        (this.tx_ = this.secondaryConn_),
                        this.tryCleanupConnection();
                }
                onPrimaryMessageReceived_(e) {
                    const t = Zh("t", e),
                        r = Zh("d", e);
                    "c" === t
                        ? this.onControl_(r)
                        : "d" === t && this.onDataMessage_(r);
                }
                onDataMessage_(e) {
                    this.onPrimaryResponse_(), this.onMessage_(e);
                }
                onPrimaryResponse_() {
                    this.isHealthy_ ||
                        (this.primaryResponsesRequired_--,
                        this.primaryResponsesRequired_ <= 0 &&
                            (this.log_("Primary connection is healthy."),
                            (this.isHealthy_ = !0),
                            this.conn_.markConnectionHealthy()));
                }
                onControl_(e) {
                    const t = Zh("t", e);
                    if ("d" in e) {
                        const r = e.d;
                        if ("h" === t) this.onHandshake_(r);
                        else if ("n" === t) {
                            this.log_("recvd end transmission on primary"),
                                (this.rx_ = this.secondaryConn_);
                            for (
                                let i = 0;
                                i < this.pendingDataMessages.length;
                                ++i
                            )
                                this.onDataMessage_(
                                    this.pendingDataMessages[i]
                                );
                            (this.pendingDataMessages = []),
                                this.tryCleanupConnection();
                        } else
                            "s" === t
                                ? this.onConnectionShutdown_(r)
                                : "r" === t
                                ? this.onReset_(r)
                                : "e" === t
                                ? Xc("Server Error: " + r)
                                : "o" === t
                                ? (this.log_("got pong on primary."),
                                  this.onPrimaryResponse_(),
                                  this.sendPingOnPrimaryIfNecessary_())
                                : Xc("Unknown control packet command: " + t);
                    }
                }
                onHandshake_(e) {
                    const t = e.ts,
                        r = e.v,
                        i = e.h;
                    (this.sessionId = e.s),
                        (this.repoInfo_.host = i),
                        0 === this.state_ &&
                            (this.conn_.start(),
                            this.onConnectionEstablished_(this.conn_, t),
                            "5" !== r &&
                                $r("Protocol version mismatch detected"),
                            this.tryStartUpgrade_());
                }
                tryStartUpgrade_() {
                    const e = this.transportManager_.upgradeTransport();
                    e && this.startUpgrade_(e);
                }
                startUpgrade_(e) {
                    (this.secondaryConn_ = new e(
                        this.nextTransportId_(),
                        this.repoInfo_,
                        this.applicationId_,
                        this.appCheckToken_,
                        this.authToken_,
                        this.sessionId
                    )),
                        (this.secondaryResponsesRequired_ =
                            e.responsesRequiredToBeHealthy || 0);
                    const t = this.connReceiver_(this.secondaryConn_),
                        r = this.disconnReceiver_(this.secondaryConn_);
                    this.secondaryConn_.open(t, r),
                        xg(() => {
                            this.secondaryConn_ &&
                                (this.log_("Timed out trying to upgrade."),
                                this.secondaryConn_.close());
                        }, Math.floor(6e4));
                }
                onReset_(e) {
                    this.log_("Reset packet received.  New host: " + e),
                        (this.repoInfo_.host = e),
                        1 === this.state_
                            ? this.close()
                            : (this.closeConnections_(), this.start_());
                }
                onConnectionEstablished_(e, t) {
                    this.log_("Realtime connection established."),
                        (this.conn_ = e),
                        (this.state_ = 1),
                        this.onReady_ &&
                            (this.onReady_(t, this.sessionId),
                            (this.onReady_ = null)),
                        0 === this.primaryResponsesRequired_
                            ? (this.log_("Primary connection is healthy."),
                              (this.isHealthy_ = !0))
                            : xg(() => {
                                  this.sendPingOnPrimaryIfNecessary_();
                              }, Math.floor(5e3));
                }
                sendPingOnPrimaryIfNecessary_() {
                    !this.isHealthy_ &&
                        1 === this.state_ &&
                        (this.log_("sending ping on primary."),
                        this.sendData_({ t: "c", d: { t: "p", d: {} } }));
                }
                onSecondaryConnectionLost_() {
                    const e = this.secondaryConn_;
                    (this.secondaryConn_ = null),
                        (this.tx_ === e || this.rx_ === e) && this.close();
                }
                onConnectionLost_(e) {
                    (this.conn_ = null),
                        e || 0 !== this.state_
                            ? 1 === this.state_ &&
                              this.log_("Realtime connection lost.")
                            : (this.log_("Realtime connection failed."),
                              this.repoInfo_.isCacheableHost() &&
                                  (zi.remove("host:" + this.repoInfo_.host),
                                  (this.repoInfo_.internalHost =
                                      this.repoInfo_.host))),
                        this.close();
                }
                onConnectionShutdown_(e) {
                    this.log_(
                        "Connection shutdown command received. Shutting down..."
                    ),
                        this.onKill_ &&
                            (this.onKill_(e), (this.onKill_ = null)),
                        (this.onDisconnect_ = null),
                        this.close();
                }
                sendData_(e) {
                    if (1 !== this.state_) throw "Connection is not connected";
                    this.tx_.send(e);
                }
                close() {
                    2 !== this.state_ &&
                        (this.log_("Closing realtime connection."),
                        (this.state_ = 2),
                        this.closeConnections_(),
                        this.onDisconnect_ &&
                            (this.onDisconnect_(),
                            (this.onDisconnect_ = null)));
                }
                closeConnections_() {
                    this.log_("Shutting down all connections"),
                        this.conn_ && (this.conn_.close(), (this.conn_ = null)),
                        this.secondaryConn_ &&
                            (this.secondaryConn_.close(),
                            (this.secondaryConn_ = null)),
                        this.healthyTimeout_ &&
                            (clearTimeout(this.healthyTimeout_),
                            (this.healthyTimeout_ = null));
                }
            }
            class vI {
                put(e, t, r, i) {}
                merge(e, t, r, i) {}
                refreshAuthToken(e) {}
                refreshAppCheckToken(e) {}
                onDisconnectPut(e, t, r) {}
                onDisconnectMerge(e, t, r) {}
                onDisconnectCancel(e, t) {}
                reportStats(e) {}
            }
            class Bg {
                constructor(e) {
                    (this.allowedEvents_ = e),
                        (this.listeners_ = {}),
                        (0, C.hu)(
                            Array.isArray(e) && e.length > 0,
                            "Requires a non-empty array"
                        );
                }
                trigger(e, ...t) {
                    if (Array.isArray(this.listeners_[e])) {
                        const r = [...this.listeners_[e]];
                        for (let i = 0; i < r.length; i++)
                            r[i].callback.apply(r[i].context, t);
                    }
                }
                on(e, t, r) {
                    this.validateEventType_(e),
                        (this.listeners_[e] = this.listeners_[e] || []),
                        this.listeners_[e].push({ callback: t, context: r });
                    const i = this.getInitialEvent(e);
                    i && t.apply(r, i);
                }
                off(e, t, r) {
                    this.validateEventType_(e);
                    const i = this.listeners_[e] || [];
                    for (let a = 0; a < i.length; a++)
                        if (i[a].callback === t && (!r || r === i[a].context))
                            return void i.splice(a, 1);
                }
                validateEventType_(e) {
                    (0, C.hu)(
                        this.allowedEvents_.find((t) => t === e),
                        "Unknown event: " + e
                    );
                }
            }
            class nf extends Bg {
                constructor() {
                    super(["online"]),
                        (this.online_ = !0),
                        typeof window < "u" &&
                            typeof window.addEventListener < "u" &&
                            !(0, C.uI)() &&
                            (window.addEventListener(
                                "online",
                                () => {
                                    this.online_ ||
                                        ((this.online_ = !0),
                                        this.trigger("online", !0));
                                },
                                !1
                            ),
                            window.addEventListener(
                                "offline",
                                () => {
                                    this.online_ &&
                                        ((this.online_ = !1),
                                        this.trigger("online", !1));
                                },
                                !1
                            ));
                }
                static getInstance() {
                    return new nf();
                }
                getInitialEvent(e) {
                    return (
                        (0, C.hu)("online" === e, "Unknown event type: " + e),
                        [this.online_]
                    );
                }
                currentlyOnline() {
                    return this.online_;
                }
            }
            class xn {
                constructor(e, t) {
                    if (void 0 === t) {
                        this.pieces_ = e.split("/");
                        let r = 0;
                        for (let i = 0; i < this.pieces_.length; i++)
                            this.pieces_[i].length > 0 &&
                                ((this.pieces_[r] = this.pieces_[i]), r++);
                        (this.pieces_.length = r), (this.pieceNum_ = 0);
                    } else (this.pieces_ = e), (this.pieceNum_ = t);
                }
                toString() {
                    let e = "";
                    for (let t = this.pieceNum_; t < this.pieces_.length; t++)
                        "" !== this.pieces_[t] && (e += "/" + this.pieces_[t]);
                    return e || "/";
                }
            }
            function fn() {
                return new xn("");
            }
            function Kt(n) {
                return n.pieceNum_ >= n.pieces_.length
                    ? null
                    : n.pieces_[n.pieceNum_];
            }
            function as(n) {
                return n.pieces_.length - n.pieceNum_;
            }
            function kn(n) {
                let e = n.pieceNum_;
                return e < n.pieces_.length && e++, new xn(n.pieces_, e);
            }
            function sf(n) {
                return n.pieceNum_ < n.pieces_.length
                    ? n.pieces_[n.pieces_.length - 1]
                    : null;
            }
            function af(n, e = 0) {
                return n.pieces_.slice(n.pieceNum_ + e);
            }
            function xv(n) {
                if (n.pieceNum_ >= n.pieces_.length) return null;
                const e = [];
                for (let t = n.pieceNum_; t < n.pieces_.length - 1; t++)
                    e.push(n.pieces_[t]);
                return new xn(e, 0);
            }
            function Mn(n, e) {
                const t = [];
                for (let r = n.pieceNum_; r < n.pieces_.length; r++)
                    t.push(n.pieces_[r]);
                if (e instanceof xn)
                    for (let r = e.pieceNum_; r < e.pieces_.length; r++)
                        t.push(e.pieces_[r]);
                else {
                    const r = e.split("/");
                    for (let i = 0; i < r.length; i++)
                        r[i].length > 0 && t.push(r[i]);
                }
                return new xn(t, 0);
            }
            function en(n) {
                return n.pieceNum_ >= n.pieces_.length;
            }
            function Mi(n, e) {
                const t = Kt(n),
                    r = Kt(e);
                if (null === t) return e;
                if (t === r) return Mi(kn(n), kn(e));
                throw new Error(
                    "INTERNAL ERROR: innerPath (" +
                        e +
                        ") is not within outerPath (" +
                        n +
                        ")"
                );
            }
            function oS(n, e) {
                const t = af(n, 0),
                    r = af(e, 0);
                for (let i = 0; i < t.length && i < r.length; i++) {
                    const a = Il(t[i], r[i]);
                    if (0 !== a) return a;
                }
                return t.length === r.length ? 0 : t.length < r.length ? -1 : 1;
            }
            function Rv(n, e) {
                if (as(n) !== as(e)) return !1;
                for (
                    let t = n.pieceNum_, r = e.pieceNum_;
                    t <= n.pieces_.length;
                    t++, r++
                )
                    if (n.pieces_[t] !== e.pieces_[r]) return !1;
                return !0;
            }
            function qi(n, e) {
                let t = n.pieceNum_,
                    r = e.pieceNum_;
                if (as(n) > as(e)) return !1;
                for (; t < n.pieces_.length; ) {
                    if (n.pieces_[t] !== e.pieces_[r]) return !1;
                    ++t, ++r;
                }
                return !0;
            }
            class wI {
                constructor(e, t) {
                    (this.errorPrefix_ = t),
                        (this.parts_ = af(e, 0)),
                        (this.byteLength_ = Math.max(1, this.parts_.length));
                    for (let r = 0; r < this.parts_.length; r++)
                        this.byteLength_ += (0, C.ug)(this.parts_[r]);
                    II(this);
                }
            }
            function II(n) {
                if (n.byteLength_ > 768)
                    throw new Error(
                        n.errorPrefix_ +
                            "has a key path longer than 768 bytes (" +
                            n.byteLength_ +
                            ")."
                    );
                if (n.parts_.length > 32)
                    throw new Error(
                        n.errorPrefix_ +
                            "path specified exceeds the maximum depth that can be written (32) or object contains a cycle " +
                            Ia(n)
                    );
            }
            function Ia(n) {
                return 0 === n.parts_.length
                    ? ""
                    : "in property '" + n.parts_.join(".") + "'";
            }
            class uf extends Bg {
                constructor() {
                    let e, t;
                    super(["visible"]),
                        typeof document < "u" &&
                            typeof document.addEventListener < "u" &&
                            (typeof document.hidden < "u"
                                ? ((t = "visibilitychange"), (e = "hidden"))
                                : typeof document.mozHidden < "u"
                                ? ((t = "mozvisibilitychange"),
                                  (e = "mozHidden"))
                                : typeof document.msHidden < "u"
                                ? ((t = "msvisibilitychange"), (e = "msHidden"))
                                : typeof document.webkitHidden < "u" &&
                                  ((t = "webkitvisibilitychange"),
                                  (e = "webkitHidden"))),
                        (this.visible_ = !0),
                        t &&
                            document.addEventListener(
                                t,
                                () => {
                                    const r = !document[e];
                                    r !== this.visible_ &&
                                        ((this.visible_ = r),
                                        this.trigger("visible", r));
                                },
                                !1
                            );
                }
                static getInstance() {
                    return new uf();
                }
                getInitialEvent(e) {
                    return (
                        (0, C.hu)("visible" === e, "Unknown event type: " + e),
                        [this.visible_]
                    );
                }
            }
            const lf = 1e3;
            let cf,
                bl = (() => {
                    class n extends vI {
                        constructor(t, r, i, a, l, h, _, E) {
                            if (
                                (super(),
                                (this.repoInfo_ = t),
                                (this.applicationId_ = r),
                                (this.onDataUpdate_ = i),
                                (this.onConnectStatus_ = a),
                                (this.onServerInfoUpdate_ = l),
                                (this.authTokenProvider_ = h),
                                (this.appCheckTokenProvider_ = _),
                                (this.authOverride_ = E),
                                (this.id = n.nextPersistentConnectionId_++),
                                (this.log_ = ou("p:" + this.id + ":")),
                                (this.interruptReasons_ = {}),
                                (this.listens = new Map()),
                                (this.outstandingPuts_ = []),
                                (this.outstandingGets_ = []),
                                (this.outstandingPutCount_ = 0),
                                (this.outstandingGetCount_ = 0),
                                (this.onDisconnectRequestQueue_ = []),
                                (this.connected_ = !1),
                                (this.reconnectDelay_ = lf),
                                (this.maxReconnectDelay_ = 3e5),
                                (this.securityDebugCallback_ = null),
                                (this.lastSessionId = null),
                                (this.establishConnectionTimer_ = null),
                                (this.visible_ = !1),
                                (this.requestCBHash_ = {}),
                                (this.requestNumber_ = 0),
                                (this.realtime_ = null),
                                (this.authToken_ = null),
                                (this.appCheckToken_ = null),
                                (this.forceTokenRefresh_ = !1),
                                (this.invalidAuthTokenCount_ = 0),
                                (this.invalidAppCheckTokenCount_ = 0),
                                (this.firstConnection_ = !0),
                                (this.lastConnectionAttemptTime_ = null),
                                (this.lastConnectionEstablishedTime_ = null),
                                E && !(0, C.Yr)())
                            )
                                throw new Error(
                                    "Auth override specified in options, but not supported on non Node.js platforms"
                                );
                            uf
                                .getInstance()
                                .on("visible", this.onVisible_, this),
                                -1 === t.host.indexOf("fblocal") &&
                                    nf
                                        .getInstance()
                                        .on("online", this.onOnline_, this);
                        }
                        sendRequest(t, r, i) {
                            const a = ++this.requestNumber_,
                                l = { r: a, a: t, b: r };
                            this.log_((0, C.Pz)(l)),
                                (0, C.hu)(
                                    this.connected_,
                                    "sendRequest call when we're not connected not allowed."
                                ),
                                this.realtime_.sendRequest(l),
                                i && (this.requestCBHash_[a] = i);
                        }
                        get(t) {
                            this.initConnection_();
                            const r = new C.BH(),
                                i = {
                                    p: t._path.toString(),
                                    q: t._queryObject,
                                };
                            return (
                                this.outstandingGets_.push({
                                    action: "g",
                                    request: i,
                                    onComplete: (h) => {
                                        const _ = h.d;
                                        "ok" === h.s
                                            ? r.resolve(_)
                                            : r.reject(_);
                                    },
                                }),
                                this.outstandingGetCount_++,
                                this.connected_ &&
                                    this.sendGet_(
                                        this.outstandingGets_.length - 1
                                    ),
                                r.promise
                            );
                        }
                        listen(t, r, i, a) {
                            this.initConnection_();
                            const l = t._queryIdentifier,
                                h = t._path.toString();
                            this.log_("Listen called for " + h + " " + l),
                                this.listens.has(h) ||
                                    this.listens.set(h, new Map()),
                                (0, C.hu)(
                                    t._queryParams.isDefault() ||
                                        !t._queryParams.loadsAllData(),
                                    "listen() called for non-default but complete query"
                                ),
                                (0, C.hu)(
                                    !this.listens.get(h).has(l),
                                    "listen() called twice for same path/queryId."
                                );
                            const _ = {
                                onComplete: a,
                                hashFn: r,
                                query: t,
                                tag: i,
                            };
                            this.listens.get(h).set(l, _),
                                this.connected_ && this.sendListen_(_);
                        }
                        sendGet_(t) {
                            const r = this.outstandingGets_[t];
                            this.sendRequest("g", r.request, (i) => {
                                delete this.outstandingGets_[t],
                                    this.outstandingGetCount_--,
                                    0 === this.outstandingGetCount_ &&
                                        (this.outstandingGets_ = []),
                                    r.onComplete && r.onComplete(i);
                            });
                        }
                        sendListen_(t) {
                            const r = t.query,
                                i = r._path.toString(),
                                a = r._queryIdentifier;
                            this.log_("Listen on " + i + " for " + a);
                            const l = { p: i };
                            t.tag && ((l.q = r._queryObject), (l.t = t.tag)),
                                (l.h = t.hashFn()),
                                this.sendRequest("q", l, (_) => {
                                    const E = _.d,
                                        D = _.s;
                                    n.warnOnListenWarnings_(E, r),
                                        (this.listens.get(i) &&
                                            this.listens.get(i).get(a)) === t &&
                                            (this.log_("listen response", _),
                                            "ok" !== D &&
                                                this.removeListen_(i, a),
                                            t.onComplete && t.onComplete(D, E));
                                });
                        }
                        static warnOnListenWarnings_(t, r) {
                            if (
                                t &&
                                "object" == typeof t &&
                                (0, C.r3)(t, "w")
                            ) {
                                const i = (0, C.DV)(t, "w");
                                if (
                                    Array.isArray(i) &&
                                    ~i.indexOf("no_index")
                                ) {
                                    const a =
                                            '".indexOn": "' +
                                            r._queryParams
                                                .getIndex()
                                                .toString() +
                                            '"',
                                        l = r._path.toString();
                                    $r(
                                        `Using an unspecified index. Your data will be downloaded and filtered on the client. Consider adding ${a} at ${l} to your security rules for better performance.`
                                    );
                                }
                            }
                        }
                        refreshAuthToken(t) {
                            (this.authToken_ = t),
                                this.log_("Auth token refreshed"),
                                this.authToken_
                                    ? this.tryAuth()
                                    : this.connected_ &&
                                      this.sendRequest("unauth", {}, () => {}),
                                this.reduceReconnectDelayIfAdminCredential_(t);
                        }
                        reduceReconnectDelayIfAdminCredential_(t) {
                            ((t && 40 === t.length) || (0, C.GJ)(t)) &&
                                (this.log_(
                                    "Admin auth credential detected.  Reducing max reconnect time."
                                ),
                                (this.maxReconnectDelay_ = 3e4));
                        }
                        refreshAppCheckToken(t) {
                            (this.appCheckToken_ = t),
                                this.log_("App check token refreshed"),
                                this.appCheckToken_
                                    ? this.tryAppCheck()
                                    : this.connected_ &&
                                      this.sendRequest(
                                          "unappeck",
                                          {},
                                          () => {}
                                      );
                        }
                        tryAuth() {
                            if (this.connected_ && this.authToken_) {
                                const t = this.authToken_,
                                    r = (0, C.w9)(t) ? "auth" : "gauth",
                                    i = { cred: t };
                                null === this.authOverride_
                                    ? (i.noauth = !0)
                                    : "object" == typeof this.authOverride_ &&
                                      (i.authvar = this.authOverride_),
                                    this.sendRequest(r, i, (a) => {
                                        const l = a.s,
                                            h = a.d || "error";
                                        this.authToken_ === t &&
                                            ("ok" === l
                                                ? (this.invalidAuthTokenCount_ = 0)
                                                : this.onAuthRevoked_(l, h));
                                    });
                            }
                        }
                        tryAppCheck() {
                            this.connected_ &&
                                this.appCheckToken_ &&
                                this.sendRequest(
                                    "appcheck",
                                    { token: this.appCheckToken_ },
                                    (t) => {
                                        const r = t.s,
                                            i = t.d || "error";
                                        "ok" === r
                                            ? (this.invalidAppCheckTokenCount_ = 0)
                                            : this.onAppCheckRevoked_(r, i);
                                    }
                                );
                        }
                        unlisten(t, r) {
                            const i = t._path.toString(),
                                a = t._queryIdentifier;
                            this.log_("Unlisten called for " + i + " " + a),
                                (0, C.hu)(
                                    t._queryParams.isDefault() ||
                                        !t._queryParams.loadsAllData(),
                                    "unlisten() called for non-default but complete query"
                                ),
                                this.removeListen_(i, a) &&
                                    this.connected_ &&
                                    this.sendUnlisten_(i, a, t._queryObject, r);
                        }
                        sendUnlisten_(t, r, i, a) {
                            this.log_("Unlisten on " + t + " for " + r);
                            const l = { p: t };
                            a && ((l.q = i), (l.t = a)),
                                this.sendRequest("n", l);
                        }
                        onDisconnectPut(t, r, i) {
                            this.initConnection_(),
                                this.connected_
                                    ? this.sendOnDisconnect_("o", t, r, i)
                                    : this.onDisconnectRequestQueue_.push({
                                          pathString: t,
                                          action: "o",
                                          data: r,
                                          onComplete: i,
                                      });
                        }
                        onDisconnectMerge(t, r, i) {
                            this.initConnection_(),
                                this.connected_
                                    ? this.sendOnDisconnect_("om", t, r, i)
                                    : this.onDisconnectRequestQueue_.push({
                                          pathString: t,
                                          action: "om",
                                          data: r,
                                          onComplete: i,
                                      });
                        }
                        onDisconnectCancel(t, r) {
                            this.initConnection_(),
                                this.connected_
                                    ? this.sendOnDisconnect_("oc", t, null, r)
                                    : this.onDisconnectRequestQueue_.push({
                                          pathString: t,
                                          action: "oc",
                                          data: null,
                                          onComplete: r,
                                      });
                        }
                        sendOnDisconnect_(t, r, i, a) {
                            const l = { p: r, d: i };
                            this.log_("onDisconnect " + t, l),
                                this.sendRequest(t, l, (h) => {
                                    a &&
                                        setTimeout(() => {
                                            a(h.s, h.d);
                                        }, Math.floor(0));
                                });
                        }
                        put(t, r, i, a) {
                            this.putInternal("p", t, r, i, a);
                        }
                        merge(t, r, i, a) {
                            this.putInternal("m", t, r, i, a);
                        }
                        putInternal(t, r, i, a, l) {
                            this.initConnection_();
                            const h = { p: r, d: i };
                            void 0 !== l && (h.h = l),
                                this.outstandingPuts_.push({
                                    action: t,
                                    request: h,
                                    onComplete: a,
                                }),
                                this.outstandingPutCount_++,
                                this.connected_
                                    ? this.sendPut_(
                                          this.outstandingPuts_.length - 1
                                      )
                                    : this.log_("Buffering put: " + r);
                        }
                        sendPut_(t) {
                            const r = this.outstandingPuts_[t].action,
                                i = this.outstandingPuts_[t].request,
                                a = this.outstandingPuts_[t].onComplete;
                            (this.outstandingPuts_[t].queued = this.connected_),
                                this.sendRequest(r, i, (l) => {
                                    this.log_(r + " response", l),
                                        delete this.outstandingPuts_[t],
                                        this.outstandingPutCount_--,
                                        0 === this.outstandingPutCount_ &&
                                            (this.outstandingPuts_ = []),
                                        a && a(l.s, l.d);
                                });
                        }
                        reportStats(t) {
                            if (this.connected_) {
                                const r = { c: t };
                                this.log_("reportStats", r),
                                    this.sendRequest("s", r, (i) => {
                                        "ok" !== i.s &&
                                            this.log_(
                                                "reportStats",
                                                "Error sending stats: " + i.d
                                            );
                                    });
                            }
                        }
                        onDataMessage_(t) {
                            if ("r" in t) {
                                this.log_("from server: " + (0, C.Pz)(t));
                                const r = t.r,
                                    i = this.requestCBHash_[r];
                                i && (delete this.requestCBHash_[r], i(t.b));
                            } else {
                                if ("error" in t)
                                    throw (
                                        "A server-side error has occurred: " +
                                        t.error
                                    );
                                "a" in t && this.onDataPush_(t.a, t.b);
                            }
                        }
                        onDataPush_(t, r) {
                            this.log_("handleServerMessage", t, r),
                                "d" === t
                                    ? this.onDataUpdate_(r.p, r.d, !1, r.t)
                                    : "m" === t
                                    ? this.onDataUpdate_(r.p, r.d, !0, r.t)
                                    : "c" === t
                                    ? this.onListenRevoked_(r.p, r.q)
                                    : "ac" === t
                                    ? this.onAuthRevoked_(r.s, r.d)
                                    : "apc" === t
                                    ? this.onAppCheckRevoked_(r.s, r.d)
                                    : "sd" === t
                                    ? this.onSecurityDebugPacket_(r)
                                    : Xc(
                                          "Unrecognized action received from server: " +
                                              (0, C.Pz)(t) +
                                              "\nAre you using the latest client?"
                                      );
                        }
                        onReady_(t, r) {
                            this.log_("connection ready"),
                                (this.connected_ = !0),
                                (this.lastConnectionEstablishedTime_ =
                                    new Date().getTime()),
                                this.handleTimestamp_(t),
                                (this.lastSessionId = r),
                                this.firstConnection_ &&
                                    this.sendConnectStats_(),
                                this.restoreState_(),
                                (this.firstConnection_ = !1),
                                this.onConnectStatus_(!0);
                        }
                        scheduleConnect_(t) {
                            (0, C.hu)(
                                !this.realtime_,
                                "Scheduling a connect when we're already connected/ing?"
                            ),
                                this.establishConnectionTimer_ &&
                                    clearTimeout(
                                        this.establishConnectionTimer_
                                    ),
                                (this.establishConnectionTimer_ = setTimeout(
                                    () => {
                                        (this.establishConnectionTimer_ = null),
                                            this.establishConnection_();
                                    },
                                    Math.floor(t)
                                ));
                        }
                        initConnection_() {
                            !this.realtime_ &&
                                this.firstConnection_ &&
                                this.scheduleConnect_(0);
                        }
                        onVisible_(t) {
                            t &&
                                !this.visible_ &&
                                this.reconnectDelay_ ===
                                    this.maxReconnectDelay_ &&
                                (this.log_(
                                    "Window became visible.  Reducing delay."
                                ),
                                (this.reconnectDelay_ = lf),
                                this.realtime_ || this.scheduleConnect_(0)),
                                (this.visible_ = t);
                        }
                        onOnline_(t) {
                            t
                                ? (this.log_("Browser went online."),
                                  (this.reconnectDelay_ = lf),
                                  this.realtime_ || this.scheduleConnect_(0))
                                : (this.log_(
                                      "Browser went offline.  Killing connection."
                                  ),
                                  this.realtime_ && this.realtime_.close());
                        }
                        onRealtimeDisconnect_() {
                            if (
                                (this.log_("data client disconnected"),
                                (this.connected_ = !1),
                                (this.realtime_ = null),
                                this.cancelSentTransactions_(),
                                (this.requestCBHash_ = {}),
                                this.shouldReconnect_())
                            ) {
                                this.visible_
                                    ? this.lastConnectionEstablishedTime_ &&
                                      (new Date().getTime() -
                                          this.lastConnectionEstablishedTime_ >
                                          3e4 && (this.reconnectDelay_ = lf),
                                      (this.lastConnectionEstablishedTime_ =
                                          null))
                                    : (this.log_(
                                          "Window isn't visible.  Delaying reconnect."
                                      ),
                                      (this.reconnectDelay_ =
                                          this.maxReconnectDelay_),
                                      (this.lastConnectionAttemptTime_ =
                                          new Date().getTime()));
                                const t =
                                    new Date().getTime() -
                                    this.lastConnectionAttemptTime_;
                                let r = Math.max(0, this.reconnectDelay_ - t);
                                (r = Math.random() * r),
                                    this.log_(
                                        "Trying to reconnect in " + r + "ms"
                                    ),
                                    this.scheduleConnect_(r),
                                    (this.reconnectDelay_ = Math.min(
                                        this.maxReconnectDelay_,
                                        1.3 * this.reconnectDelay_
                                    ));
                            }
                            this.onConnectStatus_(!1);
                        }
                        establishConnection_() {
                            var t = this;
                            return (0, y.Z)(function* () {
                                if (t.shouldReconnect_()) {
                                    t.log_("Making a connection attempt"),
                                        (t.lastConnectionAttemptTime_ =
                                            new Date().getTime()),
                                        (t.lastConnectionEstablishedTime_ =
                                            null);
                                    const r = t.onDataMessage_.bind(t),
                                        i = t.onReady_.bind(t),
                                        a = t.onRealtimeDisconnect_.bind(t),
                                        l = t.id + ":" + n.nextConnectionId_++,
                                        h = t.lastSessionId;
                                    let _ = !1,
                                        E = null;
                                    const D = function () {
                                        E ? E.close() : ((_ = !0), a());
                                    };
                                    t.realtime_ = {
                                        close: D,
                                        sendRequest: function (F) {
                                            (0, C.hu)(
                                                E,
                                                "sendRequest call when we're not connected not allowed."
                                            ),
                                                E.sendRequest(F);
                                        },
                                    };
                                    const R = t.forceTokenRefresh_;
                                    t.forceTokenRefresh_ = !1;
                                    try {
                                        const [F, K] = yield Promise.all([
                                            t.authTokenProvider_.getToken(R),
                                            t.appCheckTokenProvider_.getToken(
                                                R
                                            ),
                                        ]);
                                        _
                                            ? nr(
                                                  "getToken() completed but was canceled"
                                              )
                                            : (nr(
                                                  "getToken() completed. Creating connection."
                                              ),
                                              (t.authToken_ =
                                                  F && F.accessToken),
                                              (t.appCheckToken_ = K && K.token),
                                              (E = new au(
                                                  l,
                                                  t.repoInfo_,
                                                  t.applicationId_,
                                                  t.appCheckToken_,
                                                  t.authToken_,
                                                  r,
                                                  i,
                                                  a,
                                                  (Ie) => {
                                                      $r(
                                                          Ie +
                                                              " (" +
                                                              t.repoInfo_.toString() +
                                                              ")"
                                                      ),
                                                          t.interrupt(
                                                              "server_kill"
                                                          );
                                                  },
                                                  h
                                              )));
                                    } catch (F) {
                                        t.log_("Failed to get token: " + F),
                                            _ ||
                                                (t.repoInfo_.nodeAdmin && $r(F),
                                                D());
                                    }
                                }
                            })();
                        }
                        interrupt(t) {
                            nr("Interrupting connection for reason: " + t),
                                (this.interruptReasons_[t] = !0),
                                this.realtime_
                                    ? this.realtime_.close()
                                    : (this.establishConnectionTimer_ &&
                                          (clearTimeout(
                                              this.establishConnectionTimer_
                                          ),
                                          (this.establishConnectionTimer_ =
                                              null)),
                                      this.connected_ &&
                                          this.onRealtimeDisconnect_());
                        }
                        resume(t) {
                            nr("Resuming connection for reason: " + t),
                                delete this.interruptReasons_[t],
                                (0, C.xb)(this.interruptReasons_) &&
                                    ((this.reconnectDelay_ = lf),
                                    this.realtime_ || this.scheduleConnect_(0));
                        }
                        handleTimestamp_(t) {
                            const r = t - new Date().getTime();
                            this.onServerInfoUpdate_({ serverTimeOffset: r });
                        }
                        cancelSentTransactions_() {
                            for (
                                let t = 0;
                                t < this.outstandingPuts_.length;
                                t++
                            ) {
                                const r = this.outstandingPuts_[t];
                                r &&
                                    "h" in r.request &&
                                    r.queued &&
                                    (r.onComplete && r.onComplete("disconnect"),
                                    delete this.outstandingPuts_[t],
                                    this.outstandingPutCount_--);
                            }
                            0 === this.outstandingPutCount_ &&
                                (this.outstandingPuts_ = []);
                        }
                        onListenRevoked_(t, r) {
                            let i;
                            i = r ? r.map((l) => pv(l)).join("$") : "default";
                            const a = this.removeListen_(t, i);
                            a &&
                                a.onComplete &&
                                a.onComplete("permission_denied");
                        }
                        removeListen_(t, r) {
                            const i = new xn(t).toString();
                            let a;
                            if (this.listens.has(i)) {
                                const l = this.listens.get(i);
                                (a = l.get(r)),
                                    l.delete(r),
                                    0 === l.size && this.listens.delete(i);
                            } else a = void 0;
                            return a;
                        }
                        onAuthRevoked_(t, r) {
                            nr("Auth token revoked: " + t + "/" + r),
                                (this.authToken_ = null),
                                (this.forceTokenRefresh_ = !0),
                                this.realtime_.close(),
                                ("invalid_token" === t ||
                                    "permission_denied" === t) &&
                                    (this.invalidAuthTokenCount_++,
                                    this.invalidAuthTokenCount_ >= 3 &&
                                        ((this.reconnectDelay_ = 3e4),
                                        this.authTokenProvider_.notifyForInvalidToken()));
                        }
                        onAppCheckRevoked_(t, r) {
                            nr("App check token revoked: " + t + "/" + r),
                                (this.appCheckToken_ = null),
                                (this.forceTokenRefresh_ = !0),
                                ("invalid_token" === t ||
                                    "permission_denied" === t) &&
                                    (this.invalidAppCheckTokenCount_++,
                                    this.invalidAppCheckTokenCount_ >= 3 &&
                                        this.appCheckTokenProvider_.notifyForInvalidToken());
                        }
                        onSecurityDebugPacket_(t) {
                            this.securityDebugCallback_
                                ? this.securityDebugCallback_(t)
                                : "msg" in t &&
                                  console.log(
                                      "FIREBASE: " +
                                          t.msg.replace("\n", "\nFIREBASE: ")
                                  );
                        }
                        restoreState_() {
                            this.tryAuth(), this.tryAppCheck();
                            for (const t of this.listens.values())
                                for (const r of t.values()) this.sendListen_(r);
                            for (
                                let t = 0;
                                t < this.outstandingPuts_.length;
                                t++
                            )
                                this.outstandingPuts_[t] && this.sendPut_(t);
                            for (; this.onDisconnectRequestQueue_.length; ) {
                                const t =
                                    this.onDisconnectRequestQueue_.shift();
                                this.sendOnDisconnect_(
                                    t.action,
                                    t.pathString,
                                    t.data,
                                    t.onComplete
                                );
                            }
                            for (
                                let t = 0;
                                t < this.outstandingGets_.length;
                                t++
                            )
                                this.outstandingGets_[t] && this.sendGet_(t);
                        }
                        sendConnectStats_() {
                            const t = {};
                            let r = "js";
                            (0, C.Yr)() &&
                                (r = this.repoInfo_.nodeAdmin
                                    ? "admin_node"
                                    : "node"),
                                (t[
                                    "sdk." + r + "." + it.replace(/\./g, "-")
                                ] = 1),
                                (0, C.uI)()
                                    ? (t["framework.cordova"] = 1)
                                    : (0, C.b$)() &&
                                      (t["framework.reactnative"] = 1),
                                this.reportStats(t);
                        }
                        shouldReconnect_() {
                            const t = nf.getInstance().currentlyOnline();
                            return (0, C.xb)(this.interruptReasons_) && t;
                        }
                    }
                    return (
                        (n.nextPersistentConnectionId_ = 0),
                        (n.nextConnectionId_ = 0),
                        n
                    );
                })();
            class Ht {
                constructor(e, t) {
                    (this.name = e), (this.node = t);
                }
                static Wrap(e, t) {
                    return new Ht(e, t);
                }
            }
            class Hg {
                getCompare() {
                    return this.compare.bind(this);
                }
                indexedValueChanged(e, t) {
                    const r = new Ht(va, e),
                        i = new Ht(va, t);
                    return 0 !== this.compare(r, i);
                }
                minPost() {
                    return Ht.MIN;
                }
            }
            class df extends Hg {
                static get __EMPTY_NODE() {
                    return cf;
                }
                static set __EMPTY_NODE(e) {
                    cf = e;
                }
                compare(e, t) {
                    return Il(e.name, t.name);
                }
                isDefinedOn(e) {
                    throw (0, C.g5)(
                        "KeyIndex.isDefinedOn not expected to be called."
                    );
                }
                indexedValueChanged(e, t) {
                    return !1;
                }
                minPost() {
                    return Ht.MIN;
                }
                maxPost() {
                    return new Ht(Lo, cf);
                }
                makePost(e, t) {
                    return (
                        (0, C.hu)(
                            "string" == typeof e,
                            "KeyIndex indexValue must always be a string."
                        ),
                        new Ht(e, cf)
                    );
                }
                toString() {
                    return ".key";
                }
            }
            const Uo = new df();
            class hf {
                constructor(e, t, r, i, a = null) {
                    (this.isReverse_ = i),
                        (this.resultGenerator_ = a),
                        (this.nodeStack_ = []);
                    let l = 1;
                    for (; !e.isEmpty(); )
                        if (((l = t ? r(e.key, t) : 1), i && (l *= -1), l < 0))
                            e = this.isReverse_ ? e.left : e.right;
                        else {
                            if (0 === l) {
                                this.nodeStack_.push(e);
                                break;
                            }
                            this.nodeStack_.push(e),
                                (e = this.isReverse_ ? e.right : e.left);
                        }
                }
                getNext() {
                    if (0 === this.nodeStack_.length) return null;
                    let t,
                        e = this.nodeStack_.pop();
                    if (
                        ((t = this.resultGenerator_
                            ? this.resultGenerator_(e.key, e.value)
                            : { key: e.key, value: e.value }),
                        this.isReverse_)
                    )
                        for (e = e.left; !e.isEmpty(); )
                            this.nodeStack_.push(e), (e = e.right);
                    else
                        for (e = e.right; !e.isEmpty(); )
                            this.nodeStack_.push(e), (e = e.left);
                    return t;
                }
                hasNext() {
                    return this.nodeStack_.length > 0;
                }
                peek() {
                    if (0 === this.nodeStack_.length) return null;
                    const e = this.nodeStack_[this.nodeStack_.length - 1];
                    return this.resultGenerator_
                        ? this.resultGenerator_(e.key, e.value)
                        : { key: e.key, value: e.value };
                }
            }
            let $g,
                io = (() => {
                    class n {
                        constructor(t, r, i, a, l) {
                            (this.key = t),
                                (this.value = r),
                                (this.color = i ?? n.RED),
                                (this.left = a ?? Ki.EMPTY_NODE),
                                (this.right = l ?? Ki.EMPTY_NODE);
                        }
                        copy(t, r, i, a, l) {
                            return new n(
                                t ?? this.key,
                                r ?? this.value,
                                i ?? this.color,
                                a ?? this.left,
                                l ?? this.right
                            );
                        }
                        count() {
                            return this.left.count() + 1 + this.right.count();
                        }
                        isEmpty() {
                            return !1;
                        }
                        inorderTraversal(t) {
                            return (
                                this.left.inorderTraversal(t) ||
                                !!t(this.key, this.value) ||
                                this.right.inorderTraversal(t)
                            );
                        }
                        reverseTraversal(t) {
                            return (
                                this.right.reverseTraversal(t) ||
                                t(this.key, this.value) ||
                                this.left.reverseTraversal(t)
                            );
                        }
                        min_() {
                            return this.left.isEmpty()
                                ? this
                                : this.left.min_();
                        }
                        minKey() {
                            return this.min_().key;
                        }
                        maxKey() {
                            return this.right.isEmpty()
                                ? this.key
                                : this.right.maxKey();
                        }
                        insert(t, r, i) {
                            let a = this;
                            const l = i(t, a.key);
                            return (
                                (a =
                                    l < 0
                                        ? a.copy(
                                              null,
                                              null,
                                              null,
                                              a.left.insert(t, r, i),
                                              null
                                          )
                                        : 0 === l
                                        ? a.copy(null, r, null, null, null)
                                        : a.copy(
                                              null,
                                              null,
                                              null,
                                              null,
                                              a.right.insert(t, r, i)
                                          )),
                                a.fixUp_()
                            );
                        }
                        removeMin_() {
                            if (this.left.isEmpty()) return Ki.EMPTY_NODE;
                            let t = this;
                            return (
                                !t.left.isRed_() &&
                                    !t.left.left.isRed_() &&
                                    (t = t.moveRedLeft_()),
                                (t = t.copy(
                                    null,
                                    null,
                                    null,
                                    t.left.removeMin_(),
                                    null
                                )),
                                t.fixUp_()
                            );
                        }
                        remove(t, r) {
                            let i, a;
                            if (((i = this), r(t, i.key) < 0))
                                !i.left.isEmpty() &&
                                    !i.left.isRed_() &&
                                    !i.left.left.isRed_() &&
                                    (i = i.moveRedLeft_()),
                                    (i = i.copy(
                                        null,
                                        null,
                                        null,
                                        i.left.remove(t, r),
                                        null
                                    ));
                            else {
                                if (
                                    (i.left.isRed_() && (i = i.rotateRight_()),
                                    !i.right.isEmpty() &&
                                        !i.right.isRed_() &&
                                        !i.right.left.isRed_() &&
                                        (i = i.moveRedRight_()),
                                    0 === r(t, i.key))
                                ) {
                                    if (i.right.isEmpty()) return Ki.EMPTY_NODE;
                                    (a = i.right.min_()),
                                        (i = i.copy(
                                            a.key,
                                            a.value,
                                            null,
                                            null,
                                            i.right.removeMin_()
                                        ));
                                }
                                i = i.copy(
                                    null,
                                    null,
                                    null,
                                    null,
                                    i.right.remove(t, r)
                                );
                            }
                            return i.fixUp_();
                        }
                        isRed_() {
                            return this.color;
                        }
                        fixUp_() {
                            let t = this;
                            return (
                                t.right.isRed_() &&
                                    !t.left.isRed_() &&
                                    (t = t.rotateLeft_()),
                                t.left.isRed_() &&
                                    t.left.left.isRed_() &&
                                    (t = t.rotateRight_()),
                                t.left.isRed_() &&
                                    t.right.isRed_() &&
                                    (t = t.colorFlip_()),
                                t
                            );
                        }
                        moveRedLeft_() {
                            let t = this.colorFlip_();
                            return (
                                t.right.left.isRed_() &&
                                    ((t = t.copy(
                                        null,
                                        null,
                                        null,
                                        null,
                                        t.right.rotateRight_()
                                    )),
                                    (t = t.rotateLeft_()),
                                    (t = t.colorFlip_())),
                                t
                            );
                        }
                        moveRedRight_() {
                            let t = this.colorFlip_();
                            return (
                                t.left.left.isRed_() &&
                                    ((t = t.rotateRight_()),
                                    (t = t.colorFlip_())),
                                t
                            );
                        }
                        rotateLeft_() {
                            const t = this.copy(
                                null,
                                null,
                                n.RED,
                                null,
                                this.right.left
                            );
                            return this.right.copy(
                                null,
                                null,
                                this.color,
                                t,
                                null
                            );
                        }
                        rotateRight_() {
                            const t = this.copy(
                                null,
                                null,
                                n.RED,
                                this.left.right,
                                null
                            );
                            return this.left.copy(
                                null,
                                null,
                                this.color,
                                null,
                                t
                            );
                        }
                        colorFlip_() {
                            const t = this.left.copy(
                                    null,
                                    null,
                                    !this.left.color,
                                    null,
                                    null
                                ),
                                r = this.right.copy(
                                    null,
                                    null,
                                    !this.right.color,
                                    null,
                                    null
                                );
                            return this.copy(null, null, !this.color, t, r);
                        }
                        checkMaxDepth_() {
                            const t = this.check_();
                            return Math.pow(2, t) <= this.count() + 1;
                        }
                        check_() {
                            if (this.isRed_() && this.left.isRed_())
                                throw new Error(
                                    "Red node has red child(" +
                                        this.key +
                                        "," +
                                        this.value +
                                        ")"
                                );
                            if (this.right.isRed_())
                                throw new Error(
                                    "Right child of (" +
                                        this.key +
                                        "," +
                                        this.value +
                                        ") is red"
                                );
                            const t = this.left.check_();
                            if (t !== this.right.check_())
                                throw new Error("Black depths differ");
                            return t + (this.isRed_() ? 0 : 1);
                        }
                    }
                    return (n.RED = !0), (n.BLACK = !1), n;
                })();
            class Ki {
                constructor(e, t = Ki.EMPTY_NODE) {
                    (this.comparator_ = e), (this.root_ = t);
                }
                insert(e, t) {
                    return new Ki(
                        this.comparator_,
                        this.root_
                            .insert(e, t, this.comparator_)
                            .copy(null, null, io.BLACK, null, null)
                    );
                }
                remove(e) {
                    return new Ki(
                        this.comparator_,
                        this.root_
                            .remove(e, this.comparator_)
                            .copy(null, null, io.BLACK, null, null)
                    );
                }
                get(e) {
                    let t,
                        r = this.root_;
                    for (; !r.isEmpty(); ) {
                        if (((t = this.comparator_(e, r.key)), 0 === t))
                            return r.value;
                        t < 0 ? (r = r.left) : t > 0 && (r = r.right);
                    }
                    return null;
                }
                getPredecessorKey(e) {
                    let t,
                        r = this.root_,
                        i = null;
                    for (; !r.isEmpty(); ) {
                        if (((t = this.comparator_(e, r.key)), 0 === t)) {
                            if (r.left.isEmpty()) return i ? i.key : null;
                            for (r = r.left; !r.right.isEmpty(); ) r = r.right;
                            return r.key;
                        }
                        t < 0
                            ? (r = r.left)
                            : t > 0 && ((i = r), (r = r.right));
                    }
                    throw new Error(
                        "Attempted to find predecessor key for a nonexistent key.  What gives?"
                    );
                }
                isEmpty() {
                    return this.root_.isEmpty();
                }
                count() {
                    return this.root_.count();
                }
                minKey() {
                    return this.root_.minKey();
                }
                maxKey() {
                    return this.root_.maxKey();
                }
                inorderTraversal(e) {
                    return this.root_.inorderTraversal(e);
                }
                reverseTraversal(e) {
                    return this.root_.reverseTraversal(e);
                }
                getIterator(e) {
                    return new hf(this.root_, null, this.comparator_, !1, e);
                }
                getIteratorFrom(e, t) {
                    return new hf(this.root_, e, this.comparator_, !1, t);
                }
                getReverseIteratorFrom(e, t) {
                    return new hf(this.root_, e, this.comparator_, !0, t);
                }
                getReverseIterator(e) {
                    return new hf(this.root_, null, this.comparator_, !0, e);
                }
            }
            function dS(n, e) {
                return Il(n.name, e.name);
            }
            function Mv(n, e) {
                return Il(n, e);
            }
            Ki.EMPTY_NODE = new (class cS {
                copy(e, t, r, i, a) {
                    return this;
                }
                insert(e, t, r) {
                    return new io(e, t, null);
                }
                remove(e, t) {
                    return this;
                }
                count() {
                    return 0;
                }
                isEmpty() {
                    return !0;
                }
                inorderTraversal(e) {
                    return !1;
                }
                reverseTraversal(e) {
                    return !1;
                }
                minKey() {
                    return null;
                }
                maxKey() {
                    return null;
                }
                check_() {
                    return 0;
                }
                isRed_() {
                    return !1;
                }
            })();
            const Nv = function (n) {
                    return "number" == typeof n
                        ? "number:" + mv(n)
                        : "string:" + n;
                },
                Pv = function (n) {
                    if (n.isLeafNode()) {
                        const e = n.val();
                        (0, C.hu)(
                            "string" == typeof e ||
                                "number" == typeof e ||
                                ("object" == typeof e && (0, C.r3)(e, ".sv")),
                            "Priority must be a string or number."
                        );
                    } else
                        (0, C.hu)(
                            n === $g || n.isEmpty(),
                            "priority of unexpected type."
                        );
                    (0, C.hu)(
                        n === $g || n.getPriority().isEmpty(),
                        "Priority nodes can't have a priority of their own."
                    );
                };
            let Gg,
                Wg,
                bI,
                ff = (() => {
                    class n {
                        constructor(
                            t,
                            r = n.__childrenNodeConstructor.EMPTY_NODE
                        ) {
                            (this.value_ = t),
                                (this.priorityNode_ = r),
                                (this.lazyHash_ = null),
                                (0, C.hu)(
                                    null != this.value_,
                                    "LeafNode shouldn't be created with null/undefined value."
                                ),
                                Pv(this.priorityNode_);
                        }
                        static set __childrenNodeConstructor(t) {
                            Gg = t;
                        }
                        static get __childrenNodeConstructor() {
                            return Gg;
                        }
                        isLeafNode() {
                            return !0;
                        }
                        getPriority() {
                            return this.priorityNode_;
                        }
                        updatePriority(t) {
                            return new n(this.value_, t);
                        }
                        getImmediateChild(t) {
                            return ".priority" === t
                                ? this.priorityNode_
                                : n.__childrenNodeConstructor.EMPTY_NODE;
                        }
                        getChild(t) {
                            return en(t)
                                ? this
                                : ".priority" === Kt(t)
                                ? this.priorityNode_
                                : n.__childrenNodeConstructor.EMPTY_NODE;
                        }
                        hasChild() {
                            return !1;
                        }
                        getPredecessorChildName(t, r) {
                            return null;
                        }
                        updateImmediateChild(t, r) {
                            return ".priority" === t
                                ? this.updatePriority(r)
                                : r.isEmpty() && ".priority" !== t
                                ? this
                                : n.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(
                                      t,
                                      r
                                  ).updatePriority(this.priorityNode_);
                        }
                        updateChild(t, r) {
                            const i = Kt(t);
                            return null === i
                                ? r
                                : r.isEmpty() && ".priority" !== i
                                ? this
                                : ((0, C.hu)(
                                      ".priority" !== i || 1 === as(t),
                                      ".priority must be the last token in a path"
                                  ),
                                  this.updateImmediateChild(
                                      i,
                                      n.__childrenNodeConstructor.EMPTY_NODE.updateChild(
                                          kn(t),
                                          r
                                      )
                                  ));
                        }
                        isEmpty() {
                            return !1;
                        }
                        numChildren() {
                            return 0;
                        }
                        forEachChild(t, r) {
                            return !1;
                        }
                        val(t) {
                            return t && !this.getPriority().isEmpty()
                                ? {
                                      ".value": this.getValue(),
                                      ".priority": this.getPriority().val(),
                                  }
                                : this.getValue();
                        }
                        hash() {
                            if (null === this.lazyHash_) {
                                let t = "";
                                this.priorityNode_.isEmpty() ||
                                    (t +=
                                        "priority:" +
                                        Nv(this.priorityNode_.val()) +
                                        ":");
                                const r = typeof this.value_;
                                (t += r + ":"),
                                    (t +=
                                        "number" === r
                                            ? mv(this.value_)
                                            : this.value_),
                                    (this.lazyHash_ = Kh(t));
                            }
                            return this.lazyHash_;
                        }
                        getValue() {
                            return this.value_;
                        }
                        compareTo(t) {
                            return t === n.__childrenNodeConstructor.EMPTY_NODE
                                ? 1
                                : t instanceof n.__childrenNodeConstructor
                                ? -1
                                : ((0, C.hu)(
                                      t.isLeafNode(),
                                      "Unknown node type"
                                  ),
                                  this.compareToLeafNode_(t));
                        }
                        compareToLeafNode_(t) {
                            const r = typeof t.value_,
                                i = typeof this.value_,
                                a = n.VALUE_TYPE_ORDER.indexOf(r),
                                l = n.VALUE_TYPE_ORDER.indexOf(i);
                            return (
                                (0, C.hu)(a >= 0, "Unknown leaf type: " + r),
                                (0, C.hu)(l >= 0, "Unknown leaf type: " + i),
                                a === l
                                    ? "object" === i
                                        ? 0
                                        : this.value_ < t.value_
                                        ? -1
                                        : this.value_ === t.value_
                                        ? 0
                                        : 1
                                    : l - a
                            );
                        }
                        withIndex() {
                            return this;
                        }
                        isIndexed() {
                            return !0;
                        }
                        equals(t) {
                            if (t === this) return !0;
                            if (t.isLeafNode()) {
                                const r = t;
                                return (
                                    this.value_ === r.value_ &&
                                    this.priorityNode_.equals(r.priorityNode_)
                                );
                            }
                            return !1;
                        }
                    }
                    return (
                        (n.VALUE_TYPE_ORDER = [
                            "object",
                            "boolean",
                            "number",
                            "string",
                        ]),
                        n
                    );
                })();
            const jn = new (class DI extends Hg {
                    compare(e, t) {
                        const r = e.node.getPriority(),
                            i = t.node.getPriority(),
                            a = r.compareTo(i);
                        return 0 === a ? Il(e.name, t.name) : a;
                    }
                    isDefinedOn(e) {
                        return !e.getPriority().isEmpty();
                    }
                    indexedValueChanged(e, t) {
                        return !e.getPriority().equals(t.getPriority());
                    }
                    minPost() {
                        return Ht.MIN;
                    }
                    maxPost() {
                        return new Ht(Lo, new ff("[PRIORITY-POST]", bI));
                    }
                    makePost(e, t) {
                        const r = Wg(e);
                        return new Ht(t, new ff("[PRIORITY-POST]", r));
                    }
                    toString() {
                        return ".priority";
                    }
                })(),
                fS = Math.log(2);
            class kv {
                constructor(e) {
                    (this.count = parseInt(Math.log(e + 1) / fS, 10)),
                        (this.current_ = this.count - 1);
                    const i = ((a) =>
                        parseInt(Array(this.count + 1).join("1"), 2))();
                    this.bits_ = (e + 1) & i;
                }
                nextBitIsOne() {
                    const e = !(this.bits_ & (1 << this.current_));
                    return this.current_--, e;
                }
            }
            const Ov = function (n, e, t, r) {
                n.sort(e);
                const i = function (_, E) {
                        const D = E - _;
                        let T, R;
                        if (0 === D) return null;
                        if (1 === D)
                            return (
                                (T = n[_]),
                                (R = t ? t(T) : T),
                                new io(R, T.node, io.BLACK, null, null)
                            );
                        {
                            const F = parseInt(D / 2, 10) + _,
                                K = i(_, F),
                                Ie = i(F + 1, E);
                            return (
                                (T = n[F]),
                                (R = t ? t(T) : T),
                                new io(R, T.node, io.BLACK, K, Ie)
                            );
                        }
                    },
                    h = (function (_) {
                        let E = null,
                            D = null,
                            T = n.length;
                        const R = function (K, Ie) {
                                const Re = T - K,
                                    mt = T;
                                T -= K;
                                const _t = i(Re + 1, mt),
                                    yt = n[Re],
                                    gt = t ? t(yt) : yt;
                                F(new io(gt, yt.node, Ie, null, _t));
                            },
                            F = function (K) {
                                E
                                    ? ((E.left = K), (E = K))
                                    : ((D = K), (E = K));
                            };
                        for (let K = 0; K < _.count; ++K) {
                            const Ie = _.nextBitIsOne(),
                                Re = Math.pow(2, _.count - (K + 1));
                            Ie
                                ? R(Re, io.BLACK)
                                : (R(Re, io.BLACK), R(Re, io.RED));
                        }
                        return D;
                    })(new kv(n.length));
                return new Ki(r || e, h);
            };
            let TI;
            const uu = {};
            class lu {
                constructor(e, t) {
                    (this.indexes_ = e), (this.indexSet_ = t);
                }
                static get Default() {
                    return (
                        (0, C.hu)(
                            uu && jn,
                            "ChildrenNode.ts has not been loaded"
                        ),
                        (TI =
                            TI ||
                            new lu({ ".priority": uu }, { ".priority": jn })),
                        TI
                    );
                }
                get(e) {
                    const t = (0, C.DV)(this.indexes_, e);
                    if (!t) throw new Error("No index defined for " + e);
                    return t instanceof Ki ? t : null;
                }
                hasIndex(e) {
                    return (0, C.r3)(this.indexSet_, e.toString());
                }
                addIndex(e, t) {
                    (0, C.hu)(
                        e !== Uo,
                        "KeyIndex always exists and isn't meant to be added to the IndexMap."
                    );
                    const r = [];
                    let i = !1;
                    const a = t.getIterator(Ht.Wrap);
                    let h,
                        l = a.getNext();
                    for (; l; )
                        (i = i || e.isDefinedOn(l.node)),
                            r.push(l),
                            (l = a.getNext());
                    h = i ? Ov(r, e.getCompare()) : uu;
                    const _ = e.toString(),
                        E = Object.assign({}, this.indexSet_);
                    E[_] = e;
                    const D = Object.assign({}, this.indexes_);
                    return (D[_] = h), new lu(D, E);
                }
                addToIndexes(e, t) {
                    const r = (0, C.UI)(this.indexes_, (i, a) => {
                        const l = (0, C.DV)(this.indexSet_, a);
                        if (
                            ((0, C.hu)(
                                l,
                                "Missing index implementation for " + a
                            ),
                            i === uu)
                        ) {
                            if (l.isDefinedOn(e.node)) {
                                const h = [],
                                    _ = t.getIterator(Ht.Wrap);
                                let E = _.getNext();
                                for (; E; )
                                    E.name !== e.name && h.push(E),
                                        (E = _.getNext());
                                return h.push(e), Ov(h, l.getCompare());
                            }
                            return uu;
                        }
                        {
                            const h = t.get(e.name);
                            let _ = i;
                            return (
                                h && (_ = _.remove(new Ht(e.name, h))),
                                _.insert(e, e.node)
                            );
                        }
                    });
                    return new lu(r, this.indexSet_);
                }
                removeFromIndexes(e, t) {
                    const r = (0, C.UI)(this.indexes_, (i) => {
                        if (i === uu) return i;
                        {
                            const a = t.get(e.name);
                            return a ? i.remove(new Ht(e.name, a)) : i;
                        }
                    });
                    return new lu(r, this.indexSet_);
                }
            }
            let zg,
                zt = (() => {
                    class n {
                        constructor(t, r, i) {
                            (this.children_ = t),
                                (this.priorityNode_ = r),
                                (this.indexMap_ = i),
                                (this.lazyHash_ = null),
                                this.priorityNode_ && Pv(this.priorityNode_),
                                this.children_.isEmpty() &&
                                    (0, C.hu)(
                                        !this.priorityNode_ ||
                                            this.priorityNode_.isEmpty(),
                                        "An empty node cannot have a priority"
                                    );
                        }
                        static get EMPTY_NODE() {
                            return (
                                zg || (zg = new n(new Ki(Mv), null, lu.Default))
                            );
                        }
                        isLeafNode() {
                            return !1;
                        }
                        getPriority() {
                            return this.priorityNode_ || zg;
                        }
                        updatePriority(t) {
                            return this.children_.isEmpty()
                                ? this
                                : new n(this.children_, t, this.indexMap_);
                        }
                        getImmediateChild(t) {
                            if (".priority" === t) return this.getPriority();
                            {
                                const r = this.children_.get(t);
                                return null === r ? zg : r;
                            }
                        }
                        getChild(t) {
                            const r = Kt(t);
                            return null === r
                                ? this
                                : this.getImmediateChild(r).getChild(kn(t));
                        }
                        hasChild(t) {
                            return null !== this.children_.get(t);
                        }
                        updateImmediateChild(t, r) {
                            if (
                                ((0, C.hu)(
                                    r,
                                    "We should always be passing snapshot nodes"
                                ),
                                ".priority" === t)
                            )
                                return this.updatePriority(r);
                            {
                                const i = new Ht(t, r);
                                let a, l;
                                r.isEmpty()
                                    ? ((a = this.children_.remove(t)),
                                      (l = this.indexMap_.removeFromIndexes(
                                          i,
                                          this.children_
                                      )))
                                    : ((a = this.children_.insert(t, r)),
                                      (l = this.indexMap_.addToIndexes(
                                          i,
                                          this.children_
                                      )));
                                const h = a.isEmpty() ? zg : this.priorityNode_;
                                return new n(a, h, l);
                            }
                        }
                        updateChild(t, r) {
                            const i = Kt(t);
                            if (null === i) return r;
                            {
                                (0, C.hu)(
                                    ".priority" !== Kt(t) || 1 === as(t),
                                    ".priority must be the last token in a path"
                                );
                                const a = this.getImmediateChild(i).updateChild(
                                    kn(t),
                                    r
                                );
                                return this.updateImmediateChild(i, a);
                            }
                        }
                        isEmpty() {
                            return this.children_.isEmpty();
                        }
                        numChildren() {
                            return this.children_.count();
                        }
                        val(t) {
                            if (this.isEmpty()) return null;
                            const r = {};
                            let i = 0,
                                a = 0,
                                l = !0;
                            if (
                                (this.forEachChild(jn, (h, _) => {
                                    (r[h] = _.val(t)),
                                        i++,
                                        l && n.INTEGER_REGEXP_.test(h)
                                            ? (a = Math.max(a, Number(h)))
                                            : (l = !1);
                                }),
                                !t && l && a < 2 * i)
                            ) {
                                const h = [];
                                for (const _ in r) h[_] = r[_];
                                return h;
                            }
                            return (
                                t &&
                                    !this.getPriority().isEmpty() &&
                                    (r[".priority"] = this.getPriority().val()),
                                r
                            );
                        }
                        hash() {
                            if (null === this.lazyHash_) {
                                let t = "";
                                this.getPriority().isEmpty() ||
                                    (t +=
                                        "priority:" +
                                        Nv(this.getPriority().val()) +
                                        ":"),
                                    this.forEachChild(jn, (r, i) => {
                                        const a = i.hash();
                                        "" !== a && (t += ":" + r + ":" + a);
                                    }),
                                    (this.lazyHash_ = "" === t ? "" : Kh(t));
                            }
                            return this.lazyHash_;
                        }
                        getPredecessorChildName(t, r, i) {
                            const a = this.resolveIndex_(i);
                            if (a) {
                                const l = a.getPredecessorKey(new Ht(t, r));
                                return l ? l.name : null;
                            }
                            return this.children_.getPredecessorKey(t);
                        }
                        getFirstChildName(t) {
                            const r = this.resolveIndex_(t);
                            if (r) {
                                const i = r.minKey();
                                return i && i.name;
                            }
                            return this.children_.minKey();
                        }
                        getFirstChild(t) {
                            const r = this.getFirstChildName(t);
                            return r ? new Ht(r, this.children_.get(r)) : null;
                        }
                        getLastChildName(t) {
                            const r = this.resolveIndex_(t);
                            if (r) {
                                const i = r.maxKey();
                                return i && i.name;
                            }
                            return this.children_.maxKey();
                        }
                        getLastChild(t) {
                            const r = this.getLastChildName(t);
                            return r ? new Ht(r, this.children_.get(r)) : null;
                        }
                        forEachChild(t, r) {
                            const i = this.resolveIndex_(t);
                            return i
                                ? i.inorderTraversal((a) => r(a.name, a.node))
                                : this.children_.inorderTraversal(r);
                        }
                        getIterator(t) {
                            return this.getIteratorFrom(t.minPost(), t);
                        }
                        getIteratorFrom(t, r) {
                            const i = this.resolveIndex_(r);
                            if (i) return i.getIteratorFrom(t, (a) => a);
                            {
                                const a = this.children_.getIteratorFrom(
                                    t.name,
                                    Ht.Wrap
                                );
                                let l = a.peek();
                                for (; null != l && r.compare(l, t) < 0; )
                                    a.getNext(), (l = a.peek());
                                return a;
                            }
                        }
                        getReverseIterator(t) {
                            return this.getReverseIteratorFrom(t.maxPost(), t);
                        }
                        getReverseIteratorFrom(t, r) {
                            const i = this.resolveIndex_(r);
                            if (i) return i.getReverseIteratorFrom(t, (a) => a);
                            {
                                const a = this.children_.getReverseIteratorFrom(
                                    t.name,
                                    Ht.Wrap
                                );
                                let l = a.peek();
                                for (; null != l && r.compare(l, t) > 0; )
                                    a.getNext(), (l = a.peek());
                                return a;
                            }
                        }
                        compareTo(t) {
                            return this.isEmpty()
                                ? t.isEmpty()
                                    ? 0
                                    : -1
                                : t.isLeafNode() || t.isEmpty()
                                ? 1
                                : t === qg
                                ? -1
                                : 0;
                        }
                        withIndex(t) {
                            if (t === Uo || this.indexMap_.hasIndex(t))
                                return this;
                            {
                                const r = this.indexMap_.addIndex(
                                    t,
                                    this.children_
                                );
                                return new n(
                                    this.children_,
                                    this.priorityNode_,
                                    r
                                );
                            }
                        }
                        isIndexed(t) {
                            return t === Uo || this.indexMap_.hasIndex(t);
                        }
                        equals(t) {
                            if (t === this) return !0;
                            if (t.isLeafNode()) return !1;
                            {
                                const r = t;
                                if (
                                    this.getPriority().equals(r.getPriority())
                                ) {
                                    if (
                                        this.children_.count() ===
                                        r.children_.count()
                                    ) {
                                        const i = this.getIterator(jn),
                                            a = r.getIterator(jn);
                                        let l = i.getNext(),
                                            h = a.getNext();
                                        for (; l && h; ) {
                                            if (
                                                l.name !== h.name ||
                                                !l.node.equals(h.node)
                                            )
                                                return !1;
                                            (l = i.getNext()),
                                                (h = a.getNext());
                                        }
                                        return null === l && null === h;
                                    }
                                    return !1;
                                }
                                return !1;
                            }
                        }
                        resolveIndex_(t) {
                            return t === Uo
                                ? null
                                : this.indexMap_.get(t.toString());
                        }
                    }
                    return (n.INTEGER_REGEXP_ = /^(0|[1-9]\d*)$/), n;
                })();
            const qg = new (class LN extends zt {
                constructor() {
                    super(new Ki(Mv), zt.EMPTY_NODE, lu.Default);
                }
                compareTo(e) {
                    return e === this ? 0 : 1;
                }
                equals(e) {
                    return e === this;
                }
                getPriority() {
                    return this;
                }
                getImmediateChild(e) {
                    return zt.EMPTY_NODE;
                }
                isEmpty() {
                    return !1;
                }
            })();
            function Wn(n, e = null) {
                if (null === n) return zt.EMPTY_NODE;
                if (
                    ("object" == typeof n &&
                        ".priority" in n &&
                        (e = n[".priority"]),
                    (0, C.hu)(
                        null === e ||
                            "string" == typeof e ||
                            "number" == typeof e ||
                            ("object" == typeof e && ".sv" in e),
                        "Invalid priority type found: " + typeof e
                    ),
                    "object" == typeof n &&
                        ".value" in n &&
                        null !== n[".value"] &&
                        (n = n[".value"]),
                    "object" != typeof n || ".sv" in n)
                )
                    return new ff(n, Wn(e));
                if (n instanceof Array) {
                    let t = zt.EMPTY_NODE;
                    return (
                        Rr(n, (r, i) => {
                            if ((0, C.r3)(n, r) && "." !== r.substring(0, 1)) {
                                const a = Wn(i);
                                (a.isLeafNode() || !a.isEmpty()) &&
                                    (t = t.updateImmediateChild(r, a));
                            }
                        }),
                        t.updatePriority(Wn(e))
                    );
                }
                {
                    const t = [];
                    let r = !1;
                    if (
                        (Rr(n, (l, h) => {
                            if ("." !== l.substring(0, 1)) {
                                const _ = Wn(h);
                                _.isEmpty() ||
                                    ((r = r || !_.getPriority().isEmpty()),
                                    t.push(new Ht(l, _)));
                            }
                        }),
                        0 === t.length)
                    )
                        return zt.EMPTY_NODE;
                    const a = Ov(t, dS, (l) => l.name, Mv);
                    if (r) {
                        const l = Ov(t, jn.getCompare());
                        return new zt(
                            a,
                            Wn(e),
                            new lu({ ".priority": l }, { ".priority": jn })
                        );
                    }
                    return new zt(a, Wn(e), lu.Default);
                }
            }
            Object.defineProperties(Ht, {
                MIN: { value: new Ht(va, zt.EMPTY_NODE) },
                MAX: { value: new Ht(Lo, qg) },
            }),
                (df.__EMPTY_NODE = zt.EMPTY_NODE),
                (ff.__childrenNodeConstructor = zt),
                (function hS(n) {
                    $g = n;
                })(qg),
                (function rd(n) {
                    bI = n;
                })(qg),
                (function FN(n) {
                    Wg = n;
                })(Wn);
            class Kg extends Hg {
                constructor(e) {
                    super(),
                        (this.indexPath_ = e),
                        (0, C.hu)(
                            !en(e) && ".priority" !== Kt(e),
                            "Can't create PathIndex with empty path or .priority key"
                        );
                }
                extractChild(e) {
                    return e.getChild(this.indexPath_);
                }
                isDefinedOn(e) {
                    return !e.getChild(this.indexPath_).isEmpty();
                }
                compare(e, t) {
                    const r = this.extractChild(e.node),
                        i = this.extractChild(t.node),
                        a = r.compareTo(i);
                    return 0 === a ? Il(e.name, t.name) : a;
                }
                makePost(e, t) {
                    const r = Wn(e),
                        i = zt.EMPTY_NODE.updateChild(this.indexPath_, r);
                    return new Ht(t, i);
                }
                maxPost() {
                    const e = zt.EMPTY_NODE.updateChild(this.indexPath_, qg);
                    return new Ht(Lo, e);
                }
                toString() {
                    return af(this.indexPath_, 0).join("/");
                }
            }
            const Zg = new (class pS extends Hg {
                    compare(e, t) {
                        const r = e.node.compareTo(t.node);
                        return 0 === r ? Il(e.name, t.name) : r;
                    }
                    isDefinedOn(e) {
                        return !0;
                    }
                    indexedValueChanged(e, t) {
                        return !e.equals(t);
                    }
                    minPost() {
                        return Ht.MIN;
                    }
                    maxPost() {
                        return Ht.MAX;
                    }
                    makePost(e, t) {
                        const r = Wn(e);
                        return new Ht(t, r);
                    }
                    toString() {
                        return ".value";
                    }
                })(),
                Dl =
                    "-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz",
                gS = (function () {
                    let n = 0;
                    const e = [];
                    return function (t) {
                        const r = t === n;
                        let i;
                        n = t;
                        const a = new Array(8);
                        for (i = 7; i >= 0; i--)
                            (a[i] = Dl.charAt(t % 64)),
                                (t = Math.floor(t / 64));
                        (0, C.hu)(0 === t, "Cannot push at time == 0");
                        let l = a.join("");
                        if (r) {
                            for (i = 11; i >= 0 && 63 === e[i]; i--) e[i] = 0;
                            e[i]++;
                        } else
                            for (i = 0; i < 12; i++)
                                e[i] = Math.floor(64 * Math.random());
                        for (i = 0; i < 12; i++) l += Dl.charAt(e[i]);
                        return (
                            (0, C.hu)(
                                20 === l.length,
                                "nextPushId: Length should be 20."
                            ),
                            l
                        );
                    };
                })(),
                Yg = function (n) {
                    if (n === "" + wa) return "-";
                    const e = Yh(n);
                    if (null != e) return "" + (e + 1);
                    const t = new Array(n.length);
                    for (let l = 0; l < t.length; l++) t[l] = n.charAt(l);
                    if (t.length < 786) return t.push("-"), t.join("");
                    let r = t.length - 1;
                    for (; r >= 0 && "z" === t[r]; ) r--;
                    if (-1 === r) return Lo;
                    const a = Dl.charAt(Dl.indexOf(t[r]) + 1);
                    return (t[r] = a), t.slice(0, r + 1).join("");
                },
                Bo = function (n) {
                    if (n === "" + yv) return va;
                    const e = Yh(n);
                    if (null != e) return "" + (e - 1);
                    const t = new Array(n.length);
                    for (let r = 0; r < t.length; r++) t[r] = n.charAt(r);
                    return "-" === t[t.length - 1]
                        ? 1 === t.length
                            ? "" + wa
                            : (delete t[t.length - 1], t.join(""))
                        : ((t[t.length - 1] = Dl.charAt(
                              Dl.indexOf(t[t.length - 1]) - 1
                          )),
                          t.join("") + "z".repeat(786 - t.length));
                };
            function Qg(n) {
                return { type: "value", snapshotNode: n };
            }
            function Tl(n, e) {
                return { type: "child_added", snapshotNode: e, childName: n };
            }
            function Sl(n, e) {
                return { type: "child_removed", snapshotNode: e, childName: n };
            }
            function Jg(n, e, t) {
                return {
                    type: "child_changed",
                    snapshotNode: e,
                    childName: n,
                    oldSnap: t,
                };
            }
            class xI {
                constructor(e) {
                    this.index_ = e;
                }
                updateChild(e, t, r, i, a, l) {
                    (0, C.hu)(
                        e.isIndexed(this.index_),
                        "A node must be indexed if only a child is updated"
                    );
                    const h = e.getImmediateChild(t);
                    return (h.getChild(i).equals(r.getChild(i)) &&
                        h.isEmpty() === r.isEmpty()) ||
                        (null != l &&
                            (r.isEmpty()
                                ? e.hasChild(t)
                                    ? l.trackChildChange(Sl(t, h))
                                    : (0, C.hu)(
                                          e.isLeafNode(),
                                          "A child remove without an old child only makes sense on a leaf node"
                                      )
                                : h.isEmpty()
                                ? l.trackChildChange(Tl(t, r))
                                : l.trackChildChange(Jg(t, r, h))),
                        e.isLeafNode() && r.isEmpty())
                        ? e
                        : e.updateImmediateChild(t, r).withIndex(this.index_);
                }
                updateFullNode(e, t, r) {
                    return (
                        null != r &&
                            (e.isLeafNode() ||
                                e.forEachChild(jn, (i, a) => {
                                    t.hasChild(i) ||
                                        r.trackChildChange(Sl(i, a));
                                }),
                            t.isLeafNode() ||
                                t.forEachChild(jn, (i, a) => {
                                    if (e.hasChild(i)) {
                                        const l = e.getImmediateChild(i);
                                        l.equals(a) ||
                                            r.trackChildChange(Jg(i, a, l));
                                    } else r.trackChildChange(Tl(i, a));
                                })),
                        t.withIndex(this.index_)
                    );
                }
                updatePriority(e, t) {
                    return e.isEmpty() ? zt.EMPTY_NODE : e.updatePriority(t);
                }
                filtersNodes() {
                    return !1;
                }
                getIndexedFilter() {
                    return this;
                }
                getIndex() {
                    return this.index_;
                }
            }
            class cu {
                constructor(e) {
                    (this.indexedFilter_ = new xI(e.getIndex())),
                        (this.index_ = e.getIndex()),
                        (this.startPost_ = cu.getStartPost_(e)),
                        (this.endPost_ = cu.getEndPost_(e));
                }
                getStartPost() {
                    return this.startPost_;
                }
                getEndPost() {
                    return this.endPost_;
                }
                matches(e) {
                    return (
                        this.index_.compare(this.getStartPost(), e) <= 0 &&
                        this.index_.compare(e, this.getEndPost()) <= 0
                    );
                }
                updateChild(e, t, r, i, a, l) {
                    return (
                        this.matches(new Ht(t, r)) || (r = zt.EMPTY_NODE),
                        this.indexedFilter_.updateChild(e, t, r, i, a, l)
                    );
                }
                updateFullNode(e, t, r) {
                    t.isLeafNode() && (t = zt.EMPTY_NODE);
                    let i = t.withIndex(this.index_);
                    i = i.updatePriority(zt.EMPTY_NODE);
                    const a = this;
                    return (
                        t.forEachChild(jn, (l, h) => {
                            a.matches(new Ht(l, h)) ||
                                (i = i.updateImmediateChild(l, zt.EMPTY_NODE));
                        }),
                        this.indexedFilter_.updateFullNode(e, i, r)
                    );
                }
                updatePriority(e, t) {
                    return e;
                }
                filtersNodes() {
                    return !0;
                }
                getIndexedFilter() {
                    return this.indexedFilter_;
                }
                getIndex() {
                    return this.index_;
                }
                static getStartPost_(e) {
                    if (e.hasStart()) {
                        const t = e.getIndexStartName();
                        return e.getIndex().makePost(e.getIndexStartValue(), t);
                    }
                    return e.getIndex().minPost();
                }
                static getEndPost_(e) {
                    if (e.hasEnd()) {
                        const t = e.getIndexEndName();
                        return e.getIndex().makePost(e.getIndexEndValue(), t);
                    }
                    return e.getIndex().maxPost();
                }
            }
            class Xg {
                constructor(e) {
                    (this.rangedFilter_ = new cu(e)),
                        (this.index_ = e.getIndex()),
                        (this.limit_ = e.getLimit()),
                        (this.reverse_ = !e.isViewFromLeft());
                }
                updateChild(e, t, r, i, a, l) {
                    return (
                        this.rangedFilter_.matches(new Ht(t, r)) ||
                            (r = zt.EMPTY_NODE),
                        e.getImmediateChild(t).equals(r)
                            ? e
                            : e.numChildren() < this.limit_
                            ? this.rangedFilter_
                                  .getIndexedFilter()
                                  .updateChild(e, t, r, i, a, l)
                            : this.fullLimitUpdateChild_(e, t, r, a, l)
                    );
                }
                updateFullNode(e, t, r) {
                    let i;
                    if (t.isLeafNode() || t.isEmpty())
                        i = zt.EMPTY_NODE.withIndex(this.index_);
                    else if (
                        2 * this.limit_ < t.numChildren() &&
                        t.isIndexed(this.index_)
                    ) {
                        let a;
                        (i = zt.EMPTY_NODE.withIndex(this.index_)),
                            (a = this.reverse_
                                ? t.getReverseIteratorFrom(
                                      this.rangedFilter_.getEndPost(),
                                      this.index_
                                  )
                                : t.getIteratorFrom(
                                      this.rangedFilter_.getStartPost(),
                                      this.index_
                                  ));
                        let l = 0;
                        for (; a.hasNext() && l < this.limit_; ) {
                            const h = a.getNext();
                            let _;
                            if (
                                ((_ = this.reverse_
                                    ? this.index_.compare(
                                          this.rangedFilter_.getStartPost(),
                                          h
                                      ) <= 0
                                    : this.index_.compare(
                                          h,
                                          this.rangedFilter_.getEndPost()
                                      ) <= 0),
                                !_)
                            )
                                break;
                            (i = i.updateImmediateChild(h.name, h.node)), l++;
                        }
                    } else {
                        let a, l, h, _;
                        if (
                            ((i = t.withIndex(this.index_)),
                            (i = i.updatePriority(zt.EMPTY_NODE)),
                            this.reverse_)
                        ) {
                            (_ = i.getReverseIterator(this.index_)),
                                (a = this.rangedFilter_.getEndPost()),
                                (l = this.rangedFilter_.getStartPost());
                            const T = this.index_.getCompare();
                            h = (R, F) => T(F, R);
                        } else
                            (_ = i.getIterator(this.index_)),
                                (a = this.rangedFilter_.getStartPost()),
                                (l = this.rangedFilter_.getEndPost()),
                                (h = this.index_.getCompare());
                        let E = 0,
                            D = !1;
                        for (; _.hasNext(); ) {
                            const T = _.getNext();
                            !D && h(a, T) <= 0 && (D = !0),
                                D && E < this.limit_ && h(T, l) <= 0
                                    ? E++
                                    : (i = i.updateImmediateChild(
                                          T.name,
                                          zt.EMPTY_NODE
                                      ));
                        }
                    }
                    return this.rangedFilter_
                        .getIndexedFilter()
                        .updateFullNode(e, i, r);
                }
                updatePriority(e, t) {
                    return e;
                }
                filtersNodes() {
                    return !0;
                }
                getIndexedFilter() {
                    return this.rangedFilter_.getIndexedFilter();
                }
                getIndex() {
                    return this.index_;
                }
                fullLimitUpdateChild_(e, t, r, i, a) {
                    let l;
                    if (this.reverse_) {
                        const T = this.index_.getCompare();
                        l = (R, F) => T(F, R);
                    } else l = this.index_.getCompare();
                    const h = e;
                    (0, C.hu)(h.numChildren() === this.limit_, "");
                    const _ = new Ht(t, r),
                        E = this.reverse_
                            ? h.getFirstChild(this.index_)
                            : h.getLastChild(this.index_),
                        D = this.rangedFilter_.matches(_);
                    if (h.hasChild(t)) {
                        const T = h.getImmediateChild(t);
                        let R = i.getChildAfterChild(
                            this.index_,
                            E,
                            this.reverse_
                        );
                        for (
                            ;
                            null != R && (R.name === t || h.hasChild(R.name));

                        )
                            R = i.getChildAfterChild(
                                this.index_,
                                R,
                                this.reverse_
                            );
                        const F = null == R ? 1 : l(R, _);
                        if (D && !r.isEmpty() && F >= 0)
                            return (
                                a?.trackChildChange(Jg(t, r, T)),
                                h.updateImmediateChild(t, r)
                            );
                        {
                            a?.trackChildChange(Sl(t, T));
                            const Ie = h.updateImmediateChild(t, zt.EMPTY_NODE);
                            return null != R && this.rangedFilter_.matches(R)
                                ? (a?.trackChildChange(Tl(R.name, R.node)),
                                  Ie.updateImmediateChild(R.name, R.node))
                                : Ie;
                        }
                    }
                    return r.isEmpty()
                        ? e
                        : D && l(E, _) >= 0
                        ? (null != a &&
                              (a.trackChildChange(Sl(E.name, E.node)),
                              a.trackChildChange(Tl(t, r))),
                          h
                              .updateImmediateChild(t, r)
                              .updateImmediateChild(E.name, zt.EMPTY_NODE))
                        : e;
                }
            }
            class sd {
                constructor() {
                    (this.limitSet_ = !1),
                        (this.startSet_ = !1),
                        (this.startNameSet_ = !1),
                        (this.startAfterSet_ = !1),
                        (this.endSet_ = !1),
                        (this.endNameSet_ = !1),
                        (this.endBeforeSet_ = !1),
                        (this.limit_ = 0),
                        (this.viewFrom_ = ""),
                        (this.indexStartValue_ = null),
                        (this.indexStartName_ = ""),
                        (this.indexEndValue_ = null),
                        (this.indexEndName_ = ""),
                        (this.index_ = jn);
                }
                hasStart() {
                    return this.startSet_;
                }
                hasStartAfter() {
                    return this.startAfterSet_;
                }
                hasEndBefore() {
                    return this.endBeforeSet_;
                }
                isViewFromLeft() {
                    return "" === this.viewFrom_
                        ? this.startSet_
                        : "l" === this.viewFrom_;
                }
                getIndexStartValue() {
                    return (
                        (0, C.hu)(
                            this.startSet_,
                            "Only valid if start has been set"
                        ),
                        this.indexStartValue_
                    );
                }
                getIndexStartName() {
                    return (
                        (0, C.hu)(
                            this.startSet_,
                            "Only valid if start has been set"
                        ),
                        this.startNameSet_ ? this.indexStartName_ : va
                    );
                }
                hasEnd() {
                    return this.endSet_;
                }
                getIndexEndValue() {
                    return (
                        (0, C.hu)(
                            this.endSet_,
                            "Only valid if end has been set"
                        ),
                        this.indexEndValue_
                    );
                }
                getIndexEndName() {
                    return (
                        (0, C.hu)(
                            this.endSet_,
                            "Only valid if end has been set"
                        ),
                        this.endNameSet_ ? this.indexEndName_ : Lo
                    );
                }
                hasLimit() {
                    return this.limitSet_;
                }
                hasAnchoredLimit() {
                    return this.limitSet_ && "" !== this.viewFrom_;
                }
                getLimit() {
                    return (
                        (0, C.hu)(
                            this.limitSet_,
                            "Only valid if limit has been set"
                        ),
                        this.limit_
                    );
                }
                getIndex() {
                    return this.index_;
                }
                loadsAllData() {
                    return !(this.startSet_ || this.endSet_ || this.limitSet_);
                }
                isDefault() {
                    return this.loadsAllData() && this.index_ === jn;
                }
                copy() {
                    const e = new sd();
                    return (
                        (e.limitSet_ = this.limitSet_),
                        (e.limit_ = this.limit_),
                        (e.startSet_ = this.startSet_),
                        (e.indexStartValue_ = this.indexStartValue_),
                        (e.startNameSet_ = this.startNameSet_),
                        (e.indexStartName_ = this.indexStartName_),
                        (e.endSet_ = this.endSet_),
                        (e.indexEndValue_ = this.indexEndValue_),
                        (e.endNameSet_ = this.endNameSet_),
                        (e.indexEndName_ = this.indexEndName_),
                        (e.index_ = this.index_),
                        (e.viewFrom_ = this.viewFrom_),
                        e
                    );
                }
            }
            function Uv(n, e, t) {
                const r = n.copy();
                return (
                    (r.startSet_ = !0),
                    void 0 === e && (e = null),
                    (r.indexStartValue_ = e),
                    null != t
                        ? ((r.startNameSet_ = !0), (r.indexStartName_ = t))
                        : ((r.startNameSet_ = !1), (r.indexStartName_ = "")),
                    r
                );
            }
            function Bv(n, e, t) {
                const r = n.copy();
                return (
                    (r.endSet_ = !0),
                    void 0 === e && (e = null),
                    (r.indexEndValue_ = e),
                    void 0 !== t
                        ? ((r.endNameSet_ = !0), (r.indexEndName_ = t))
                        : ((r.endNameSet_ = !1), (r.indexEndName_ = "")),
                    r
                );
            }
            function pf(n, e) {
                const t = n.copy();
                return (t.index_ = e), t;
            }
            function yS(n) {
                const e = {};
                if (n.isDefault()) return e;
                let t;
                return (
                    n.index_ === jn
                        ? (t = "$priority")
                        : n.index_ === Zg
                        ? (t = "$value")
                        : n.index_ === Uo
                        ? (t = "$key")
                        : ((0, C.hu)(
                              n.index_ instanceof Kg,
                              "Unrecognized index type!"
                          ),
                          (t = n.index_.toString())),
                    (e.orderBy = (0, C.Pz)(t)),
                    n.startSet_ &&
                        ((e.startAt = (0, C.Pz)(n.indexStartValue_)),
                        n.startNameSet_ &&
                            (e.startAt += "," + (0, C.Pz)(n.indexStartName_))),
                    n.endSet_ &&
                        ((e.endAt = (0, C.Pz)(n.indexEndValue_)),
                        n.endNameSet_ &&
                            (e.endAt += "," + (0, C.Pz)(n.indexEndName_))),
                    n.limitSet_ &&
                        (n.isViewFromLeft()
                            ? (e.limitToFirst = n.limit_)
                            : (e.limitToLast = n.limit_)),
                    e
                );
            }
            function RI(n) {
                const e = {};
                if (
                    (n.startSet_ &&
                        ((e.sp = n.indexStartValue_),
                        n.startNameSet_ && (e.sn = n.indexStartName_)),
                    n.endSet_ &&
                        ((e.ep = n.indexEndValue_),
                        n.endNameSet_ && (e.en = n.indexEndName_)),
                    n.limitSet_)
                ) {
                    e.l = n.limit_;
                    let t = n.viewFrom_;
                    "" === t && (t = n.isViewFromLeft() ? "l" : "r"),
                        (e.vf = t);
                }
                return n.index_ !== jn && (e.i = n.index_.toString()), e;
            }
            class jv extends vI {
                constructor(e, t, r, i) {
                    super(),
                        (this.repoInfo_ = e),
                        (this.onDataUpdate_ = t),
                        (this.authTokenProvider_ = r),
                        (this.appCheckTokenProvider_ = i),
                        (this.log_ = ou("p:rest:")),
                        (this.listens_ = {});
                }
                reportStats(e) {
                    throw new Error("Method not implemented.");
                }
                static getListenId_(e, t) {
                    return void 0 !== t
                        ? "tag$" + t
                        : ((0, C.hu)(
                              e._queryParams.isDefault(),
                              "should have a tag if it's not a default query."
                          ),
                          e._path.toString());
                }
                listen(e, t, r, i) {
                    const a = e._path.toString();
                    this.log_(
                        "Listen called for " + a + " " + e._queryIdentifier
                    );
                    const l = jv.getListenId_(e, r),
                        h = {};
                    this.listens_[l] = h;
                    const _ = yS(e._queryParams);
                    this.restRequest_(a + ".json", _, (E, D) => {
                        let T = D;
                        if (
                            (404 === E && ((T = null), (E = null)),
                            null === E && this.onDataUpdate_(a, T, !1, r),
                            (0, C.DV)(this.listens_, l) === h)
                        ) {
                            let R;
                            (R = E
                                ? 401 === E
                                    ? "permission_denied"
                                    : "rest_error:" + E
                                : "ok"),
                                i(R, null);
                        }
                    });
                }
                unlisten(e, t) {
                    const r = jv.getListenId_(e, t);
                    delete this.listens_[r];
                }
                get(e) {
                    const t = yS(e._queryParams),
                        r = e._path.toString(),
                        i = new C.BH();
                    return (
                        this.restRequest_(r + ".json", t, (a, l) => {
                            let h = l;
                            404 === a && ((h = null), (a = null)),
                                null === a
                                    ? (this.onDataUpdate_(r, h, !1, null),
                                      i.resolve(h))
                                    : i.reject(new Error(h));
                        }),
                        i.promise
                    );
                }
                refreshAuthToken(e) {}
                restRequest_(e, t = {}, r) {
                    return (
                        (t.format = "export"),
                        Promise.all([
                            this.authTokenProvider_.getToken(!1),
                            this.appCheckTokenProvider_.getToken(!1),
                        ]).then(([i, a]) => {
                            i && i.accessToken && (t.auth = i.accessToken),
                                a && a.token && (t.ac = a.token);
                            const l =
                                (this.repoInfo_.secure
                                    ? "https://"
                                    : "http://") +
                                this.repoInfo_.host +
                                e +
                                "?ns=" +
                                this.repoInfo_.namespace +
                                (0, C.xO)(t);
                            this.log_("Sending REST request for " + l);
                            const h = new XMLHttpRequest();
                            (h.onreadystatechange = () => {
                                if (r && 4 === h.readyState) {
                                    this.log_(
                                        "REST Response for " +
                                            l +
                                            " received. status:",
                                        h.status,
                                        "response:",
                                        h.responseText
                                    );
                                    let _ = null;
                                    if (h.status >= 200 && h.status < 300) {
                                        try {
                                            _ = (0, C.cI)(h.responseText);
                                        } catch {
                                            $r(
                                                "Failed to parse JSON response for " +
                                                    l +
                                                    ": " +
                                                    h.responseText
                                            );
                                        }
                                        r(null, _);
                                    } else
                                        401 !== h.status &&
                                            404 !== h.status &&
                                            $r(
                                                "Got unsuccessful REST response for " +
                                                    l +
                                                    " Status: " +
                                                    h.status
                                            ),
                                            r(h.status);
                                    r = null;
                                }
                            }),
                                h.open("GET", l, !0),
                                h.send();
                        })
                    );
                }
            }
            class MI {
                constructor() {
                    this.rootNode_ = zt.EMPTY_NODE;
                }
                getNode(e) {
                    return this.rootNode_.getChild(e);
                }
                updateSnapshot(e, t) {
                    this.rootNode_ = this.rootNode_.updateChild(e, t);
                }
            }
            function gf() {
                return { value: null, children: new Map() };
            }
            function od(n, e, t) {
                if (en(e)) (n.value = t), n.children.clear();
                else if (null !== n.value) n.value = n.value.updateChild(e, t);
                else {
                    const r = Kt(e);
                    n.children.has(r) || n.children.set(r, gf()),
                        od(n.children.get(r), (e = kn(e)), t);
                }
            }
            function mf(n, e) {
                if (en(e)) return (n.value = null), n.children.clear(), !0;
                if (null !== n.value) {
                    if (n.value.isLeafNode()) return !1;
                    {
                        const t = n.value;
                        return (
                            (n.value = null),
                            t.forEachChild(jn, (r, i) => {
                                od(n, new xn(r), i);
                            }),
                            mf(n, e)
                        );
                    }
                }
                if (n.children.size > 0) {
                    const t = Kt(e);
                    return (
                        (e = kn(e)),
                        n.children.has(t) &&
                            mf(n.children.get(t), e) &&
                            n.children.delete(t),
                        0 === n.children.size
                    );
                }
                return !0;
            }
            function NI(n, e, t) {
                null !== n.value
                    ? t(e, n.value)
                    : (function UN(n, e) {
                          n.children.forEach((t, r) => {
                              e(r, t);
                          });
                      })(n, (r, i) => {
                          NI(i, new xn(e.toString() + "/" + r), t);
                      });
            }
            class BN {
                constructor(e) {
                    (this.collection_ = e), (this.last_ = null);
                }
                get() {
                    const e = this.collection_.get(),
                        t = Object.assign({}, e);
                    return (
                        this.last_ &&
                            Rr(this.last_, (r, i) => {
                                t[r] = t[r] - i;
                            }),
                        (this.last_ = e),
                        t
                    );
                }
            }
            class $N {
                constructor(e, t) {
                    (this.server_ = t),
                        (this.statsToReport_ = {}),
                        (this.statsListener_ = new BN(e));
                    const r = 1e4 + 2e4 * Math.random();
                    xg(this.reportStats_.bind(this), Math.floor(r));
                }
                reportStats_() {
                    const e = this.statsListener_.get(),
                        t = {};
                    let r = !1;
                    Rr(e, (i, a) => {
                        a > 0 &&
                            (0, C.r3)(this.statsToReport_, i) &&
                            ((t[i] = a), (r = !0));
                    }),
                        r && this.server_.reportStats(t),
                        xg(
                            this.reportStats_.bind(this),
                            Math.floor(2 * Math.random() * 3e5)
                        );
                }
            }
            var so = (() => {
                return (
                    ((n = so || (so = {}))[(n.OVERWRITE = 0)] = "OVERWRITE"),
                    (n[(n.MERGE = 1)] = "MERGE"),
                    (n[(n.ACK_USER_WRITE = 2)] = "ACK_USER_WRITE"),
                    (n[(n.LISTEN_COMPLETE = 3)] = "LISTEN_COMPLETE"),
                    so
                );
                var n;
            })();
            function jo(n) {
                return { fromUser: !1, fromServer: !0, queryId: n, tagged: !0 };
            }
            class ad {
                constructor(e, t, r) {
                    (this.path = e),
                        (this.affectedTree = t),
                        (this.revert = r),
                        (this.type = so.ACK_USER_WRITE),
                        (this.source = {
                            fromUser: !0,
                            fromServer: !1,
                            queryId: null,
                            tagged: !1,
                        });
                }
                operationForChild(e) {
                    if (en(this.path)) {
                        if (null != this.affectedTree.value)
                            return (
                                (0, C.hu)(
                                    this.affectedTree.children.isEmpty(),
                                    "affectedTree should not have overlapping affected paths."
                                ),
                                this
                            );
                        {
                            const t = this.affectedTree.subtree(new xn(e));
                            return new ad(fn(), t, this.revert);
                        }
                    }
                    return (
                        (0, C.hu)(
                            Kt(this.path) === e,
                            "operationForChild called for unrelated child."
                        ),
                        new ad(kn(this.path), this.affectedTree, this.revert)
                    );
                }
            }
            class _f {
                constructor(e, t) {
                    (this.source = e),
                        (this.path = t),
                        (this.type = so.LISTEN_COMPLETE);
                }
                operationForChild(e) {
                    return en(this.path)
                        ? new _f(this.source, fn())
                        : new _f(this.source, kn(this.path));
                }
            }
            class du {
                constructor(e, t, r) {
                    (this.source = e),
                        (this.path = t),
                        (this.snap = r),
                        (this.type = so.OVERWRITE);
                }
                operationForChild(e) {
                    return en(this.path)
                        ? new du(
                              this.source,
                              fn(),
                              this.snap.getImmediateChild(e)
                          )
                        : new du(this.source, kn(this.path), this.snap);
                }
            }
            class hu {
                constructor(e, t, r) {
                    (this.source = e),
                        (this.path = t),
                        (this.children = r),
                        (this.type = so.MERGE);
                }
                operationForChild(e) {
                    if (en(this.path)) {
                        const t = this.children.subtree(new xn(e));
                        return t.isEmpty()
                            ? null
                            : t.value
                            ? new du(this.source, fn(), t.value)
                            : new hu(this.source, fn(), t);
                    }
                    return (
                        (0, C.hu)(
                            Kt(this.path) === e,
                            "Can't get a merge for a child not on the path of the operation"
                        ),
                        new hu(this.source, kn(this.path), this.children)
                    );
                }
                toString() {
                    return (
                        "Operation(" +
                        this.path +
                        ": " +
                        this.source.toString() +
                        " merge: " +
                        this.children.toString() +
                        ")"
                    );
                }
            }
            class Ca {
                constructor(e, t, r) {
                    (this.node_ = e),
                        (this.fullyInitialized_ = t),
                        (this.filtered_ = r);
                }
                isFullyInitialized() {
                    return this.fullyInitialized_;
                }
                isFiltered() {
                    return this.filtered_;
                }
                isCompleteForPath(e) {
                    if (en(e))
                        return this.isFullyInitialized() && !this.filtered_;
                    const t = Kt(e);
                    return this.isCompleteForChild(t);
                }
                isCompleteForChild(e) {
                    return (
                        (this.isFullyInitialized() && !this.filtered_) ||
                        this.node_.hasChild(e)
                    );
                }
                getNode() {
                    return this.node_;
                }
            }
            class Hv {
                constructor(e) {
                    (this.query_ = e),
                        (this.index_ = this.query_._queryParams.getIndex());
                }
            }
            function Vs(n, e, t, r, i, a) {
                const l = r.filter((h) => h.type === t);
                l.sort((h, _) =>
                    (function ES(n, e, t) {
                        if (null == e.childName || null == t.childName)
                            throw (0, C.g5)(
                                "Should only compare child_ events."
                            );
                        const r = new Ht(e.childName, e.snapshotNode),
                            i = new Ht(t.childName, t.snapshotNode);
                        return n.index_.compare(r, i);
                    })(n, h, _)
                ),
                    l.forEach((h) => {
                        const _ = (function OI(n, e, t) {
                            return (
                                "value" === e.type ||
                                    "child_removed" === e.type ||
                                    (e.prevName = t.getPredecessorChildName(
                                        e.childName,
                                        e.snapshotNode,
                                        n.index_
                                    )),
                                e
                            );
                        })(n, h, a);
                        i.forEach((E) => {
                            E.respondsTo(h.type) &&
                                e.push(E.createEvent(_, n.query_));
                        });
                    });
            }
            function ud(n, e) {
                return { eventCache: n, serverCache: e };
            }
            function yf(n, e, t, r) {
                return ud(new Ca(e, t, r), n.serverCache);
            }
            function $v(n, e, t, r) {
                return ud(n.eventCache, new Ca(e, t, r));
            }
            function em(n) {
                return n.eventCache.isFullyInitialized()
                    ? n.eventCache.getNode()
                    : null;
            }
            function Al(n) {
                return n.serverCache.isFullyInitialized()
                    ? n.serverCache.getNode()
                    : null;
            }
            let ld;
            class On {
                constructor(e, t = (() => (ld || (ld = new Ki(jT)), ld))()) {
                    (this.value = e), (this.children = t);
                }
                static fromObject(e) {
                    let t = new On(null);
                    return (
                        Rr(e, (r, i) => {
                            t = t.set(new xn(r), i);
                        }),
                        t
                    );
                }
                isEmpty() {
                    return null === this.value && this.children.isEmpty();
                }
                findRootMostMatchingPathAndValue(e, t) {
                    if (null != this.value && t(this.value))
                        return { path: fn(), value: this.value };
                    if (en(e)) return null;
                    {
                        const r = Kt(e),
                            i = this.children.get(r);
                        if (null !== i) {
                            const a = i.findRootMostMatchingPathAndValue(
                                kn(e),
                                t
                            );
                            return null != a
                                ? {
                                      path: Mn(new xn(r), a.path),
                                      value: a.value,
                                  }
                                : null;
                        }
                        return null;
                    }
                }
                findRootMostValueAndPath(e) {
                    return this.findRootMostMatchingPathAndValue(e, () => !0);
                }
                subtree(e) {
                    if (en(e)) return this;
                    {
                        const t = Kt(e),
                            r = this.children.get(t);
                        return null !== r ? r.subtree(kn(e)) : new On(null);
                    }
                }
                set(e, t) {
                    if (en(e)) return new On(t, this.children);
                    {
                        const r = Kt(e),
                            a = (this.children.get(r) || new On(null)).set(
                                kn(e),
                                t
                            ),
                            l = this.children.insert(r, a);
                        return new On(this.value, l);
                    }
                }
                remove(e) {
                    if (en(e))
                        return this.children.isEmpty()
                            ? new On(null)
                            : new On(null, this.children);
                    {
                        const t = Kt(e),
                            r = this.children.get(t);
                        if (r) {
                            const i = r.remove(kn(e));
                            let a;
                            return (
                                (a = i.isEmpty()
                                    ? this.children.remove(t)
                                    : this.children.insert(t, i)),
                                null === this.value && a.isEmpty()
                                    ? new On(null)
                                    : new On(this.value, a)
                            );
                        }
                        return this;
                    }
                }
                get(e) {
                    if (en(e)) return this.value;
                    {
                        const t = Kt(e),
                            r = this.children.get(t);
                        return r ? r.get(kn(e)) : null;
                    }
                }
                setTree(e, t) {
                    if (en(e)) return t;
                    {
                        const r = Kt(e),
                            a = (this.children.get(r) || new On(null)).setTree(
                                kn(e),
                                t
                            );
                        let l;
                        return (
                            (l = a.isEmpty()
                                ? this.children.remove(r)
                                : this.children.insert(r, a)),
                            new On(this.value, l)
                        );
                    }
                }
                fold(e) {
                    return this.fold_(fn(), e);
                }
                fold_(e, t) {
                    const r = {};
                    return (
                        this.children.inorderTraversal((i, a) => {
                            r[i] = a.fold_(Mn(e, i), t);
                        }),
                        t(e, this.value, r)
                    );
                }
                findOnPath(e, t) {
                    return this.findOnPath_(e, fn(), t);
                }
                findOnPath_(e, t, r) {
                    const i = !!this.value && r(t, this.value);
                    if (i) return i;
                    if (en(e)) return null;
                    {
                        const a = Kt(e),
                            l = this.children.get(a);
                        return l ? l.findOnPath_(kn(e), Mn(t, a), r) : null;
                    }
                }
                foreachOnPath(e, t) {
                    return this.foreachOnPath_(e, fn(), t);
                }
                foreachOnPath_(e, t, r) {
                    if (en(e)) return this;
                    {
                        this.value && r(t, this.value);
                        const i = Kt(e),
                            a = this.children.get(i);
                        return a
                            ? a.foreachOnPath_(kn(e), Mn(t, i), r)
                            : new On(null);
                    }
                }
                foreach(e) {
                    this.foreach_(fn(), e);
                }
                foreach_(e, t) {
                    this.children.inorderTraversal((r, i) => {
                        i.foreach_(Mn(e, r), t);
                    }),
                        this.value && t(e, this.value);
                }
                foreachChild(e) {
                    this.children.inorderTraversal((t, r) => {
                        r.value && e(t, r.value);
                    });
                }
            }
            class _i {
                constructor(e) {
                    this.writeTree_ = e;
                }
                static empty() {
                    return new _i(new On(null));
                }
            }
            function fu(n, e, t) {
                if (en(e)) return new _i(new On(t));
                {
                    const r = n.writeTree_.findRootMostValueAndPath(e);
                    if (null != r) {
                        const i = r.path;
                        let a = r.value;
                        const l = Mi(i, e);
                        return (
                            (a = a.updateChild(l, t)),
                            new _i(n.writeTree_.set(i, a))
                        );
                    }
                    {
                        const i = new On(t),
                            a = n.writeTree_.setTree(e, i);
                        return new _i(a);
                    }
                }
            }
            function xl(n, e, t) {
                let r = n;
                return (
                    Rr(t, (i, a) => {
                        r = fu(r, Mn(e, i), a);
                    }),
                    r
                );
            }
            function FI(n, e) {
                if (en(e)) return _i.empty();
                {
                    const t = n.writeTree_.setTree(e, new On(null));
                    return new _i(t);
                }
            }
            function tm(n, e) {
                return null != pu(n, e);
            }
            function pu(n, e) {
                const t = n.writeTree_.findRootMostValueAndPath(e);
                return null != t
                    ? n.writeTree_.get(t.path).getChild(Mi(t.path, e))
                    : null;
            }
            function nm(n) {
                const e = [],
                    t = n.writeTree_.value;
                return (
                    null != t
                        ? t.isLeafNode() ||
                          t.forEachChild(jn, (r, i) => {
                              e.push(new Ht(r, i));
                          })
                        : n.writeTree_.children.inorderTraversal((r, i) => {
                              null != i.value && e.push(new Ht(r, i.value));
                          }),
                    e
                );
            }
            function Ho(n, e) {
                if (en(e)) return n;
                {
                    const t = pu(n, e);
                    return new _i(
                        null != t ? new On(t) : n.writeTree_.subtree(e)
                    );
                }
            }
            function rm(n) {
                return n.writeTree_.isEmpty();
            }
            function gu(n, e) {
                return LI(fn(), n.writeTree_, e);
            }
            function LI(n, e, t) {
                if (null != e.value) return t.updateChild(n, e.value);
                {
                    let r = null;
                    return (
                        e.children.inorderTraversal((i, a) => {
                            ".priority" === i
                                ? ((0, C.hu)(
                                      null !== a.value,
                                      "Priority writes must always be leaf nodes"
                                  ),
                                  (r = a.value))
                                : (t = LI(Mn(n, i), a, t));
                        }),
                        !t.getChild(n).isEmpty() &&
                            null !== r &&
                            (t = t.updateChild(Mn(n, ".priority"), r)),
                        t
                    );
                }
            }
            function Gv(n, e) {
                return Kv(e, n);
            }
            function bS(n, e) {
                if (n.snap) return qi(n.path, e);
                for (const t in n.children)
                    if (n.children.hasOwnProperty(t) && qi(Mn(n.path, t), e))
                        return !0;
                return !1;
            }
            function us(n) {
                return n.visible;
            }
            function BI(n, e, t) {
                let r = _i.empty();
                for (let i = 0; i < n.length; ++i) {
                    const a = n[i];
                    if (e(a)) {
                        const l = a.path;
                        let h;
                        if (a.snap)
                            qi(t, l)
                                ? ((h = Mi(t, l)), (r = fu(r, h, a.snap)))
                                : qi(l, t) &&
                                  ((h = Mi(l, t)),
                                  (r = fu(r, fn(), a.snap.getChild(h))));
                        else {
                            if (!a.children)
                                throw (0, C.g5)(
                                    "WriteRecord should have .snap or .children"
                                );
                            if (qi(t, l))
                                (h = Mi(t, l)), (r = xl(r, h, a.children));
                            else if (qi(l, t))
                                if (((h = Mi(l, t)), en(h)))
                                    r = xl(r, fn(), a.children);
                                else {
                                    const _ = (0, C.DV)(a.children, Kt(h));
                                    if (_) {
                                        const E = _.getChild(kn(h));
                                        r = fu(r, fn(), E);
                                    }
                                }
                        }
                    }
                }
                return r;
            }
            function jI(n, e, t, r, i) {
                if (r || i) {
                    const a = Ho(n.visibleWrites, e);
                    return !i && rm(a)
                        ? t
                        : i || null != t || tm(a, fn())
                        ? gu(
                              BI(
                                  n.allWrites,
                                  function (E) {
                                      return (
                                          (E.visible || i) &&
                                          (!r || !~r.indexOf(E.writeId)) &&
                                          (qi(E.path, e) || qi(e, E.path))
                                      );
                                  },
                                  e
                              ),
                              t || zt.EMPTY_NODE
                          )
                        : null;
                }
                {
                    const a = pu(n.visibleWrites, e);
                    if (null != a) return a;
                    {
                        const l = Ho(n.visibleWrites, e);
                        return rm(l)
                            ? t
                            : null != t || tm(l, fn())
                            ? gu(l, t || zt.EMPTY_NODE)
                            : null;
                    }
                }
            }
            function im(n, e, t, r) {
                return jI(n.writeTree, n.treePath, e, t, r);
            }
            function sm(n, e) {
                return (function GN(n, e, t) {
                    let r = zt.EMPTY_NODE;
                    const i = pu(n.visibleWrites, e);
                    if (i)
                        return (
                            i.isLeafNode() ||
                                i.forEachChild(jn, (a, l) => {
                                    r = r.updateImmediateChild(a, l);
                                }),
                            r
                        );
                    if (t) {
                        const a = Ho(n.visibleWrites, e);
                        return (
                            t.forEachChild(jn, (l, h) => {
                                const _ = gu(Ho(a, new xn(l)), h);
                                r = r.updateImmediateChild(l, _);
                            }),
                            nm(a).forEach((l) => {
                                r = r.updateImmediateChild(l.name, l.node);
                            }),
                            r
                        );
                    }
                    return (
                        nm(Ho(n.visibleWrites, e)).forEach((l) => {
                            r = r.updateImmediateChild(l.name, l.node);
                        }),
                        r
                    );
                })(n.writeTree, n.treePath, e);
            }
            function $I(n, e, t, r) {
                return (function TS(n, e, t, r, i) {
                    (0, C.hu)(
                        r || i,
                        "Either existingEventSnap or existingServerSnap must exist"
                    );
                    const a = Mn(e, t);
                    if (tm(n.visibleWrites, a)) return null;
                    {
                        const l = Ho(n.visibleWrites, a);
                        return rm(l) ? i.getChild(t) : gu(l, i.getChild(t));
                    }
                })(n.writeTree, n.treePath, e, t, r);
            }
            function vf(n, e) {
                return (function HI(n, e) {
                    return pu(n.visibleWrites, e);
                })(n.writeTree, Mn(n.treePath, e));
            }
            function zv(n, e, t) {
                return (function Wv(n, e, t, r) {
                    const i = Mn(e, t),
                        a = pu(n.visibleWrites, i);
                    return null != a
                        ? a
                        : r.isCompleteForChild(t)
                        ? gu(
                              Ho(n.visibleWrites, i),
                              r.getNode().getImmediateChild(t)
                          )
                        : null;
                })(n.writeTree, n.treePath, e, t);
            }
            function qv(n, e) {
                return Kv(Mn(n.treePath, e), n.writeTree);
            }
            function Kv(n, e) {
                return { treePath: n, writeTree: e };
            }
            class RS {
                constructor() {
                    this.changeMap = new Map();
                }
                trackChildChange(e) {
                    const t = e.type,
                        r = e.childName;
                    (0, C.hu)(
                        "child_added" === t ||
                            "child_changed" === t ||
                            "child_removed" === t,
                        "Only child changes supported for tracking"
                    ),
                        (0, C.hu)(
                            ".priority" !== r,
                            "Only non-priority child changes can be tracked."
                        );
                    const i = this.changeMap.get(r);
                    if (i) {
                        const a = i.type;
                        if ("child_added" === t && "child_removed" === a)
                            this.changeMap.set(
                                r,
                                Jg(r, e.snapshotNode, i.snapshotNode)
                            );
                        else if ("child_removed" === t && "child_added" === a)
                            this.changeMap.delete(r);
                        else if ("child_removed" === t && "child_changed" === a)
                            this.changeMap.set(r, Sl(r, i.oldSnap));
                        else if ("child_changed" === t && "child_added" === a)
                            this.changeMap.set(r, Tl(r, e.snapshotNode));
                        else {
                            if ("child_changed" !== t || "child_changed" !== a)
                                throw (0, C.g5)(
                                    "Illegal combination of changes: " +
                                        e +
                                        " occurred after " +
                                        i
                                );
                            this.changeMap.set(
                                r,
                                Jg(r, e.snapshotNode, i.oldSnap)
                            );
                        }
                    } else this.changeMap.set(r, e);
                }
                getChanges() {
                    return Array.from(this.changeMap.values());
                }
            }
            const om = new (class $o {
                getCompleteChild(e) {
                    return null;
                }
                getChildAfterChild(e, t, r) {
                    return null;
                }
            })();
            class Zv {
                constructor(e, t, r = null) {
                    (this.writes_ = e),
                        (this.viewCache_ = t),
                        (this.optCompleteServerCache_ = r);
                }
                getCompleteChild(e) {
                    const t = this.viewCache_.eventCache;
                    if (t.isCompleteForChild(e))
                        return t.getNode().getImmediateChild(e);
                    {
                        const r =
                            null != this.optCompleteServerCache_
                                ? new Ca(this.optCompleteServerCache_, !0, !1)
                                : this.viewCache_.serverCache;
                        return zv(this.writes_, e, r);
                    }
                }
                getChildAfterChild(e, t, r) {
                    const i =
                            null != this.optCompleteServerCache_
                                ? this.optCompleteServerCache_
                                : Al(this.viewCache_),
                        a = (function xS(n, e, t, r, i, a) {
                            return (function SS(n, e, t, r, i, a, l) {
                                let h;
                                const _ = Ho(n.visibleWrites, e),
                                    E = pu(_, fn());
                                if (null != E) h = E;
                                else {
                                    if (null == t) return [];
                                    h = gu(_, t);
                                }
                                if (
                                    ((h = h.withIndex(l)),
                                    h.isEmpty() || h.isLeafNode())
                                )
                                    return [];
                                {
                                    const D = [],
                                        T = l.getCompare(),
                                        R = a
                                            ? h.getReverseIteratorFrom(r, l)
                                            : h.getIteratorFrom(r, l);
                                    let F = R.getNext();
                                    for (; F && D.length < i; )
                                        0 !== T(F, r) && D.push(F),
                                            (F = R.getNext());
                                    return D;
                                }
                            })(n.writeTree, n.treePath, e, t, r, i, a);
                        })(this.writes_, i, t, 1, r, e);
                    return 0 === a.length ? null : a[0];
                }
            }
            function WI(n, e, t, r, i, a) {
                const l = e.eventCache;
                if (null != vf(r, t)) return e;
                {
                    let h, _;
                    if (en(t))
                        if (
                            ((0, C.hu)(
                                e.serverCache.isFullyInitialized(),
                                "If change path is empty, we must have complete server data"
                            ),
                            e.serverCache.isFiltered())
                        ) {
                            const E = Al(e),
                                T = sm(r, E instanceof zt ? E : zt.EMPTY_NODE);
                            h = n.filter.updateFullNode(
                                e.eventCache.getNode(),
                                T,
                                a
                            );
                        } else {
                            const E = im(r, Al(e));
                            h = n.filter.updateFullNode(
                                e.eventCache.getNode(),
                                E,
                                a
                            );
                        }
                    else {
                        const E = Kt(t);
                        if (".priority" === E) {
                            (0, C.hu)(
                                1 === as(t),
                                "Can't have a priority with additional path components"
                            );
                            const D = l.getNode();
                            _ = e.serverCache.getNode();
                            const T = $I(r, t, D, _);
                            h =
                                null != T
                                    ? n.filter.updatePriority(D, T)
                                    : l.getNode();
                        } else {
                            const D = kn(t);
                            let T;
                            if (l.isCompleteForChild(E)) {
                                _ = e.serverCache.getNode();
                                const R = $I(r, t, l.getNode(), _);
                                T =
                                    null != R
                                        ? l
                                              .getNode()
                                              .getImmediateChild(E)
                                              .updateChild(D, R)
                                        : l.getNode().getImmediateChild(E);
                            } else T = zv(r, E, e.serverCache);
                            h =
                                null != T
                                    ? n.filter.updateChild(
                                          l.getNode(),
                                          E,
                                          T,
                                          D,
                                          i,
                                          a
                                      )
                                    : l.getNode();
                        }
                    }
                    return yf(
                        e,
                        h,
                        l.isFullyInitialized() || en(t),
                        n.filter.filtersNodes()
                    );
                }
            }
            function am(n, e, t, r, i, a, l, h) {
                const _ = e.serverCache;
                let E;
                const D = l ? n.filter : n.filter.getIndexedFilter();
                if (en(t)) E = D.updateFullNode(_.getNode(), r, null);
                else if (D.filtersNodes() && !_.isFiltered()) {
                    const F = _.getNode().updateChild(t, r);
                    E = D.updateFullNode(_.getNode(), F, null);
                } else {
                    const F = Kt(t);
                    if (!_.isCompleteForPath(t) && as(t) > 1) return e;
                    const K = kn(t),
                        Re = _.getNode().getImmediateChild(F).updateChild(K, r);
                    E =
                        ".priority" === F
                            ? D.updatePriority(_.getNode(), Re)
                            : D.updateChild(_.getNode(), F, Re, K, om, null);
                }
                const T = $v(
                    e,
                    E,
                    _.isFullyInitialized() || en(t),
                    D.filtersNodes()
                );
                return WI(n, T, t, i, new Zv(i, T, a), h);
            }
            function wf(n, e, t, r, i, a, l) {
                const h = e.eventCache;
                let _, E;
                const D = new Zv(i, e, a);
                if (en(t))
                    (E = n.filter.updateFullNode(e.eventCache.getNode(), r, l)),
                        (_ = yf(e, E, !0, n.filter.filtersNodes()));
                else {
                    const T = Kt(t);
                    if (".priority" === T)
                        (E = n.filter.updatePriority(
                            e.eventCache.getNode(),
                            r
                        )),
                            (_ = yf(
                                e,
                                E,
                                h.isFullyInitialized(),
                                h.isFiltered()
                            ));
                    else {
                        const R = kn(t),
                            F = h.getNode().getImmediateChild(T);
                        let K;
                        if (en(R)) K = r;
                        else {
                            const Ie = D.getCompleteChild(T);
                            K =
                                null != Ie
                                    ? ".priority" === sf(R) &&
                                      Ie.getChild(xv(R)).isEmpty()
                                        ? Ie
                                        : Ie.updateChild(R, r)
                                    : zt.EMPTY_NODE;
                        }
                        _ = F.equals(K)
                            ? e
                            : yf(
                                  e,
                                  n.filter.updateChild(
                                      h.getNode(),
                                      T,
                                      K,
                                      R,
                                      D,
                                      l
                                  ),
                                  h.isFullyInitialized(),
                                  n.filter.filtersNodes()
                              );
                    }
                }
                return _;
            }
            function zI(n, e) {
                return n.eventCache.isCompleteForChild(e);
            }
            function Ef(n, e, t) {
                return (
                    t.foreach((r, i) => {
                        e = e.updateChild(r, i);
                    }),
                    e
                );
            }
            function If(n, e, t, r, i, a, l, h) {
                if (
                    e.serverCache.getNode().isEmpty() &&
                    !e.serverCache.isFullyInitialized()
                )
                    return e;
                let E,
                    _ = e;
                E = en(t) ? r : new On(null).setTree(t, r);
                const D = e.serverCache.getNode();
                return (
                    E.children.inorderTraversal((T, R) => {
                        if (D.hasChild(T)) {
                            const K = Ef(
                                0,
                                e.serverCache.getNode().getImmediateChild(T),
                                R
                            );
                            _ = am(n, _, new xn(T), K, i, a, l, h);
                        }
                    }),
                    E.children.inorderTraversal((T, R) => {
                        const F =
                            !e.serverCache.isCompleteForChild(T) &&
                            void 0 === R.value;
                        if (!D.hasChild(T) && !F) {
                            const Ie = Ef(
                                0,
                                e.serverCache.getNode().getImmediateChild(T),
                                R
                            );
                            _ = am(n, _, new xn(T), Ie, i, a, l, h);
                        }
                    }),
                    _
                );
            }
            class KI {
                constructor(e, t) {
                    (this.query_ = e), (this.eventRegistrations_ = []);
                    const r = this.query_._queryParams,
                        i = new xI(r.getIndex()),
                        a = (function Lv(n) {
                            return n.loadsAllData()
                                ? new xI(n.getIndex())
                                : n.hasLimit()
                                ? new Xg(n)
                                : new cu(n);
                        })(r);
                    this.processor_ = (function MS(n) {
                        return { filter: n };
                    })(a);
                    const l = t.serverCache,
                        h = t.eventCache,
                        _ = i.updateFullNode(zt.EMPTY_NODE, l.getNode(), null),
                        E = a.updateFullNode(zt.EMPTY_NODE, h.getNode(), null),
                        D = new Ca(_, l.isFullyInitialized(), i.filtersNodes()),
                        T = new Ca(E, h.isFullyInitialized(), a.filtersNodes());
                    (this.viewCache_ = ud(T, D)),
                        (this.eventGenerator_ = new Hv(this.query_));
                }
                get query() {
                    return this.query_;
                }
            }
            function Qv(n, e) {
                const t = Al(n.viewCache_);
                return t &&
                    (n.query._queryParams.loadsAllData() ||
                        (!en(e) && !t.getImmediateChild(Kt(e)).isEmpty()))
                    ? t.getChild(e)
                    : null;
            }
            function OS(n) {
                return 0 === n.eventRegistrations_.length;
            }
            function Jv(n, e, t) {
                const r = [];
                if (t) {
                    (0, C.hu)(
                        null == e,
                        "A cancel should cancel all event registrations."
                    );
                    const i = n.query._path;
                    n.eventRegistrations_.forEach((a) => {
                        const l = a.createCancelEvent(t, i);
                        l && r.push(l);
                    });
                }
                if (e) {
                    let i = [];
                    for (let a = 0; a < n.eventRegistrations_.length; ++a) {
                        const l = n.eventRegistrations_[a];
                        if (l.matches(e)) {
                            if (e.hasAnyCallback()) {
                                i = i.concat(
                                    n.eventRegistrations_.slice(a + 1)
                                );
                                break;
                            }
                        } else i.push(l);
                    }
                    n.eventRegistrations_ = i;
                } else n.eventRegistrations_ = [];
                return r;
            }
            function Xv(n, e, t, r) {
                e.type === so.MERGE &&
                    null !== e.source.queryId &&
                    ((0, C.hu)(
                        Al(n.viewCache_),
                        "We should always have a full cache before handling merges"
                    ),
                    (0, C.hu)(
                        em(n.viewCache_),
                        "Missing event cache, even though we have a server cache"
                    ));
                const i = n.viewCache_,
                    a = (function GI(n, e, t, r, i) {
                        const a = new RS();
                        let l, h;
                        if (t.type === so.OVERWRITE) {
                            const E = t;
                            E.source.fromUser
                                ? (l = wf(n, e, E.path, E.snap, r, i, a))
                                : ((0, C.hu)(
                                      E.source.fromServer,
                                      "Unknown source."
                                  ),
                                  (h =
                                      E.source.tagged ||
                                      (e.serverCache.isFiltered() &&
                                          !en(E.path))),
                                  (l = am(n, e, E.path, E.snap, r, i, h, a)));
                        } else if (t.type === so.MERGE) {
                            const E = t;
                            E.source.fromUser
                                ? (l = (function PS(n, e, t, r, i, a, l) {
                                      let h = e;
                                      return (
                                          r.foreach((_, E) => {
                                              const D = Mn(t, _);
                                              zI(e, Kt(D)) &&
                                                  (h = wf(n, h, D, E, i, a, l));
                                          }),
                                          r.foreach((_, E) => {
                                              const D = Mn(t, _);
                                              zI(e, Kt(D)) ||
                                                  (h = wf(n, h, D, E, i, a, l));
                                          }),
                                          h
                                      );
                                  })(n, e, E.path, E.children, r, i, a))
                                : ((0, C.hu)(
                                      E.source.fromServer,
                                      "Unknown source."
                                  ),
                                  (h =
                                      E.source.tagged ||
                                      e.serverCache.isFiltered()),
                                  (l = If(
                                      n,
                                      e,
                                      E.path,
                                      E.children,
                                      r,
                                      i,
                                      h,
                                      a
                                  )));
                        } else if (t.type === so.ACK_USER_WRITE) {
                            const E = t;
                            l = E.revert
                                ? (function Yv(n, e, t, r, i, a) {
                                      let l;
                                      if (null != vf(r, t)) return e;
                                      {
                                          const h = new Zv(r, e, i),
                                              _ = e.eventCache.getNode();
                                          let E;
                                          if (en(t) || ".priority" === Kt(t)) {
                                              let D;
                                              if (
                                                  e.serverCache.isFullyInitialized()
                                              )
                                                  D = im(r, Al(e));
                                              else {
                                                  const T =
                                                      e.serverCache.getNode();
                                                  (0, C.hu)(
                                                      T instanceof zt,
                                                      "serverChildren would be complete if leaf node"
                                                  ),
                                                      (D = sm(r, T));
                                              }
                                              E = n.filter.updateFullNode(
                                                  _,
                                                  D,
                                                  a
                                              );
                                          } else {
                                              const D = Kt(t);
                                              let T = zv(r, D, e.serverCache);
                                              null == T &&
                                                  e.serverCache.isCompleteForChild(
                                                      D
                                                  ) &&
                                                  (T = _.getImmediateChild(D)),
                                                  (E =
                                                      null != T
                                                          ? n.filter.updateChild(
                                                                _,
                                                                D,
                                                                T,
                                                                kn(t),
                                                                h,
                                                                a
                                                            )
                                                          : e.eventCache
                                                                .getNode()
                                                                .hasChild(D)
                                                          ? n.filter.updateChild(
                                                                _,
                                                                D,
                                                                zt.EMPTY_NODE,
                                                                kn(t),
                                                                h,
                                                                a
                                                            )
                                                          : _),
                                                  E.isEmpty() &&
                                                      e.serverCache.isFullyInitialized() &&
                                                      ((l = im(r, Al(e))),
                                                      l.isLeafNode() &&
                                                          (E =
                                                              n.filter.updateFullNode(
                                                                  E,
                                                                  l,
                                                                  a
                                                              )));
                                          }
                                          return (
                                              (l =
                                                  e.serverCache.isFullyInitialized() ||
                                                  null != vf(r, fn())),
                                              yf(
                                                  e,
                                                  E,
                                                  l,
                                                  n.filter.filtersNodes()
                                              )
                                          );
                                      }
                                  })(n, e, E.path, r, i, a)
                                : (function kS(n, e, t, r, i, a, l) {
                                      if (null != vf(i, t)) return e;
                                      const h = e.serverCache.isFiltered(),
                                          _ = e.serverCache;
                                      if (null != r.value) {
                                          if (
                                              (en(t) &&
                                                  _.isFullyInitialized()) ||
                                              _.isCompleteForPath(t)
                                          )
                                              return am(
                                                  n,
                                                  e,
                                                  t,
                                                  _.getNode().getChild(t),
                                                  i,
                                                  a,
                                                  h,
                                                  l
                                              );
                                          if (en(t)) {
                                              let E = new On(null);
                                              return (
                                                  _.getNode().forEachChild(
                                                      Uo,
                                                      (D, T) => {
                                                          E = E.set(
                                                              new xn(D),
                                                              T
                                                          );
                                                      }
                                                  ),
                                                  If(n, e, t, E, i, a, h, l)
                                              );
                                          }
                                          return e;
                                      }
                                      {
                                          let E = new On(null);
                                          return (
                                              r.foreach((D, T) => {
                                                  const R = Mn(t, D);
                                                  _.isCompleteForPath(R) &&
                                                      (E = E.set(
                                                          D,
                                                          _.getNode().getChild(
                                                              R
                                                          )
                                                      ));
                                              }),
                                              If(n, e, t, E, i, a, h, l)
                                          );
                                      }
                                  })(n, e, E.path, E.affectedTree, r, i, a);
                        } else {
                            if (t.type !== so.LISTEN_COMPLETE)
                                throw (0, C.g5)(
                                    "Unknown operation type: " + t.type
                                );
                            l = (function qI(n, e, t, r, i) {
                                const a = e.serverCache;
                                return WI(
                                    n,
                                    $v(
                                        e,
                                        a.getNode(),
                                        a.isFullyInitialized() || en(t),
                                        a.isFiltered()
                                    ),
                                    t,
                                    r,
                                    om,
                                    i
                                );
                            })(n, e, t.path, r, a);
                        }
                        const _ = a.getChanges();
                        return (
                            (function NS(n, e, t) {
                                const r = e.eventCache;
                                if (r.isFullyInitialized()) {
                                    const i =
                                            r.getNode().isLeafNode() ||
                                            r.getNode().isEmpty(),
                                        a = em(n);
                                    (t.length > 0 ||
                                        !n.eventCache.isFullyInitialized() ||
                                        (i && !r.getNode().equals(a)) ||
                                        !r
                                            .getNode()
                                            .getPriority()
                                            .equals(a.getPriority())) &&
                                        t.push(Qg(em(e)));
                                }
                            })(e, l, _),
                            { viewCache: l, changes: _ }
                        );
                    })(n.processor_, i, e, t, r);
                return (
                    (function WN(n, e) {
                        (0, C.hu)(
                            e.eventCache
                                .getNode()
                                .isIndexed(n.filter.getIndex()),
                            "Event snap not indexed"
                        ),
                            (0, C.hu)(
                                e.serverCache
                                    .getNode()
                                    .isIndexed(n.filter.getIndex()),
                                "Server snap not indexed"
                            );
                    })(n.processor_, a.viewCache),
                    (0, C.hu)(
                        a.viewCache.serverCache.isFullyInitialized() ||
                            !i.serverCache.isFullyInitialized(),
                        "Once a server snap is complete, it should never go back"
                    ),
                    (n.viewCache_ = a.viewCache),
                    ew(n, a.changes, a.viewCache.eventCache.getNode(), null)
                );
            }
            function ew(n, e, t, r) {
                return (function wS(n, e, t, r) {
                    const i = [],
                        a = [];
                    return (
                        e.forEach((l) => {
                            "child_changed" === l.type &&
                                n.index_.indexedValueChanged(
                                    l.oldSnap,
                                    l.snapshotNode
                                ) &&
                                a.push(
                                    (function AI(n, e) {
                                        return {
                                            type: "child_moved",
                                            snapshotNode: e,
                                            childName: n,
                                        };
                                    })(l.childName, l.snapshotNode)
                                );
                        }),
                        Vs(n, i, "child_removed", e, r, t),
                        Vs(n, i, "child_added", e, r, t),
                        Vs(n, i, "child_moved", a, r, t),
                        Vs(n, i, "child_changed", e, r, t),
                        Vs(n, i, "value", e, r, t),
                        i
                    );
                })(n.eventGenerator_, e, t, r ? [r] : n.eventRegistrations_);
            }
            let Cf, dm;
            class Go {
                constructor() {
                    this.views = new Map();
                }
            }
            function tw(n, e, t, r) {
                const i = e.source.queryId;
                if (null !== i) {
                    const a = n.views.get(i);
                    return (
                        (0, C.hu)(
                            null != a,
                            "SyncTree gave us an op for an invalid query."
                        ),
                        Xv(a, e, t, r)
                    );
                }
                {
                    let a = [];
                    for (const l of n.views.values())
                        a = a.concat(Xv(l, e, t, r));
                    return a;
                }
            }
            function nw(n, e, t, r, i) {
                const l = n.views.get(e._queryIdentifier);
                if (!l) {
                    let h = im(t, i ? r : null),
                        _ = !1;
                    h
                        ? (_ = !0)
                        : r instanceof zt
                        ? ((h = sm(t, r)), (_ = !1))
                        : ((h = zt.EMPTY_NODE), (_ = !1));
                    const E = ud(new Ca(h, _, !1), new Ca(r, i, !1));
                    return new KI(e, E);
                }
                return l;
            }
            function rw(n) {
                const e = [];
                for (const t of n.views.values())
                    t.query._queryParams.loadsAllData() || e.push(t);
                return e;
            }
            function Wo(n, e) {
                let t = null;
                for (const r of n.views.values()) t = t || Qv(r, e);
                return t;
            }
            function YI(n, e) {
                return e._queryParams.loadsAllData()
                    ? cm(n)
                    : n.views.get(e._queryIdentifier);
            }
            function lm(n, e) {
                return null != YI(n, e);
            }
            function mu(n) {
                return null != cm(n);
            }
            function cm(n) {
                for (const e of n.views.values())
                    if (e.query._queryParams.loadsAllData()) return e;
                return null;
            }
            let jS = 1;
            class bf {
                constructor(e) {
                    (this.listenProvider_ = e),
                        (this.syncPointTree_ = new On(null)),
                        (this.pendingWriteTree_ = (function AS() {
                            return {
                                visibleWrites: _i.empty(),
                                allWrites: [],
                                lastWriteId: -1,
                            };
                        })()),
                        (this.tagToQueryMap = new Map()),
                        (this.queryToTagMap = new Map());
                }
            }
            function ba(n, e, t, r, i) {
                return (
                    (function IS(n, e, t, r, i) {
                        (0, C.hu)(
                            r > n.lastWriteId,
                            "Stacking an older write on top of newer ones"
                        ),
                            void 0 === i && (i = !0),
                            n.allWrites.push({
                                path: e,
                                snap: t,
                                writeId: r,
                                visible: i,
                            }),
                            i && (n.visibleWrites = fu(n.visibleWrites, e, t)),
                            (n.lastWriteId = r);
                    })(n.pendingWriteTree_, e, t, r, i),
                    i
                        ? oo(
                              n,
                              new du(
                                  {
                                      fromUser: !0,
                                      fromServer: !1,
                                      queryId: null,
                                      tagged: !1,
                                  },
                                  e,
                                  t
                              )
                          )
                        : []
                );
            }
            function Us(n, e, t = !1) {
                const r = (function CS(n, e) {
                    for (let t = 0; t < n.allWrites.length; t++) {
                        const r = n.allWrites[t];
                        if (r.writeId === e) return r;
                    }
                    return null;
                })(n.pendingWriteTree_, e);
                if (
                    (function UI(n, e) {
                        const t = n.allWrites.findIndex((h) => h.writeId === e);
                        (0, C.hu)(
                            t >= 0,
                            "removeWrite called with nonexistent writeId."
                        );
                        const r = n.allWrites[t];
                        n.allWrites.splice(t, 1);
                        let i = r.visible,
                            a = !1,
                            l = n.allWrites.length - 1;
                        for (; i && l >= 0; ) {
                            const h = n.allWrites[l];
                            h.visible &&
                                (l >= t && bS(h, r.path)
                                    ? (i = !1)
                                    : qi(r.path, h.path) && (a = !0)),
                                l--;
                        }
                        return (
                            !!i &&
                            (a
                                ? ((function DS(n) {
                                      (n.visibleWrites = BI(
                                          n.allWrites,
                                          us,
                                          fn()
                                      )),
                                          (n.lastWriteId =
                                              n.allWrites.length > 0
                                                  ? n.allWrites[
                                                        n.allWrites.length - 1
                                                    ].writeId
                                                  : -1);
                                  })(n),
                                  !0)
                                : (r.snap
                                      ? (n.visibleWrites = FI(
                                            n.visibleWrites,
                                            r.path
                                        ))
                                      : Rr(r.children, (_) => {
                                            n.visibleWrites = FI(
                                                n.visibleWrites,
                                                Mn(r.path, _)
                                            );
                                        }),
                                  !0))
                        );
                    })(n.pendingWriteTree_, e)
                ) {
                    let a = new On(null);
                    return (
                        null != r.snap
                            ? (a = a.set(fn(), !0))
                            : Rr(r.children, (l) => {
                                  a = a.set(new xn(l), !0);
                              }),
                        oo(n, new ad(r.path, a, t))
                    );
                }
                return [];
            }
            function Df(n, e, t) {
                return oo(
                    n,
                    new du(
                        {
                            fromUser: !1,
                            fromServer: !0,
                            queryId: null,
                            tagged: !1,
                        },
                        e,
                        t
                    )
                );
            }
            function ls(n, e, t, r) {
                const i = e._path,
                    a = n.syncPointTree_.get(i);
                let l = [];
                if (a && ("default" === e._queryIdentifier || lm(a, e))) {
                    const h = (function ZN(n, e, t, r) {
                        const i = e._queryIdentifier,
                            a = [];
                        let l = [];
                        const h = mu(n);
                        if ("default" === i)
                            for (const [_, E] of n.views.entries())
                                (l = l.concat(Jv(E, t, r))),
                                    OS(E) &&
                                        (n.views.delete(_),
                                        E.query._queryParams.loadsAllData() ||
                                            a.push(E.query));
                        else {
                            const _ = n.views.get(i);
                            _ &&
                                ((l = l.concat(Jv(_, t, r))),
                                OS(_) &&
                                    (n.views.delete(i),
                                    _.query._queryParams.loadsAllData() ||
                                        a.push(_.query)));
                        }
                        return (
                            h &&
                                !mu(n) &&
                                a.push(
                                    new ((function KN() {
                                        return (
                                            (0, C.hu)(
                                                Cf,
                                                "Reference.ts has not been loaded"
                                            ),
                                            Cf
                                        );
                                    })())(e._repo, e._path)
                                ),
                            { removed: a, events: l }
                        );
                    })(a, e, t, r);
                    (function LS(n) {
                        return 0 === n.views.size;
                    })(a) && (n.syncPointTree_ = n.syncPointTree_.remove(i));
                    const _ = h.removed;
                    l = h.events;
                    const E =
                            -1 !==
                            _.findIndex((T) => T._queryParams.loadsAllData()),
                        D = n.syncPointTree_.findOnPath(i, (T, R) => mu(R));
                    if (E && !D) {
                        const T = n.syncPointTree_.subtree(i);
                        if (!T.isEmpty()) {
                            const R = (function QI(n) {
                                return n.fold((e, t, r) => {
                                    if (t && mu(t)) return [cm(t)];
                                    {
                                        let i = [];
                                        return (
                                            t && (i = rw(t)),
                                            Rr(r, (a, l) => {
                                                i = i.concat(l);
                                            }),
                                            i
                                        );
                                    }
                                });
                            })(T);
                            for (let F = 0; F < R.length; ++F) {
                                const K = R[F],
                                    Ie = K.query,
                                    Re = Pl(n, K);
                                n.listenProvider_.startListening(
                                    fd(Ie),
                                    zo(n, Ie),
                                    Re.hashFn,
                                    Re.onComplete
                                );
                            }
                        }
                    }
                    !D &&
                        _.length > 0 &&
                        !r &&
                        (E
                            ? n.listenProvider_.stopListening(fd(e), null)
                            : _.forEach((T) => {
                                  const R = n.queryToTagMap.get(Da(T));
                                  n.listenProvider_.stopListening(fd(T), R);
                              })),
                        (function JI(n, e) {
                            for (let t = 0; t < e.length; ++t) {
                                const r = e[t];
                                if (!r._queryParams.loadsAllData()) {
                                    const i = Da(r),
                                        a = n.queryToTagMap.get(i);
                                    n.queryToTagMap.delete(i),
                                        n.tagToQueryMap.delete(a);
                                }
                            }
                        })(n, _);
                }
                return l;
            }
            function ii(n, e, t, r) {
                const i = _u(n, r);
                if (null != i) {
                    const a = yu(i),
                        l = a.path,
                        h = a.queryId,
                        _ = Mi(l, e);
                    return hm(n, l, new du(jo(h), _, t));
                }
                return [];
            }
            function Sf(n, e) {
                const t = n._path;
                let r = null,
                    i = !1;
                e.syncPointTree_.foreachOnPath(t, (E, D) => {
                    const T = Mi(E, t);
                    (r = r || Wo(D, T)), (i = i || mu(D));
                });
                let l,
                    a = e.syncPointTree_.get(t);
                a
                    ? ((i = i || mu(a)), (r = r || Wo(a, fn())))
                    : ((a = new Go()),
                      (e.syncPointTree_ = e.syncPointTree_.set(t, a))),
                    null != r
                        ? (l = !0)
                        : ((l = !1),
                          (r = zt.EMPTY_NODE),
                          e.syncPointTree_.subtree(t).foreachChild((D, T) => {
                              const R = Wo(T, fn());
                              R && (r = r.updateImmediateChild(D, R));
                          }));
                const h = lm(a, n);
                if (!h && !n._queryParams.loadsAllData()) {
                    const E = Da(n);
                    (0, C.hu)(
                        !e.queryToTagMap.has(E),
                        "View does not exist, but we have a tag"
                    );
                    const D = (function XI() {
                        return jS++;
                    })();
                    e.queryToTagMap.set(E, D), e.tagToQueryMap.set(D, E);
                }
                return {
                    syncPoint: a,
                    writesCache: Gv(e.pendingWriteTree_, t),
                    serverCache: r,
                    serverCacheComplete: l,
                    foundAncestorDefaultView: i,
                    viewAlreadyExists: h,
                };
            }
            function cs(n, e, t) {
                const {
                    syncPoint: r,
                    serverCache: i,
                    writesCache: a,
                    serverCacheComplete: l,
                    viewAlreadyExists: h,
                    foundAncestorDefaultView: _,
                } = Sf(e, n);
                let E = (function VS(n, e, t, r, i, a) {
                    const l = nw(n, e, r, i, a);
                    return (
                        n.views.has(e._queryIdentifier) ||
                            n.views.set(e._queryIdentifier, l),
                        (function FS(n, e) {
                            n.eventRegistrations_.push(e);
                        })(l, t),
                        (function ZI(n, e) {
                            const t = n.viewCache_.eventCache,
                                r = [];
                            return (
                                t.getNode().isLeafNode() ||
                                    t.getNode().forEachChild(jn, (a, l) => {
                                        r.push(Tl(a, l));
                                    }),
                                t.isFullyInitialized() &&
                                    r.push(Qg(t.getNode())),
                                ew(n, r, t.getNode(), e)
                            );
                        })(l, t)
                    );
                })(r, e, t, a, i, l);
                if (!h && !_) {
                    const D = YI(r, e);
                    E = E.concat(
                        (function eC(n, e, t) {
                            const r = e._path,
                                i = zo(n, e),
                                a = Pl(n, t),
                                l = n.listenProvider_.startListening(
                                    fd(e),
                                    i,
                                    a.hashFn,
                                    a.onComplete
                                ),
                                h = n.syncPointTree_.subtree(r);
                            if (i)
                                (0, C.hu)(
                                    !mu(h.value),
                                    "If we're adding a query, it shouldn't be shadowed"
                                );
                            else {
                                const _ = h.fold((E, D, T) => {
                                    if (!en(E) && D && mu(D))
                                        return [cm(D).query];
                                    {
                                        let R = [];
                                        return (
                                            D &&
                                                (R = R.concat(
                                                    rw(D).map((F) => F.query)
                                                )),
                                            Rr(T, (F, K) => {
                                                R = R.concat(K);
                                            }),
                                            R
                                        );
                                    }
                                });
                                for (let E = 0; E < _.length; ++E) {
                                    const D = _[E];
                                    n.listenProvider_.stopListening(
                                        fd(D),
                                        zo(n, D)
                                    );
                                }
                            }
                            return l;
                        })(n, e, D)
                    );
                }
                return E;
            }
            function dd(n, e, t) {
                const i = n.pendingWriteTree_,
                    a = n.syncPointTree_.findOnPath(e, (l, h) => {
                        const E = Wo(h, Mi(l, e));
                        if (E) return E;
                    });
                return jI(i, e, a, t, !0);
            }
            function oo(n, e) {
                return Ml(
                    e,
                    n.syncPointTree_,
                    null,
                    Gv(n.pendingWriteTree_, fn())
                );
            }
            function Ml(n, e, t, r) {
                if (en(n.path)) return Nl(n, e, t, r);
                {
                    const i = e.get(fn());
                    null == t && null != i && (t = Wo(i, fn()));
                    let a = [];
                    const l = Kt(n.path),
                        h = n.operationForChild(l),
                        _ = e.children.get(l);
                    if (_ && h) {
                        const E = t ? t.getImmediateChild(l) : null,
                            D = qv(r, l);
                        a = a.concat(Ml(h, _, E, D));
                    }
                    return i && (a = a.concat(tw(i, n, r, t))), a;
                }
            }
            function Nl(n, e, t, r) {
                const i = e.get(fn());
                null == t && null != i && (t = Wo(i, fn()));
                let a = [];
                return (
                    e.children.inorderTraversal((l, h) => {
                        const _ = t ? t.getImmediateChild(l) : null,
                            E = qv(r, l),
                            D = n.operationForChild(l);
                        D && (a = a.concat(Nl(D, h, _, E)));
                    }),
                    i && (a = a.concat(tw(i, n, r, t))),
                    a
                );
            }
            function Pl(n, e) {
                const t = e.query,
                    r = zo(n, t);
                return {
                    hashFn: () =>
                        (
                            (function zN(n) {
                                return n.viewCache_.serverCache.getNode();
                            })(e) || zt.EMPTY_NODE
                        ).hash(),
                    onComplete: (i) => {
                        if ("ok" === i)
                            return r
                                ? (function $S(n, e, t) {
                                      const r = _u(n, t);
                                      if (r) {
                                          const i = yu(r),
                                              a = i.path,
                                              l = i.queryId,
                                              h = Mi(a, e);
                                          return hm(n, a, new _f(jo(l), h));
                                      }
                                      return [];
                                  })(n, t._path, r)
                                : (function iw(n, e) {
                                      return oo(
                                          n,
                                          new _f(
                                              {
                                                  fromUser: !1,
                                                  fromServer: !0,
                                                  queryId: null,
                                                  tagged: !1,
                                              },
                                              e
                                          )
                                      );
                                  })(n, t._path);
                        {
                            const a = (function $T(n, e) {
                                let t = "Unknown Error";
                                "too_big" === n
                                    ? (t =
                                          "The data requested exceeds the maximum size that can be accessed with a single request.")
                                    : "permission_denied" === n
                                    ? (t =
                                          "Client doesn't have permission to access the desired data.")
                                    : "unavailable" === n &&
                                      (t = "The service is unavailable");
                                const r = new Error(
                                    n + " at " + e._path.toString() + ": " + t
                                );
                                return (r.code = n.toUpperCase()), r;
                            })(i, t);
                            return ls(n, t, null, a);
                        }
                    },
                };
            }
            function zo(n, e) {
                const t = Da(e);
                return n.queryToTagMap.get(t);
            }
            function Da(n) {
                return n._path.toString() + "$" + n._queryIdentifier;
            }
            function _u(n, e) {
                return n.tagToQueryMap.get(e);
            }
            function yu(n) {
                const e = n.indexOf("$");
                return (
                    (0, C.hu)(-1 !== e && e < n.length - 1, "Bad queryKey."),
                    { queryId: n.substr(e + 1), path: new xn(n.substr(0, e)) }
                );
            }
            function hm(n, e, t) {
                const r = n.syncPointTree_.get(e);
                return (
                    (0, C.hu)(
                        r,
                        "Missing sync point for query tag that we're tracking"
                    ),
                    tw(r, t, Gv(n.pendingWriteTree_, e), null)
                );
            }
            function fd(n) {
                return n._queryParams.loadsAllData() &&
                    !n._queryParams.isDefault()
                    ? new ((function BS() {
                          return (
                              (0, C.hu)(dm, "Reference.ts has not been loaded"),
                              dm
                          );
                      })())(n._repo, n._path)
                    : n;
            }
            class fm {
                constructor(e) {
                    this.node_ = e;
                }
                getImmediateChild(e) {
                    const t = this.node_.getImmediateChild(e);
                    return new fm(t);
                }
                node() {
                    return this.node_;
                }
            }
            class pm {
                constructor(e, t) {
                    (this.syncTree_ = e), (this.path_ = t);
                }
                getImmediateChild(e) {
                    const t = Mn(this.path_, e);
                    return new pm(this.syncTree_, t);
                }
                node() {
                    return dd(this.syncTree_, this.path_);
                }
            }
            const nC = function (n, e, t) {
                    return n && "object" == typeof n
                        ? ((0, C.hu)(
                              ".sv" in n,
                              "Unexpected leaf node or priority contents"
                          ),
                          "string" == typeof n[".sv"]
                              ? GS(n[".sv"], e, t)
                              : "object" == typeof n[".sv"]
                              ? WS(n[".sv"], e)
                              : void (0, C.hu)(
                                    !1,
                                    "Unexpected server value: " +
                                        JSON.stringify(n, null, 2)
                                ))
                        : n;
                },
                GS = function (n, e, t) {
                    if ("timestamp" === n) return t.timestamp;
                    (0, C.hu)(!1, "Unexpected server value: " + n);
                },
                WS = function (n, e, t) {
                    n.hasOwnProperty("increment") ||
                        (0, C.hu)(
                            !1,
                            "Unexpected server value: " +
                                JSON.stringify(n, null, 2)
                        );
                    const r = n.increment;
                    "number" != typeof r &&
                        (0, C.hu)(!1, "Unexpected increment value: " + r);
                    const i = e.node();
                    if (
                        ((0, C.hu)(
                            null !== i && typeof i < "u",
                            "Expected ChildrenNode.EMPTY_NODE for nulls"
                        ),
                        !i.isLeafNode())
                    )
                        return r;
                    const l = i.getValue();
                    return "number" != typeof l ? r : l + r;
                },
                sw = function (n, e, t, r) {
                    return gm(e, new pm(t, n), r);
                },
                ow = function (n, e, t) {
                    return gm(n, new fm(e), t);
                };
            function gm(n, e, t) {
                const r = n.getPriority().val(),
                    i = nC(r, e.getImmediateChild(".priority"), t);
                let a;
                if (n.isLeafNode()) {
                    const l = n,
                        h = nC(l.getValue(), e, t);
                    return h !== l.getValue() || i !== l.getPriority().val()
                        ? new ff(h, Wn(i))
                        : n;
                }
                {
                    const l = n;
                    return (
                        (a = l),
                        i !== l.getPriority().val() &&
                            (a = a.updatePriority(new ff(i))),
                        l.forEachChild(jn, (h, _) => {
                            const E = gm(_, e.getImmediateChild(h), t);
                            E !== _ && (a = a.updateImmediateChild(h, E));
                        }),
                        a
                    );
                }
            }
            class Af {
                constructor(
                    e = "",
                    t = null,
                    r = { children: {}, childCount: 0 }
                ) {
                    (this.name = e), (this.parent = t), (this.node = r);
                }
            }
            function pd(n, e) {
                let t = e instanceof xn ? e : new xn(e),
                    r = n,
                    i = Kt(t);
                for (; null !== i; ) {
                    const a = (0, C.DV)(r.node.children, i) || {
                        children: {},
                        childCount: 0,
                    };
                    (r = new Af(i, r, a)), (t = kn(t)), (i = Kt(t));
                }
                return r;
            }
            function kl(n) {
                return n.node.value;
            }
            function gd(n, e) {
                (n.node.value = e), ym(n);
            }
            function xf(n) {
                return n.node.childCount > 0;
            }
            function mm(n, e) {
                Rr(n.node.children, (t, r) => {
                    e(new Af(t, n, r));
                });
            }
            function _m(n, e, t, r) {
                t && !r && e(n),
                    mm(n, (i) => {
                        _m(i, e, !0, r);
                    }),
                    t && r && e(n);
            }
            function md(n) {
                return new xn(
                    null === n.parent ? n.name : md(n.parent) + "/" + n.name
                );
            }
            function ym(n) {
                null !== n.parent &&
                    (function lw(n, e, t) {
                        const r = (function aw(n) {
                                return void 0 === kl(n) && !xf(n);
                            })(t),
                            i = (0, C.r3)(n.node.children, e);
                        r && i
                            ? (delete n.node.children[e],
                              n.node.childCount--,
                              ym(n))
                            : !r &&
                              !i &&
                              ((n.node.children[e] = t.node),
                              n.node.childCount++,
                              ym(n));
                    })(n.parent, n.name, n);
            }
            const rC = /[\[\].#$\/\u0000-\u001F\u007F]/,
                iC = /[\[\].#$\u0000-\u001F\u007F]/,
                Rf = 10485760,
                Mf = function (n) {
                    return (
                        "string" == typeof n && 0 !== n.length && !rC.test(n)
                    );
                },
                sC = function (n) {
                    return (
                        "string" == typeof n && 0 !== n.length && !iC.test(n)
                    );
                },
                _d = function (n) {
                    return (
                        null === n ||
                        "string" == typeof n ||
                        ("number" == typeof n && !Ag(n)) ||
                        (n && "object" == typeof n && (0, C.r3)(n, ".sv"))
                    );
                },
                ao = function (n, e, t, r) {
                    (r && void 0 === e) || yd((0, C.gK)(n, "value"), e, t);
                },
                yd = function (n, e, t) {
                    const r = t instanceof xn ? new wI(t, n) : t;
                    if (void 0 === e)
                        throw new Error(n + "contains undefined " + Ia(r));
                    if ("function" == typeof e)
                        throw new Error(
                            n +
                                "contains a function " +
                                Ia(r) +
                                " with contents = " +
                                e.toString()
                        );
                    if (Ag(e))
                        throw new Error(
                            n + "contains " + e.toString() + " " + Ia(r)
                        );
                    if (
                        "string" == typeof e &&
                        e.length > Rf / 3 &&
                        (0, C.ug)(e) > Rf
                    )
                        throw new Error(
                            n +
                                "contains a string greater than " +
                                Rf +
                                " utf8 bytes " +
                                Ia(r) +
                                " ('" +
                                e.substring(0, 50) +
                                "...')"
                        );
                    if (e && "object" == typeof e) {
                        let i = !1,
                            a = !1;
                        if (
                            (Rr(e, (l, h) => {
                                if (".value" === l) i = !0;
                                else if (
                                    ".priority" !== l &&
                                    ".sv" !== l &&
                                    ((a = !0), !Mf(l))
                                )
                                    throw new Error(
                                        n +
                                            " contains an invalid key (" +
                                            l +
                                            ") " +
                                            Ia(r) +
                                            '.  Keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]"'
                                    );
                                (function EI(n, e) {
                                    n.parts_.length > 0 && (n.byteLength_ += 1),
                                        n.parts_.push(e),
                                        (n.byteLength_ += (0, C.ug)(e)),
                                        II(n);
                                })(r, l),
                                    yd(n, h, r),
                                    (function Vo(n) {
                                        const e = n.parts_.pop();
                                        (n.byteLength_ -= (0, C.ug)(e)),
                                            n.parts_.length > 0 &&
                                                (n.byteLength_ -= 1);
                                    })(r);
                            }),
                            i && a)
                        )
                            throw new Error(
                                n +
                                    ' contains ".value" child ' +
                                    Ia(r) +
                                    " in addition to actual children."
                            );
                    }
                },
                aC = function (n, e, t, r) {
                    if (r && void 0 === e) return;
                    const i = (0, C.gK)(n, "values");
                    if (!e || "object" != typeof e || Array.isArray(e))
                        throw new Error(
                            i +
                                " must be an object containing the children to replace."
                        );
                    const a = [];
                    Rr(e, (l, h) => {
                        const _ = new xn(l);
                        if (
                            (yd(i, h, Mn(t, _)),
                            ".priority" === sf(_) && !_d(h))
                        )
                            throw new Error(
                                i +
                                    "contains an invalid value for '" +
                                    _.toString() +
                                    "', which must be a valid Firebase priority (a string, finite number, server value, or null)."
                            );
                        a.push(_);
                    }),
                        (function (n, e) {
                            let t, r;
                            for (t = 0; t < e.length; t++) {
                                r = e[t];
                                const a = af(r);
                                for (let l = 0; l < a.length; l++)
                                    if (
                                        (".priority" !== a[l] ||
                                            l !== a.length - 1) &&
                                        !Mf(a[l])
                                    )
                                        throw new Error(
                                            n +
                                                "contains an invalid key (" +
                                                a[l] +
                                                ") in path " +
                                                r.toString() +
                                                '. Keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]"'
                                        );
                            }
                            e.sort(oS);
                            let i = null;
                            for (t = 0; t < e.length; t++) {
                                if (((r = e[t]), null !== i && qi(i, r)))
                                    throw new Error(
                                        n +
                                            "contains a path " +
                                            i.toString() +
                                            " that is ancestor of another path " +
                                            r.toString()
                                    );
                                i = r;
                            }
                        })(i, a);
                },
                cw = function (n, e, t) {
                    if (!t || void 0 !== e) {
                        if (Ag(e))
                            throw new Error(
                                (0, C.gK)(n, "priority") +
                                    "is " +
                                    e.toString() +
                                    ", but must be a valid Firebase priority (a string, finite number, server value, or null)."
                            );
                        if (!_d(e))
                            throw new Error(
                                (0, C.gK)(n, "priority") +
                                    "must be a valid Firebase priority (a string, finite number, server value, or null)."
                            );
                    }
                },
                vd = function (n, e, t, r) {
                    if (!((r && void 0 === t) || Mf(t)))
                        throw new Error(
                            (0, C.gK)(n, e) +
                                'was an invalid key = "' +
                                t +
                                '".  Firebase keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]").'
                        );
                },
                Ol = function (n, e, t, r) {
                    if (!((r && void 0 === t) || sC(t)))
                        throw new Error(
                            (0, C.gK)(n, e) +
                                'was an invalid path = "' +
                                t +
                                '". Paths must be non-empty strings and can\'t contain ".", "#", "$", "[", or "]"'
                        );
                },
                ds = function (n, e) {
                    if (".info" === Kt(e))
                        throw new Error(
                            n + " failed = Can't modify data under /.info/"
                        );
                },
                dw = function (n, e) {
                    const t = e.path.toString();
                    if (
                        "string" != typeof e.repoInfo.host ||
                        0 === e.repoInfo.host.length ||
                        (!Mf(e.repoInfo.namespace) &&
                            "localhost" !== e.repoInfo.host.split(":")[0]) ||
                        (0 !== t.length &&
                            !(function (n) {
                                return (
                                    n &&
                                        (n = n.replace(
                                            /^\/*\.info(\/|$)/,
                                            "/"
                                        )),
                                    sC(n)
                                );
                            })(t))
                    )
                        throw new Error(
                            (0, C.gK)(n, "url") +
                                'must be a valid firebase URL and the path can\'t contain ".", "#", "$", "[", or "]".'
                        );
                };
            class lC {
                constructor() {
                    (this.eventLists_ = []), (this.recursionDepth_ = 0);
                }
            }
            function Nf(n, e) {
                let t = null;
                for (let r = 0; r < e.length; r++) {
                    const i = e[r],
                        a = i.getPath();
                    null !== t &&
                        !Rv(a, t.path) &&
                        (n.eventLists_.push(t), (t = null)),
                        null === t && (t = { events: [], path: a }),
                        t.events.push(i);
                }
                t && n.eventLists_.push(t);
            }
            function hw(n, e, t) {
                Nf(n, t), fw(n, (r) => Rv(r, e));
            }
            function hs(n, e, t) {
                Nf(n, t), fw(n, (r) => qi(r, e) || qi(e, r));
            }
            function fw(n, e) {
                n.recursionDepth_++;
                let t = !0;
                for (let r = 0; r < n.eventLists_.length; r++) {
                    const i = n.eventLists_[r];
                    i &&
                        (e(i.path)
                            ? (QN(n.eventLists_[r]), (n.eventLists_[r] = null))
                            : (t = !1));
                }
                t && (n.eventLists_ = []), n.recursionDepth_--;
            }
            function QN(n) {
                for (let e = 0; e < n.events.length; e++) {
                    const t = n.events[e];
                    if (null !== t) {
                        n.events[e] = null;
                        const r = t.getEventRunner();
                        Fo && nr("event: " + t.toString()), Cl(r);
                    }
                }
            }
            const cC = "repo_interrupt";
            class dC {
                constructor(e, t, r, i) {
                    (this.repoInfo_ = e),
                        (this.forceRestClient_ = t),
                        (this.authTokenProvider_ = r),
                        (this.appCheckProvider_ = i),
                        (this.dataUpdateCount = 0),
                        (this.statsListener_ = null),
                        (this.eventQueue_ = new lC()),
                        (this.nextWriteId_ = 1),
                        (this.interceptServerDataCallback_ = null),
                        (this.onDisconnect_ = gf()),
                        (this.transactionQueueTree_ = new Af()),
                        (this.persistentConnection_ = null),
                        (this.key = this.repoInfo_.toURLString());
                }
                toString() {
                    return (
                        (this.repoInfo_.secure ? "https://" : "http://") +
                        this.repoInfo_.host
                    );
                }
            }
            function Mr(n) {
                const t =
                    n.infoData_
                        .getNode(new xn(".info/serverTimeOffset"))
                        .val() || 0;
                return new Date().getTime() + t;
            }
            function wd(n) {
                return (function (n) {
                    return (
                        ((n = n || {}).timestamp =
                            n.timestamp || new Date().getTime()),
                        n
                    );
                })({ timestamp: Mr(n) });
            }
            function hC(n, e, t, r, i) {
                n.dataUpdateCount++;
                const a = new xn(e);
                t = n.interceptServerDataCallback_
                    ? n.interceptServerDataCallback_(e, t)
                    : t;
                let l = [];
                if (i)
                    if (r) {
                        const _ = (0, C.UI)(t, (E) => Wn(E));
                        l = (function Rl(n, e, t, r) {
                            const i = _u(n, r);
                            if (i) {
                                const a = yu(i),
                                    l = a.path,
                                    h = a.queryId,
                                    _ = Mi(l, e),
                                    E = On.fromObject(t);
                                return hm(n, l, new hu(jo(h), _, E));
                            }
                            return [];
                        })(n.serverSyncTree_, a, _, i);
                    } else {
                        const _ = Wn(t);
                        l = ii(n.serverSyncTree_, a, _, i);
                    }
                else if (r) {
                    const _ = (0, C.UI)(t, (E) => Wn(E));
                    l = (function HS(n, e, t) {
                        const r = On.fromObject(t);
                        return oo(
                            n,
                            new hu(
                                {
                                    fromUser: !1,
                                    fromServer: !0,
                                    queryId: null,
                                    tagged: !1,
                                },
                                e,
                                r
                            )
                        );
                    })(n.serverSyncTree_, a, _);
                } else {
                    const _ = Wn(t);
                    l = Df(n.serverSyncTree_, a, _);
                }
                let h = a;
                l.length > 0 && (h = Ed(n, a)), hs(n.eventQueue_, h, l);
            }
            function fC(n, e) {
                pw(n, "connected", e),
                    !1 === e &&
                        (function YS(n) {
                            Fl(n, "onDisconnectEvents");
                            const e = wd(n),
                                t = gf();
                            NI(n.onDisconnect_, fn(), (i, a) => {
                                const l = sw(i, a, n.serverSyncTree_, e);
                                od(t, i, l);
                            });
                            let r = [];
                            NI(t, fn(), (i, a) => {
                                r = r.concat(Df(n.serverSyncTree_, i, a));
                                const l = gw(n, i);
                                Ed(n, l);
                            }),
                                (n.onDisconnect_ = gf()),
                                hs(n.eventQueue_, fn(), r);
                        })(n);
            }
            function pw(n, e, t) {
                const r = new xn("/.info/" + e),
                    i = Wn(t);
                n.infoData_.updateSnapshot(r, i);
                const a = Df(n.infoSyncTree_, r, i);
                hs(n.eventQueue_, r, a);
            }
            function Pf(n) {
                return n.nextWriteId_++;
            }
            function gC(n, e) {
                const t = (function hd(n, e) {
                    const t = e._path;
                    let r = null;
                    n.syncPointTree_.foreachOnPath(t, (E, D) => {
                        const T = Mi(E, t);
                        r = r || Wo(D, T);
                    });
                    let i = n.syncPointTree_.get(t);
                    i
                        ? (r = r || Wo(i, fn()))
                        : ((i = new Go()),
                          (n.syncPointTree_ = n.syncPointTree_.set(t, i)));
                    const a = null != r,
                        l = a ? new Ca(r, !0, !1) : null;
                    return (function qN(n) {
                        return em(n.viewCache_);
                    })(
                        nw(
                            i,
                            e,
                            Gv(n.pendingWriteTree_, e._path),
                            a ? l.getNode() : zt.EMPTY_NODE,
                            a
                        )
                    );
                })(n.serverSyncTree_, e);
                return null != t
                    ? Promise.resolve(t)
                    : n.server_.get(e).then(
                          (r) => {
                              const i = Wn(r).withIndex(
                                  e._queryParams.getIndex()
                              );
                              if (e._queryParams.loadsAllData())
                                  Df(n.serverSyncTree_, e._path, i);
                              else {
                                  const l = (function Tf(n, e) {
                                      const {
                                              syncPoint: t,
                                              serverCache: r,
                                              writesCache: i,
                                              serverCacheComplete: a,
                                          } = Sf(e, n),
                                          l = nw(t, e, i, r, a);
                                      return (
                                          t.views.has(e._queryIdentifier) ||
                                              t.views.set(
                                                  e._queryIdentifier,
                                                  l
                                              ),
                                          e._queryParams.loadsAllData()
                                              ? null
                                              : zo(n, e)
                                      );
                                  })(n.serverSyncTree_, e);
                                  ii(n.serverSyncTree_, e._path, i, l);
                              }
                              return (
                                  ls(n.serverSyncTree_, e, null).length > 0 &&
                                      Fl(
                                          n,
                                          "unexpected cancel events in repoGetValue"
                                      ),
                                  i
                              );
                          },
                          (r) => (
                              Fl(
                                  n,
                                  "get for query " +
                                      (0, C.Pz)(e) +
                                      " failed: " +
                                      r
                              ),
                              Promise.reject(new Error(r))
                          )
                      );
            }
            function vu(n, e, t, r, i) {
                Fl(n, "set", { path: e.toString(), value: t, priority: r });
                const a = wd(n),
                    l = Wn(t, r),
                    h = dd(n.serverSyncTree_, e),
                    _ = ow(l, h, a),
                    E = Pf(n),
                    D = ba(n.serverSyncTree_, e, _, E, !0);
                Nf(n.eventQueue_, D),
                    n.server_.put(e.toString(), l.val(!0), (R, F) => {
                        const K = "ok" === R;
                        K || $r("set at " + e + " failed: " + R);
                        const Ie = Us(n.serverSyncTree_, E, !K);
                        hs(n.eventQueue_, e, Ie), si(0, i, R, F);
                    });
                const T = gw(n, e);
                Ed(n, T), hs(n.eventQueue_, T, []);
            }
            function mC(n, e, t) {
                n.server_.onDisconnectCancel(e.toString(), (r, i) => {
                    "ok" === r && mf(n.onDisconnect_, e), si(0, t, r, i);
                });
            }
            function _C(n, e, t, r) {
                const i = Wn(t);
                n.server_.onDisconnectPut(e.toString(), i.val(!0), (a, l) => {
                    "ok" === a && od(n.onDisconnect_, e, i), si(0, r, a, l);
                });
            }
            function kf(n, e, t) {
                let r;
                (r =
                    ".info" === Kt(e._path)
                        ? ls(n.infoSyncTree_, e, t)
                        : ls(n.serverSyncTree_, e, t)),
                    hw(n.eventQueue_, e._path, r);
            }
            function uo(n) {
                n.persistentConnection_ &&
                    n.persistentConnection_.interrupt(cC);
            }
            function Fl(n, ...e) {
                let t = "";
                n.persistentConnection_ &&
                    (t = n.persistentConnection_.id + ":"),
                    nr(t, ...e);
            }
            function si(n, e, t, r) {
                e &&
                    Cl(() => {
                        if ("ok" === t) e(null);
                        else {
                            const i = (t || "error").toUpperCase();
                            let a = i;
                            r && (a += ": " + r);
                            const l = new Error(a);
                            (l.code = i), e(l);
                        }
                    });
            }
            function fs(n, e, t) {
                return dd(n.serverSyncTree_, e, t) || zt.EMPTY_NODE;
            }
            function Of(n, e = n.transactionQueueTree_) {
                if ((e || wu(n, e), kl(e))) {
                    const t = IC(n, e);
                    (0, C.hu)(
                        t.length > 0,
                        "Sending zero length transaction queue"
                    ),
                        t.every((i) => 0 === i.status) &&
                            (function wC(n, e, t) {
                                const r = t.map((E) => E.currentWriteId),
                                    i = fs(n, e, r);
                                let a = i;
                                const l = i.hash();
                                for (let E = 0; E < t.length; E++) {
                                    const D = t[E];
                                    (0, C.hu)(
                                        0 === D.status,
                                        "tryToSendTransactionQueue_: items in queue should all be run."
                                    ),
                                        (D.status = 1),
                                        D.retryCount++;
                                    const T = Mi(e, D.path);
                                    a = a.updateChild(
                                        T,
                                        D.currentOutputSnapshotRaw
                                    );
                                }
                                const h = a.val(!0),
                                    _ = e;
                                n.server_.put(
                                    _.toString(),
                                    h,
                                    (E) => {
                                        Fl(n, "transaction put response", {
                                            path: _.toString(),
                                            status: E,
                                        });
                                        let D = [];
                                        if ("ok" === E) {
                                            const T = [];
                                            for (let R = 0; R < t.length; R++)
                                                (t[R].status = 2),
                                                    (D = D.concat(
                                                        Us(
                                                            n.serverSyncTree_,
                                                            t[R].currentWriteId
                                                        )
                                                    )),
                                                    t[R].onComplete &&
                                                        T.push(() =>
                                                            t[R].onComplete(
                                                                null,
                                                                !0,
                                                                t[R]
                                                                    .currentOutputSnapshotResolved
                                                            )
                                                        ),
                                                    t[R].unwatcher();
                                            wu(
                                                n,
                                                pd(n.transactionQueueTree_, e)
                                            ),
                                                Of(n, n.transactionQueueTree_),
                                                hs(n.eventQueue_, e, D);
                                            for (let R = 0; R < T.length; R++)
                                                Cl(T[R]);
                                        } else {
                                            if ("datastale" === E)
                                                for (
                                                    let T = 0;
                                                    T < t.length;
                                                    T++
                                                )
                                                    t[T].status =
                                                        3 === t[T].status
                                                            ? 4
                                                            : 0;
                                            else {
                                                $r(
                                                    "transaction at " +
                                                        _.toString() +
                                                        " failed: " +
                                                        E
                                                );
                                                for (
                                                    let T = 0;
                                                    T < t.length;
                                                    T++
                                                )
                                                    (t[T].status = 4),
                                                        (t[T].abortReason = E);
                                            }
                                            Ed(n, e);
                                        }
                                    },
                                    l
                                );
                            })(n, md(e), t);
                } else
                    xf(e) &&
                        mm(e, (t) => {
                            Of(n, t);
                        });
            }
            function Ed(n, e) {
                const t = EC(n, e),
                    r = md(t);
                return (
                    (function JS(n, e, t) {
                        if (0 === e.length) return;
                        const r = [];
                        let i = [];
                        const l = e
                            .filter((h) => 0 === h.status)
                            .map((h) => h.currentWriteId);
                        for (let h = 0; h < e.length; h++) {
                            const _ = e[h],
                                E = Mi(t, _.path);
                            let T,
                                D = !1;
                            if (
                                ((0, C.hu)(
                                    null !== E,
                                    "rerunTransactionsUnderNode_: relativePath should not be null."
                                ),
                                4 === _.status)
                            )
                                (D = !0),
                                    (T = _.abortReason),
                                    (i = i.concat(
                                        Us(
                                            n.serverSyncTree_,
                                            _.currentWriteId,
                                            !0
                                        )
                                    ));
                            else if (0 === _.status)
                                if (_.retryCount >= 25)
                                    (D = !0),
                                        (T = "maxretry"),
                                        (i = i.concat(
                                            Us(
                                                n.serverSyncTree_,
                                                _.currentWriteId,
                                                !0
                                            )
                                        ));
                                else {
                                    const R = fs(n, _.path, l);
                                    _.currentInputSnapshot = R;
                                    const F = e[h].update(R.val());
                                    if (void 0 !== F) {
                                        yd(
                                            "transaction failed: Data returned ",
                                            F,
                                            _.path
                                        );
                                        let K = Wn(F);
                                        ("object" == typeof F &&
                                            null != F &&
                                            (0, C.r3)(F, ".priority")) ||
                                            (K = K.updatePriority(
                                                R.getPriority()
                                            ));
                                        const Re = _.currentWriteId,
                                            mt = wd(n),
                                            _t = ow(K, R, mt);
                                        (_.currentOutputSnapshotRaw = K),
                                            (_.currentOutputSnapshotResolved =
                                                _t),
                                            (_.currentWriteId = Pf(n)),
                                            l.splice(l.indexOf(Re), 1),
                                            (i = i.concat(
                                                ba(
                                                    n.serverSyncTree_,
                                                    _.path,
                                                    _t,
                                                    _.currentWriteId,
                                                    _.applyLocally
                                                )
                                            )),
                                            (i = i.concat(
                                                Us(n.serverSyncTree_, Re, !0)
                                            ));
                                    } else
                                        (D = !0),
                                            (T = "nodata"),
                                            (i = i.concat(
                                                Us(
                                                    n.serverSyncTree_,
                                                    _.currentWriteId,
                                                    !0
                                                )
                                            ));
                                }
                            hs(n.eventQueue_, t, i),
                                (i = []),
                                D &&
                                    ((e[h].status = 2),
                                    setTimeout(e[h].unwatcher, Math.floor(0)),
                                    e[h].onComplete &&
                                        r.push(
                                            "nodata" === T
                                                ? () =>
                                                      e[h].onComplete(
                                                          null,
                                                          !1,
                                                          e[h]
                                                              .currentInputSnapshot
                                                      )
                                                : () =>
                                                      e[h].onComplete(
                                                          new Error(T),
                                                          !1,
                                                          null
                                                      )
                                        ));
                        }
                        wu(n, n.transactionQueueTree_);
                        for (let h = 0; h < r.length; h++) Cl(r[h]);
                        Of(n, n.transactionQueueTree_);
                    })(n, IC(n, t), r),
                    r
                );
            }
            function EC(n, e) {
                let t,
                    r = n.transactionQueueTree_;
                for (t = Kt(e); null !== t && void 0 === kl(r); )
                    (r = pd(r, t)), (t = Kt((e = kn(e))));
                return r;
            }
            function IC(n, e) {
                const t = [];
                return vm(n, e, t), t.sort((r, i) => r.order - i.order), t;
            }
            function vm(n, e, t) {
                const r = kl(e);
                if (r) for (let i = 0; i < r.length; i++) t.push(r[i]);
                mm(e, (i) => {
                    vm(n, i, t);
                });
            }
            function wu(n, e) {
                const t = kl(e);
                if (t) {
                    let r = 0;
                    for (let i = 0; i < t.length; i++)
                        2 !== t[i].status && ((t[r] = t[i]), r++);
                    (t.length = r), gd(e, t.length > 0 ? t : void 0);
                }
                mm(e, (r) => {
                    wu(n, r);
                });
            }
            function gw(n, e) {
                const t = md(EC(n, e)),
                    r = pd(n.transactionQueueTree_, e);
                return (
                    (function uw(n, e, t) {
                        let r = t ? n : n.parent;
                        for (; null !== r; ) {
                            if (e(r)) return !0;
                            r = r.parent;
                        }
                    })(r, (i) => {
                        wm(n, i);
                    }),
                    wm(n, r),
                    _m(r, (i) => {
                        wm(n, i);
                    }),
                    t
                );
            }
            function wm(n, e) {
                const t = kl(e);
                if (t) {
                    const r = [];
                    let i = [],
                        a = -1;
                    for (let l = 0; l < t.length; l++)
                        3 === t[l].status ||
                            (1 === t[l].status
                                ? ((0, C.hu)(
                                      a === l - 1,
                                      "All SENT items should be at beginning of queue."
                                  ),
                                  (a = l),
                                  (t[l].status = 3),
                                  (t[l].abortReason = "set"))
                                : ((0, C.hu)(
                                      0 === t[l].status,
                                      "Unexpected transaction status in abort"
                                  ),
                                  t[l].unwatcher(),
                                  (i = i.concat(
                                      Us(
                                          n.serverSyncTree_,
                                          t[l].currentWriteId,
                                          !0
                                      )
                                  )),
                                  t[l].onComplete &&
                                      r.push(
                                          t[l].onComplete.bind(
                                              null,
                                              new Error("set"),
                                              !1,
                                              null
                                          )
                                      )));
                    -1 === a ? gd(e, void 0) : (t.length = a + 1),
                        hs(n.eventQueue_, md(e), i);
                    for (let l = 0; l < r.length; l++) Cl(r[l]);
                }
            }
            const Em = function (n, e) {
                    const t = Im(n),
                        r = t.namespace;
                    return (
                        "firebase.com" === t.domain &&
                            ri(
                                t.host +
                                    " is no longer supported. Please use <YOUR FIREBASE>.firebaseio.com instead"
                            ),
                        (!r || "undefined" === r) &&
                            "localhost" !== t.domain &&
                            ri(
                                "Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com"
                            ),
                        t.secure ||
                            (typeof window < "u" &&
                                window.location &&
                                window.location.protocol &&
                                -1 !==
                                    window.location.protocol.indexOf(
                                        "https:"
                                    ) &&
                                $r(
                                    "Insecure Firebase access from a secure page. Please use https in calls to new Firebase()."
                                )),
                        {
                            repoInfo: new Iv(
                                t.host,
                                t.secure,
                                r,
                                "ws" === t.scheme || "wss" === t.scheme,
                                e,
                                "",
                                r !== t.subdomain
                            ),
                            path: new xn(t.pathString),
                        }
                    );
                },
                Im = function (n) {
                    let e = "",
                        t = "",
                        r = "",
                        i = "",
                        a = "",
                        l = !0,
                        h = "https",
                        _ = 443;
                    if ("string" == typeof n) {
                        let E = n.indexOf("//");
                        E >= 0 &&
                            ((h = n.substring(0, E - 1)),
                            (n = n.substring(E + 2)));
                        let D = n.indexOf("/");
                        -1 === D && (D = n.length);
                        let T = n.indexOf("?");
                        -1 === T && (T = n.length),
                            (e = n.substring(0, Math.min(D, T))),
                            D < T &&
                                (i = (function XS(n) {
                                    let e = "";
                                    const t = n.split("/");
                                    for (let r = 0; r < t.length; r++)
                                        if (t[r].length > 0) {
                                            let i = t[r];
                                            try {
                                                i = decodeURIComponent(
                                                    i.replace(/\+/g, " ")
                                                );
                                            } catch {}
                                            e += "/" + i;
                                        }
                                    return e;
                                })(n.substring(D, T)));
                        const R = (function CC(n) {
                            const e = {};
                            "?" === n.charAt(0) && (n = n.substring(1));
                            for (const t of n.split("&")) {
                                if (0 === t.length) continue;
                                const r = t.split("=");
                                2 === r.length
                                    ? (e[decodeURIComponent(r[0])] =
                                          decodeURIComponent(r[1]))
                                    : $r(
                                          `Invalid query segment '${t}' in query '${n}'`
                                      );
                            }
                            return e;
                        })(n.substring(Math.min(n.length, T)));
                        (E = e.indexOf(":")),
                            E >= 0
                                ? ((l = "https" === h || "wss" === h),
                                  (_ = parseInt(e.substring(E + 1), 10)))
                                : (E = e.length);
                        const F = e.slice(0, E);
                        if ("localhost" === F.toLowerCase()) t = "localhost";
                        else if (F.split(".").length <= 2) t = F;
                        else {
                            const K = e.indexOf(".");
                            (r = e.substring(0, K).toLowerCase()),
                                (t = e.substring(K + 1)),
                                (a = r);
                        }
                        "ns" in R && (a = R.ns);
                    }
                    return {
                        host: e,
                        port: _,
                        domain: t,
                        subdomain: r,
                        secure: l,
                        scheme: h,
                        pathString: i,
                        namespace: a,
                    };
                };
            class bC {
                constructor(e, t, r, i) {
                    (this.eventType = e),
                        (this.eventRegistration = t),
                        (this.snapshot = r),
                        (this.prevName = i);
                }
                getPath() {
                    const e = this.snapshot.ref;
                    return "value" === this.eventType
                        ? e._path
                        : e.parent._path;
                }
                getEventType() {
                    return this.eventType;
                }
                getEventRunner() {
                    return this.eventRegistration.getEventRunner(this);
                }
                toString() {
                    return (
                        this.getPath().toString() +
                        ":" +
                        this.eventType +
                        ":" +
                        (0, C.Pz)(this.snapshot.exportVal())
                    );
                }
            }
            class mw {
                constructor(e, t, r) {
                    (this.eventRegistration = e),
                        (this.error = t),
                        (this.path = r);
                }
                getPath() {
                    return this.path;
                }
                getEventType() {
                    return "cancel";
                }
                getEventRunner() {
                    return this.eventRegistration.getEventRunner(this);
                }
                toString() {
                    return this.path.toString() + ":cancel";
                }
            }
            class _w {
                constructor(e, t) {
                    (this.snapshotCallback = e), (this.cancelCallback = t);
                }
                onValue(e, t) {
                    this.snapshotCallback.call(null, e, t);
                }
                onCancel(e) {
                    return (
                        (0, C.hu)(
                            this.hasCancelCallback,
                            "Raising a cancel event on a listener with no cancel callback"
                        ),
                        this.cancelCallback.call(null, e)
                    );
                }
                get hasCancelCallback() {
                    return !!this.cancelCallback;
                }
                matches(e) {
                    return (
                        this.snapshotCallback === e.snapshotCallback ||
                        (void 0 !== this.snapshotCallback.userCallback &&
                            this.snapshotCallback.userCallback ===
                                e.snapshotCallback.userCallback &&
                            this.snapshotCallback.context ===
                                e.snapshotCallback.context)
                    );
                }
            }
            class yw {
                constructor(e, t) {
                    (this._repo = e), (this._path = t);
                }
                cancel() {
                    const e = new C.BH();
                    return (
                        mC(
                            this._repo,
                            this._path,
                            e.wrapCallback(() => {})
                        ),
                        e.promise
                    );
                }
                remove() {
                    ds("OnDisconnect.remove", this._path);
                    const e = new C.BH();
                    return (
                        _C(
                            this._repo,
                            this._path,
                            null,
                            e.wrapCallback(() => {})
                        ),
                        e.promise
                    );
                }
                set(e) {
                    ds("OnDisconnect.set", this._path),
                        ao("OnDisconnect.set", e, this._path, !1);
                    const t = new C.BH();
                    return (
                        _C(
                            this._repo,
                            this._path,
                            e,
                            t.wrapCallback(() => {})
                        ),
                        t.promise
                    );
                }
                setWithPriority(e, t) {
                    ds("OnDisconnect.setWithPriority", this._path),
                        ao("OnDisconnect.setWithPriority", e, this._path, !1),
                        cw("OnDisconnect.setWithPriority", t, !1);
                    const r = new C.BH();
                    return (
                        (function yC(n, e, t, r, i) {
                            const a = Wn(t, r);
                            n.server_.onDisconnectPut(
                                e.toString(),
                                a.val(!0),
                                (l, h) => {
                                    "ok" === l && od(n.onDisconnect_, e, a),
                                        si(0, i, l, h);
                                }
                            );
                        })(
                            this._repo,
                            this._path,
                            e,
                            t,
                            r.wrapCallback(() => {})
                        ),
                        r.promise
                    );
                }
                update(e) {
                    ds("OnDisconnect.update", this._path),
                        aC("OnDisconnect.update", e, this._path, !1);
                    const t = new C.BH();
                    return (
                        (function JN(n, e, t, r) {
                            if ((0, C.xb)(t))
                                return (
                                    nr(
                                        "onDisconnect().update() called with empty data.  Don't do anything."
                                    ),
                                    void si(0, r, "ok", void 0)
                                );
                            n.server_.onDisconnectMerge(
                                e.toString(),
                                t,
                                (i, a) => {
                                    "ok" === i &&
                                        Rr(t, (l, h) => {
                                            const _ = Wn(h);
                                            od(n.onDisconnect_, Mn(e, l), _);
                                        }),
                                        si(0, r, i, a);
                                }
                            );
                        })(
                            this._repo,
                            this._path,
                            e,
                            t.wrapCallback(() => {})
                        ),
                        t.promise
                    );
                }
            }
            class oi {
                constructor(e, t, r, i) {
                    (this._repo = e),
                        (this._path = t),
                        (this._queryParams = r),
                        (this._orderByCalled = i);
                }
                get key() {
                    return en(this._path) ? null : sf(this._path);
                }
                get ref() {
                    return new ps(this._repo, this._path);
                }
                get _queryIdentifier() {
                    const e = RI(this._queryParams),
                        t = pv(e);
                    return "{}" === t ? "default" : t;
                }
                get _queryObject() {
                    return RI(this._queryParams);
                }
                isEqual(e) {
                    if (!((e = (0, C.m9)(e)) instanceof oi)) return !1;
                    const t = this._repo === e._repo,
                        r = Rv(this._path, e._path);
                    return (
                        t && r && this._queryIdentifier === e._queryIdentifier
                    );
                }
                toJSON() {
                    return this.toString();
                }
                toString() {
                    return (
                        this._repo.toString() +
                        (function sS(n) {
                            let e = "";
                            for (let t = n.pieceNum_; t < n.pieces_.length; t++)
                                "" !== n.pieces_[t] &&
                                    (e +=
                                        "/" +
                                        encodeURIComponent(
                                            String(n.pieces_[t])
                                        ));
                            return e || "/";
                        })(this._path)
                    );
                }
            }
            function Ff(n, e) {
                if (!0 === n._orderByCalled)
                    throw new Error(
                        e + ": You can't combine multiple orderBy calls."
                    );
            }
            function Ta(n) {
                let e = null,
                    t = null;
                if (
                    (n.hasStart() && (e = n.getIndexStartValue()),
                    n.hasEnd() && (t = n.getIndexEndValue()),
                    n.getIndex() === Uo)
                ) {
                    const r =
                            "Query: When ordering by key, you may only pass one argument to startAt(), endAt(), or equalTo().",
                        i =
                            "Query: When ordering by key, the argument passed to startAt(), startAfter(), endAt(), endBefore(), or equalTo() must be a string.";
                    if (n.hasStart()) {
                        if (n.getIndexStartName() !== va) throw new Error(r);
                        if ("string" != typeof e) throw new Error(i);
                    }
                    if (n.hasEnd()) {
                        if (n.getIndexEndName() !== Lo) throw new Error(r);
                        if ("string" != typeof t) throw new Error(i);
                    }
                } else if (n.getIndex() === jn) {
                    if ((null != e && !_d(e)) || (null != t && !_d(t)))
                        throw new Error(
                            "Query: When ordering by priority, the first argument passed to startAt(), startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value (null, a number, or a string)."
                        );
                } else if (
                    ((0, C.hu)(
                        n.getIndex() instanceof Kg || n.getIndex() === Zg,
                        "unknown index type."
                    ),
                    (null != e && "object" == typeof e) ||
                        (null != t && "object" == typeof t))
                )
                    throw new Error(
                        "Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or equalTo() cannot be an object."
                    );
            }
            function Lf(n) {
                if (
                    n.hasStart() &&
                    n.hasEnd() &&
                    n.hasLimit() &&
                    !n.hasAnchoredLimit()
                )
                    throw new Error(
                        "Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use limitToFirst() or limitToLast() instead."
                    );
            }
            class ps extends oi {
                constructor(e, t) {
                    super(e, t, new sd(), !1);
                }
                get parent() {
                    const e = xv(this._path);
                    return null === e ? null : new ps(this._repo, e);
                }
                get root() {
                    let e = this;
                    for (; null !== e.parent; ) e = e.parent;
                    return e;
                }
            }
            class Eu {
                constructor(e, t, r) {
                    (this._node = e), (this.ref = t), (this._index = r);
                }
                get priority() {
                    return this._node.getPriority().val();
                }
                get key() {
                    return this.ref.key;
                }
                get size() {
                    return this._node.numChildren();
                }
                child(e) {
                    const t = new xn(e),
                        r = Iu(this.ref, e);
                    return new Eu(this._node.getChild(t), r, jn);
                }
                exists() {
                    return !this._node.isEmpty();
                }
                exportVal() {
                    return this._node.val(!0);
                }
                forEach(e) {
                    return (
                        !this._node.isLeafNode() &&
                        !!this._node.forEachChild(this._index, (r, i) =>
                            e(new Eu(i, Iu(this.ref, r), jn))
                        )
                    );
                }
                hasChild(e) {
                    const t = new xn(e);
                    return !this._node.getChild(t).isEmpty();
                }
                hasChildren() {
                    return !this._node.isLeafNode() && !this._node.isEmpty();
                }
                toJSON() {
                    return this.exportVal();
                }
                val() {
                    return this._node.val();
                }
            }
            function vw(n, e) {
                return (
                    (n = (0, C.m9)(n))._checkNotDeleted("ref"),
                    void 0 !== e ? Iu(n._root, e) : n._root
                );
            }
            function ww(n, e) {
                (n = (0, C.m9)(n))._checkNotDeleted("refFromURL");
                const t = Em(e, n._repo.repoInfo_.nodeAdmin);
                dw("refFromURL", t);
                const r = t.repoInfo;
                return (
                    !n._repo.repoInfo_.isCustomHost() &&
                        r.host !== n._repo.repoInfo_.host &&
                        ri(
                            "refFromURL: Host name does not match the current database: (found " +
                                r.host +
                                " but expected " +
                                n._repo.repoInfo_.host +
                                ")"
                        ),
                    vw(n, t.path.toString())
                );
            }
            function Iu(n, e) {
                return (
                    null === Kt((n = (0, C.m9)(n))._path)
                        ? ((t = e),
                          t && (t = t.replace(/^\/*\.info(\/|$)/, "/")),
                          Ol("child", "path", t, !1))
                        : Ol("child", "path", e, !1),
                    new ps(n._repo, Mn(n._path, e))
                );
                var t;
            }
            function Ew(n, e) {
                (n = (0, C.m9)(n)),
                    ds("set", n._path),
                    ao("set", e, n._path, !1);
                const t = new C.BH();
                return (
                    vu(
                        n._repo,
                        n._path,
                        e,
                        null,
                        t.wrapCallback(() => {})
                    ),
                    t.promise
                );
            }
            function iA(n, e) {
                aC("update", e, n._path, !1);
                const t = new C.BH();
                return (
                    (function ZS(n, e, t, r) {
                        Fl(n, "update", { path: e.toString(), value: t });
                        let i = !0;
                        const a = wd(n),
                            l = {};
                        if (
                            (Rr(t, (h, _) => {
                                (i = !1),
                                    (l[h] = sw(
                                        Mn(e, h),
                                        Wn(_),
                                        n.serverSyncTree_,
                                        a
                                    ));
                            }),
                            i)
                        )
                            nr(
                                "update() called with empty data.  Don't do anything."
                            ),
                                si(0, r, "ok", void 0);
                        else {
                            const h = Pf(n),
                                _ = (function YN(n, e, t, r) {
                                    !(function VI(n, e, t, r) {
                                        (0, C.hu)(
                                            r > n.lastWriteId,
                                            "Stacking an older merge on top of newer ones"
                                        ),
                                            n.allWrites.push({
                                                path: e,
                                                children: t,
                                                writeId: r,
                                                visible: !0,
                                            }),
                                            (n.visibleWrites = xl(
                                                n.visibleWrites,
                                                e,
                                                t
                                            )),
                                            (n.lastWriteId = r);
                                    })(n.pendingWriteTree_, e, t, r);
                                    const i = On.fromObject(t);
                                    return oo(
                                        n,
                                        new hu(
                                            {
                                                fromUser: !0,
                                                fromServer: !1,
                                                queryId: null,
                                                tagged: !1,
                                            },
                                            e,
                                            i
                                        )
                                    );
                                })(n.serverSyncTree_, e, l, h);
                            Nf(n.eventQueue_, _),
                                n.server_.merge(e.toString(), t, (E, D) => {
                                    const T = "ok" === E;
                                    T || $r("update at " + e + " failed: " + E);
                                    const R = Us(n.serverSyncTree_, h, !T),
                                        F = R.length > 0 ? Ed(n, e) : e;
                                    hs(n.eventQueue_, F, R), si(0, r, E, D);
                                }),
                                Rr(t, (E) => {
                                    const D = gw(n, Mn(e, E));
                                    Ed(n, D);
                                }),
                                hs(n.eventQueue_, e, []);
                        }
                    })(
                        n._repo,
                        n._path,
                        e,
                        t.wrapCallback(() => {})
                    ),
                    t.promise
                );
            }
            class Cm {
                constructor(e) {
                    this.callbackContext = e;
                }
                respondsTo(e) {
                    return "value" === e;
                }
                createEvent(e, t) {
                    const r = t._queryParams.getIndex();
                    return new bC(
                        "value",
                        this,
                        new Eu(e.snapshotNode, new ps(t._repo, t._path), r)
                    );
                }
                getEventRunner(e) {
                    return "cancel" === e.getEventType()
                        ? () => this.callbackContext.onCancel(e.error)
                        : () => this.callbackContext.onValue(e.snapshot, null);
                }
                createCancelEvent(e, t) {
                    return this.callbackContext.hasCancelCallback
                        ? new mw(this, e, t)
                        : null;
                }
                matches(e) {
                    return (
                        e instanceof Cm &&
                        (!e.callbackContext ||
                            !this.callbackContext ||
                            e.callbackContext.matches(this.callbackContext))
                    );
                }
                hasAnyCallback() {
                    return null !== this.callbackContext;
                }
            }
            class bm {
                constructor(e, t) {
                    (this.eventType = e), (this.callbackContext = t);
                }
                respondsTo(e) {
                    let t = "children_added" === e ? "child_added" : e;
                    return (
                        (t = "children_removed" === t ? "child_removed" : t),
                        this.eventType === t
                    );
                }
                createCancelEvent(e, t) {
                    return this.callbackContext.hasCancelCallback
                        ? new mw(this, e, t)
                        : null;
                }
                createEvent(e, t) {
                    (0, C.hu)(
                        null != e.childName,
                        "Child events should have a childName."
                    );
                    const r = Iu(new ps(t._repo, t._path), e.childName),
                        i = t._queryParams.getIndex();
                    return new bC(
                        e.type,
                        this,
                        new Eu(e.snapshotNode, r, i),
                        e.prevName
                    );
                }
                getEventRunner(e) {
                    return "cancel" === e.getEventType()
                        ? () => this.callbackContext.onCancel(e.error)
                        : () =>
                              this.callbackContext.onValue(
                                  e.snapshot,
                                  e.prevName
                              );
                }
                matches(e) {
                    return (
                        e instanceof bm &&
                        this.eventType === e.eventType &&
                        (!this.callbackContext ||
                            !e.callbackContext ||
                            this.callbackContext.matches(e.callbackContext))
                    );
                }
                hasAnyCallback() {
                    return !!this.callbackContext;
                }
            }
            function Vf(n, e, t, r, i) {
                let a;
                if (
                    ("object" == typeof r && ((a = void 0), (i = r)),
                    "function" == typeof r && (a = r),
                    i && i.onlyOnce)
                ) {
                    const _ = t,
                        E = (D, T) => {
                            kf(n._repo, n, h), _(D, T);
                        };
                    (E.userCallback = t.userCallback),
                        (E.context = t.context),
                        (t = E);
                }
                const l = new _w(t, a || void 0),
                    h = "value" === e ? new Cm(l) : new bm(e, l);
                return (
                    (function vC(n, e, t) {
                        let r;
                        (r =
                            ".info" === Kt(e._path)
                                ? cs(n.infoSyncTree_, e, t)
                                : cs(n.serverSyncTree_, e, t)),
                            hw(n.eventQueue_, e._path, r);
                    })(n._repo, n, h),
                    () => kf(n._repo, n, h)
                );
            }
            function Iw(n, e, t, r) {
                return Vf(n, "value", e, t, r);
            }
            function DC(n, e, t, r) {
                return Vf(n, "child_added", e, t, r);
            }
            function TC(n, e, t, r) {
                return Vf(n, "child_changed", e, t, r);
            }
            function SC(n, e, t, r) {
                return Vf(n, "child_moved", e, t, r);
            }
            function AC(n, e, t, r) {
                return Vf(n, "child_removed", e, t, r);
            }
            function xC(n, e, t) {
                let r = null;
                const i = t ? new _w(t) : null;
                "value" === e ? (r = new Cm(i)) : e && (r = new bm(e, i)),
                    kf(n._repo, n, r);
            }
            class co {}
            class Cw extends co {
                constructor(e, t) {
                    super(), (this._value = e), (this._key = t);
                }
                _apply(e) {
                    ao("endAt", this._value, e._path, !0);
                    const t = Bv(e._queryParams, this._value, this._key);
                    if ((Lf(t), Ta(t), e._queryParams.hasEnd()))
                        throw new Error(
                            "endAt: Starting point was already set (by another call to endAt, endBefore or equalTo)."
                        );
                    return new oi(e._repo, e._path, t, e._orderByCalled);
                }
            }
            class MC extends co {
                constructor(e, t) {
                    super(), (this._value = e), (this._key = t);
                }
                _apply(e) {
                    ao("endBefore", this._value, e._path, !1);
                    const t = (function _S(n, e, t) {
                        let r, i;
                        return (
                            n.index_ === Uo
                                ? ("string" == typeof e && (e = Bo(e)),
                                  (i = Bv(n, e, t)))
                                : ((r = null == t ? va : Bo(t)),
                                  (i = Bv(n, e, r))),
                            (i.endBeforeSet_ = !0),
                            i
                        );
                    })(e._queryParams, this._value, this._key);
                    if ((Lf(t), Ta(t), e._queryParams.hasEnd()))
                        throw new Error(
                            "endBefore: Starting point was already set (by another call to endAt, endBefore or equalTo)."
                        );
                    return new oi(e._repo, e._path, t, e._orderByCalled);
                }
            }
            class bw extends co {
                constructor(e, t) {
                    super(), (this._value = e), (this._key = t);
                }
                _apply(e) {
                    ao("startAt", this._value, e._path, !0);
                    const t = Uv(e._queryParams, this._value, this._key);
                    if ((Lf(t), Ta(t), e._queryParams.hasStart()))
                        throw new Error(
                            "startAt: Starting point was already set (by another call to startAt, startBefore or equalTo)."
                        );
                    return new oi(e._repo, e._path, t, e._orderByCalled);
                }
            }
            class kC extends co {
                constructor(e, t) {
                    super(), (this._value = e), (this._key = t);
                }
                _apply(e) {
                    ao("startAfter", this._value, e._path, !1);
                    const t = (function mS(n, e, t) {
                        let r;
                        if (n.index_ === Uo)
                            "string" == typeof e && (e = Yg(e)),
                                (r = Uv(n, e, t));
                        else {
                            let i;
                            (i = null == t ? Lo : Yg(t)), (r = Uv(n, e, i));
                        }
                        return (r.startAfterSet_ = !0), r;
                    })(e._queryParams, this._value, this._key);
                    if ((Lf(t), Ta(t), e._queryParams.hasStart()))
                        throw new Error(
                            "startAfter: Starting point was already set (by another call to startAt, startAfter, or equalTo)."
                        );
                    return new oi(e._repo, e._path, t, e._orderByCalled);
                }
            }
            class FC extends co {
                constructor(e) {
                    super(), (this._limit = e);
                }
                _apply(e) {
                    if (e._queryParams.hasLimit())
                        throw new Error(
                            "limitToFirst: Limit was already set (by another call to limitToFirst or limitToLast)."
                        );
                    return new oi(
                        e._repo,
                        e._path,
                        (function Vv(n, e) {
                            const t = n.copy();
                            return (
                                (t.limitSet_ = !0),
                                (t.limit_ = e),
                                (t.viewFrom_ = "l"),
                                t
                            );
                        })(e._queryParams, this._limit),
                        e._orderByCalled
                    );
                }
            }
            class VC extends co {
                constructor(e) {
                    super(), (this._limit = e);
                }
                _apply(e) {
                    if (e._queryParams.hasLimit())
                        throw new Error(
                            "limitToLast: Limit was already set (by another call to limitToFirst or limitToLast)."
                        );
                    return new oi(
                        e._repo,
                        e._path,
                        (function VN(n, e) {
                            const t = n.copy();
                            return (
                                (t.limitSet_ = !0),
                                (t.limit_ = e),
                                (t.viewFrom_ = "r"),
                                t
                            );
                        })(e._queryParams, this._limit),
                        e._orderByCalled
                    );
                }
            }
            class oA extends co {
                constructor(e) {
                    super(), (this._path = e);
                }
                _apply(e) {
                    Ff(e, "orderByChild");
                    const t = new xn(this._path);
                    if (en(t))
                        throw new Error(
                            "orderByChild: cannot pass in empty path. Use orderByValue() instead."
                        );
                    const r = new Kg(t),
                        i = pf(e._queryParams, r);
                    return Ta(i), new oi(e._repo, e._path, i, !0);
                }
            }
            class Id extends co {
                _apply(e) {
                    Ff(e, "orderByKey");
                    const t = pf(e._queryParams, Uo);
                    return Ta(t), new oi(e._repo, e._path, t, !0);
                }
            }
            class Dw extends co {
                _apply(e) {
                    Ff(e, "orderByPriority");
                    const t = pf(e._queryParams, jn);
                    return Ta(t), new oi(e._repo, e._path, t, !0);
                }
            }
            class UC extends co {
                _apply(e) {
                    Ff(e, "orderByValue");
                    const t = pf(e._queryParams, Zg);
                    return Ta(t), new oi(e._repo, e._path, t, !0);
                }
            }
            class nP extends co {
                constructor(e, t) {
                    super(), (this._value = e), (this._key = t);
                }
                _apply(e) {
                    if (
                        (ao("equalTo", this._value, e._path, !1),
                        e._queryParams.hasStart())
                    )
                        throw new Error(
                            "equalTo: Starting point was already set (by another call to startAt/startAfter or equalTo)."
                        );
                    if (e._queryParams.hasEnd())
                        throw new Error(
                            "equalTo: Ending point was already set (by another call to endAt/endBefore or equalTo)."
                        );
                    return new Cw(this._value, this._key)._apply(
                        new bw(this._value, this._key)._apply(e)
                    );
                }
            }
            function ho(n, ...e) {
                let t = (0, C.m9)(n);
                for (const r of e) t = r._apply(t);
                return t;
            }
            (function um(n) {
                (0, C.hu)(
                    !Cf,
                    "__referenceConstructor has already been defined"
                ),
                    (Cf = n);
            })(ps),
                (function US(n) {
                    (0, C.hu)(
                        !dm,
                        "__referenceConstructor has already been defined"
                    ),
                        (dm = n);
                })(ps);
            const Tw = {};
            function Uf(n, e, t, r, i) {
                let a = r || n.options.databaseURL;
                void 0 === a &&
                    (n.options.projectId ||
                        ri(
                            "Can't determine Firebase Database URL. Be sure to include  a Project ID when calling firebase.initializeApp()."
                        ),
                    nr("Using default host for project ", n.options.projectId),
                    (a = `${n.options.projectId}-default-rtdb.firebaseio.com`));
                let _,
                    E,
                    l = Em(a, i),
                    h = l.repoInfo;
                typeof process < "u" &&
                    process.env &&
                    (E = process.env.FIREBASE_DATABASE_EMULATOR_HOST),
                    E
                        ? ((_ = !0),
                          (a = `http://${E}?ns=${h.namespace}`),
                          (l = Em(a, i)),
                          (h = l.repoInfo))
                        : (_ = !l.repoInfo.secure);
                const D =
                    i && _ ? new ed(ed.OWNER) : new WT(n.name, n.options, e);
                dw("Invalid Firebase Database URL", l),
                    en(l.path) ||
                        ri(
                            "Database URL must point to the root of a Firebase Database (not including a child path)."
                        );
                const T = (function gr(n, e, t, r) {
                    let i = Tw[e.name];
                    i || ((i = {}), (Tw[e.name] = i));
                    let a = i[n.toURLString()];
                    return (
                        a &&
                            ri(
                                "Database initialized multiple times. Please make sure the format of the database URL matches with each database() call."
                            ),
                        (a = new dC(n, false, t, r)),
                        (i[n.toURLString()] = a),
                        a
                    );
                })(h, n, D, new Rg(n.name, t));
                return new jC(T, n);
            }
            class jC {
                constructor(e, t) {
                    (this._repoInternal = e),
                        (this.app = t),
                        (this.type = "database"),
                        (this._instanceStarted = !1);
                }
                get _repo() {
                    return (
                        this._instanceStarted ||
                            ((function KS(n, e, t) {
                                if (
                                    ((n.stats_ = Fg(n.repoInfo_)),
                                    n.forceRestClient_ ||
                                        (
                                            ("object" == typeof window &&
                                                window.navigator &&
                                                window.navigator.userAgent) ||
                                            ""
                                        ).search(
                                            /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i
                                        ) >= 0)
                                )
                                    (n.server_ = new jv(
                                        n.repoInfo_,
                                        (r, i, a, l) => {
                                            hC(n, r, i, a, l);
                                        },
                                        n.authTokenProvider_,
                                        n.appCheckProvider_
                                    )),
                                        setTimeout(() => fC(n, !0), 0);
                                else {
                                    if (typeof t < "u" && null !== t) {
                                        if ("object" != typeof t)
                                            throw new Error(
                                                "Only objects are supported for option databaseAuthVariableOverride"
                                            );
                                        try {
                                            (0, C.Pz)(t);
                                        } catch (r) {
                                            throw new Error(
                                                "Invalid authOverride provided: " +
                                                    r
                                            );
                                        }
                                    }
                                    (n.persistentConnection_ = new bl(
                                        n.repoInfo_,
                                        e,
                                        (r, i, a, l) => {
                                            hC(n, r, i, a, l);
                                        },
                                        (r) => {
                                            fC(n, r);
                                        },
                                        (r) => {
                                            !(function pC(n, e) {
                                                Rr(e, (t, r) => {
                                                    pw(n, t, r);
                                                });
                                            })(n, r);
                                        },
                                        n.authTokenProvider_,
                                        n.appCheckProvider_,
                                        t
                                    )),
                                        (n.server_ = n.persistentConnection_);
                                }
                                n.authTokenProvider_.addTokenChangeListener(
                                    (r) => {
                                        n.server_.refreshAuthToken(r);
                                    }
                                ),
                                    n.appCheckProvider_.addTokenChangeListener(
                                        (r) => {
                                            n.server_.refreshAppCheckToken(
                                                r.token
                                            );
                                        }
                                    ),
                                    (n.statsReporter_ = (function NN(n, e) {
                                        const t = n.toString();
                                        return ef[t] || (ef[t] = e()), ef[t];
                                    })(
                                        n.repoInfo_,
                                        () => new $N(n.stats_, n.server_)
                                    )),
                                    (n.infoData_ = new MI()),
                                    (n.infoSyncTree_ = new bf({
                                        startListening: (r, i, a, l) => {
                                            let h = [];
                                            const _ = n.infoData_.getNode(
                                                r._path
                                            );
                                            return (
                                                _.isEmpty() ||
                                                    ((h = Df(
                                                        n.infoSyncTree_,
                                                        r._path,
                                                        _
                                                    )),
                                                    setTimeout(() => {
                                                        l("ok");
                                                    }, 0)),
                                                h
                                            );
                                        },
                                        stopListening: () => {},
                                    })),
                                    pw(n, "connected", !1),
                                    (n.serverSyncTree_ = new bf({
                                        startListening: (r, i, a, l) => (
                                            n.server_.listen(
                                                r,
                                                a,
                                                i,
                                                (h, _) => {
                                                    const E = l(h, _);
                                                    hs(
                                                        n.eventQueue_,
                                                        r._path,
                                                        E
                                                    );
                                                }
                                            ),
                                            []
                                        ),
                                        stopListening: (r, i) => {
                                            n.server_.unlisten(r, i);
                                        },
                                    }));
                            })(
                                this._repoInternal,
                                this.app.options.appId,
                                this.app.options.databaseAuthVariableOverride
                            ),
                            (this._instanceStarted = !0)),
                        this._repoInternal
                    );
                }
                get _root() {
                    return (
                        this._rootInternal ||
                            (this._rootInternal = new ps(this._repo, fn())),
                        this._rootInternal
                    );
                }
                _delete() {
                    return (
                        null !== this._rootInternal &&
                            ((function Dm(n, e) {
                                const t = Tw[e];
                                (!t || t[n.key] !== n) &&
                                    ri(
                                        `Database ${e}(${n.repoInfo_}) has already been deleted.`
                                    ),
                                    uo(n),
                                    delete t[n.key];
                            })(this._repo, this.app.name),
                            (this._repoInternal = null),
                            (this._rootInternal = null)),
                        Promise.resolve()
                    );
                }
                _checkNotDeleted(e) {
                    null === this._rootInternal &&
                        ri("Cannot call " + e + " on a deleted database.");
                }
            }
            function Sw() {
                bv.IS_TRANSPORT_INITIALIZED &&
                    $r(
                        "Transport has already been initialized. Please call this function before calling ref or setting up a listener"
                    );
            }
            function cA() {
                Sw(), Ea.forceDisallow();
            }
            function HC() {
                Sw(), nd.forceDisallow(), Ea.forceAllow();
            }
            function fA(n, e) {
                su(n, e);
            }
            const Bf = { ".sv": "timestamp" };
            class _A {
                constructor(e, t) {
                    (this.committed = e), (this.snapshot = t);
                }
                toJSON() {
                    return {
                        committed: this.committed,
                        snapshot: this.snapshot.toJSON(),
                    };
                }
            }
            (bl.prototype.simpleListen = function (n, e) {
                this.sendRequest("q", { p: n }, e);
            }),
                (bl.prototype.echo = function (n, e) {
                    this.sendRequest("echo", { d: n }, e);
                }),
                (function pA(n) {
                    At(A.SDK_VERSION),
                        (0, A._registerComponent)(
                            new m.wA(
                                "database",
                                (e, { instanceIdentifier: t }) =>
                                    Uf(
                                        e.getProvider("app").getImmediate(),
                                        e.getProvider("auth-internal"),
                                        e.getProvider("app-check-internal"),
                                        t
                                    ),
                                "PUBLIC"
                            ).setMultipleInstances(!0)
                        ),
                        (0, A.registerVersion)(re, "0.13.3", n),
                        (0, A.registerVersion)(re, "0.13.3", "esm2017");
                })();
            const jf = new H.Yd("@firebase/database-compat"),
                Cd = function (n) {
                    jf.warn("FIREBASE WARNING: " + n);
                };
            class CA {
                constructor(e) {
                    this._delegate = e;
                }
                cancel(e) {
                    (0, C.Dv)("OnDisconnect.cancel", 0, 1, arguments.length),
                        (0, C.Wj)("OnDisconnect.cancel", "onComplete", e, !0);
                    const t = this._delegate.cancel();
                    return (
                        e &&
                            t.then(
                                () => e(null),
                                (r) => e(r)
                            ),
                        t
                    );
                }
                remove(e) {
                    (0, C.Dv)("OnDisconnect.remove", 0, 1, arguments.length),
                        (0, C.Wj)("OnDisconnect.remove", "onComplete", e, !0);
                    const t = this._delegate.remove();
                    return (
                        e &&
                            t.then(
                                () => e(null),
                                (r) => e(r)
                            ),
                        t
                    );
                }
                set(e, t) {
                    (0, C.Dv)("OnDisconnect.set", 1, 2, arguments.length),
                        (0, C.Wj)("OnDisconnect.set", "onComplete", t, !0);
                    const r = this._delegate.set(e);
                    return (
                        t &&
                            r.then(
                                () => t(null),
                                (i) => t(i)
                            ),
                        r
                    );
                }
                setWithPriority(e, t, r) {
                    (0, C.Dv)(
                        "OnDisconnect.setWithPriority",
                        2,
                        3,
                        arguments.length
                    ),
                        (0, C.Wj)(
                            "OnDisconnect.setWithPriority",
                            "onComplete",
                            r,
                            !0
                        );
                    const i = this._delegate.setWithPriority(e, t);
                    return (
                        r &&
                            i.then(
                                () => r(null),
                                (a) => r(a)
                            ),
                        i
                    );
                }
                update(e, t) {
                    if (
                        ((0, C.Dv)(
                            "OnDisconnect.update",
                            1,
                            2,
                            arguments.length
                        ),
                        Array.isArray(e))
                    ) {
                        const i = {};
                        for (let a = 0; a < e.length; ++a) i["" + a] = e[a];
                        (e = i),
                            Cd(
                                "Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children."
                            );
                    }
                    (0, C.Wj)("OnDisconnect.update", "onComplete", t, !0);
                    const r = this._delegate.update(e);
                    return (
                        t &&
                            r.then(
                                () => t(null),
                                (i) => t(i)
                            ),
                        r
                    );
                }
            }
            class zC {
                constructor(e, t) {
                    (this.committed = e), (this.snapshot = t);
                }
                toJSON() {
                    return (
                        (0, C.Dv)(
                            "TransactionResult.toJSON",
                            0,
                            1,
                            arguments.length
                        ),
                        {
                            committed: this.committed,
                            snapshot: this.snapshot.toJSON(),
                        }
                    );
                }
            }
            class Sa {
                constructor(e, t) {
                    (this._database = e), (this._delegate = t);
                }
                val() {
                    return (
                        (0, C.Dv)("DataSnapshot.val", 0, 0, arguments.length),
                        this._delegate.val()
                    );
                }
                exportVal() {
                    return (
                        (0, C.Dv)(
                            "DataSnapshot.exportVal",
                            0,
                            0,
                            arguments.length
                        ),
                        this._delegate.exportVal()
                    );
                }
                toJSON() {
                    return (
                        (0, C.Dv)(
                            "DataSnapshot.toJSON",
                            0,
                            1,
                            arguments.length
                        ),
                        this._delegate.toJSON()
                    );
                }
                exists() {
                    return (
                        (0, C.Dv)(
                            "DataSnapshot.exists",
                            0,
                            0,
                            arguments.length
                        ),
                        this._delegate.exists()
                    );
                }
                child(e) {
                    return (
                        (0, C.Dv)("DataSnapshot.child", 0, 1, arguments.length),
                        (e = String(e)),
                        Ol("DataSnapshot.child", "path", e, !1),
                        new Sa(this._database, this._delegate.child(e))
                    );
                }
                hasChild(e) {
                    return (
                        (0, C.Dv)(
                            "DataSnapshot.hasChild",
                            1,
                            1,
                            arguments.length
                        ),
                        Ol("DataSnapshot.hasChild", "path", e, !1),
                        this._delegate.hasChild(e)
                    );
                }
                getPriority() {
                    return (
                        (0, C.Dv)(
                            "DataSnapshot.getPriority",
                            0,
                            0,
                            arguments.length
                        ),
                        this._delegate.priority
                    );
                }
                forEach(e) {
                    return (
                        (0, C.Dv)(
                            "DataSnapshot.forEach",
                            1,
                            1,
                            arguments.length
                        ),
                        (0, C.Wj)("DataSnapshot.forEach", "action", e, !1),
                        this._delegate.forEach((t) =>
                            e(new Sa(this._database, t))
                        )
                    );
                }
                hasChildren() {
                    return (
                        (0, C.Dv)(
                            "DataSnapshot.hasChildren",
                            0,
                            0,
                            arguments.length
                        ),
                        this._delegate.hasChildren()
                    );
                }
                get key() {
                    return this._delegate.key;
                }
                numChildren() {
                    return (
                        (0, C.Dv)(
                            "DataSnapshot.numChildren",
                            0,
                            0,
                            arguments.length
                        ),
                        this._delegate.size
                    );
                }
                getRef() {
                    return (
                        (0, C.Dv)("DataSnapshot.ref", 0, 0, arguments.length),
                        new gs(this._database, this._delegate.ref)
                    );
                }
                get ref() {
                    return this.getRef();
                }
            }
            class Gr {
                constructor(e, t) {
                    (this.database = e), (this._delegate = t);
                }
                on(e, t, r, i) {
                    var a;
                    (0, C.Dv)("Query.on", 2, 4, arguments.length),
                        (0, C.Wj)("Query.on", "callback", t, !1);
                    const l = Gr.getCancelAndContextArgs_("Query.on", r, i),
                        h = (E, D) => {
                            t.call(l.context, new Sa(this.database, E), D);
                        };
                    (h.userCallback = t), (h.context = l.context);
                    const _ =
                        null === (a = l.cancel) || void 0 === a
                            ? void 0
                            : a.bind(l.context);
                    switch (e) {
                        case "value":
                            return Iw(this._delegate, h, _), t;
                        case "child_added":
                            return DC(this._delegate, h, _), t;
                        case "child_removed":
                            return AC(this._delegate, h, _), t;
                        case "child_changed":
                            return TC(this._delegate, h, _), t;
                        case "child_moved":
                            return SC(this._delegate, h, _), t;
                        default:
                            throw new Error(
                                (0, C.gK)("Query.on", "eventType") +
                                    'must be a valid event type = "value", "child_added", "child_removed", "child_changed", or "child_moved".'
                            );
                    }
                }
                off(e, t, r) {
                    if (
                        ((0, C.Dv)("Query.off", 0, 3, arguments.length),
                        (function (n, e, t) {
                            if (void 0 !== e)
                                switch (e) {
                                    case "value":
                                    case "child_added":
                                    case "child_removed":
                                    case "child_changed":
                                    case "child_moved":
                                        break;
                                    default:
                                        throw new Error(
                                            (0, C.gK)(
                                                "Query.off",
                                                "eventType"
                                            ) +
                                                'must be a valid event type = "value", "child_added", "child_removed", "child_changed", or "child_moved".'
                                        );
                                }
                        })(0, e),
                        (0, C.Wj)("Query.off", "callback", t, !0),
                        (0, C.lb)("Query.off", "context", r, !0),
                        t)
                    ) {
                        const i = () => {};
                        (i.userCallback = t),
                            (i.context = r),
                            xC(this._delegate, e, i);
                    } else xC(this._delegate, e);
                }
                get() {
                    return (function sA(n) {
                        return gC((n = (0, C.m9)(n))._repo, n).then(
                            (e) =>
                                new Eu(
                                    e,
                                    new ps(n._repo, n._path),
                                    n._queryParams.getIndex()
                                )
                        );
                    })(this._delegate).then((e) => new Sa(this.database, e));
                }
                once(e, t, r, i) {
                    (0, C.Dv)("Query.once", 1, 4, arguments.length),
                        (0, C.Wj)("Query.once", "callback", t, !0);
                    const a = Gr.getCancelAndContextArgs_("Query.once", r, i),
                        l = new C.BH(),
                        h = (E, D) => {
                            const T = new Sa(this.database, E);
                            t && t.call(a.context, T, D), l.resolve(T);
                        };
                    (h.userCallback = t), (h.context = a.context);
                    const _ = (E) => {
                        a.cancel && a.cancel.call(a.context, E), l.reject(E);
                    };
                    switch (e) {
                        case "value":
                            Iw(this._delegate, h, _, { onlyOnce: !0 });
                            break;
                        case "child_added":
                            DC(this._delegate, h, _, { onlyOnce: !0 });
                            break;
                        case "child_removed":
                            AC(this._delegate, h, _, { onlyOnce: !0 });
                            break;
                        case "child_changed":
                            TC(this._delegate, h, _, { onlyOnce: !0 });
                            break;
                        case "child_moved":
                            SC(this._delegate, h, _, { onlyOnce: !0 });
                            break;
                        default:
                            throw new Error(
                                (0, C.gK)("Query.once", "eventType") +
                                    'must be a valid event type = "value", "child_added", "child_removed", "child_changed", or "child_moved".'
                            );
                    }
                    return l.promise;
                }
                limitToFirst(e) {
                    return (
                        (0, C.Dv)("Query.limitToFirst", 1, 1, arguments.length),
                        new Gr(
                            this.database,
                            ho(
                                this._delegate,
                                (function LC(n) {
                                    if (
                                        "number" != typeof n ||
                                        Math.floor(n) !== n ||
                                        n <= 0
                                    )
                                        throw new Error(
                                            "limitToFirst: First argument must be a positive integer."
                                        );
                                    return new FC(n);
                                })(e)
                            )
                        )
                    );
                }
                limitToLast(e) {
                    return (
                        (0, C.Dv)("Query.limitToLast", 1, 1, arguments.length),
                        new Gr(
                            this.database,
                            ho(
                                this._delegate,
                                (function Ll(n) {
                                    if (
                                        "number" != typeof n ||
                                        Math.floor(n) !== n ||
                                        n <= 0
                                    )
                                        throw new Error(
                                            "limitToLast: First argument must be a positive integer."
                                        );
                                    return new VC(n);
                                })(e)
                            )
                        )
                    );
                }
                orderByChild(e) {
                    return (
                        (0, C.Dv)("Query.orderByChild", 1, 1, arguments.length),
                        new Gr(
                            this.database,
                            ho(
                                this._delegate,
                                (function aA(n) {
                                    if ("$key" === n)
                                        throw new Error(
                                            'orderByChild: "$key" is invalid.  Use orderByKey() instead.'
                                        );
                                    if ("$priority" === n)
                                        throw new Error(
                                            'orderByChild: "$priority" is invalid.  Use orderByPriority() instead.'
                                        );
                                    if ("$value" === n)
                                        throw new Error(
                                            'orderByChild: "$value" is invalid.  Use orderByValue() instead.'
                                        );
                                    return (
                                        Ol("orderByChild", "path", n, !1),
                                        new oA(n)
                                    );
                                })(e)
                            )
                        )
                    );
                }
                orderByKey() {
                    return (
                        (0, C.Dv)("Query.orderByKey", 0, 0, arguments.length),
                        new Gr(
                            this.database,
                            ho(
                                this._delegate,
                                (function eP() {
                                    return new Id();
                                })()
                            )
                        )
                    );
                }
                orderByPriority() {
                    return (
                        (0, C.Dv)(
                            "Query.orderByPriority",
                            0,
                            0,
                            arguments.length
                        ),
                        new Gr(
                            this.database,
                            ho(
                                this._delegate,
                                (function tP() {
                                    return new Dw();
                                })()
                            )
                        )
                    );
                }
                orderByValue() {
                    return (
                        (0, C.Dv)("Query.orderByValue", 0, 0, arguments.length),
                        new Gr(
                            this.database,
                            ho(
                                this._delegate,
                                (function BC() {
                                    return new UC();
                                })()
                            )
                        )
                    );
                }
                startAt(e = null, t) {
                    return (
                        (0, C.Dv)("Query.startAt", 0, 2, arguments.length),
                        new Gr(
                            this.database,
                            ho(
                                this._delegate,
                                (function PC(n = null, e) {
                                    return (
                                        vd("startAt", "key", e, !0),
                                        new bw(n, e)
                                    );
                                })(e, t)
                            )
                        )
                    );
                }
                startAfter(e = null, t) {
                    return (
                        (0, C.Dv)("Query.startAfter", 0, 2, arguments.length),
                        new Gr(
                            this.database,
                            ho(
                                this._delegate,
                                (function OC(n, e) {
                                    return (
                                        vd("startAfter", "key", e, !0),
                                        new kC(n, e)
                                    );
                                })(e, t)
                            )
                        )
                    );
                }
                endAt(e = null, t) {
                    return (
                        (0, C.Dv)("Query.endAt", 0, 2, arguments.length),
                        new Gr(
                            this.database,
                            ho(
                                this._delegate,
                                (function RC(n, e) {
                                    return (
                                        vd("endAt", "key", e, !0), new Cw(n, e)
                                    );
                                })(e, t)
                            )
                        )
                    );
                }
                endBefore(e = null, t) {
                    return (
                        (0, C.Dv)("Query.endBefore", 0, 2, arguments.length),
                        new Gr(
                            this.database,
                            ho(
                                this._delegate,
                                (function NC(n, e) {
                                    return (
                                        vd("endBefore", "key", e, !0),
                                        new MC(n, e)
                                    );
                                })(e, t)
                            )
                        )
                    );
                }
                equalTo(e, t) {
                    return (
                        (0, C.Dv)("Query.equalTo", 1, 2, arguments.length),
                        new Gr(
                            this.database,
                            ho(
                                this._delegate,
                                (function Nt(n, e) {
                                    return (
                                        vd("equalTo", "key", e, !0),
                                        new nP(n, e)
                                    );
                                })(e, t)
                            )
                        )
                    );
                }
                toString() {
                    return (
                        (0, C.Dv)("Query.toString", 0, 0, arguments.length),
                        this._delegate.toString()
                    );
                }
                toJSON() {
                    return (
                        (0, C.Dv)("Query.toJSON", 0, 1, arguments.length),
                        this._delegate.toJSON()
                    );
                }
                isEqual(e) {
                    if (
                        ((0, C.Dv)("Query.isEqual", 1, 1, arguments.length),
                        !(e instanceof Gr))
                    )
                        throw new Error(
                            "Query.isEqual failed: First argument must be an instance of firebase.database.Query."
                        );
                    return this._delegate.isEqual(e._delegate);
                }
                static getCancelAndContextArgs_(e, t, r) {
                    const i = { cancel: void 0, context: void 0 };
                    if (t && r)
                        (i.cancel = t),
                            (0, C.Wj)(e, "cancel", i.cancel, !0),
                            (i.context = r),
                            (0, C.lb)(e, "context", i.context, !0);
                    else if (t)
                        if ("object" == typeof t && null !== t) i.context = t;
                        else {
                            if ("function" != typeof t)
                                throw new Error(
                                    (0, C.gK)(e, "cancelOrContext") +
                                        " must either be a cancel callback or a context object."
                                );
                            i.cancel = t;
                        }
                    return i;
                }
                get ref() {
                    return new gs(
                        this.database,
                        new ps(this._delegate._repo, this._delegate._path)
                    );
                }
            }
            class gs extends Gr {
                constructor(e, t) {
                    super(e, new oi(t._repo, t._path, new sd(), !1)),
                        (this.database = e),
                        (this._delegate = t);
                }
                getKey() {
                    return (
                        (0, C.Dv)("Reference.key", 0, 0, arguments.length),
                        this._delegate.key
                    );
                }
                child(e) {
                    return (
                        (0, C.Dv)("Reference.child", 1, 1, arguments.length),
                        "number" == typeof e && (e = String(e)),
                        new gs(this.database, Iu(this._delegate, e))
                    );
                }
                getParent() {
                    (0, C.Dv)("Reference.parent", 0, 0, arguments.length);
                    const e = this._delegate.parent;
                    return e ? new gs(this.database, e) : null;
                }
                getRoot() {
                    return (
                        (0, C.Dv)("Reference.root", 0, 0, arguments.length),
                        new gs(this.database, this._delegate.root)
                    );
                }
                set(e, t) {
                    (0, C.Dv)("Reference.set", 1, 2, arguments.length),
                        (0, C.Wj)("Reference.set", "onComplete", t, !0);
                    const r = Ew(this._delegate, e);
                    return (
                        t &&
                            r.then(
                                () => t(null),
                                (i) => t(i)
                            ),
                        r
                    );
                }
                update(e, t) {
                    if (
                        ((0, C.Dv)("Reference.update", 1, 2, arguments.length),
                        Array.isArray(e))
                    ) {
                        const i = {};
                        for (let a = 0; a < e.length; ++a) i["" + a] = e[a];
                        (e = i),
                            Cd(
                                "Passing an Array to Firebase.update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children."
                            );
                    }
                    ds("Reference.update", this._delegate._path),
                        (0, C.Wj)("Reference.update", "onComplete", t, !0);
                    const r = iA(this._delegate, e);
                    return (
                        t &&
                            r.then(
                                () => t(null),
                                (i) => t(i)
                            ),
                        r
                    );
                }
                setWithPriority(e, t, r) {
                    (0, C.Dv)(
                        "Reference.setWithPriority",
                        2,
                        3,
                        arguments.length
                    ),
                        (0, C.Wj)(
                            "Reference.setWithPriority",
                            "onComplete",
                            r,
                            !0
                        );
                    const i = (function rA(n, e, t) {
                        if (
                            (ds("setWithPriority", n._path),
                            ao("setWithPriority", e, n._path, !1),
                            cw("setWithPriority", t, !1),
                            ".length" === n.key || ".keys" === n.key)
                        )
                            throw (
                                "setWithPriority failed: " +
                                n.key +
                                " is a read-only object."
                            );
                        const r = new C.BH();
                        return (
                            vu(
                                n._repo,
                                n._path,
                                e,
                                t,
                                r.wrapCallback(() => {})
                            ),
                            r.promise
                        );
                    })(this._delegate, e, t);
                    return (
                        r &&
                            i.then(
                                () => r(null),
                                (a) => r(a)
                            ),
                        i
                    );
                }
                remove(e) {
                    (0, C.Dv)("Reference.remove", 0, 1, arguments.length),
                        (0, C.Wj)("Reference.remove", "onComplete", e, !0);
                    const t = (function tA(n) {
                        return ds("remove", n._path), Ew(n, null);
                    })(this._delegate);
                    return (
                        e &&
                            t.then(
                                () => e(null),
                                (r) => e(r)
                            ),
                        t
                    );
                }
                transaction(e, t, r) {
                    (0, C.Dv)("Reference.transaction", 1, 3, arguments.length),
                        (0, C.Wj)(
                            "Reference.transaction",
                            "transactionUpdate",
                            e,
                            !1
                        ),
                        (0, C.Wj)("Reference.transaction", "onComplete", t, !0),
                        (function (n, e, t, r) {
                            if (void 0 !== t && "boolean" != typeof t)
                                throw new Error(
                                    (0, C.gK)(
                                        "Reference.transaction",
                                        "applyLocally"
                                    ) + "must be a boolean."
                                );
                        })(0, 0, r);
                    const i = (function Tm(n, e, t) {
                        var r;
                        if (
                            ((n = (0, C.m9)(n)),
                            ds("Reference.transaction", n._path),
                            ".length" === n.key || ".keys" === n.key)
                        )
                            throw (
                                "Reference.transaction failed: " +
                                n.key +
                                " is a read-only object."
                            );
                        const i =
                                null === (r = t?.applyLocally) ||
                                void 0 === r ||
                                r,
                            a = new C.BH(),
                            h = Iw(n, () => {});
                        return (
                            (function lo(n, e, t, r, i, a) {
                                Fl(n, "transaction on " + e);
                                const l = {
                                        path: e,
                                        update: t,
                                        onComplete: r,
                                        status: null,
                                        order: Qc(),
                                        applyLocally: a,
                                        retryCount: 0,
                                        unwatcher: i,
                                        abortReason: null,
                                        currentWriteId: null,
                                        currentInputSnapshot: null,
                                        currentOutputSnapshotRaw: null,
                                        currentOutputSnapshotResolved: null,
                                    },
                                    h = fs(n, e, void 0);
                                l.currentInputSnapshot = h;
                                const _ = l.update(h.val());
                                if (void 0 === _)
                                    l.unwatcher(),
                                        (l.currentOutputSnapshotRaw = null),
                                        (l.currentOutputSnapshotResolved =
                                            null),
                                        l.onComplete &&
                                            l.onComplete(
                                                null,
                                                !1,
                                                l.currentInputSnapshot
                                            );
                                else {
                                    yd(
                                        "transaction failed: Data returned ",
                                        _,
                                        l.path
                                    ),
                                        (l.status = 0);
                                    const E = pd(n.transactionQueueTree_, e),
                                        D = kl(E) || [];
                                    let T;
                                    D.push(l),
                                        gd(E, D),
                                        "object" == typeof _ &&
                                        null !== _ &&
                                        (0, C.r3)(_, ".priority")
                                            ? ((T = (0, C.DV)(_, ".priority")),
                                              (0, C.hu)(
                                                  _d(T),
                                                  "Invalid priority returned by transaction. Priority must be a valid string, finite number, server value, or null."
                                              ))
                                            : (T = (
                                                  dd(n.serverSyncTree_, e) ||
                                                  zt.EMPTY_NODE
                                              )
                                                  .getPriority()
                                                  .val());
                                    const R = wd(n),
                                        F = Wn(_, T),
                                        K = ow(F, h, R);
                                    (l.currentOutputSnapshotRaw = F),
                                        (l.currentOutputSnapshotResolved = K),
                                        (l.currentWriteId = Pf(n));
                                    const Ie = ba(
                                        n.serverSyncTree_,
                                        e,
                                        K,
                                        l.currentWriteId,
                                        l.applyLocally
                                    );
                                    hs(n.eventQueue_, e, Ie),
                                        Of(n, n.transactionQueueTree_);
                                }
                            })(
                                n._repo,
                                n._path,
                                e,
                                (_, E, D) => {
                                    let T = null;
                                    _
                                        ? a.reject(_)
                                        : ((T = new Eu(
                                              D,
                                              new ps(n._repo, n._path),
                                              jn
                                          )),
                                          a.resolve(new _A(E, T)));
                                },
                                h,
                                i
                            ),
                            a.promise
                        );
                    })(this._delegate, e, { applyLocally: r }).then(
                        (a) =>
                            new zC(
                                a.committed,
                                new Sa(this.database, a.snapshot)
                            )
                    );
                    return (
                        t &&
                            i.then(
                                (a) => t(null, a.committed, a.snapshot),
                                (a) => t(a, !1, null)
                            ),
                        i
                    );
                }
                setPriority(e, t) {
                    (0, C.Dv)("Reference.setPriority", 1, 2, arguments.length),
                        (0, C.Wj)("Reference.setPriority", "onComplete", t, !0);
                    const r = (function nA(n, e) {
                        (n = (0, C.m9)(n)),
                            ds("setPriority", n._path),
                            cw("setPriority", e, !1);
                        const t = new C.BH();
                        return (
                            vu(
                                n._repo,
                                Mn(n._path, ".priority"),
                                e,
                                null,
                                t.wrapCallback(() => {})
                            ),
                            t.promise
                        );
                    })(this._delegate, e);
                    return (
                        t &&
                            r.then(
                                () => t(null),
                                (i) => t(i)
                            ),
                        r
                    );
                }
                push(e, t) {
                    (0, C.Dv)("Reference.push", 0, 2, arguments.length),
                        (0, C.Wj)("Reference.push", "onComplete", t, !0);
                    const r = (function eA(n, e) {
                            (n = (0, C.m9)(n)),
                                ds("push", n._path),
                                ao("push", e, n._path, !0);
                            const t = Mr(n._repo),
                                r = gS(t),
                                i = Iu(n, r),
                                a = Iu(n, r);
                            let l;
                            return (
                                (l =
                                    null != e
                                        ? Ew(a, e).then(() => a)
                                        : Promise.resolve(a)),
                                (i.then = l.then.bind(l)),
                                (i.catch = l.then.bind(l, void 0)),
                                i
                            );
                        })(this._delegate, e),
                        i = r.then((l) => new gs(this.database, l));
                    t &&
                        i.then(
                            () => t(null),
                            (l) => t(l)
                        );
                    const a = new gs(this.database, r);
                    return (
                        (a.then = i.then.bind(i)),
                        (a.catch = i.catch.bind(i, void 0)),
                        a
                    );
                }
                onDisconnect() {
                    return (
                        ds("Reference.onDisconnect", this._delegate._path),
                        new CA(
                            new yw(this._delegate._repo, this._delegate._path)
                        )
                    );
                }
                get key() {
                    return this.getKey();
                }
                get parent() {
                    return this.getParent();
                }
                get root() {
                    return this.getRoot();
                }
            }
            class bd {
                constructor(e, t) {
                    (this._delegate = e),
                        (this.app = t),
                        (this.INTERNAL = {
                            delete: () => this._delegate._delete(),
                            forceWebSockets: cA,
                            forceLongPolling: HC,
                        });
                }
                useEmulator(e, t, r = {}) {
                    !(function $C(n, e, t, r = {}) {
                        (n = (0, C.m9)(n))._checkNotDeleted("useEmulator"),
                            n._instanceStarted &&
                                ri(
                                    "Cannot call useEmulator() after instance has already been initialized."
                                );
                        const i = n._repoInternal;
                        let a;
                        if (i.repoInfo_.nodeAdmin)
                            r.mockUserToken &&
                                ri(
                                    'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the "firebase" package instead of "firebase-admin".'
                                ),
                                (a = new ed(ed.OWNER));
                        else if (r.mockUserToken) {
                            const l =
                                "string" == typeof r.mockUserToken
                                    ? r.mockUserToken
                                    : (0, C.Sg)(
                                          r.mockUserToken,
                                          n.app.options.projectId
                                      );
                            a = new ed(l);
                        }
                        !(function lA(n, e, t, r) {
                            (n.repoInfo_ = new Iv(
                                `${e}:${t}`,
                                !1,
                                n.repoInfo_.namespace,
                                n.repoInfo_.webSocketOnly,
                                n.repoInfo_.nodeAdmin,
                                n.repoInfo_.persistenceKey,
                                n.repoInfo_.includeNamespaceInQueryParams
                            )),
                                r && (n.authTokenProvider_ = r);
                        })(i, e, t, a);
                    })(this._delegate, e, t, r);
                }
                ref(e) {
                    if (
                        ((0, C.Dv)("database.ref", 0, 1, arguments.length),
                        e instanceof gs)
                    ) {
                        const t = ww(this._delegate, e.toString());
                        return new gs(this, t);
                    }
                    {
                        const t = vw(this._delegate, e);
                        return new gs(this, t);
                    }
                }
                refFromURL(e) {
                    (0, C.Dv)("database.refFromURL", 1, 1, arguments.length);
                    const r = ww(this._delegate, e);
                    return new gs(this, r);
                }
                goOffline() {
                    return (
                        (0, C.Dv)("database.goOffline", 0, 0, arguments.length),
                        (function GC(n) {
                            (n = (0, C.m9)(n))._checkNotDeleted("goOffline"),
                                uo(n._repo);
                        })(this._delegate)
                    );
                }
                goOnline() {
                    return (
                        (0, C.Dv)("database.goOnline", 0, 0, arguments.length),
                        (function hA(n) {
                            (n = (0, C.m9)(n))._checkNotDeleted("goOnline"),
                                (function QS(n) {
                                    n.persistentConnection_ &&
                                        n.persistentConnection_.resume(cC);
                                })(n._repo);
                        })(this._delegate)
                    );
                }
            }
            bd.ServerValue = {
                TIMESTAMP: (function gA() {
                    return Bf;
                })(),
                increment: (n) =>
                    (function mA(n) {
                        return { ".sv": { increment: n } };
                    })(n),
            };
            var DA = Object.freeze({
                __proto__: null,
                initStandalone: function bA({
                    app: n,
                    url: e,
                    version: t,
                    customAuthImpl: r,
                    namespace: i,
                    nodeAdmin: a = !1,
                }) {
                    At(t);
                    const l = new m.zt(
                        "auth-internal",
                        new m.H0("database-standalone")
                    );
                    return (
                        l.setComponent(
                            new m.wA("auth-internal", () => r, "PRIVATE")
                        ),
                        {
                            instance: new bd(Uf(n, l, void 0, e, a), n),
                            namespace: i,
                        }
                    );
                },
            });
            const iP = bd.ServerValue;
            !(function sP(n) {
                n.INTERNAL.registerComponent(
                    new m.wA(
                        "database-compat",
                        (e, { instanceIdentifier: t }) => {
                            const r = e
                                    .getProvider("app-compat")
                                    .getImmediate(),
                                i = e
                                    .getProvider("database")
                                    .getImmediate({ identifier: t });
                            return new bd(i, r);
                        },
                        "PUBLIC"
                    )
                        .setServiceProps({
                            Reference: gs,
                            Query: Gr,
                            Database: bd,
                            DataSnapshot: Sa,
                            enableLogging: fA,
                            INTERNAL: DA,
                            ServerValue: iP,
                        })
                        .setMultipleInstances(!0)
                ),
                    n.registerVersion("@firebase/database-compat", "0.2.3");
            })(f.Z);
            var Cu = P(7579),
                Aw = P(5363),
                qC = P(6063);
            class Sm extends Cu.x {
                constructor(e = 1 / 0, t = 1 / 0, r = qC.l) {
                    super(),
                        (this._bufferSize = e),
                        (this._windowTime = t),
                        (this._timestampProvider = r),
                        (this._buffer = []),
                        (this._infiniteTimeWindow = !0),
                        (this._infiniteTimeWindow = t === 1 / 0),
                        (this._bufferSize = Math.max(1, e)),
                        (this._windowTime = Math.max(1, t));
                }
                next(e) {
                    const {
                        isStopped: t,
                        _buffer: r,
                        _infiniteTimeWindow: i,
                        _timestampProvider: a,
                        _windowTime: l,
                    } = this;
                    t || (r.push(e), !i && r.push(a.now() + l)),
                        this._trimBuffer(),
                        super.next(e);
                }
                _subscribe(e) {
                    this._throwIfClosed(), this._trimBuffer();
                    const t = this._innerSubscribe(e),
                        { _infiniteTimeWindow: r, _buffer: i } = this,
                        a = i.slice();
                    for (let l = 0; l < a.length && !e.closed; l += r ? 1 : 2)
                        e.next(a[l]);
                    return this._checkFinalizedStatuses(e), t;
                }
                _trimBuffer() {
                    const {
                            _bufferSize: e,
                            _timestampProvider: t,
                            _buffer: r,
                            _infiniteTimeWindow: i,
                        } = this,
                        a = (i ? 1 : 2) * e;
                    if (
                        (e < 1 / 0 && a < r.length && r.splice(0, r.length - a),
                        !i)
                    ) {
                        const l = t.now();
                        let h = 0;
                        for (let _ = 1; _ < r.length && r[_] <= l; _ += 2)
                            h = _;
                        h && r.splice(0, h + 1);
                    }
                }
            }
            function KC(n, e, t) {
                let r,
                    i = !1;
                return (
                    n && "object" == typeof n
                        ? ({
                              bufferSize: r = 1 / 0,
                              windowTime: e = 1 / 0,
                              refCount: i = !1,
                              scheduler: t,
                          } = n)
                        : (r = n ?? 1 / 0),
                    (0, ru.B)({
                        connector: () => new Sm(r, e, t),
                        resetOnError: !0,
                        resetOnComplete: !1,
                        resetOnRefCountZero: i,
                    })
                );
            }
            const Dd = (0, P(3888).d)(
                (n) =>
                    function () {
                        n(this),
                            (this.name = "EmptyError"),
                            (this.message = "no elements in sequence");
                    }
            );
            function Ni(n, e) {
                return (0, hr.e)((t, r) => {
                    let i = 0;
                    t.subscribe(
                        (0, dr.x)(r, (a) => n.call(e, a, i++) && r.next(a))
                    );
                });
            }
            var Ul = P(515);
            function Hf(n) {
                return n <= 0
                    ? () => Ul.E
                    : (0, hr.e)((e, t) => {
                          let r = 0;
                          e.subscribe(
                              (0, dr.x)(t, (i) => {
                                  ++r <= n &&
                                      (t.next(i), n <= r && t.complete());
                              })
                          );
                      });
            }
            function xw(n) {
                return (0, hr.e)((e, t) => {
                    let r = !1;
                    e.subscribe(
                        (0, dr.x)(
                            t,
                            (i) => {
                                (r = !0), t.next(i);
                            },
                            () => {
                                r || t.next(n), t.complete();
                            }
                        )
                    );
                });
            }
            function ZC(n = SA) {
                return (0, hr.e)((e, t) => {
                    let r = !1;
                    e.subscribe(
                        (0, dr.x)(
                            t,
                            (i) => {
                                (r = !0), t.next(i);
                            },
                            () => (r ? t.complete() : t.error(n()))
                        )
                    );
                });
            }
            function SA() {
                return new Dd();
            }
            function Aa(n, e) {
                const t = arguments.length >= 2;
                return (r) =>
                    r.pipe(
                        n ? Ni((i, a) => n(i, a, r)) : ro.y,
                        Hf(1),
                        t ? xw(e) : ZC(() => new Dd())
                    );
            }
            var Rw = P(576);
            function YC(n, e) {
                return (0, Rw.m)(e) ? fr(() => n, e) : fr(() => n);
            }
            var bu = P(9468);
            const eb = new Map(),
                PA = { activated: !1, tokenObservers: [] },
                kA = { initialized: !1, enabled: !1 };
            function Wr(n) {
                return eb.get(n) || PA;
            }
            function fo(n, e) {
                eb.set(n, e);
            }
            function xm() {
                return kA;
            }
            class ib {
                constructor(e, t, r, i, a) {
                    if (
                        ((this.operation = e),
                        (this.retryPolicy = t),
                        (this.getWaitDuration = r),
                        (this.lowerBound = i),
                        (this.upperBound = a),
                        (this.pending = null),
                        (this.nextErrorWaitInterval = i),
                        i > a)
                    )
                        throw new Error(
                            "Proactive refresh lower bound greater than upper bound!"
                        );
                }
                start() {
                    (this.nextErrorWaitInterval = this.lowerBound),
                        this.process(!0).catch(() => {});
                }
                stop() {
                    this.pending &&
                        (this.pending.reject("cancelled"),
                        (this.pending = null));
                }
                isRunning() {
                    return !!this.pending;
                }
                process(e) {
                    var t = this;
                    return (0, y.Z)(function* () {
                        t.stop();
                        try {
                            (t.pending = new C.BH()),
                                yield (function LA(n) {
                                    return new Promise((e) => {
                                        setTimeout(e, n);
                                    });
                                })(t.getNextRun(e)),
                                t.pending.resolve(),
                                yield t.pending.promise,
                                (t.pending = new C.BH()),
                                yield t.operation(),
                                t.pending.resolve(),
                                yield t.pending.promise,
                                t.process(!0).catch(() => {});
                        } catch (r) {
                            t.retryPolicy(r)
                                ? t.process(!1).catch(() => {})
                                : t.stop();
                        }
                    })();
                }
                getNextRun(e) {
                    if (e)
                        return (
                            (this.nextErrorWaitInterval = this.lowerBound),
                            this.getWaitDuration()
                        );
                    {
                        const t = this.nextErrorWaitInterval;
                        return (
                            (this.nextErrorWaitInterval *= 2),
                            this.nextErrorWaitInterval > this.upperBound &&
                                (this.nextErrorWaitInterval = this.upperBound),
                            t
                        );
                    }
                }
            }
            const Pi = new C.LL("appCheck", "AppCheck", {
                "already-initialized":
                    "You have already called initializeAppCheck() for FirebaseApp {$appName} with different options. To avoid this error, call initializeAppCheck() with the same options as when it was originally called. This will return the already initialized instance.",
                "use-before-activation":
                    "App Check is being used before initializeAppCheck() is called for FirebaseApp {$appName}. Call initializeAppCheck() before instantiating other Firebase services.",
                "fetch-network-error":
                    "Fetch failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.",
                "fetch-parse-error":
                    "Fetch client could not parse response. Original error: {$originalErrorMessage}.",
                "fetch-status-error":
                    "Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.",
                "storage-open":
                    "Error thrown when opening storage. Original error: {$originalErrorMessage}.",
                "storage-get":
                    "Error thrown when reading from storage. Original error: {$originalErrorMessage}.",
                "storage-set":
                    "Error thrown when writing to storage. Original error: {$originalErrorMessage}.",
                "recaptcha-error": "ReCAPTCHA error.",
                throttled:
                    "Requests throttled due to {$httpStatus} error. Attempts allowed again after {$time}",
            });
            function Rm(n) {
                if (!Wr(n).activated)
                    throw Pi.create("use-before-activation", {
                        appName: n.name,
                    });
            }
            function kw(n, e) {
                return Ow.apply(this, arguments);
            }
            function Ow() {
                return (Ow = (0, y.Z)(function* ({ url: n, body: e }, t) {
                    var r, i;
                    const a = { "Content-Type": "application/json" },
                        l = t.getImmediate({ optional: !0 });
                    if (l) {
                        const F = yield l.getHeartbeatsHeader();
                        F && (a["X-Firebase-Client"] = F);
                    }
                    const h = {
                        method: "POST",
                        body: JSON.stringify(e),
                        headers: a,
                    };
                    let _, E;
                    try {
                        _ = yield fetch(n, h);
                    } catch (F) {
                        throw Pi.create("fetch-network-error", {
                            originalErrorMessage:
                                null === (r = F) || void 0 === r
                                    ? void 0
                                    : r.message,
                        });
                    }
                    if (200 !== _.status)
                        throw Pi.create("fetch-status-error", {
                            httpStatus: _.status,
                        });
                    try {
                        E = yield _.json();
                    } catch (F) {
                        throw Pi.create("fetch-parse-error", {
                            originalErrorMessage:
                                null === (i = F) || void 0 === i
                                    ? void 0
                                    : i.message,
                        });
                    }
                    const D = E.ttl.match(/^([\d.]+)(s)$/);
                    if (!D || !D[2] || isNaN(Number(D[1])))
                        throw Pi.create("fetch-parse-error", {
                            originalErrorMessage: `ttl field (timeToLive) is not in standard Protobuf Duration format: ${E.ttl}`,
                        });
                    const T = 1e3 * Number(D[1]),
                        R = Date.now();
                    return {
                        token: E.token,
                        expireTimeMillis: R + T,
                        issuedAtTimeMillis: R,
                    };
                })).apply(this, arguments);
            }
            function sb(n, e) {
                const { projectId: t, appId: r, apiKey: i } = n.options;
                return {
                    url: `https://content-firebaseappcheck.googleapis.com/v1/projects/${t}/apps/${r}:exchangeDebugToken?key=${i}`,
                    body: { debug_token: e },
                };
            }
            const Nm = "firebase-app-check-store";
            let Du = null;
            function Tu() {
                return (
                    Du ||
                    ((Du = new Promise((n, e) => {
                        var t;
                        try {
                            const r = indexedDB.open(
                                "firebase-app-check-database",
                                1
                            );
                            (r.onsuccess = (i) => {
                                n(i.target.result);
                            }),
                                (r.onerror = (i) => {
                                    var a;
                                    e(
                                        Pi.create("storage-open", {
                                            originalErrorMessage:
                                                null === (a = i.target.error) ||
                                                void 0 === a
                                                    ? void 0
                                                    : a.message,
                                        })
                                    );
                                }),
                                (r.onupgradeneeded = (i) => {
                                    0 === i.oldVersion &&
                                        i.target.result.createObjectStore(Nm, {
                                            keyPath: "compositeKey",
                                        });
                                });
                        } catch (r) {
                            e(
                                Pi.create("storage-open", {
                                    originalErrorMessage:
                                        null === (t = r) || void 0 === t
                                            ? void 0
                                            : t.message,
                                })
                            );
                        }
                    })),
                    Du)
                );
            }
            function jl() {
                return (jl = (0, y.Z)(function* (n, e) {
                    const r = (yield Tu()).transaction(Nm, "readwrite"),
                        a = r
                            .objectStore(Nm)
                            .put({ compositeKey: n, value: e });
                    return new Promise((l, h) => {
                        (a.onsuccess = (_) => {
                            l();
                        }),
                            (r.onerror = (_) => {
                                var E;
                                h(
                                    Pi.create("storage-set", {
                                        originalErrorMessage:
                                            null === (E = _.target.error) ||
                                            void 0 === E
                                                ? void 0
                                                : E.message,
                                    })
                                );
                            });
                    });
                })).apply(this, arguments);
            }
            const $f = new H.Yd("@firebase/app-check");
            function Uw(n, e) {
                return (0, C.hl)()
                    ? (function jA(n, e) {
                          return (function Bl(n, e) {
                              return jl.apply(this, arguments);
                          })(
                              (function Lw(n) {
                                  return `${n.options.appId}-${n.name}`;
                              })(n),
                              e
                          );
                      })(n, e).catch((t) => {
                          $f.warn(
                              `Failed to write token to IndexedDB. Error: ${t}`
                          );
                      })
                    : Promise.resolve();
            }
            function Wf() {
                return xm().enabled;
            }
            function Ad() {
                return Bw.apply(this, arguments);
            }
            function Bw() {
                return (Bw = (0, y.Z)(function* () {
                    const n = xm();
                    if (n.enabled && n.token) return n.token.promise;
                    throw Error(
                        "\n            Can't get debug token in production mode.\n        "
                    );
                })).apply(this, arguments);
            }
            const fb = { error: "UNKNOWN_ERROR" };
            function GA(n) {
                return C.US.encodeString(JSON.stringify(n), !1);
            }
            function Pm(n) {
                return zf.apply(this, arguments);
            }
            function zf() {
                return (zf = (0, y.Z)(function* (n, e = !1) {
                    const t = n.app;
                    Rm(t);
                    const r = Wr(t);
                    let a,
                        i = r.token;
                    if (!i) {
                        const _ = yield r.cachedTokenPromise;
                        _ && xd(_) && (i = _);
                    }
                    if (!e && i && xd(i)) return { token: i.token };
                    let h,
                        l = !1;
                    if (Wf()) {
                        r.exchangeTokenPromise ||
                            ((r.exchangeTokenPromise = kw(
                                sb(t, yield Ad()),
                                n.heartbeatServiceProvider
                            ).then(
                                (E) => ((r.exchangeTokenPromise = void 0), E)
                            )),
                            (l = !0));
                        const _ = yield r.exchangeTokenPromise;
                        return (
                            yield Uw(t, _),
                            fo(
                                t,
                                Object.assign(Object.assign({}, r), {
                                    token: _,
                                })
                            ),
                            { token: _.token }
                        );
                    }
                    try {
                        r.exchangeTokenPromise ||
                            ((r.exchangeTokenPromise = r.provider
                                .getToken()
                                .then(
                                    (_) => (
                                        (r.exchangeTokenPromise = void 0), _
                                    )
                                )),
                            (l = !0)),
                            (i = yield r.exchangeTokenPromise);
                    } catch (_) {
                        "appCheck/throttled" === _.code
                            ? $f.warn(_.message)
                            : $f.error(_),
                            (a = _);
                    }
                    return (
                        i
                            ? ((h = { token: i.token }),
                              fo(
                                  t,
                                  Object.assign(Object.assign({}, r), {
                                      token: i,
                                  })
                              ),
                              yield Uw(t, i))
                            : (h = zA(a)),
                        l && $w(t, h),
                        h
                    );
                })).apply(this, arguments);
            }
            function pb(n, e) {
                const t = Wr(n),
                    r = t.tokenObservers.filter((i) => i.next !== e);
                0 === r.length &&
                    t.tokenRefresher &&
                    t.tokenRefresher.isRunning() &&
                    t.tokenRefresher.stop(),
                    fo(
                        n,
                        Object.assign(Object.assign({}, t), {
                            tokenObservers: r,
                        })
                    );
            }
            function gb(n) {
                const { app: e } = n,
                    t = Wr(e);
                let r = t.tokenRefresher;
                r ||
                    ((r = (function WA(n) {
                        const { app: e } = n;
                        return new ib(
                            (0, y.Z)(function* () {
                                let r;
                                if (
                                    ((r = Wr(e).token
                                        ? yield Pm(n, !0)
                                        : yield Pm(n)),
                                    r.error)
                                )
                                    throw r.error;
                            }),
                            () => !0,
                            () => {
                                const t = Wr(e);
                                if (t.token) {
                                    let r =
                                        t.token.issuedAtTimeMillis +
                                        0.5 *
                                            (t.token.expireTimeMillis -
                                                t.token.issuedAtTimeMillis) +
                                        3e5;
                                    return (
                                        (r = Math.min(
                                            r,
                                            t.token.expireTimeMillis - 3e5
                                        )),
                                        Math.max(0, r - Date.now())
                                    );
                                }
                                return 0;
                            },
                            3e4,
                            96e4
                        );
                    })(n)),
                    fo(
                        e,
                        Object.assign(Object.assign({}, t), {
                            tokenRefresher: r,
                        })
                    )),
                    !r.isRunning() && t.isTokenAutoRefreshEnabled && r.start();
            }
            function $w(n, e) {
                const t = Wr(n).tokenObservers;
                for (const r of t)
                    try {
                        "EXTERNAL" === r.type && null != e.error
                            ? r.error(e.error)
                            : r.next(e);
                    } catch {}
            }
            function xd(n) {
                return n.expireTimeMillis - Date.now() > 0;
            }
            function zA(n) {
                return { token: GA(fb), error: n };
            }
            class Gw {
                constructor(e, t) {
                    (this.app = e), (this.heartbeatServiceProvider = t);
                }
                _delete() {
                    const { tokenObservers: e } = Wr(this.app);
                    for (const t of e) pb(this.app, t.next);
                    return Promise.resolve();
                }
            }
            const Tb = "app-check-internal";
            !(function tx() {
                (0, A._registerComponent)(
                    new m.wA(
                        "app-check",
                        (n) =>
                            (function qA(n, e) {
                                return new Gw(n, e);
                            })(
                                n.getProvider("app").getImmediate(),
                                n.getProvider("heartbeat")
                            ),
                        "PUBLIC"
                    )
                        .setInstantiationMode("EXPLICIT")
                        .setInstanceCreatedCallback((n, e, t) => {
                            n.getProvider(Tb).initialize();
                        })
                ),
                    (0, A._registerComponent)(
                        new m.wA(
                            Tb,
                            (n) =>
                                (function KA(n) {
                                    return {
                                        getToken: (e) => Pm(n, e),
                                        addTokenListener: (e) =>
                                            (function Hw(n, e, t, r) {
                                                const { app: i } = n,
                                                    a = Wr(i),
                                                    l = {
                                                        next: t,
                                                        error: r,
                                                        type: e,
                                                    };
                                                if (
                                                    (fo(
                                                        i,
                                                        Object.assign(
                                                            Object.assign(
                                                                {},
                                                                a
                                                            ),
                                                            {
                                                                tokenObservers:
                                                                    [
                                                                        ...a.tokenObservers,
                                                                        l,
                                                                    ],
                                                            }
                                                        )
                                                    ),
                                                    a.token && xd(a.token))
                                                ) {
                                                    const h = a.token;
                                                    Promise.resolve()
                                                        .then(() => {
                                                            t({
                                                                token: h.token,
                                                            }),
                                                                gb(n);
                                                        })
                                                        .catch(() => {});
                                                }
                                                a.cachedTokenPromise.then(() =>
                                                    gb(n)
                                                );
                                            })(n, "INTERNAL", e),
                                        removeTokenListener: (e) =>
                                            pb(n.app, e),
                                    };
                                })(n.getProvider("app-check").getImmediate()),
                            "PUBLIC"
                        ).setInstantiationMode("EXPLICIT")
                    ),
                    (0, A.registerVersion)("@firebase/app-check", "0.5.12");
            })();
            class Rd {
                constructor() {
                    return (0, hn.vb)("app-check");
                }
            }
            typeof window < "u" && window;
            var ms = P(127);
            const qf = new p.OlP("angularfire2.auth.use-emulator"),
                $l = new p.OlP("angularfire2.auth.settings"),
                qw = new p.OlP("angularfire2.auth.tenant-id"),
                Kw = new p.OlP("angularfire2.auth.langugage-code"),
                Zw = new p.OlP("angularfire2.auth.use-device-language"),
                Md = new p.OlP("angularfire.auth.persistence"),
                Nd = (n, e, t, r, i, a, l, h) =>
                    (0, pr.cc)(
                        `${n.name}.auth`,
                        "AngularFireAuth",
                        n.name,
                        () => {
                            const _ = e.runOutsideAngular(() => n.auth());
                            if (
                                (t && _.useEmulator(...t),
                                r && (_.tenantId = r),
                                (_.languageCode = i),
                                a && _.useDeviceLanguage(),
                                l)
                            )
                                for (const [E, D] of Object.entries(l))
                                    _.settings[E] = D;
                            return h && _.setPersistence(h), _;
                        },
                        [t, r, i, a, l, h]
                    );
            let Pd = (() => {
                    class n {
                        constructor(t, r, i, a, l, h, _, E, D, T, R, F) {
                            const K = new Cu.x(),
                                Ie = bt(void 0).pipe(
                                    (0, Aw.Q)(l.outsideAngular),
                                    fr(() =>
                                        a.runOutsideAngular(() =>
                                            Promise.resolve().then(
                                                P.bind(P, 1451)
                                            )
                                        )
                                    ),
                                    (0, Mt.U)(() => (0, pr.on)(t, a, r)),
                                    (0, Mt.U)((Re) =>
                                        Nd(Re, a, h, E, D, T, _, R)
                                    ),
                                    KC({ bufferSize: 1, refCount: !1 })
                                );
                            if (hh(i))
                                this.authState =
                                    this.user =
                                    this.idToken =
                                    this.idTokenResult =
                                    this.credential =
                                        bt(null);
                            else {
                                Ie.pipe(Aa()).subscribe();
                                const mt = Ie.pipe(
                                        fr((gt) =>
                                            gt.getRedirectResult().then(
                                                ($t) => $t,
                                                () => null
                                            )
                                        ),
                                        hn.iC,
                                        KC({ bufferSize: 1, refCount: !1 })
                                    ),
                                    _t = Ie.pipe(
                                        fr(
                                            (gt) =>
                                                new rs.y(($t) => ({
                                                    unsubscribe:
                                                        a.runOutsideAngular(
                                                            () =>
                                                                gt.onAuthStateChanged(
                                                                    (un) =>
                                                                        $t.next(
                                                                            un
                                                                        ),
                                                                    (un) =>
                                                                        $t.error(
                                                                            un
                                                                        ),
                                                                    () =>
                                                                        $t.complete()
                                                                )
                                                        ),
                                                }))
                                        )
                                    ),
                                    yt = Ie.pipe(
                                        fr(
                                            (gt) =>
                                                new rs.y(($t) => ({
                                                    unsubscribe:
                                                        a.runOutsideAngular(
                                                            () =>
                                                                gt.onIdTokenChanged(
                                                                    (un) =>
                                                                        $t.next(
                                                                            un
                                                                        ),
                                                                    (un) =>
                                                                        $t.error(
                                                                            un
                                                                        ),
                                                                    () =>
                                                                        $t.complete()
                                                                )
                                                        ),
                                                }))
                                        )
                                    );
                                (this.authState = mt.pipe(
                                    YC(_t),
                                    (0, bu.R)(l.outsideAngular),
                                    (0, Aw.Q)(l.insideAngular)
                                )),
                                    (this.user = mt.pipe(
                                        YC(yt),
                                        (0, bu.R)(l.outsideAngular),
                                        (0, Aw.Q)(l.insideAngular)
                                    )),
                                    (this.idToken = this.user.pipe(
                                        fr((gt) =>
                                            gt
                                                ? (0, dn.D)(gt.getIdToken())
                                                : bt(null)
                                        )
                                    )),
                                    (this.idTokenResult = this.user.pipe(
                                        fr((gt) =>
                                            gt
                                                ? (0, dn.D)(
                                                      gt.getIdTokenResult()
                                                  )
                                                : bt(null)
                                        )
                                    )),
                                    (this.credential = (0, vn.T)(
                                        mt,
                                        K,
                                        this.authState.pipe(Ni((gt) => !gt))
                                    ).pipe(
                                        (0, Mt.U)((gt) =>
                                            gt?.user ? gt : null
                                        ),
                                        (0, bu.R)(l.outsideAngular),
                                        (0, Aw.Q)(l.insideAngular)
                                    ));
                            }
                            return (0, pr.pX)(this, Ie, a, {
                                spy: {
                                    apply: (Re, mt, _t) => {
                                        (Re.startsWith("signIn") ||
                                            Re.startsWith("createUser")) &&
                                            _t.then((yt) => K.next(yt));
                                    },
                                },
                            });
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(
                                p.LFG(pr.Dh),
                                p.LFG(pr.xv, 8),
                                p.LFG(p.Lbi),
                                p.LFG(p.R0b),
                                p.LFG(hn.HU),
                                p.LFG(qf, 8),
                                p.LFG($l, 8),
                                p.LFG(qw, 8),
                                p.LFG(Kw, 8),
                                p.LFG(Zw, 8),
                                p.LFG(Md, 8),
                                p.LFG(Rd, 8)
                            );
                        }),
                        (n.ɵprov = p.Yz7({
                            token: n,
                            factory: n.ɵfac,
                            providedIn: "any",
                        })),
                        n
                    );
                })(),
                ax = (() => {
                    class n {
                        constructor() {
                            ms.Z.registerVersion(
                                "angularfire",
                                hn.q4.full,
                                "auth-compat"
                            );
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)();
                        }),
                        (n.ɵmod = p.oAB({ type: n })),
                        (n.ɵinj = p.cJS({ providers: [Pd] })),
                        n
                    );
                })();
            function Vm(n) {
                return null == n;
            }
            function Yw(n) {
                return "function" == typeof n.set;
            }
            function Nb(n, e) {
                return Yw(e) ? e : n.ref(e);
            }
            function Pb(n, e) {
                if (
                    (function Rb(n) {
                        return "string" == typeof n;
                    })(n)
                )
                    return e.stringCase();
                if (Yw(n)) return e.firebaseCase();
                if (
                    (function Mb(n) {
                        return "function" == typeof n.exportVal;
                    })(n)
                )
                    return e.snapshotCase();
                throw new Error(
                    "Expects a string, snapshot, or reference. Got: " + typeof n
                );
            }
            function Um(n, e, t = "on", r = zh.z) {
                return new rs.y((i) => {
                    let a = null;
                    return (
                        (a = n[t](
                            e,
                            (l, h) => {
                                r.schedule(() => {
                                    i.next({ snapshot: l, prevKey: h });
                                }),
                                    "once" === t &&
                                        r.schedule(() => i.complete());
                            },
                            (l) => {
                                r.schedule(() => i.error(l));
                            }
                        )),
                        "on" === t
                            ? {
                                  unsubscribe() {
                                      null != a && n.off(e, a);
                                  },
                              }
                            : { unsubscribe() {} }
                    );
                }).pipe(
                    (0, Mt.U)((i) => {
                        const { snapshot: a, prevKey: l } = i;
                        let h = null;
                        return (
                            a.exists() && (h = a.key),
                            { type: e, payload: a, prevKey: l, key: h }
                        );
                    }),
                    (0, ru.B)()
                );
            }
            function Bm(n, e) {
                const t = n.length;
                for (let r = 0; r < t; r++)
                    if (n[r].payload.key === e) return r;
                return -1;
            }
            function Jw(n, e) {
                const { payload: t, prevKey: r, key: i } = e,
                    a = Bm(n, i),
                    l = (function kb(n, e) {
                        if (Vm(e)) return 0;
                        {
                            const t = Bm(n, e);
                            return -1 === t ? n.length : t + 1;
                        }
                    })(n, r);
                switch (e.type) {
                    case "value":
                        if (e.payload && e.payload.exists()) {
                            let h = null;
                            e.payload.forEach((_) => {
                                const E = {
                                    payload: _,
                                    type: "value",
                                    prevKey: h,
                                    key: _.key,
                                };
                                return (h = _.key), (n = [...n, E]), !1;
                            });
                        }
                        return n;
                    case "child_added":
                        if (a > -1) {
                            const h = n[a - 1];
                            ((h && h.key) || null) !== r &&
                                (n = n.filter(
                                    (_) => _.payload.key !== t.key
                                )).splice(l, 0, e);
                        } else {
                            if (null == r) return [e, ...n];
                            (n = n.slice()).splice(l, 0, e);
                        }
                        return n;
                    case "child_removed":
                        return n.filter((h) => h.payload.key !== t.key);
                    case "child_changed":
                        return n.map((h) => (h.payload.key === i ? e : h));
                    case "child_moved":
                        if (a > -1) {
                            const h = n.splice(a, 1)[0];
                            return (n = n.slice()).splice(l, 0, h), n;
                        }
                        return n;
                    default:
                        return n;
                }
            }
            function jm(n) {
                return (
                    (Vm(n) || 0 === n.length) &&
                        (n = [
                            "child_added",
                            "child_removed",
                            "child_changed",
                            "child_moved",
                        ]),
                    n
                );
            }
            function Ob(n, e, t) {
                return (function Qw(n, e, t) {
                    return Um(n, "value", "once", t).pipe(
                        fr((r) => {
                            const i = [bt(r)];
                            return (
                                e.forEach((a) => i.push(Um(n, a, "on", t))),
                                (0, vn.T)(...i).pipe(ni(Jw, []))
                            );
                        }),
                        qh()
                    );
                })(n, (e = jm(e)), t);
            }
            function Fb(n, e, t) {
                const r = (e = jm(e)).map((i) => Um(n, i, "on", t));
                return (0, vn.T)(...r);
            }
            function Hm(n, e) {
                return function (r, i) {
                    return Pb(r, {
                        stringCase: () => n.child(r)[e](i),
                        firebaseCase: () => r[e](i),
                        snapshotCase: () => r.ref[e](i),
                    });
                };
            }
            function Vb(n) {
                return function (t) {
                    return t
                        ? Pb(t, {
                              stringCase: () => n.child(t).remove(),
                              firebaseCase: () => t.remove(),
                              snapshotCase: () => t.ref.remove(),
                          })
                        : n.remove();
                };
            }
            function Xw(n, e) {
                return function () {
                    return Um(n, "value", "on", e);
                };
            }
            const dx = new p.OlP("angularfire2.realtimeDatabaseURL"),
                Bb = new p.OlP("angularfire2.database.use-emulator");
            let jb = (() => {
                    class n {
                        constructor(
                            t,
                            r,
                            i,
                            a,
                            l,
                            h,
                            _,
                            E,
                            D,
                            T,
                            R,
                            F,
                            K,
                            Ie,
                            Re
                        ) {
                            this.schedulers = h;
                            const mt = _,
                                _t = (0, pr.on)(t, l, r);
                            E && Nd(_t, l, D, R, F, K, T, Ie),
                                (this.database = (0, pr.cc)(
                                    `${_t.name}.database.${i}`,
                                    "AngularFireDatabase",
                                    _t.name,
                                    () => {
                                        const yt = l.runOutsideAngular(() =>
                                            _t.database(i || void 0)
                                        );
                                        return mt && yt.useEmulator(...mt), yt;
                                    },
                                    [mt]
                                ));
                        }
                        list(t, r) {
                            const i = this.schedulers.ngZone.runOutsideAngular(
                                () => Nb(this.database, t)
                            );
                            let a = i;
                            return (
                                r && (a = r(i)),
                                (function cx(n, e) {
                                    const t = e.schedulers.outsideAngular,
                                        r = e.schedulers.ngZone.run(
                                            () => n.ref
                                        );
                                    return {
                                        query: n,
                                        update: Hm(r, "update"),
                                        set: Hm(r, "set"),
                                        push: (i) => r.push(i),
                                        remove: Vb(r),
                                        snapshotChanges: (i) =>
                                            Ob(n, i, t).pipe(hn.iC),
                                        stateChanges: (i) =>
                                            Fb(n, i, t).pipe(hn.iC),
                                        auditTrail: (i) =>
                                            (function ux(n, e, t) {
                                                return (function Lb(n, e, t) {
                                                    return (function lx(n, e) {
                                                        return Um(
                                                            n,
                                                            "value",
                                                            "on",
                                                            e
                                                        ).pipe(
                                                            (0, Mt.U)((t) => {
                                                                let r;
                                                                return (
                                                                    t.payload.forEach(
                                                                        (i) => (
                                                                            (r =
                                                                                i.key),
                                                                            !1
                                                                        )
                                                                    ),
                                                                    {
                                                                        data: t,
                                                                        lastKeyToLoad:
                                                                            r,
                                                                    }
                                                                );
                                                            })
                                                        );
                                                    })(n, t).pipe(
                                                        (function hv(...n) {
                                                            const e = (0,
                                                            Ao.jO)(n);
                                                            return (0, hr.e)(
                                                                (t, r) => {
                                                                    const i =
                                                                            n.length,
                                                                        a =
                                                                            new Array(
                                                                                i
                                                                            );
                                                                    let l =
                                                                            n.map(
                                                                                () =>
                                                                                    !1
                                                                            ),
                                                                        h = !1;
                                                                    for (
                                                                        let _ = 0;
                                                                        _ < i;
                                                                        _++
                                                                    )
                                                                        (0,
                                                                        So.Xf)(
                                                                            n[_]
                                                                        ).subscribe(
                                                                            (0,
                                                                            dr.x)(
                                                                                r,
                                                                                (
                                                                                    E
                                                                                ) => {
                                                                                    (a[
                                                                                        _
                                                                                    ] =
                                                                                        E),
                                                                                        !h &&
                                                                                            !l[
                                                                                                _
                                                                                            ] &&
                                                                                            ((l[
                                                                                                _
                                                                                            ] =
                                                                                                !0),
                                                                                            (h =
                                                                                                l.every(
                                                                                                    ro.y
                                                                                                )) &&
                                                                                                (l =
                                                                                                    null));
                                                                                },
                                                                                Yc.Z
                                                                            )
                                                                        );
                                                                    t.subscribe(
                                                                        (0,
                                                                        dr.x)(
                                                                            r,
                                                                            (
                                                                                _
                                                                            ) => {
                                                                                if (
                                                                                    h
                                                                                ) {
                                                                                    const E =
                                                                                        [
                                                                                            _,
                                                                                            ...a,
                                                                                        ];
                                                                                    r.next(
                                                                                        e
                                                                                            ? e(
                                                                                                  ...E
                                                                                              )
                                                                                            : E
                                                                                    );
                                                                                }
                                                                            }
                                                                        )
                                                                    );
                                                                }
                                                            );
                                                        })(e),
                                                        (0, Mt.U)(([i, a]) => {
                                                            const l =
                                                                    i.lastKeyToLoad,
                                                                h = a.map(
                                                                    (_) => _.key
                                                                );
                                                            return {
                                                                actions: a,
                                                                lastKeyToLoad:
                                                                    l,
                                                                loadedKeys: h,
                                                            };
                                                        }),
                                                        (function Sg(n) {
                                                            return (0, hr.e)(
                                                                (e, t) => {
                                                                    let r = !1,
                                                                        i = 0;
                                                                    e.subscribe(
                                                                        (0,
                                                                        dr.x)(
                                                                            t,
                                                                            (
                                                                                a
                                                                            ) =>
                                                                                (r ||
                                                                                    (r =
                                                                                        !n(
                                                                                            a,
                                                                                            i++
                                                                                        ))) &&
                                                                                t.next(
                                                                                    a
                                                                                )
                                                                        )
                                                                    );
                                                                }
                                                            );
                                                        })(
                                                            (i) =>
                                                                -1 ===
                                                                i.loadedKeys.indexOf(
                                                                    i.lastKeyToLoad
                                                                )
                                                        ),
                                                        (0, Mt.U)(
                                                            (i) => i.actions
                                                        )
                                                    );
                                                })(
                                                    n,
                                                    Fb(n, e).pipe(
                                                        ni(
                                                            (i, a) => [...i, a],
                                                            []
                                                        )
                                                    ),
                                                    t
                                                );
                                            })(n, i, t).pipe(hn.iC),
                                        valueChanges: (i, a) =>
                                            Ob(n, i, t).pipe(
                                                (0, Mt.U)((h) =>
                                                    h.map((_) =>
                                                        a && a.idField
                                                            ? Object.assign(
                                                                  Object.assign(
                                                                      {},
                                                                      _.payload.val()
                                                                  ),
                                                                  {
                                                                      [a.idField]:
                                                                          _.key,
                                                                  }
                                                              )
                                                            : _.payload.val()
                                                    )
                                                ),
                                                hn.iC
                                            ),
                                    };
                                })(a, this)
                            );
                        }
                        object(t) {
                            return (function Ub(n, e) {
                                return {
                                    query: n,
                                    snapshotChanges: () =>
                                        Xw(
                                            n,
                                            e.schedulers.outsideAngular
                                        )().pipe(hn.iC),
                                    update: (t) => n.ref.update(t),
                                    set: (t) => n.ref.set(t),
                                    remove: () => n.ref.remove(),
                                    valueChanges: () =>
                                        Xw(
                                            n,
                                            e.schedulers.outsideAngular
                                        )().pipe(
                                            hn.iC,
                                            (0, Mt.U)((r) =>
                                                r.payload.exists()
                                                    ? r.payload.val()
                                                    : null
                                            )
                                        ),
                                };
                            })(
                                this.schedulers.ngZone.runOutsideAngular(() =>
                                    Nb(this.database, t)
                                ),
                                this
                            );
                        }
                        createPushId() {
                            return this.schedulers.ngZone
                                .runOutsideAngular(() => this.database.ref())
                                .push().key;
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(
                                p.LFG(pr.Dh),
                                p.LFG(pr.xv, 8),
                                p.LFG(dx, 8),
                                p.LFG(p.Lbi),
                                p.LFG(p.R0b),
                                p.LFG(hn.HU),
                                p.LFG(Bb, 8),
                                p.LFG(Pd, 8),
                                p.LFG(qf, 8),
                                p.LFG($l, 8),
                                p.LFG(qw, 8),
                                p.LFG(Kw, 8),
                                p.LFG(Zw, 8),
                                p.LFG(Md, 8),
                                p.LFG(Rd, 8)
                            );
                        }),
                        (n.ɵprov = p.Yz7({
                            token: n,
                            factory: n.ɵfac,
                            providedIn: "any",
                        })),
                        n
                    );
                })(),
                hx = (() => {
                    class n {
                        constructor() {
                            ms.Z.registerVersion(
                                "angularfire",
                                hn.q4.full,
                                "rtdb-compat"
                            );
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)();
                        }),
                        (n.ɵmod = p.oAB({ type: n })),
                        (n.ɵinj = p.cJS({ providers: [jb] })),
                        n
                    );
                })();
            var kd = P(8189);
            function ai(...n) {
                return (function fx() {
                    return (0, kd.J)(1);
                })()((0, dn.D)(n, (0, Ao.yG)(n)));
            }
            function xa(...n) {
                const e = (0, Ao.yG)(n);
                return (0, hr.e)((t, r) => {
                    (e ? ai(n, t, e) : ai(n, t)).subscribe(r);
                });
            }
            function e0() {
                return (0, hr.e)((n, e) => {
                    let t,
                        r = !1;
                    n.subscribe(
                        (0, dr.x)(e, (i) => {
                            const a = t;
                            (t = i), r && e.next([a, i]), (r = !0);
                        })
                    );
                });
            }
            var lt,
                px =
                    typeof globalThis < "u"
                        ? globalThis
                        : typeof window < "u"
                        ? window
                        : typeof global < "u"
                        ? global
                        : typeof self < "u"
                        ? self
                        : {},
                Su = {},
                $m = $m || {},
                Lt = px || self;
            function Au() {}
            function t0(n) {
                var e = typeof n;
                return (
                    "array" ==
                        (e =
                            "object" != e
                                ? e
                                : n
                                ? Array.isArray(n)
                                    ? "array"
                                    : e
                                : "null") ||
                    ("object" == e && "number" == typeof n.length)
                );
            }
            function Gl(n) {
                var e = typeof n;
                return ("object" == e && null != n) || "function" == e;
            }
            var Gm = "closure_uid_" + ((1e9 * Math.random()) >>> 0),
                mx = 0;
            function _x(n, e, t) {
                return n.call.apply(n.bind, arguments);
            }
            function Od(n, e, t) {
                if (!n) throw Error();
                if (2 < arguments.length) {
                    var r = Array.prototype.slice.call(arguments, 2);
                    return function () {
                        var i = Array.prototype.slice.call(arguments);
                        return (
                            Array.prototype.unshift.apply(i, r), n.apply(e, i)
                        );
                    };
                }
                return function () {
                    return n.apply(e, arguments);
                };
            }
            function ui(n, e, t) {
                return (ui =
                    Function.prototype.bind &&
                    -1 !=
                        Function.prototype.bind
                            .toString()
                            .indexOf("native code")
                        ? _x
                        : Od).apply(null, arguments);
            }
            function Fd(n, e) {
                var t = Array.prototype.slice.call(arguments, 1);
                return function () {
                    var r = t.slice();
                    return r.push.apply(r, arguments), n.apply(this, r);
                };
            }
            function zr(n, e) {
                function t() {}
                (t.prototype = e.prototype),
                    (n.Z = e.prototype),
                    (n.prototype = new t()),
                    (n.prototype.constructor = n),
                    (n.Vb = function (r, i, a) {
                        for (
                            var l = Array(arguments.length - 2), h = 2;
                            h < arguments.length;
                            h++
                        )
                            l[h - 2] = arguments[h];
                        return e.prototype[i].apply(r, l);
                    });
            }
            function Ra() {
                (this.s = this.s), (this.o = this.o);
            }
            var n0 = {};
            (Ra.prototype.s = !1),
                (Ra.prototype.na = function () {
                    if (!this.s && ((this.s = !0), this.M(), 0)) {
                        var n = (function gx(n) {
                            return (
                                (Object.prototype.hasOwnProperty.call(n, Gm) &&
                                    n[Gm]) ||
                                (n[Gm] = ++mx)
                            );
                        })(this);
                        delete n0[n];
                    }
                }),
                (Ra.prototype.M = function () {
                    if (this.o) for (; this.o.length; ) this.o.shift()();
                });
            const yx = Array.prototype.indexOf
                    ? function (n, e) {
                          return Array.prototype.indexOf.call(n, e, void 0);
                      }
                    : function (n, e) {
                          if ("string" == typeof n)
                              return "string" != typeof e || 1 != e.length
                                  ? -1
                                  : n.indexOf(e, 0);
                          for (let t = 0; t < n.length; t++)
                              if (t in n && n[t] === e) return t;
                          return -1;
                      },
                r0 = Array.prototype.forEach
                    ? function (n, e, t) {
                          Array.prototype.forEach.call(n, e, t);
                      }
                    : function (n, e, t) {
                          const r = n.length,
                              i = "string" == typeof n ? n.split("") : n;
                          for (let a = 0; a < r; a++)
                              a in i && e.call(t, i[a], a, n);
                      };
            function s0(n) {
                return Array.prototype.concat.apply([], arguments);
            }
            function xu(n) {
                const e = n.length;
                if (0 < e) {
                    const t = Array(e);
                    for (let r = 0; r < e; r++) t[r] = n[r];
                    return t;
                }
                return [];
            }
            function zm(n) {
                return /^[\s\xa0]*$/.test(n);
            }
            var ki,
                o0 = String.prototype.trim
                    ? function (n) {
                          return n.trim();
                      }
                    : function (n) {
                          return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(n)[1];
                      };
            function li(n, e) {
                return -1 != n.indexOf(e);
            }
            function Hb(n, e) {
                return n < e ? -1 : n > e ? 1 : 0;
            }
            e: {
                var wx = Lt.navigator;
                if (wx) {
                    var $b = wx.userAgent;
                    if ($b) {
                        ki = $b;
                        break e;
                    }
                }
                ki = "";
            }
            function a0(n, e, t) {
                for (const r in n) e.call(t, n[r], r, n);
            }
            function Gb(n) {
                const e = {};
                for (const t in n) e[t] = n[t];
                return e;
            }
            var u0 =
                "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(
                    " "
                );
            function l0(n, e) {
                let t, r;
                for (let i = 1; i < arguments.length; i++) {
                    for (t in ((r = arguments[i]), r)) n[t] = r[t];
                    for (let a = 0; a < u0.length; a++)
                        (t = u0[a]),
                            Object.prototype.hasOwnProperty.call(r, t) &&
                                (n[t] = r[t]);
                }
            }
            function c0(n) {
                return c0[" "](n), n;
            }
            c0[" "] = Au;
            var Kf,
                n,
                zb = li(ki, "Opera"),
                Ld = li(ki, "Trident") || li(ki, "MSIE"),
                qb = li(ki, "Edge"),
                qm = qb || Ld,
                Kb =
                    li(ki, "Gecko") &&
                    !(li(ki.toLowerCase(), "webkit") && !li(ki, "Edge")) &&
                    !(li(ki, "Trident") || li(ki, "MSIE")) &&
                    !li(ki, "Edge"),
                Zb = li(ki.toLowerCase(), "webkit") && !li(ki, "Edge");
            function d0() {
                var n = Lt.document;
                return n ? n.documentMode : void 0;
            }
            e: {
                var Km = "",
                    h0 =
                        ((n = ki),
                        Kb
                            ? /rv:([^\);]+)(\)|;)/.exec(n)
                            : qb
                            ? /Edge\/([\d\.]+)/.exec(n)
                            : Ld
                            ? /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(n)
                            : Zb
                            ? /WebKit\/(\S+)/.exec(n)
                            : zb
                            ? /(?:Version)[ \/]?(\S+)/.exec(n)
                            : void 0);
                if ((h0 && (Km = h0 ? h0[1] : ""), Ld)) {
                    var f0 = d0();
                    if (null != f0 && f0 > parseFloat(Km)) {
                        Kf = String(f0);
                        break e;
                    }
                }
                Kf = Km;
            }
            var bP = {};
            var DP =
                    (Lt.document && Ld && (d0() || parseInt(Kf, 10))) || void 0,
                TP = (function () {
                    if (!Lt.addEventListener || !Object.defineProperty)
                        return !1;
                    var n = !1,
                        e = Object.defineProperty({}, "passive", {
                            get: function () {
                                n = !0;
                            },
                        });
                    try {
                        Lt.addEventListener("test", Au, e),
                            Lt.removeEventListener("test", Au, e);
                    } catch {}
                    return n;
                })();
            function Oi(n, e) {
                (this.type = n),
                    (this.g = this.target = e),
                    (this.defaultPrevented = !1);
            }
            function Zm(n, e) {
                if (
                    (Oi.call(this, n ? n.type : ""),
                    (this.relatedTarget = this.g = this.target = null),
                    (this.button =
                        this.screenY =
                        this.screenX =
                        this.clientY =
                        this.clientX =
                            0),
                    (this.key = ""),
                    (this.metaKey =
                        this.shiftKey =
                        this.altKey =
                        this.ctrlKey =
                            !1),
                    (this.state = null),
                    (this.pointerId = 0),
                    (this.pointerType = ""),
                    (this.i = null),
                    n)
                ) {
                    var t = (this.type = n.type),
                        r =
                            n.changedTouches && n.changedTouches.length
                                ? n.changedTouches[0]
                                : null;
                    if (
                        ((this.target = n.target || n.srcElement),
                        (this.g = e),
                        (e = n.relatedTarget))
                    ) {
                        if (Kb) {
                            e: {
                                try {
                                    c0(e.nodeName);
                                    var i = !0;
                                    break e;
                                } catch {}
                                i = !1;
                            }
                            i || (e = null);
                        }
                    } else
                        "mouseover" == t
                            ? (e = n.fromElement)
                            : "mouseout" == t && (e = n.toElement);
                    (this.relatedTarget = e),
                        r
                            ? ((this.clientX =
                                  void 0 !== r.clientX ? r.clientX : r.pageX),
                              (this.clientY =
                                  void 0 !== r.clientY ? r.clientY : r.pageY),
                              (this.screenX = r.screenX || 0),
                              (this.screenY = r.screenY || 0))
                            : ((this.clientX =
                                  void 0 !== n.clientX ? n.clientX : n.pageX),
                              (this.clientY =
                                  void 0 !== n.clientY ? n.clientY : n.pageY),
                              (this.screenX = n.screenX || 0),
                              (this.screenY = n.screenY || 0)),
                        (this.button = n.button),
                        (this.key = n.key || ""),
                        (this.ctrlKey = n.ctrlKey),
                        (this.altKey = n.altKey),
                        (this.shiftKey = n.shiftKey),
                        (this.metaKey = n.metaKey),
                        (this.pointerId = n.pointerId || 0),
                        (this.pointerType =
                            "string" == typeof n.pointerType
                                ? n.pointerType
                                : SP[n.pointerType] || ""),
                        (this.state = n.state),
                        (this.i = n),
                        n.defaultPrevented && Zm.Z.h.call(this);
                }
            }
            (Oi.prototype.h = function () {
                this.defaultPrevented = !0;
            }),
                zr(Zm, Oi);
            var SP = { 2: "touch", 3: "pen", 4: "mouse" };
            Zm.prototype.h = function () {
                Zm.Z.h.call(this);
                var n = this.i;
                n.preventDefault ? n.preventDefault() : (n.returnValue = !1);
            };
            var Ym = "closure_listenable_" + ((1e6 * Math.random()) | 0),
                Qm = 0;
            function AP(n, e, t, r, i) {
                (this.listener = n),
                    (this.proxy = null),
                    (this.src = e),
                    (this.type = t),
                    (this.capture = !!r),
                    (this.ia = i),
                    (this.key = ++Qm),
                    (this.ca = this.fa = !1);
            }
            function Zf(n) {
                (n.ca = !0),
                    (n.listener = null),
                    (n.proxy = null),
                    (n.src = null),
                    (n.ia = null);
            }
            function Wl(n) {
                (this.src = n), (this.g = {}), (this.h = 0);
            }
            function Jm(n, e) {
                var t = e.type;
                if (t in n.g) {
                    var a,
                        r = n.g[t],
                        i = yx(r, e);
                    (a = 0 <= i) && Array.prototype.splice.call(r, i, 1),
                        a &&
                            (Zf(e),
                            0 == n.g[t].length && (delete n.g[t], n.h--));
                }
            }
            function Xm(n, e, t, r) {
                for (var i = 0; i < n.length; ++i) {
                    var a = n[i];
                    if (
                        !a.ca &&
                        a.listener == e &&
                        a.capture == !!t &&
                        a.ia == r
                    )
                        return i;
                }
                return -1;
            }
            Wl.prototype.add = function (n, e, t, r, i) {
                var a = n.toString();
                (n = this.g[a]) || ((n = this.g[a] = []), this.h++);
                var l = Xm(n, e, r, i);
                return (
                    -1 < l
                        ? ((e = n[l]), t || (e.fa = !1))
                        : (((e = new AP(e, this.src, a, !!r, i)).fa = t),
                          n.push(e)),
                    e
                );
            };
            var Jb = "closure_lm_" + ((1e6 * Math.random()) | 0),
                Yf = {};
            function p0(n, e, t, r, i) {
                if (r && r.once) return Ix(n, e, t, r, i);
                if (Array.isArray(e)) {
                    for (var a = 0; a < e.length; a++) p0(n, e[a], t, r, i);
                    return null;
                }
                return (
                    (t = rD(t)),
                    n && n[Ym]
                        ? n.N(e, t, Gl(r) ? !!r.capture : !!r, i)
                        : Xb(n, e, t, !1, r, i)
                );
            }
            function Xb(n, e, t, r, i, a) {
                if (!e) throw Error("Invalid event type");
                var l = Gl(i) ? !!i.capture : !!i,
                    h = m0(n);
                if (
                    (h || (n[Jb] = h = new Wl(n)),
                    (t = h.add(e, t, r, l, a)).proxy)
                )
                    return t;
                if (
                    ((r = (function eD() {
                        var e = e_;
                        return function n(t) {
                            return e.call(n.src, n.listener, t);
                        };
                    })()),
                    (t.proxy = r),
                    (r.src = n),
                    (r.listener = t),
                    n.addEventListener)
                )
                    TP || (i = l),
                        void 0 === i && (i = !1),
                        n.addEventListener(e.toString(), r, i);
                else if (n.attachEvent) n.attachEvent(tD(e.toString()), r);
                else {
                    if (!n.addListener || !n.removeListener)
                        throw Error(
                            "addEventListener and attachEvent are unavailable."
                        );
                    n.addListener(r);
                }
                return t;
            }
            function Ix(n, e, t, r, i) {
                if (Array.isArray(e)) {
                    for (var a = 0; a < e.length; a++) Ix(n, e[a], t, r, i);
                    return null;
                }
                return (
                    (t = rD(t)),
                    n && n[Ym]
                        ? n.O(e, t, Gl(r) ? !!r.capture : !!r, i)
                        : Xb(n, e, t, !0, r, i)
                );
            }
            function Cx(n, e, t, r, i) {
                if (Array.isArray(e))
                    for (var a = 0; a < e.length; a++) Cx(n, e[a], t, r, i);
                else
                    (r = Gl(r) ? !!r.capture : !!r),
                        (t = rD(t)),
                        n && n[Ym]
                            ? ((n = n.i),
                              (e = String(e).toString()) in n.g &&
                                  -1 < (t = Xm((a = n.g[e]), t, r, i)) &&
                                  (Zf(a[t]),
                                  Array.prototype.splice.call(a, t, 1),
                                  0 == a.length && (delete n.g[e], n.h--)))
                            : n &&
                              (n = m0(n)) &&
                              ((e = n.g[e.toString()]),
                              (n = -1),
                              e && (n = Xm(e, t, r, i)),
                              (t = -1 < n ? e[n] : null) && g0(t));
            }
            function g0(n) {
                if ("number" != typeof n && n && !n.ca) {
                    var e = n.src;
                    if (e && e[Ym]) Jm(e.i, n);
                    else {
                        var t = n.type,
                            r = n.proxy;
                        e.removeEventListener
                            ? e.removeEventListener(t, r, n.capture)
                            : e.detachEvent
                            ? e.detachEvent(tD(t), r)
                            : e.addListener &&
                              e.removeListener &&
                              e.removeListener(r),
                            (t = m0(e))
                                ? (Jm(t, n),
                                  0 == t.h && ((t.src = null), (e[Jb] = null)))
                                : Zf(n);
                    }
                }
            }
            function tD(n) {
                return n in Yf ? Yf[n] : (Yf[n] = "on" + n);
            }
            function e_(n, e) {
                if (n.ca) n = !0;
                else {
                    e = new Zm(e, this);
                    var t = n.listener,
                        r = n.ia || n.src;
                    n.fa && g0(n), (n = t.call(r, e));
                }
                return n;
            }
            function m0(n) {
                return (n = n[Jb]) instanceof Wl ? n : null;
            }
            var nD = "__closure_events_fn_" + ((1e9 * Math.random()) >>> 0);
            function rD(n) {
                return "function" == typeof n
                    ? n
                    : (n[nD] ||
                          (n[nD] = function (e) {
                              return n.handleEvent(e);
                          }),
                      n[nD]);
            }
            function ci() {
                Ra.call(this),
                    (this.i = new Wl(this)),
                    (this.P = this),
                    (this.I = null);
            }
            function di(n, e) {
                var t,
                    r = n.I;
                if (r) for (t = []; r; r = r.I) t.push(r);
                if (((n = n.P), (r = e.type || e), "string" == typeof e))
                    e = new Oi(e, n);
                else if (e instanceof Oi) e.target = e.target || n;
                else {
                    var i = e;
                    l0((e = new Oi(r, n)), i);
                }
                if (((i = !0), t))
                    for (var a = t.length - 1; 0 <= a; a--) {
                        var l = (e.g = t[a]);
                        i = t_(l, r, !0, e) && i;
                    }
                if (
                    ((i = t_((l = e.g = n), r, !0, e) && i),
                    (i = t_(l, r, !1, e) && i),
                    t)
                )
                    for (a = 0; a < t.length; a++)
                        i = t_((l = e.g = t[a]), r, !1, e) && i;
            }
            function t_(n, e, t, r) {
                if (!(e = n.i.g[String(e)])) return !0;
                e = e.concat();
                for (var i = !0, a = 0; a < e.length; ++a) {
                    var l = e[a];
                    if (l && !l.ca && l.capture == t) {
                        var h = l.listener,
                            _ = l.ia || l.src;
                        l.fa && Jm(n.i, l), (i = !1 !== h.call(_, r) && i);
                    }
                }
                return i && !r.defaultPrevented;
            }
            zr(ci, Ra),
                (ci.prototype[Ym] = !0),
                (ci.prototype.removeEventListener = function (n, e, t, r) {
                    Cx(this, n, e, t, r);
                }),
                (ci.prototype.M = function () {
                    if ((ci.Z.M.call(this), this.i)) {
                        var e,
                            n = this.i;
                        for (e in n.g) {
                            for (var t = n.g[e], r = 0; r < t.length; r++)
                                Zf(t[r]);
                            delete n.g[e], n.h--;
                        }
                    }
                    this.I = null;
                }),
                (ci.prototype.N = function (n, e, t, r) {
                    return this.i.add(String(n), e, !1, t, r);
                }),
                (ci.prototype.O = function (n, e, t, r) {
                    return this.i.add(String(n), e, !0, t, r);
                });
            var _0 = Lt.JSON.stringify;
            function xP() {
                var n = Zi;
                let e = null;
                return (
                    n.g &&
                        ((e = n.g),
                        (n.g = n.g.next),
                        n.g || (n.h = null),
                        (e.next = null)),
                    e
                );
            }
            var v0,
                y0 = new (class {
                    constructor(n, e) {
                        (this.i = n),
                            (this.j = e),
                            (this.h = 0),
                            (this.g = null);
                    }
                    get() {
                        let n;
                        return (
                            0 < this.h
                                ? (this.h--,
                                  (n = this.g),
                                  (this.g = n.next),
                                  (n.next = null))
                                : (n = this.i()),
                            n
                        );
                    }
                })(
                    () => new iD(),
                    (n) => n.reset()
                );
            class iD {
                constructor() {
                    this.next = this.g = this.h = null;
                }
                set(e, t) {
                    (this.h = e), (this.g = t), (this.next = null);
                }
                reset() {
                    this.next = this.g = this.h = null;
                }
            }
            function RP(n) {
                Lt.setTimeout(() => {
                    throw n;
                }, 0);
            }
            function _s(n, e) {
                v0 ||
                    (function w0() {
                        var n = Lt.Promise.resolve(void 0);
                        v0 = function () {
                            n.then(Dx);
                        };
                    })(),
                    E0 || (v0(), (E0 = !0)),
                    Zi.add(n, e);
            }
            var E0 = !1,
                Zi = new (class bx {
                    constructor() {
                        this.h = this.g = null;
                    }
                    add(e, t) {
                        const r = y0.get();
                        r.set(e, t),
                            this.h ? (this.h.next = r) : (this.g = r),
                            (this.h = r);
                    }
                })();
            function Dx() {
                for (var n; (n = xP()); ) {
                    try {
                        n.h.call(n.g);
                    } catch (t) {
                        RP(t);
                    }
                    var e = y0;
                    e.j(n), 100 > e.h && (e.h++, (n.next = e.g), (e.g = n));
                }
                E0 = !1;
            }
            function Vd(n, e) {
                ci.call(this),
                    (this.h = n || 1),
                    (this.g = e || Lt),
                    (this.j = ui(this.kb, this)),
                    (this.l = Date.now());
            }
            function I0(n) {
                (n.da = !1), n.S && (n.g.clearTimeout(n.S), (n.S = null));
            }
            function C0(n, e, t) {
                if ("function" == typeof n) t && (n = ui(n, t));
                else {
                    if (!n || "function" != typeof n.handleEvent)
                        throw Error("Invalid listener argument");
                    n = ui(n.handleEvent, n);
                }
                return 2147483647 < Number(e) ? -1 : Lt.setTimeout(n, e || 0);
            }
            function n_(n) {
                n.g = C0(() => {
                    (n.g = null), n.i && ((n.i = !1), n_(n));
                }, n.j);
                const e = n.h;
                (n.h = null), n.m.apply(null, e);
            }
            zr(Vd, ci),
                ((lt = Vd.prototype).da = !1),
                (lt.S = null),
                (lt.kb = function () {
                    if (this.da) {
                        var n = Date.now() - this.l;
                        0 < n && n < 0.8 * this.h
                            ? (this.S = this.g.setTimeout(this.j, this.h - n))
                            : (this.S &&
                                  (this.g.clearTimeout(this.S),
                                  (this.S = null)),
                              di(this, "tick"),
                              this.da && (I0(this), this.start()));
                    }
                }),
                (lt.start = function () {
                    (this.da = !0),
                        this.S ||
                            ((this.S = this.g.setTimeout(this.j, this.h)),
                            (this.l = Date.now()));
                }),
                (lt.M = function () {
                    Vd.Z.M.call(this), I0(this), delete this.g;
                });
            class sD extends Ra {
                constructor(e, t) {
                    super(),
                        (this.m = e),
                        (this.j = t),
                        (this.h = null),
                        (this.i = !1),
                        (this.g = null);
                }
                l(e) {
                    (this.h = arguments), this.g ? (this.i = !0) : n_(this);
                }
                M() {
                    super.M(),
                        this.g &&
                            (Lt.clearTimeout(this.g),
                            (this.g = null),
                            (this.i = !1),
                            (this.h = null));
                }
            }
            function Ud(n) {
                Ra.call(this), (this.h = n), (this.g = {});
            }
            zr(Ud, Ra);
            var oD = [];
            function b0(n, e, t, r) {
                Array.isArray(t) || (t && (oD[0] = t.toString()), (t = oD));
                for (var i = 0; i < t.length; i++) {
                    var a = p0(e, t[i], r || n.handleEvent, !1, n.h || n);
                    if (!a) break;
                    n.g[a.key] = a;
                }
            }
            function D0(n) {
                a0(
                    n.g,
                    function (e, t) {
                        this.g.hasOwnProperty(t) && g0(e);
                    },
                    n
                ),
                    (n.g = {});
            }
            function r_() {
                this.g = !0;
            }
            function Ru(n, e, t, r) {
                n.info(function () {
                    return (
                        "XMLHTTP TEXT (" +
                        e +
                        "): " +
                        (function uD(n, e) {
                            if (!n.g) return e;
                            if (!e) return null;
                            try {
                                var t = JSON.parse(e);
                                if (t)
                                    for (n = 0; n < t.length; n++)
                                        if (Array.isArray(t[n])) {
                                            var r = t[n];
                                            if (!(2 > r.length)) {
                                                var i = r[1];
                                                if (
                                                    Array.isArray(i) &&
                                                    !(1 > i.length)
                                                ) {
                                                    var a = i[0];
                                                    if (
                                                        "noop" != a &&
                                                        "stop" != a &&
                                                        "close" != a
                                                    )
                                                        for (
                                                            var l = 1;
                                                            l < i.length;
                                                            l++
                                                        )
                                                            i[l] = "";
                                                }
                                            }
                                        }
                                return _0(t);
                            } catch {
                                return e;
                            }
                        })(n, t) +
                        (r ? " " + r : "")
                    );
                });
            }
            (Ud.prototype.M = function () {
                Ud.Z.M.call(this), D0(this);
            }),
                (Ud.prototype.handleEvent = function () {
                    throw Error("EventHandler.handleEvent not implemented");
                }),
                (r_.prototype.Aa = function () {
                    this.g = !1;
                }),
                (r_.prototype.info = function () {});
            var Ma = {},
                qo = null;
            function i_() {
                return (qo = qo || new ci());
            }
            function Sx(n) {
                Oi.call(this, Ma.Ma, n);
            }
            function Qf(n) {
                const e = i_();
                di(e, new Sx(e, n));
            }
            function lD(n, e) {
                Oi.call(this, Ma.STAT_EVENT, n), (this.stat = e);
            }
            function Fi(n) {
                const e = i_();
                di(e, new lD(e, n));
            }
            function cD(n, e) {
                Oi.call(this, Ma.Na, n), (this.size = e);
            }
            function Bd(n, e) {
                if ("function" != typeof n)
                    throw Error("Fn must not be null and must be a function");
                return Lt.setTimeout(function () {
                    n();
                }, e);
            }
            (Ma.Ma = "serverreachability"),
                zr(Sx, Oi),
                (Ma.STAT_EVENT = "statevent"),
                zr(lD, Oi),
                (Ma.Na = "timingevent"),
                zr(cD, Oi);
            var T0 = {
                    NO_ERROR: 0,
                    lb: 1,
                    yb: 2,
                    xb: 3,
                    sb: 4,
                    wb: 5,
                    zb: 6,
                    Ja: 7,
                    TIMEOUT: 8,
                    Cb: 9,
                },
                S0 = {
                    qb: "complete",
                    Mb: "success",
                    Ka: "error",
                    Ja: "abort",
                    Eb: "ready",
                    Fb: "readystatechange",
                    TIMEOUT: "timeout",
                    Ab: "incrementaldata",
                    Db: "progress",
                    tb: "downloadprogress",
                    Ub: "uploadprogress",
                };
            function A0() {}
            function Ax() {}
            A0.prototype.h = null;
            var R0,
                zl = { OPEN: "a", pb: "b", Ka: "c", Bb: "d" };
            function s_() {
                Oi.call(this, "d");
            }
            function o_() {
                Oi.call(this, "c");
            }
            function Jf() {}
            function jd(n, e, t, r) {
                (this.l = n),
                    (this.j = e),
                    (this.m = t),
                    (this.X = r || 1),
                    (this.V = new Ud(this)),
                    (this.P = a_),
                    (this.W = new Vd((n = qm ? 125 : void 0))),
                    (this.H = null),
                    (this.i = !1),
                    (this.s =
                        this.A =
                        this.v =
                        this.K =
                        this.F =
                        this.Y =
                        this.B =
                            null),
                    (this.D = []),
                    (this.g = null),
                    (this.C = 0),
                    (this.o = this.u = null),
                    (this.N = -1),
                    (this.I = !1),
                    (this.O = 0),
                    (this.L = null),
                    (this.aa = this.J = this.$ = this.U = !1),
                    (this.h = new Xf());
            }
            function Xf() {
                (this.i = null), (this.g = ""), (this.h = !1);
            }
            zr(s_, Oi),
                zr(o_, Oi),
                zr(Jf, A0),
                (Jf.prototype.g = function () {
                    return new XMLHttpRequest();
                }),
                (Jf.prototype.i = function () {
                    return {};
                }),
                (R0 = new Jf());
            var a_ = 45e3,
                u_ = {},
                l_ = {};
            function c_(n, e, t) {
                (n.K = 1),
                    (n.v = $d(Ko(e))),
                    (n.s = t),
                    (n.U = !0),
                    M0(n, null);
            }
            function M0(n, e) {
                (n.F = Date.now()), d_(n), (n.A = Ko(n.v));
                var t = n.A,
                    r = n.X;
                Array.isArray(r) || (r = [String(r)]),
                    _D(t.h, "t", r),
                    (n.C = 0),
                    (t = n.l.H),
                    (n.h = new Xf()),
                    (n.g = UP(n.l, t ? e : null, !n.s)),
                    0 < n.O && (n.L = new sD(ui(n.Ia, n, n.g), n.O)),
                    b0(n.V, n.g, "readystatechange", n.gb),
                    (e = n.H ? Gb(n.H) : {}),
                    n.s
                        ? (n.u || (n.u = "POST"),
                          (e["Content-Type"] =
                              "application/x-www-form-urlencoded"),
                          n.g.ea(n.A, n.u, n.s, e))
                        : ((n.u = "GET"), n.g.ea(n.A, n.u, null, e)),
                    Qf(1),
                    (function aD(n, e, t, r, i, a) {
                        n.info(function () {
                            if (n.g)
                                if (a)
                                    for (
                                        var l = "", h = a.split("&"), _ = 0;
                                        _ < h.length;
                                        _++
                                    ) {
                                        var E = h[_].split("=");
                                        if (1 < E.length) {
                                            var D = E[0];
                                            E = E[1];
                                            var T = D.split("_");
                                            l =
                                                2 <= T.length && "type" == T[1]
                                                    ? l + (D + "=") + E + "&"
                                                    : l + (D + "=redacted&");
                                        }
                                    }
                                else l = null;
                            else l = a;
                            return (
                                "XMLHTTP REQ (" +
                                r +
                                ") [attempt " +
                                i +
                                "]: " +
                                e +
                                "\n" +
                                t +
                                "\n" +
                                l
                            );
                        });
                    })(n.j, n.u, n.A, n.m, n.X, n.s);
            }
            function dD(n) {
                return !!n.g && "GET" == n.u && 2 != n.K && n.l.Ba;
            }
            function hD(n, e, t) {
                let i,
                    r = !0;
                for (; !n.I && n.C < t.length; ) {
                    if (((i = MP(n, t)), i == l_)) {
                        4 == e && ((n.o = 4), Fi(14), (r = !1)),
                            Ru(n.j, n.m, null, "[Incomplete Response]");
                        break;
                    }
                    if (i == u_) {
                        (n.o = 4),
                            Fi(15),
                            Ru(n.j, n.m, t, "[Invalid Chunk]"),
                            (r = !1);
                        break;
                    }
                    Ru(n.j, n.m, i, null), fD(n, i);
                }
                dD(n) && i != l_ && i != u_ && ((n.h.g = ""), (n.C = 0)),
                    4 != e ||
                        0 != t.length ||
                        n.h.h ||
                        ((n.o = 1), Fi(16), (r = !1)),
                    (n.i = n.i && r),
                    r
                        ? 0 < t.length &&
                          !n.aa &&
                          ((n.aa = !0),
                          (e = n.l).g == n &&
                              e.$ &&
                              !e.L &&
                              (e.h.info(
                                  "Great, no buffering proxy detected. Bytes received: " +
                                      t.length
                              ),
                              op(e),
                              (e.L = !0),
                              Fi(11)))
                        : (Ru(n.j, n.m, t, "[Invalid Chunked Response]"),
                          ql(n),
                          ep(n));
            }
            function MP(n, e) {
                var t = n.C,
                    r = e.indexOf("\n", t);
                return -1 == r
                    ? l_
                    : ((t = Number(e.substring(t, r))),
                      isNaN(t)
                          ? u_
                          : (r += 1) + t > e.length
                          ? l_
                          : ((e = e.substr(r, t)), (n.C = r + t), e));
            }
            function d_(n) {
                (n.Y = Date.now() + n.P), N0(n, n.P);
            }
            function N0(n, e) {
                if (null != n.B) throw Error("WatchDog timer not null");
                n.B = Bd(ui(n.eb, n), e);
            }
            function h_(n) {
                n.B && (Lt.clearTimeout(n.B), (n.B = null));
            }
            function ep(n) {
                0 == n.l.G || n.I || b_(n.l, n);
            }
            function ql(n) {
                h_(n);
                var e = n.L;
                e && "function" == typeof e.na && e.na(),
                    (n.L = null),
                    I0(n.W),
                    D0(n.V),
                    n.g && ((e = n.g), (n.g = null), e.abort(), e.na());
            }
            function fD(n, e) {
                try {
                    var t = n.l;
                    if (0 != t.G && (t.g == n || L0(t.i, n)))
                        if (((t.I = n.N), !n.J && L0(t.i, n) && 3 == t.G)) {
                            try {
                                var r = t.Ca.g.parse(e);
                            } catch {
                                r = null;
                            }
                            if (Array.isArray(r) && 3 == r.length) {
                                var i = r;
                                if (0 == i[0]) {
                                    e: if (!t.u) {
                                        if (t.g) {
                                            if (!(t.g.F + 3e3 < n.F)) break e;
                                            Wd(t), Dt(t);
                                        }
                                        sp(t), Fi(18);
                                    }
                                } else
                                    (t.ta = i[1]),
                                        0 < t.ta - t.U &&
                                            37500 > i[2] &&
                                            t.N &&
                                            0 == t.A &&
                                            !t.v &&
                                            (t.v = Bd(ui(t.ab, t), 6e3));
                                if (1 >= wD(t.i) && t.ka) {
                                    try {
                                        t.ka();
                                    } catch {}
                                    t.ka = void 0;
                                }
                            } else ap(t, 11);
                        } else if (((n.J || t.g == n) && Wd(t), !zm(e)))
                            for (
                                i = t.Ca.g.parse(e), e = 0;
                                e < i.length;
                                e++
                            ) {
                                let E = i[e];
                                if (((t.U = E[0]), (E = E[1]), 2 == t.G))
                                    if ("c" == E[0]) {
                                        (t.J = E[1]), (t.la = E[2]);
                                        const D = E[3];
                                        null != D &&
                                            ((t.ma = D),
                                            t.h.info("VER=" + t.ma));
                                        const T = E[4];
                                        null != T &&
                                            ((t.za = T),
                                            t.h.info("SVER=" + t.za));
                                        const R = E[5];
                                        null != R &&
                                            "number" == typeof R &&
                                            0 < R &&
                                            ((t.K = r = 1.5 * R),
                                            t.h.info(
                                                "backChannelRequestTimeoutMs_=" +
                                                    r
                                            )),
                                            (r = t);
                                        const F = n.g;
                                        if (F) {
                                            const K = F.g
                                                ? F.g.getResponseHeader(
                                                      "X-Client-Wire-Protocol"
                                                  )
                                                : null;
                                            if (K) {
                                                var a = r.i;
                                                !a.g &&
                                                    (li(K, "spdy") ||
                                                        li(K, "quic") ||
                                                        li(K, "h2")) &&
                                                    ((a.j = a.l),
                                                    (a.g = new Set()),
                                                    a.h &&
                                                        (ED(a, a.h),
                                                        (a.h = null)));
                                            }
                                            if (r.D) {
                                                const Ie = F.g
                                                    ? F.g.getResponseHeader(
                                                          "X-HTTP-Session-Id"
                                                      )
                                                    : null;
                                                Ie &&
                                                    ((r.sa = Ie),
                                                    Kn(r.F, r.D, Ie));
                                            }
                                        }
                                        (t.G = 3),
                                            t.j && t.j.xa(),
                                            t.$ &&
                                                ((t.O = Date.now() - n.F),
                                                t.h.info(
                                                    "Handshake RTT: " +
                                                        t.O +
                                                        "ms"
                                                ));
                                        var l = n;
                                        if (
                                            (((r = t).oa = VP(
                                                r,
                                                r.H ? r.la : null,
                                                r.W
                                            )),
                                            l.J)
                                        ) {
                                            Ox(r.i, l);
                                            var h = l,
                                                _ = r.K;
                                            _ && h.setTimeout(_),
                                                h.B && (h_(h), d_(h)),
                                                (r.g = l);
                                        } else I_(r);
                                        0 < t.l.length && tn(t);
                                    } else
                                        ("stop" != E[0] && "close" != E[0]) ||
                                            ap(t, 7);
                                else
                                    3 == t.G &&
                                        ("stop" == E[0] || "close" == E[0]
                                            ? "stop" == E[0]
                                                ? ap(t, 7)
                                                : st(t)
                                            : "noop" != E[0] &&
                                              t.j &&
                                              t.j.wa(E),
                                        (t.A = 0));
                            }
                    Qf(4);
                } catch {}
            }
            function pD(n, e) {
                if (n.forEach && "function" == typeof n.forEach)
                    n.forEach(e, void 0);
                else if (t0(n) || "string" == typeof n) r0(n, e, void 0);
                else {
                    if (n.T && "function" == typeof n.T) var t = n.T();
                    else if (n.R && "function" == typeof n.R) t = void 0;
                    else if (t0(n) || "string" == typeof n) {
                        t = [];
                        for (var r = n.length, i = 0; i < r; i++) t.push(i);
                    } else for (i in ((t = []), (r = 0), n)) t[r++] = i;
                    (r = (function NP(n) {
                        if (n.R && "function" == typeof n.R) return n.R();
                        if ("string" == typeof n) return n.split("");
                        if (t0(n)) {
                            for (var e = [], t = n.length, r = 0; r < t; r++)
                                e.push(n[r]);
                            return e;
                        }
                        for (r in ((e = []), (t = 0), n)) e[t++] = n[r];
                        return e;
                    })(n)),
                        (i = r.length);
                    for (var a = 0; a < i; a++)
                        e.call(void 0, r[a], t && t[a], n);
                }
            }
            function tp(n, e) {
                (this.h = {}), (this.g = []), (this.i = 0);
                var t = arguments.length;
                if (1 < t) {
                    if (t % 2) throw Error("Uneven number of arguments");
                    for (var r = 0; r < t; r += 2)
                        this.set(arguments[r], arguments[r + 1]);
                } else if (n)
                    if (n instanceof tp)
                        for (t = n.T(), r = 0; r < t.length; r++)
                            this.set(t[r], n.get(t[r]));
                    else for (r in n) this.set(r, n[r]);
            }
            function gD(n) {
                if (n.i != n.g.length) {
                    for (var e = 0, t = 0; e < n.g.length; ) {
                        var r = n.g[e];
                        Kl(n.h, r) && (n.g[t++] = r), e++;
                    }
                    n.g.length = t;
                }
                if (n.i != n.g.length) {
                    var i = {};
                    for (t = e = 0; e < n.g.length; )
                        Kl(i, (r = n.g[e])) || ((n.g[t++] = r), (i[r] = 1)),
                            e++;
                    n.g.length = t;
                }
            }
            function Kl(n, e) {
                return Object.prototype.hasOwnProperty.call(n, e);
            }
            ((lt = jd.prototype).setTimeout = function (n) {
                this.P = n;
            }),
                (lt.gb = function (n) {
                    n = n.target;
                    const e = this.L;
                    e && 3 == k(n) ? e.l() : this.Ia(n);
                }),
                (lt.Ia = function (n) {
                    try {
                        if (n == this.g)
                            e: {
                                const D = k(this.g);
                                var e = this.g.Da();
                                const T = this.g.ba();
                                if (
                                    !(3 > D) &&
                                    (3 != D ||
                                        qm ||
                                        (this.g &&
                                            (this.h.h ||
                                                this.g.ga() ||
                                                z(this.g))))
                                ) {
                                    this.I ||
                                        4 != D ||
                                        7 == e ||
                                        Qf(8 == e || 0 >= T ? 3 : 2),
                                        h_(this);
                                    var t = this.g.ba();
                                    this.N = t;
                                    t: if (dD(this)) {
                                        var r = z(this.g);
                                        n = "";
                                        var i = r.length,
                                            a = 4 == k(this.g);
                                        if (!this.h.i) {
                                            if (typeof TextDecoder > "u") {
                                                ql(this), ep(this);
                                                var l = "";
                                                break t;
                                            }
                                            this.h.i = new Lt.TextDecoder();
                                        }
                                        for (e = 0; e < i; e++)
                                            (this.h.h = !0),
                                                (n += this.h.i.decode(r[e], {
                                                    stream: a && e == i - 1,
                                                }));
                                        r.splice(0, i),
                                            (this.h.g += n),
                                            (this.C = 0),
                                            (l = this.h.g);
                                    } else l = this.g.ga();
                                    if (
                                        ((this.i = 200 == t),
                                        (function Tx(n, e, t, r, i, a, l) {
                                            n.info(function () {
                                                return (
                                                    "XMLHTTP RESP (" +
                                                    r +
                                                    ") [ attempt " +
                                                    i +
                                                    "]: " +
                                                    e +
                                                    "\n" +
                                                    t +
                                                    "\n" +
                                                    a +
                                                    " " +
                                                    l
                                                );
                                            });
                                        })(
                                            this.j,
                                            this.u,
                                            this.A,
                                            this.m,
                                            this.X,
                                            D,
                                            t
                                        ),
                                        this.i)
                                    ) {
                                        if (this.$ && !this.J) {
                                            t: {
                                                if (this.g) {
                                                    var h,
                                                        _ = this.g;
                                                    if (
                                                        (h = _.g
                                                            ? _.g.getResponseHeader(
                                                                  "X-HTTP-Initial-Response"
                                                              )
                                                            : null) &&
                                                        !zm(h)
                                                    ) {
                                                        var E = h;
                                                        break t;
                                                    }
                                                }
                                                E = null;
                                            }
                                            if (!(t = E)) {
                                                (this.i = !1),
                                                    (this.o = 3),
                                                    Fi(12),
                                                    ql(this),
                                                    ep(this);
                                                break e;
                                            }
                                            Ru(
                                                this.j,
                                                this.m,
                                                t,
                                                "Initial handshake response via X-HTTP-Initial-Response"
                                            ),
                                                (this.J = !0),
                                                fD(this, t);
                                        }
                                        this.U
                                            ? (hD(this, D, l),
                                              qm &&
                                                  this.i &&
                                                  3 == D &&
                                                  (b0(
                                                      this.V,
                                                      this.W,
                                                      "tick",
                                                      this.fb
                                                  ),
                                                  this.W.start()))
                                            : (Ru(this.j, this.m, l, null),
                                              fD(this, l)),
                                            4 == D && ql(this),
                                            this.i &&
                                                !this.I &&
                                                (4 == D
                                                    ? b_(this.l, this)
                                                    : ((this.i = !1),
                                                      d_(this)));
                                    } else
                                        400 == t && 0 < l.indexOf("Unknown SID")
                                            ? ((this.o = 3), Fi(12))
                                            : ((this.o = 0), Fi(13)),
                                            ql(this),
                                            ep(this);
                                }
                            }
                    } catch {}
                }),
                (lt.fb = function () {
                    if (this.g) {
                        var n = k(this.g),
                            e = this.g.ga();
                        this.C < e.length &&
                            (h_(this),
                            hD(this, n, e),
                            this.i && 4 != n && d_(this));
                    }
                }),
                (lt.cancel = function () {
                    (this.I = !0), ql(this);
                }),
                (lt.eb = function () {
                    this.B = null;
                    const n = Date.now();
                    0 <= n - this.Y
                        ? ((function Mu(n, e) {
                              n.info(function () {
                                  return "TIMEOUT: " + e;
                              });
                          })(this.j, this.A),
                          2 != this.K && (Qf(3), Fi(17)),
                          ql(this),
                          (this.o = 2),
                          ep(this))
                        : N0(this, this.Y - n);
                }),
                ((lt = tp.prototype).R = function () {
                    gD(this);
                    for (var n = [], e = 0; e < this.g.length; e++)
                        n.push(this.h[this.g[e]]);
                    return n;
                }),
                (lt.T = function () {
                    return gD(this), this.g.concat();
                }),
                (lt.get = function (n, e) {
                    return Kl(this.h, n) ? this.h[n] : e;
                }),
                (lt.set = function (n, e) {
                    Kl(this.h, n) || (this.i++, this.g.push(n)),
                        (this.h[n] = e);
                }),
                (lt.forEach = function (n, e) {
                    for (var t = this.T(), r = 0; r < t.length; r++) {
                        var i = t[r],
                            a = this.get(i);
                        n.call(e, a, i, this);
                    }
                });
            var np =
                /^(?:([^:/?#.]+):)?(?:\/\/(?:([^\\/?#]*)@)?([^\\/?#]*?)(?::([0-9]+))?(?=[\\/?#]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;
            function Zl(n, e) {
                if (
                    ((this.i = this.s = this.j = ""),
                    (this.m = null),
                    (this.o = this.l = ""),
                    (this.g = !1),
                    n instanceof Zl)
                ) {
                    (this.g = void 0 !== e ? e : n.g),
                        Zo(this, n.j),
                        (this.s = n.s),
                        rp(this, n.i),
                        Hd(this, n.m),
                        (this.l = n.l),
                        (e = n.h);
                    var t = new ip();
                    (t.i = e.i),
                        e.g && ((t.g = new tp(e.g)), (t.h = e.h)),
                        f_(this, t),
                        (this.o = n.o);
                } else
                    n && (t = String(n).match(np))
                        ? ((this.g = !!e),
                          Zo(this, t[1] || "", !0),
                          (this.s = g_(t[2] || "")),
                          rp(this, t[3] || "", !0),
                          Hd(this, t[4]),
                          (this.l = g_(t[5] || "", !0)),
                          f_(this, t[6] || "", !0),
                          (this.o = g_(t[7] || "")))
                        : ((this.g = !!e), (this.h = new ip(null, this.g)));
            }
            function Ko(n) {
                return new Zl(n);
            }
            function Zo(n, e, t) {
                (n.j = t ? g_(e, !0) : e), n.j && (n.j = n.j.replace(/:$/, ""));
            }
            function rp(n, e, t) {
                n.i = t ? g_(e, !0) : e;
            }
            function Hd(n, e) {
                if (e) {
                    if (((e = Number(e)), isNaN(e) || 0 > e))
                        throw Error("Bad port number " + e);
                    n.m = e;
                } else n.m = null;
            }
            function f_(n, e, t) {
                e instanceof ip
                    ? ((n.h = e),
                      (function yD(n, e) {
                          e &&
                              !n.j &&
                              (Na(n),
                              (n.i = null),
                              n.g.forEach(function (t, r) {
                                  var i = r.toLowerCase();
                                  r != i && (k0(this, r), _D(this, i, t));
                              }, n)),
                              (n.j = e);
                      })(n.h, n.g))
                    : (t || (e = m_(e, Nx)), (n.h = new ip(e, n.g)));
            }
            function Kn(n, e, t) {
                n.h.set(e, t);
            }
            function $d(n) {
                return (
                    Kn(
                        n,
                        "zx",
                        Math.floor(2147483648 * Math.random()).toString(36) +
                            Math.abs(
                                Math.floor(2147483648 * Math.random()) ^
                                    Date.now()
                            ).toString(36)
                    ),
                    n
                );
            }
            function g_(n, e) {
                return n
                    ? e
                        ? decodeURI(n.replace(/%25/g, "%2525"))
                        : decodeURIComponent(n)
                    : "";
            }
            function m_(n, e, t) {
                return "string" == typeof n
                    ? ((n = encodeURI(n).replace(e, PP)),
                      t && (n = n.replace(/%25([0-9a-fA-F]{2})/g, "%$1")),
                      n)
                    : null;
            }
            function PP(n) {
                return (
                    "%" +
                    (((n = n.charCodeAt(0)) >> 4) & 15).toString(16) +
                    (15 & n).toString(16)
                );
            }
            Zl.prototype.toString = function () {
                var n = [],
                    e = this.j;
                e && n.push(m_(e, Rx, !0), ":");
                var t = this.i;
                return (
                    (t || "file" == e) &&
                        (n.push("//"),
                        (e = this.s) && n.push(m_(e, Rx, !0), "@"),
                        n.push(
                            encodeURIComponent(String(t)).replace(
                                /%25([0-9a-fA-F]{2})/g,
                                "%$1"
                            )
                        ),
                        null != (t = this.m) && n.push(":", String(t))),
                    (t = this.l) &&
                        (this.i && "/" != t.charAt(0) && n.push("/"),
                        n.push(m_(t, "/" == t.charAt(0) ? Mx : mD, !0))),
                    (t = this.h.toString()) && n.push("?", t),
                    (t = this.o) && n.push("#", m_(t, Px)),
                    n.join("")
                );
            };
            var Rx = /[#\/\?@]/g,
                mD = /[#\?:]/g,
                Mx = /[#\?]/g,
                Nx = /[#\?@]/g,
                Px = /#/g;
            function ip(n, e) {
                (this.h = this.g = null), (this.i = n || null), (this.j = !!e);
            }
            function Na(n) {
                n.g ||
                    ((n.g = new tp()),
                    (n.h = 0),
                    n.i &&
                        (function xx(n, e) {
                            if (n) {
                                n = n.split("&");
                                for (var t = 0; t < n.length; t++) {
                                    var r = n[t].indexOf("="),
                                        i = null;
                                    if (0 <= r) {
                                        var a = n[t].substring(0, r);
                                        i = n[t].substring(r + 1);
                                    } else a = n[t];
                                    e(
                                        a,
                                        i
                                            ? decodeURIComponent(
                                                  i.replace(/\+/g, " ")
                                              )
                                            : ""
                                    );
                                }
                            }
                        })(n.i, function (e, t) {
                            n.add(decodeURIComponent(e.replace(/\+/g, " ")), t);
                        }));
            }
            function k0(n, e) {
                Na(n),
                    (e = Gd(n, e)),
                    Kl(n.g.h, e) &&
                        ((n.i = null),
                        (n.h -= n.g.get(e).length),
                        Kl((n = n.g).h, e) &&
                            (delete n.h[e],
                            n.i--,
                            n.g.length > 2 * n.i && gD(n)));
            }
            function O0(n, e) {
                return Na(n), (e = Gd(n, e)), Kl(n.g.h, e);
            }
            function _D(n, e, t) {
                k0(n, e),
                    0 < t.length &&
                        ((n.i = null),
                        n.g.set(Gd(n, e), xu(t)),
                        (n.h += t.length));
            }
            function Gd(n, e) {
                return (e = String(e)), n.j && (e = e.toLowerCase()), e;
            }
            function kx(n) {
                (this.l = n || vD),
                    (n = Lt.PerformanceNavigationTiming
                        ? 0 <
                              (n =
                                  Lt.performance.getEntriesByType("navigation"))
                                  .length &&
                          ("hq" == n[0].nextHopProtocol ||
                              "h2" == n[0].nextHopProtocol)
                        : !!(Lt.g && Lt.g.Ea && Lt.g.Ea() && Lt.g.Ea().Zb)),
                    (this.j = n ? this.l : 1),
                    (this.g = null),
                    1 < this.j && (this.g = new Set()),
                    (this.h = null),
                    (this.i = []);
            }
            ((lt = ip.prototype).add = function (n, e) {
                Na(this), (this.i = null), (n = Gd(this, n));
                var t = this.g.get(n);
                return (
                    t || this.g.set(n, (t = [])), t.push(e), (this.h += 1), this
                );
            }),
                (lt.forEach = function (n, e) {
                    Na(this),
                        this.g.forEach(function (t, r) {
                            r0(
                                t,
                                function (i) {
                                    n.call(e, i, r, this);
                                },
                                this
                            );
                        }, this);
                }),
                (lt.T = function () {
                    Na(this);
                    for (
                        var n = this.g.R(), e = this.g.T(), t = [], r = 0;
                        r < e.length;
                        r++
                    )
                        for (var i = n[r], a = 0; a < i.length; a++)
                            t.push(e[r]);
                    return t;
                }),
                (lt.R = function (n) {
                    Na(this);
                    var e = [];
                    if ("string" == typeof n)
                        O0(this, n) && (e = s0(e, this.g.get(Gd(this, n))));
                    else {
                        n = this.g.R();
                        for (var t = 0; t < n.length; t++) e = s0(e, n[t]);
                    }
                    return e;
                }),
                (lt.set = function (n, e) {
                    return (
                        Na(this),
                        (this.i = null),
                        O0(this, (n = Gd(this, n))) &&
                            (this.h -= this.g.get(n).length),
                        this.g.set(n, [e]),
                        (this.h += 1),
                        this
                    );
                }),
                (lt.get = function (n, e) {
                    return n && 0 < (n = this.R(n)).length ? String(n[0]) : e;
                }),
                (lt.toString = function () {
                    if (this.i) return this.i;
                    if (!this.g) return "";
                    for (var n = [], e = this.g.T(), t = 0; t < e.length; t++) {
                        var r = e[t],
                            i = encodeURIComponent(String(r));
                        r = this.R(r);
                        for (var a = 0; a < r.length; a++) {
                            var l = i;
                            "" !== r[a] &&
                                (l += "=" + encodeURIComponent(String(r[a]))),
                                n.push(l);
                        }
                    }
                    return (this.i = n.join("&"));
                });
            var vD = 10;
            function __(n) {
                return !!n.h || (!!n.g && n.g.size >= n.j);
            }
            function wD(n) {
                return n.h ? 1 : n.g ? n.g.size : 0;
            }
            function L0(n, e) {
                return n.h ? n.h == e : !!n.g && n.g.has(e);
            }
            function ED(n, e) {
                n.g ? n.g.add(e) : (n.h = e);
            }
            function Ox(n, e) {
                n.h && n.h == e
                    ? (n.h = null)
                    : n.g && n.g.has(e) && n.g.delete(e);
            }
            function ID(n) {
                if (null != n.h) return n.i.concat(n.h.D);
                if (null != n.g && 0 !== n.g.size) {
                    let e = n.i;
                    for (const t of n.g.values()) e = e.concat(t.D);
                    return e;
                }
                return xu(n.i);
            }
            function V0() {}
            function Fx() {
                this.g = new V0();
            }
            function kP(n, e, t) {
                const r = t || "";
                try {
                    pD(n, function (i, a) {
                        let l = i;
                        Gl(i) && (l = _0(i)),
                            e.push(r + a + "=" + encodeURIComponent(l));
                    });
                } catch (i) {
                    throw (
                        (e.push(r + "type=" + encodeURIComponent("_badmap")), i)
                    );
                }
            }
            function U0(n, e, t, r, i) {
                try {
                    (e.onload = null),
                        (e.onerror = null),
                        (e.onabort = null),
                        (e.ontimeout = null),
                        i(r);
                } catch {}
            }
            function y_(n) {
                (this.l = n.$b || null), (this.j = n.ib || !1);
            }
            function B0(n, e) {
                ci.call(this),
                    (this.D = n),
                    (this.u = e),
                    (this.m = void 0),
                    (this.readyState = j0),
                    (this.status = 0),
                    (this.responseType =
                        this.responseText =
                        this.response =
                        this.statusText =
                            ""),
                    (this.onreadystatechange = null),
                    (this.v = new Headers()),
                    (this.h = null),
                    (this.C = "GET"),
                    (this.B = ""),
                    (this.g = !1),
                    (this.A = this.j = this.l = null);
            }
            (kx.prototype.cancel = function () {
                if (((this.i = ID(this)), this.h))
                    this.h.cancel(), (this.h = null);
                else if (this.g && 0 !== this.g.size) {
                    for (const n of this.g.values()) n.cancel();
                    this.g.clear();
                }
            }),
                (V0.prototype.stringify = function (n) {
                    return Lt.JSON.stringify(n, void 0);
                }),
                (V0.prototype.parse = function (n) {
                    return Lt.JSON.parse(n, void 0);
                }),
                zr(y_, A0),
                (y_.prototype.g = function () {
                    return new B0(this.l, this.j);
                }),
                (y_.prototype.i = (function (n) {
                    return function () {
                        return n;
                    };
                })({})),
                zr(B0, ci);
            var j0 = 0;
            function Lx(n) {
                n.j.read().then(n.Sa.bind(n)).catch(n.ha.bind(n));
            }
            function v_(n) {
                (n.readyState = 4),
                    (n.l = null),
                    (n.j = null),
                    (n.A = null),
                    w_(n);
            }
            function w_(n) {
                n.onreadystatechange && n.onreadystatechange.call(n);
            }
            ((lt = B0.prototype).open = function (n, e) {
                if (this.readyState != j0)
                    throw (this.abort(), Error("Error reopening a connection"));
                (this.C = n), (this.B = e), (this.readyState = 1), w_(this);
            }),
                (lt.send = function (n) {
                    if (1 != this.readyState)
                        throw (
                            (this.abort(), Error("need to call open() first. "))
                        );
                    this.g = !0;
                    const e = {
                        headers: this.v,
                        method: this.C,
                        credentials: this.m,
                        cache: void 0,
                    };
                    n && (e.body = n),
                        (this.D || Lt)
                            .fetch(new Request(this.B, e))
                            .then(this.Va.bind(this), this.ha.bind(this));
                }),
                (lt.abort = function () {
                    (this.response = this.responseText = ""),
                        (this.v = new Headers()),
                        (this.status = 0),
                        this.j && this.j.cancel("Request was aborted."),
                        1 <= this.readyState &&
                            this.g &&
                            4 != this.readyState &&
                            ((this.g = !1), v_(this)),
                        (this.readyState = j0);
                }),
                (lt.Va = function (n) {
                    if (
                        this.g &&
                        ((this.l = n),
                        this.h ||
                            ((this.status = this.l.status),
                            (this.statusText = this.l.statusText),
                            (this.h = n.headers),
                            (this.readyState = 2),
                            w_(this)),
                        this.g && ((this.readyState = 3), w_(this), this.g))
                    )
                        if ("arraybuffer" === this.responseType)
                            n.arrayBuffer().then(
                                this.Ta.bind(this),
                                this.ha.bind(this)
                            );
                        else if (
                            typeof Lt.ReadableStream < "u" &&
                            "body" in n
                        ) {
                            if (((this.j = n.body.getReader()), this.u)) {
                                if (this.responseType)
                                    throw Error(
                                        'responseType must be empty for "streamBinaryChunks" mode responses.'
                                    );
                                this.response = [];
                            } else
                                (this.response = this.responseText = ""),
                                    (this.A = new TextDecoder());
                            Lx(this);
                        } else
                            n.text().then(
                                this.Ua.bind(this),
                                this.ha.bind(this)
                            );
                }),
                (lt.Sa = function (n) {
                    if (this.g) {
                        if (this.u && n.value) this.response.push(n.value);
                        else if (!this.u) {
                            var e = n.value ? n.value : new Uint8Array(0);
                            (e = this.A.decode(e, { stream: !n.done })) &&
                                (this.response = this.responseText += e);
                        }
                        n.done ? v_(this) : w_(this),
                            3 == this.readyState && Lx(this);
                    }
                }),
                (lt.Ua = function (n) {
                    this.g &&
                        ((this.response = this.responseText = n), v_(this));
                }),
                (lt.Ta = function (n) {
                    this.g && ((this.response = n), v_(this));
                }),
                (lt.ha = function () {
                    this.g && v_(this);
                }),
                (lt.setRequestHeader = function (n, e) {
                    this.v.append(n, e);
                }),
                (lt.getResponseHeader = function (n) {
                    return (this.h && this.h.get(n.toLowerCase())) || "";
                }),
                (lt.getAllResponseHeaders = function () {
                    if (!this.h) return "";
                    const n = [],
                        e = this.h.entries();
                    for (var t = e.next(); !t.done; )
                        n.push((t = t.value)[0] + ": " + t[1]), (t = e.next());
                    return n.join("\r\n");
                }),
                Object.defineProperty(B0.prototype, "withCredentials", {
                    get: function () {
                        return "include" === this.m;
                    },
                    set: function (n) {
                        this.m = n ? "include" : "same-origin";
                    },
                });
            var FP = Lt.JSON.parse;
            function s(n) {
                ci.call(this),
                    (this.headers = new tp()),
                    (this.u = n || null),
                    (this.h = !1),
                    (this.C = this.g = null),
                    (this.H = ""),
                    (this.m = 0),
                    (this.j = ""),
                    (this.l = this.F = this.v = this.D = !1),
                    (this.B = 0),
                    (this.A = null),
                    (this.J = o),
                    (this.K = this.L = !1);
            }
            zr(s, ci);
            var o = "",
                u = /^https?$/i,
                c = ["POST", "PUT"];
            function g(n) {
                return "content-type" == n.toLowerCase();
            }
            function w(n, e) {
                (n.h = !1),
                    n.g && ((n.l = !0), n.g.abort(), (n.l = !1)),
                    (n.j = e),
                    (n.m = 5),
                    I(n),
                    S(n);
            }
            function I(n) {
                n.D || ((n.D = !0), di(n, "complete"), di(n, "error"));
            }
            function b(n) {
                if (
                    n.h &&
                    typeof $m < "u" &&
                    (!n.C[1] || 4 != k(n) || 2 != n.ba())
                )
                    if (n.v && 4 == k(n)) C0(n.Fa, 0, n);
                    else if ((di(n, "readystatechange"), 4 == k(n))) {
                        n.h = !1;
                        try {
                            const h = n.ba();
                            e: switch (h) {
                                case 200:
                                case 201:
                                case 202:
                                case 204:
                                case 206:
                                case 304:
                                case 1223:
                                    var e = !0;
                                    break e;
                                default:
                                    e = !1;
                            }
                            var t;
                            if (!(t = e)) {
                                var r;
                                if ((r = 0 === h)) {
                                    var i = String(n.H).match(np)[1] || null;
                                    if (!i && Lt.self && Lt.self.location) {
                                        var a = Lt.self.location.protocol;
                                        i = a.substr(0, a.length - 1);
                                    }
                                    r = !u.test(i ? i.toLowerCase() : "");
                                }
                                t = r;
                            }
                            if (t) di(n, "complete"), di(n, "success");
                            else {
                                n.m = 6;
                                try {
                                    var l = 2 < k(n) ? n.g.statusText : "";
                                } catch {
                                    l = "";
                                }
                                (n.j = l + " [" + n.ba() + "]"), I(n);
                            }
                        } finally {
                            S(n);
                        }
                    }
            }
            function S(n, e) {
                if (n.g) {
                    x(n);
                    const t = n.g,
                        r = n.C[0] ? Au : null;
                    (n.g = null), (n.C = null), e || di(n, "ready");
                    try {
                        t.onreadystatechange = r;
                    } catch {}
                }
            }
            function x(n) {
                n.g && n.K && (n.g.ontimeout = null),
                    n.A && (Lt.clearTimeout(n.A), (n.A = null));
            }
            function k(n) {
                return n.g ? n.g.readyState : 0;
            }
            function z(n) {
                try {
                    if (!n.g) return null;
                    if ("response" in n.g) return n.g.response;
                    switch (n.J) {
                        case o:
                        case "text":
                            return n.g.responseText;
                        case "arraybuffer":
                            if ("mozResponseArrayBuffer" in n.g)
                                return n.g.mozResponseArrayBuffer;
                    }
                    return null;
                } catch {
                    return null;
                }
            }
            function Te(n, e, t) {
                e: {
                    for (r in t) {
                        var r = !1;
                        break e;
                    }
                    r = !0;
                }
                r ||
                    ((t = (function ee(n) {
                        let e = "";
                        return (
                            a0(n, function (t, r) {
                                (e += r), (e += ":"), (e += t), (e += "\r\n");
                            }),
                            e
                        );
                    })(t)),
                    "string" == typeof n
                        ? null != t && encodeURIComponent(String(t))
                        : Kn(n, e, t));
            }
            function je(n, e, t) {
                return (
                    (t &&
                        t.internalChannelParams &&
                        t.internalChannelParams[n]) ||
                    e
                );
            }
            function Je(n) {
                (this.za = 0),
                    (this.l = []),
                    (this.h = new r_()),
                    (this.la =
                        this.oa =
                        this.F =
                        this.W =
                        this.g =
                        this.sa =
                        this.D =
                        this.aa =
                        this.o =
                        this.P =
                        this.s =
                            null),
                    (this.Za = this.V = 0),
                    (this.Xa = je("failFast", !1, n)),
                    (this.N = this.v = this.u = this.m = this.j = null),
                    (this.X = !0),
                    (this.I = this.ta = this.U = -1),
                    (this.Y = this.A = this.C = 0),
                    (this.Pa = je("baseRetryDelayMs", 5e3, n)),
                    (this.$a = je("retryDelaySeedMs", 1e4, n)),
                    (this.Ya = je("forwardChannelMaxRetries", 2, n)),
                    (this.ra = je("forwardChannelRequestTimeoutMs", 2e4, n)),
                    (this.qa = (n && n.xmlHttpFactory) || void 0),
                    (this.Ba = (n && n.Yb) || !1),
                    (this.K = void 0),
                    (this.H = (n && n.supportsCrossDomainXhr) || !1),
                    (this.J = ""),
                    (this.i = new kx(n && n.concurrentRequestLimit)),
                    (this.Ca = new Fx()),
                    (this.ja = (n && n.fastHandshake) || !1),
                    (this.Ra = (n && n.Wb) || !1),
                    n && n.Aa && this.h.Aa(),
                    n && n.forceLongPolling && (this.X = !1),
                    (this.$ =
                        (!this.ja && this.X && n && n.detectBufferingProxy) ||
                        !1),
                    (this.ka = void 0),
                    (this.O = 0),
                    (this.L = !1),
                    (this.B = null),
                    (this.Wa = !n || !1 !== n.Xb);
            }
            function st(n) {
                if ((ke(n), 3 == n.G)) {
                    var e = n.V++,
                        t = Ko(n.F);
                    Kn(t, "SID", n.J),
                        Kn(t, "RID", e),
                        Kn(t, "TYPE", "terminate"),
                        Yl(n, t),
                        ((e = new jd(n, n.h, e, void 0)).K = 2),
                        (e.v = $d(Ko(t))),
                        (t = !1),
                        Lt.navigator &&
                            Lt.navigator.sendBeacon &&
                            (t = Lt.navigator.sendBeacon(e.v.toString(), "")),
                        !t && Lt.Image && ((new Image().src = e.v), (t = !0)),
                        t || ((e.g = UP(e.l, null)), e.g.ea(e.v)),
                        (e.F = Date.now()),
                        d_(e);
                }
                LP(n);
            }
            function Dt(n) {
                n.g && (op(n), n.g.cancel(), (n.g = null));
            }
            function ke(n) {
                Dt(n),
                    n.u && (Lt.clearTimeout(n.u), (n.u = null)),
                    Wd(n),
                    n.i.cancel(),
                    n.m &&
                        ("number" == typeof n.m && Lt.clearTimeout(n.m),
                        (n.m = null));
            }
            function Et(n, e) {
                n.l.push(
                    new (class {
                        constructor(n, e) {
                            (this.h = n), (this.g = e);
                        }
                    })(n.Za++, e)
                ),
                    3 == n.G && tn(n);
            }
            function tn(n) {
                __(n.i) || n.m || ((n.m = !0), _s(n.Ha, n), (n.C = 0));
            }
            function Nu(n, e) {
                var t;
                t = e ? e.m : n.V++;
                const r = Ko(n.F);
                Kn(r, "SID", n.J),
                    Kn(r, "RID", t),
                    Kn(r, "AID", n.U),
                    Yl(n, r),
                    n.o && n.s && Te(r, n.o, n.s),
                    (t = new jd(n, n.h, t, n.C + 1)),
                    null === n.o && (t.H = n.s),
                    e && (n.l = e.D.concat(n.l)),
                    (e = E_(n, t, 1e3)),
                    t.setTimeout(
                        Math.round(0.5 * n.ra) +
                            Math.round(0.5 * n.ra * Math.random())
                    ),
                    ED(n.i, t),
                    c_(t, r, e);
            }
            function Yl(n, e) {
                n.j &&
                    pD({}, function (t, r) {
                        Kn(e, r, t);
                    });
            }
            function E_(n, e, t) {
                t = Math.min(n.l.length, t);
                var r = n.j ? ui(n.j.Oa, n.j, n) : null;
                e: {
                    var i = n.l;
                    let a = -1;
                    for (;;) {
                        const l = ["count=" + t];
                        -1 == a
                            ? 0 < t
                                ? ((a = i[0].h), l.push("ofs=" + a))
                                : (a = 0)
                            : l.push("ofs=" + a);
                        let h = !0;
                        for (let _ = 0; _ < t; _++) {
                            let E = i[_].h;
                            const D = i[_].g;
                            if (((E -= a), 0 > E))
                                (a = Math.max(0, i[_].h - 100)), (h = !1);
                            else
                                try {
                                    kP(D, l, "req" + E + "_");
                                } catch {
                                    r && r(D);
                                }
                        }
                        if (h) {
                            r = l.join("&");
                            break e;
                        }
                    }
                }
                return (n = n.l.splice(0, t)), (e.D = n), r;
            }
            function I_(n) {
                n.g || n.u || ((n.Y = 1), _s(n.Ga, n), (n.A = 0));
            }
            function sp(n) {
                return !(
                    n.g ||
                    n.u ||
                    3 <= n.A ||
                    (n.Y++, (n.u = Bd(ui(n.Ga, n), D_(n, n.A))), n.A++, 0)
                );
            }
            function op(n) {
                null != n.B && (Lt.clearTimeout(n.B), (n.B = null));
            }
            function C_(n) {
                (n.g = new jd(n, n.h, "rpc", n.Y)),
                    null === n.o && (n.g.H = n.s),
                    (n.g.O = 0);
                var e = Ko(n.oa);
                Kn(e, "RID", "rpc"),
                    Kn(e, "SID", n.J),
                    Kn(e, "CI", n.N ? "0" : "1"),
                    Kn(e, "AID", n.U),
                    Yl(n, e),
                    Kn(e, "TYPE", "xmlhttp"),
                    n.o && n.s && Te(e, n.o, n.s),
                    n.K && n.g.setTimeout(n.K);
                var t = n.g;
                (n = n.la),
                    (t.K = 1),
                    (t.v = $d(Ko(e))),
                    (t.s = null),
                    (t.U = !0),
                    M0(t, n);
            }
            function Wd(n) {
                null != n.v && (Lt.clearTimeout(n.v), (n.v = null));
            }
            function b_(n, e) {
                var t = null;
                if (n.g == e) {
                    Wd(n), op(n), (n.g = null);
                    var r = 2;
                } else {
                    if (!L0(n.i, e)) return;
                    (t = e.D), Ox(n.i, e), (r = 1);
                }
                if (((n.I = e.N), 0 != n.G))
                    if (e.i)
                        if (1 == r) {
                            (t = e.s ? e.s.length : 0), (e = Date.now() - e.F);
                            var i = n.C;
                            di((r = i_()), new cD(r, t, e, i)), tn(n);
                        } else I_(n);
                    else if (
                        3 == (i = e.o) ||
                        (0 == i && 0 < n.I) ||
                        !(
                            (1 == r &&
                                (function zn(n, e) {
                                    return !(
                                        wD(n.i) >= n.i.j - (n.m ? 1 : 0) ||
                                        (n.m
                                            ? ((n.l = e.D.concat(n.l)), 0)
                                            : 1 == n.G ||
                                              2 == n.G ||
                                              n.C >= (n.Xa ? 0 : n.Ya) ||
                                              ((n.m = Bd(
                                                  ui(n.Ha, n, e),
                                                  D_(n, n.C)
                                              )),
                                              n.C++,
                                              0))
                                    );
                                })(n, e)) ||
                            (2 == r && sp(n))
                        )
                    )
                        switch (
                            (t &&
                                0 < t.length &&
                                ((e = n.i), (e.i = e.i.concat(t))),
                            i)
                        ) {
                            case 1:
                                ap(n, 5);
                                break;
                            case 4:
                                ap(n, 10);
                                break;
                            case 3:
                                ap(n, 6);
                                break;
                            default:
                                ap(n, 2);
                        }
            }
            function D_(n, e) {
                let t = n.Pa + Math.floor(Math.random() * n.$a);
                return n.j || (t *= 2), t * e;
            }
            function ap(n, e) {
                if ((n.h.info("Error code " + e), 2 == e)) {
                    var t = null;
                    n.j && (t = null);
                    var r = ui(n.jb, n);
                    t ||
                        ((t = new Zl("//www.google.com/images/cleardot.gif")),
                        (Lt.location && "http" == Lt.location.protocol) ||
                            Zo(t, "https"),
                        $d(t)),
                        (function OP(n, e) {
                            const t = new r_();
                            if (Lt.Image) {
                                const r = new Image();
                                (r.onload = Fd(
                                    U0,
                                    t,
                                    r,
                                    "TestLoadImage: loaded",
                                    !0,
                                    e
                                )),
                                    (r.onerror = Fd(
                                        U0,
                                        t,
                                        r,
                                        "TestLoadImage: error",
                                        !1,
                                        e
                                    )),
                                    (r.onabort = Fd(
                                        U0,
                                        t,
                                        r,
                                        "TestLoadImage: abort",
                                        !1,
                                        e
                                    )),
                                    (r.ontimeout = Fd(
                                        U0,
                                        t,
                                        r,
                                        "TestLoadImage: timeout",
                                        !1,
                                        e
                                    )),
                                    Lt.setTimeout(function () {
                                        r.ontimeout && r.ontimeout();
                                    }, 1e4),
                                    (r.src = n);
                            } else e(!1);
                        })(t.toString(), r);
                } else Fi(2);
                (n.G = 0), n.j && n.j.va(e), LP(n), ke(n);
            }
            function LP(n) {
                (n.G = 0),
                    (n.I = -1),
                    n.j &&
                        ((0 != ID(n.i).length || 0 != n.l.length) &&
                            ((n.i.i.length = 0), xu(n.l), (n.l.length = 0)),
                        n.j.ua());
            }
            function VP(n, e, t) {
                let r = (function P0(n) {
                    return n instanceof Zl ? Ko(n) : new Zl(n, void 0);
                })(t);
                if ("" != r.i) e && rp(r, e + "." + r.i), Hd(r, r.m);
                else {
                    const i = Lt.location;
                    r = (function p_(n, e, t, r) {
                        var i = new Zl(null, void 0);
                        return (
                            n && Zo(i, n),
                            e && rp(i, e),
                            t && Hd(i, t),
                            r && (i.l = r),
                            i
                        );
                    })(
                        i.protocol,
                        e ? e + "." + i.hostname : i.hostname,
                        +i.port,
                        t
                    );
                }
                return (
                    n.aa &&
                        a0(n.aa, function (i, a) {
                            Kn(r, a, i);
                        }),
                    (t = n.sa),
                    (e = n.D) && t && Kn(r, e, t),
                    Kn(r, "VER", n.ma),
                    Yl(n, r),
                    r
                );
            }
            function UP(n, e, t) {
                if (e && !n.H)
                    throw Error(
                        "Can't create secondary domain capable XhrIo object."
                    );
                return (
                    ((e = new s(
                        t && n.Ba && !n.qa ? new y_({ ib: !0 }) : n.qa
                    )).L = n.H),
                    e
                );
            }
            function BP() {}
            function CD() {
                if (Ld && !(10 <= Number(DP)))
                    throw Error("Environmental error: no available transport.");
            }
            function po(n, e) {
                ci.call(this),
                    (this.g = new Je(e)),
                    (this.l = n),
                    (this.h = (e && e.messageUrlParams) || null),
                    (n = (e && e.messageHeaders) || null),
                    e &&
                        e.clientProtocolHeaderRequired &&
                        (n
                            ? (n["X-Client-Protocol"] = "webchannel")
                            : (n = { "X-Client-Protocol": "webchannel" })),
                    (this.g.s = n),
                    (n = (e && e.initMessageHeaders) || null),
                    e &&
                        e.messageContentType &&
                        (n
                            ? (n["X-WebChannel-Content-Type"] =
                                  e.messageContentType)
                            : (n = {
                                  "X-WebChannel-Content-Type":
                                      e.messageContentType,
                              })),
                    e &&
                        e.ya &&
                        (n
                            ? (n["X-WebChannel-Client-Profile"] = e.ya)
                            : (n = { "X-WebChannel-Client-Profile": e.ya })),
                    (this.g.P = n),
                    (n = e && e.httpHeadersOverwriteParam) &&
                        !zm(n) &&
                        (this.g.o = n),
                    (this.A = (e && e.supportsCrossDomainXhr) || !1),
                    (this.v = (e && e.sendRawJson) || !1),
                    (e = e && e.httpSessionIdParam) &&
                        !zm(e) &&
                        ((this.g.D = e),
                        null !== (n = this.h) &&
                            e in n &&
                            e in (n = this.h) &&
                            delete n[e]),
                    (this.j = new T_(this));
            }
            function jP(n) {
                s_.call(this);
                var e = n.__sm__;
                if (e) {
                    e: {
                        for (const t in e) {
                            n = t;
                            break e;
                        }
                        n = void 0;
                    }
                    (this.i = n) &&
                        ((n = this.i),
                        (e = null !== e && n in e ? e[n] : void 0)),
                        (this.data = e);
                } else this.data = n;
            }
            function HP() {
                o_.call(this), (this.status = 1);
            }
            function T_(n) {
                this.g = n;
            }
            ((lt = s.prototype).ea = function (n, e, t, r) {
                if (this.g)
                    throw Error(
                        "[goog.net.XhrIo] Object is active with another request=" +
                            this.H +
                            "; newUri=" +
                            n
                    );
                (e = e ? e.toUpperCase() : "GET"),
                    (this.H = n),
                    (this.j = ""),
                    (this.m = 0),
                    (this.D = !1),
                    (this.h = !0),
                    (this.g = this.u ? this.u.g() : R0.g()),
                    (this.C = (function x0(n) {
                        return n.h || (n.h = n.i());
                    })(this.u ? this.u : R0)),
                    (this.g.onreadystatechange = ui(this.Fa, this));
                try {
                    (this.F = !0), this.g.open(e, String(n), !0), (this.F = !1);
                } catch (a) {
                    return void w(this, a);
                }
                n = t || "";
                const i = new tp(this.headers);
                r &&
                    pD(r, function (a, l) {
                        i.set(l, a);
                    }),
                    (r = (function vx(n) {
                        e: {
                            var e = g;
                            const t = n.length,
                                r = "string" == typeof n ? n.split("") : n;
                            for (let i = 0; i < t; i++)
                                if (i in r && e.call(void 0, r[i], i, n)) {
                                    e = i;
                                    break e;
                                }
                            e = -1;
                        }
                        return 0 > e
                            ? null
                            : "string" == typeof n
                            ? n.charAt(e)
                            : n[e];
                    })(i.T())),
                    (t = Lt.FormData && n instanceof Lt.FormData),
                    !(0 <= yx(c, e)) ||
                        r ||
                        t ||
                        i.set(
                            "Content-Type",
                            "application/x-www-form-urlencoded;charset=utf-8"
                        ),
                    i.forEach(function (a, l) {
                        this.g.setRequestHeader(l, a);
                    }, this),
                    this.J && (this.g.responseType = this.J),
                    "withCredentials" in this.g &&
                        this.g.withCredentials !== this.L &&
                        (this.g.withCredentials = this.L);
                try {
                    x(this),
                        0 < this.B &&
                            ((this.K = (function d(n) {
                                return (
                                    Ld &&
                                    (function Yb() {
                                        return (function Wb(n) {
                                            var e = bP;
                                            return Object.prototype.hasOwnProperty.call(
                                                e,
                                                9
                                            )
                                                ? e[9]
                                                : (e[9] = n(9));
                                        })(function () {
                                            let n = 0;
                                            const e = o0(String(Kf)).split("."),
                                                t = o0("9").split("."),
                                                r = Math.max(
                                                    e.length,
                                                    t.length
                                                );
                                            for (
                                                let l = 0;
                                                0 == n && l < r;
                                                l++
                                            ) {
                                                var i = e[l] || "",
                                                    a = t[l] || "";
                                                do {
                                                    if (
                                                        ((i =
                                                            /(\d*)(\D*)(.*)/.exec(
                                                                i
                                                            ) || [
                                                                "",
                                                                "",
                                                                "",
                                                                "",
                                                            ]),
                                                        (a =
                                                            /(\d*)(\D*)(.*)/.exec(
                                                                a
                                                            ) || [
                                                                "",
                                                                "",
                                                                "",
                                                                "",
                                                            ]),
                                                        0 == i[0].length &&
                                                            0 == a[0].length)
                                                    )
                                                        break;
                                                    (n =
                                                        Hb(
                                                            0 == i[1].length
                                                                ? 0
                                                                : parseInt(
                                                                      i[1],
                                                                      10
                                                                  ),
                                                            0 == a[1].length
                                                                ? 0
                                                                : parseInt(
                                                                      a[1],
                                                                      10
                                                                  )
                                                        ) ||
                                                        Hb(
                                                            0 == i[2].length,
                                                            0 == a[2].length
                                                        ) ||
                                                        Hb(i[2], a[2])),
                                                        (i = i[3]),
                                                        (a = a[3]);
                                                } while (0 == n);
                                            }
                                            return 0 <= n;
                                        });
                                    })() &&
                                    "number" == typeof n.timeout &&
                                    void 0 !== n.ontimeout
                                );
                            })(this.g))
                                ? ((this.g.timeout = this.B),
                                  (this.g.ontimeout = ui(this.pa, this)))
                                : (this.A = C0(this.pa, this.B, this))),
                        (this.v = !0),
                        this.g.send(n),
                        (this.v = !1);
                } catch (a) {
                    w(this, a);
                }
            }),
                (lt.pa = function () {
                    typeof $m < "u" &&
                        this.g &&
                        ((this.j =
                            "Timed out after " + this.B + "ms, aborting"),
                        (this.m = 8),
                        di(this, "timeout"),
                        this.abort(8));
                }),
                (lt.abort = function (n) {
                    this.g &&
                        this.h &&
                        ((this.h = !1),
                        (this.l = !0),
                        this.g.abort(),
                        (this.l = !1),
                        (this.m = n || 7),
                        di(this, "complete"),
                        di(this, "abort"),
                        S(this));
                }),
                (lt.M = function () {
                    this.g &&
                        (this.h &&
                            ((this.h = !1),
                            (this.l = !0),
                            this.g.abort(),
                            (this.l = !1)),
                        S(this, !0)),
                        s.Z.M.call(this);
                }),
                (lt.Fa = function () {
                    this.s ||
                        (this.F || this.v || this.l ? b(this) : this.cb());
                }),
                (lt.cb = function () {
                    b(this);
                }),
                (lt.ba = function () {
                    try {
                        return 2 < k(this) ? this.g.status : -1;
                    } catch {
                        return -1;
                    }
                }),
                (lt.ga = function () {
                    try {
                        return this.g ? this.g.responseText : "";
                    } catch {
                        return "";
                    }
                }),
                (lt.Qa = function (n) {
                    if (this.g) {
                        var e = this.g.responseText;
                        return (
                            n &&
                                0 == e.indexOf(n) &&
                                (e = e.substring(n.length)),
                            FP(e)
                        );
                    }
                }),
                (lt.Da = function () {
                    return this.m;
                }),
                (lt.La = function () {
                    return "string" == typeof this.j ? this.j : String(this.j);
                }),
                ((lt = Je.prototype).ma = 8),
                (lt.G = 1),
                (lt.hb = function (n) {
                    try {
                        this.h.info("Origin Trials invoked: " + n);
                    } catch {}
                }),
                (lt.Ha = function (n) {
                    if (this.m)
                        if (((this.m = null), 1 == this.G)) {
                            if (!n) {
                                (this.V = Math.floor(1e5 * Math.random())),
                                    (n = this.V++);
                                const i = new jd(this, this.h, n, void 0);
                                let a = this.s;
                                if (
                                    (this.P &&
                                        (a
                                            ? ((a = Gb(a)), l0(a, this.P))
                                            : (a = this.P)),
                                    null === this.o && (i.H = a),
                                    this.ja)
                                )
                                    e: {
                                        for (
                                            var e = 0, t = 0;
                                            t < this.l.length;
                                            t++
                                        ) {
                                            var r = this.l[t];
                                            if (
                                                void 0 ===
                                                (r =
                                                    "__data__" in r.g &&
                                                    "string" ==
                                                        typeof (r =
                                                            r.g.__data__)
                                                        ? r.length
                                                        : void 0)
                                            )
                                                break;
                                            if (4096 < (e += r)) {
                                                e = t;
                                                break e;
                                            }
                                            if (
                                                4096 === e ||
                                                t === this.l.length - 1
                                            ) {
                                                e = t + 1;
                                                break e;
                                            }
                                        }
                                        e = 1e3;
                                    }
                                else e = 1e3;
                                (e = E_(this, i, e)),
                                    Kn((t = Ko(this.F)), "RID", n),
                                    Kn(t, "CVER", 22),
                                    this.D &&
                                        Kn(t, "X-HTTP-Session-Id", this.D),
                                    Yl(this, t),
                                    this.o && a && Te(t, this.o, a),
                                    ED(this.i, i),
                                    this.Ra && Kn(t, "TYPE", "init"),
                                    this.ja
                                        ? (Kn(t, "$req", e),
                                          Kn(t, "SID", "null"),
                                          (i.$ = !0),
                                          c_(i, t, null))
                                        : c_(i, t, e),
                                    (this.G = 2);
                            }
                        } else
                            3 == this.G &&
                                (n
                                    ? Nu(this, n)
                                    : 0 == this.l.length ||
                                      __(this.i) ||
                                      Nu(this));
                }),
                (lt.Ga = function () {
                    if (
                        ((this.u = null),
                        C_(this),
                        this.$ && !(this.L || null == this.g || 0 >= this.O))
                    ) {
                        var n = 2 * this.O;
                        this.h.info("BP detection timer enabled: " + n),
                            (this.B = Bd(ui(this.bb, this), n));
                    }
                }),
                (lt.bb = function () {
                    this.B &&
                        ((this.B = null),
                        this.h.info("BP detection timeout reached."),
                        this.h.info(
                            "Buffering proxy detected and switch to long-polling!"
                        ),
                        (this.N = !1),
                        (this.L = !0),
                        Fi(10),
                        Dt(this),
                        C_(this));
                }),
                (lt.ab = function () {
                    null != this.v &&
                        ((this.v = null), Dt(this), sp(this), Fi(19));
                }),
                (lt.jb = function (n) {
                    n
                        ? (this.h.info("Successfully pinged google.com"), Fi(2))
                        : (this.h.info("Failed to ping google.com"), Fi(1));
                }),
                ((lt = BP.prototype).xa = function () {}),
                (lt.wa = function () {}),
                (lt.va = function () {}),
                (lt.ua = function () {}),
                (lt.Oa = function () {}),
                (CD.prototype.g = function (n, e) {
                    return new po(n, e);
                }),
                zr(po, ci),
                (po.prototype.m = function () {
                    (this.g.j = this.j), this.A && (this.g.H = !0);
                    var n = this.g,
                        e = this.l,
                        t = this.h || void 0;
                    n.Wa &&
                        (n.h.info("Origin Trials enabled."),
                        _s(ui(n.hb, n, e))),
                        Fi(0),
                        (n.W = e),
                        (n.aa = t || {}),
                        (n.N = n.X),
                        (n.F = VP(n, null, n.W)),
                        tn(n);
                }),
                (po.prototype.close = function () {
                    st(this.g);
                }),
                (po.prototype.u = function (n) {
                    if ("string" == typeof n) {
                        var e = {};
                        (e.__data__ = n), Et(this.g, e);
                    } else
                        this.v
                            ? (((e = {}).__data__ = _0(n)), Et(this.g, e))
                            : Et(this.g, n);
                }),
                (po.prototype.M = function () {
                    (this.g.j = null),
                        delete this.j,
                        st(this.g),
                        delete this.g,
                        po.Z.M.call(this);
                }),
                zr(jP, s_),
                zr(HP, o_),
                zr(T_, BP),
                (T_.prototype.xa = function () {
                    di(this.g, "a");
                }),
                (T_.prototype.wa = function (n) {
                    di(this.g, new jP(n));
                }),
                (T_.prototype.va = function (n) {
                    di(this.g, new HP(n));
                }),
                (T_.prototype.ua = function () {
                    di(this.g, "b");
                }),
                (CD.prototype.createWebChannel = CD.prototype.g),
                (po.prototype.send = po.prototype.u),
                (po.prototype.open = po.prototype.m),
                (po.prototype.close = po.prototype.close),
                (T0.NO_ERROR = 0),
                (T0.TIMEOUT = 8),
                (T0.HTTP_ERROR = 6),
                (S0.COMPLETE = "complete"),
                (Ax.EventType = zl),
                (zl.OPEN = "a"),
                (zl.CLOSE = "b"),
                (zl.ERROR = "c"),
                (zl.MESSAGE = "d"),
                (ci.prototype.listen = ci.prototype.N),
                (s.prototype.listenOnce = s.prototype.O),
                (s.prototype.getLastError = s.prototype.La),
                (s.prototype.getLastErrorCode = s.prototype.Da),
                (s.prototype.getStatus = s.prototype.ba),
                (s.prototype.getResponseJson = s.prototype.Qa),
                (s.prototype.getResponseText = s.prototype.ga),
                (s.prototype.send = s.prototype.ea);
            var uV = (Su.createWebChannelTransport = function () {
                    return new CD();
                }),
                lV = (Su.getStatEventTarget = function () {
                    return i_();
                }),
                Vx = (Su.ErrorCode = T0),
                cV = (Su.EventType = S0),
                dV = (Su.Event = Ma),
                $P = (Su.Stat = {
                    rb: 0,
                    ub: 1,
                    vb: 2,
                    Ob: 3,
                    Tb: 4,
                    Qb: 5,
                    Rb: 6,
                    Pb: 7,
                    Nb: 8,
                    Sb: 9,
                    PROXY: 10,
                    NOPROXY: 11,
                    Lb: 12,
                    Hb: 13,
                    Ib: 14,
                    Gb: 15,
                    Jb: 16,
                    Kb: 17,
                    nb: 18,
                    mb: 19,
                    ob: 20,
                }),
                hV = (Su.FetchXmlHttpFactory = y_),
                bD = (Su.WebChannel = Ax),
                fV = (Su.XhrIo = s);
            const GP = "@firebase/firestore";
            class yi {
                constructor(e) {
                    this.uid = e;
                }
                isAuthenticated() {
                    return null != this.uid;
                }
                toKey() {
                    return this.isAuthenticated()
                        ? "uid:" + this.uid
                        : "anonymous-user";
                }
                isEqual(e) {
                    return e.uid === this.uid;
                }
            }
            (yi.UNAUTHENTICATED = new yi(null)),
                (yi.GOOGLE_CREDENTIALS = new yi("google-credentials-uid")),
                (yi.FIRST_PARTY = new yi("first-party-uid")),
                (yi.MOCK_USER = new yi("mock-user"));
            let S_ = "9.9.1";
            const zd = new H.Yd("@firebase/firestore");
            function Ux() {
                return zd.logLevel;
            }
            function $e(n, ...e) {
                if (zd.logLevel <= H.in.DEBUG) {
                    const t = e.map(Bx);
                    zd.debug(`Firestore (${S_}): ${n}`, ...t);
                }
            }
            function qr(n, ...e) {
                if (zd.logLevel <= H.in.ERROR) {
                    const t = e.map(Bx);
                    zd.error(`Firestore (${S_}): ${n}`, ...t);
                }
            }
            function H0(n, ...e) {
                if (zd.logLevel <= H.in.WARN) {
                    const t = e.map(Bx);
                    zd.warn(`Firestore (${S_}): ${n}`, ...t);
                }
            }
            function Bx(n) {
                if ("string" == typeof n) return n;
                try {
                    return JSON.stringify(n);
                } catch {
                    return n;
                }
            }
            function ft(n = "Unexpected state") {
                const e = `FIRESTORE (${S_}) INTERNAL ASSERTION FAILED: ` + n;
                throw (qr(e), new Error(e));
            }
            function Vt(n, e) {
                n || ft();
            }
            function rt(n, e) {
                return n;
            }
            const me = {
                OK: "ok",
                CANCELLED: "cancelled",
                UNKNOWN: "unknown",
                INVALID_ARGUMENT: "invalid-argument",
                DEADLINE_EXCEEDED: "deadline-exceeded",
                NOT_FOUND: "not-found",
                ALREADY_EXISTS: "already-exists",
                PERMISSION_DENIED: "permission-denied",
                UNAUTHENTICATED: "unauthenticated",
                RESOURCE_EXHAUSTED: "resource-exhausted",
                FAILED_PRECONDITION: "failed-precondition",
                ABORTED: "aborted",
                OUT_OF_RANGE: "out-of-range",
                UNIMPLEMENTED: "unimplemented",
                INTERNAL: "internal",
                UNAVAILABLE: "unavailable",
                DATA_LOSS: "data-loss",
            };
            class Ve extends C.ZR {
                constructor(e, t) {
                    super(e, t),
                        (this.code = e),
                        (this.message = t),
                        (this.toString = () =>
                            `${this.name}: [code=${this.code}]: ${this.message}`);
                }
            }
            class vi {
                constructor() {
                    this.promise = new Promise((e, t) => {
                        (this.resolve = e), (this.reject = t);
                    });
                }
            }
            class WP {
                constructor(e, t) {
                    (this.user = t),
                        (this.type = "OAuth"),
                        (this.headers = new Map()),
                        this.headers.set("Authorization", `Bearer ${e}`);
                }
            }
            class mV {
                getToken() {
                    return Promise.resolve(null);
                }
                invalidateToken() {}
                start(e, t) {
                    e.enqueueRetryable(() => t(yi.UNAUTHENTICATED));
                }
                shutdown() {}
            }
            class _V {
                constructor(e) {
                    (this.token = e), (this.changeListener = null);
                }
                getToken() {
                    return Promise.resolve(this.token);
                }
                invalidateToken() {}
                start(e, t) {
                    (this.changeListener = t),
                        e.enqueueRetryable(() => t(this.token.user));
                }
                shutdown() {
                    this.changeListener = null;
                }
            }
            class yV {
                constructor(e) {
                    (this.t = e),
                        (this.currentUser = yi.UNAUTHENTICATED),
                        (this.i = 0),
                        (this.forceRefresh = !1),
                        (this.auth = null);
                }
                start(e, t) {
                    var r = this;
                    let i = this.i;
                    const a = (E) =>
                        this.i !== i ? ((i = this.i), t(E)) : Promise.resolve();
                    let l = new vi();
                    this.o = () => {
                        this.i++,
                            (this.currentUser = this.u()),
                            l.resolve(),
                            (l = new vi()),
                            e.enqueueRetryable(() => a(this.currentUser));
                    };
                    const h = () => {
                            const E = l;
                            e.enqueueRetryable(
                                (0, y.Z)(function* () {
                                    yield E.promise, yield a(r.currentUser);
                                })
                            );
                        },
                        _ = (E) => {
                            $e(
                                "FirebaseAuthCredentialsProvider",
                                "Auth detected"
                            ),
                                (this.auth = E),
                                this.auth.addAuthTokenListener(this.o),
                                h();
                        };
                    this.t.onInit((E) => _(E)),
                        setTimeout(() => {
                            if (!this.auth) {
                                const E = this.t.getImmediate({ optional: !0 });
                                E
                                    ? _(E)
                                    : ($e(
                                          "FirebaseAuthCredentialsProvider",
                                          "Auth not yet detected"
                                      ),
                                      l.resolve(),
                                      (l = new vi()));
                            }
                        }, 0),
                        h();
                }
                getToken() {
                    const e = this.i,
                        t = this.forceRefresh;
                    return (
                        (this.forceRefresh = !1),
                        this.auth
                            ? this.auth
                                  .getToken(t)
                                  .then((r) =>
                                      this.i !== e
                                          ? ($e(
                                                "FirebaseAuthCredentialsProvider",
                                                "getToken aborted due to token change."
                                            ),
                                            this.getToken())
                                          : r
                                          ? (Vt(
                                                "string" == typeof r.accessToken
                                            ),
                                            new WP(
                                                r.accessToken,
                                                this.currentUser
                                            ))
                                          : null
                                  )
                            : Promise.resolve(null)
                    );
                }
                invalidateToken() {
                    this.forceRefresh = !0;
                }
                shutdown() {
                    this.auth && this.auth.removeAuthTokenListener(this.o);
                }
                u() {
                    const e = this.auth && this.auth.getUid();
                    return Vt(null === e || "string" == typeof e), new yi(e);
                }
            }
            class vV {
                constructor(e, t, r) {
                    (this.type = "FirstParty"),
                        (this.user = yi.FIRST_PARTY),
                        (this.headers = new Map()),
                        this.headers.set("X-Goog-AuthUser", t);
                    const i = e.auth.getAuthHeaderValueForFirstParty([]);
                    i && this.headers.set("Authorization", i),
                        r &&
                            this.headers.set(
                                "X-Goog-Iam-Authorization-Token",
                                r
                            );
                }
            }
            class wV {
                constructor(e, t, r) {
                    (this.h = e), (this.l = t), (this.m = r);
                }
                getToken() {
                    return Promise.resolve(new vV(this.h, this.l, this.m));
                }
                start(e, t) {
                    e.enqueueRetryable(() => t(yi.FIRST_PARTY));
                }
                shutdown() {}
                invalidateToken() {}
            }
            class zP {
                constructor(e) {
                    (this.value = e),
                        (this.type = "AppCheck"),
                        (this.headers = new Map()),
                        e &&
                            e.length > 0 &&
                            this.headers.set("x-firebase-appcheck", this.value);
                }
            }
            class EV {
                constructor(e) {
                    (this.g = e),
                        (this.forceRefresh = !1),
                        (this.appCheck = null),
                        (this.p = null);
                }
                start(e, t) {
                    const r = (a) => {
                        null != a.error &&
                            $e(
                                "FirebaseAppCheckTokenProvider",
                                `Error getting App Check token; using placeholder token instead. Error: ${a.error.message}`
                            );
                        const l = a.token !== this.p;
                        return (
                            (this.p = a.token),
                            $e(
                                "FirebaseAppCheckTokenProvider",
                                `Received ${l ? "new" : "existing"} token.`
                            ),
                            l ? t(a.token) : Promise.resolve()
                        );
                    };
                    this.o = (a) => {
                        e.enqueueRetryable(() => r(a));
                    };
                    const i = (a) => {
                        $e(
                            "FirebaseAppCheckTokenProvider",
                            "AppCheck detected"
                        ),
                            (this.appCheck = a),
                            this.appCheck.addTokenListener(this.o);
                    };
                    this.g.onInit((a) => i(a)),
                        setTimeout(() => {
                            if (!this.appCheck) {
                                const a = this.g.getImmediate({ optional: !0 });
                                a
                                    ? i(a)
                                    : $e(
                                          "FirebaseAppCheckTokenProvider",
                                          "AppCheck not yet detected"
                                      );
                            }
                        }, 0);
                }
                getToken() {
                    const e = this.forceRefresh;
                    return (
                        (this.forceRefresh = !1),
                        this.appCheck
                            ? this.appCheck
                                  .getToken(e)
                                  .then((t) =>
                                      t
                                          ? (Vt("string" == typeof t.token),
                                            (this.p = t.token),
                                            new zP(t.token))
                                          : null
                                  )
                            : Promise.resolve(null)
                    );
                }
                invalidateToken() {
                    this.forceRefresh = !0;
                }
                shutdown() {
                    this.appCheck && this.appCheck.removeTokenListener(this.o);
                }
            }
            function IV(n) {
                const e = typeof self < "u" && (self.crypto || self.msCrypto),
                    t = new Uint8Array(n);
                if (e && "function" == typeof e.getRandomValues)
                    e.getRandomValues(t);
                else
                    for (let r = 0; r < n; r++)
                        t[r] = Math.floor(256 * Math.random());
                return t;
            }
            class qP {
                static I() {
                    const e =
                            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
                        t = Math.floor(256 / e.length) * e.length;
                    let r = "";
                    for (; r.length < 20; ) {
                        const i = IV(40);
                        for (let a = 0; a < i.length; ++a)
                            r.length < 20 &&
                                i[a] < t &&
                                (r += e.charAt(i[a] % e.length));
                    }
                    return r;
                }
            }
            function Qt(n, e) {
                return n < e ? -1 : n > e ? 1 : 0;
            }
            function A_(n, e, t) {
                return n.length === e.length && n.every((r, i) => t(r, e[i]));
            }
            function KP(n) {
                return n + "\0";
            }
            class mr {
                constructor(e, t) {
                    if (((this.seconds = e), (this.nanoseconds = t), t < 0))
                        throw new Ve(
                            me.INVALID_ARGUMENT,
                            "Timestamp nanoseconds out of range: " + t
                        );
                    if (t >= 1e9)
                        throw new Ve(
                            me.INVALID_ARGUMENT,
                            "Timestamp nanoseconds out of range: " + t
                        );
                    if (e < -62135596800)
                        throw new Ve(
                            me.INVALID_ARGUMENT,
                            "Timestamp seconds out of range: " + e
                        );
                    if (e >= 253402300800)
                        throw new Ve(
                            me.INVALID_ARGUMENT,
                            "Timestamp seconds out of range: " + e
                        );
                }
                static now() {
                    return mr.fromMillis(Date.now());
                }
                static fromDate(e) {
                    return mr.fromMillis(e.getTime());
                }
                static fromMillis(e) {
                    const t = Math.floor(e / 1e3),
                        r = Math.floor(1e6 * (e - 1e3 * t));
                    return new mr(t, r);
                }
                toDate() {
                    return new Date(this.toMillis());
                }
                toMillis() {
                    return 1e3 * this.seconds + this.nanoseconds / 1e6;
                }
                _compareTo(e) {
                    return this.seconds === e.seconds
                        ? Qt(this.nanoseconds, e.nanoseconds)
                        : Qt(this.seconds, e.seconds);
                }
                isEqual(e) {
                    return (
                        e.seconds === this.seconds &&
                        e.nanoseconds === this.nanoseconds
                    );
                }
                toString() {
                    return (
                        "Timestamp(seconds=" +
                        this.seconds +
                        ", nanoseconds=" +
                        this.nanoseconds +
                        ")"
                    );
                }
                toJSON() {
                    return {
                        seconds: this.seconds,
                        nanoseconds: this.nanoseconds,
                    };
                }
                valueOf() {
                    return (
                        String(this.seconds - -62135596800).padStart(12, "0") +
                        "." +
                        String(this.nanoseconds).padStart(9, "0")
                    );
                }
            }
            class Ft {
                constructor(e) {
                    this.timestamp = e;
                }
                static fromTimestamp(e) {
                    return new Ft(e);
                }
                static min() {
                    return new Ft(new mr(0, 0));
                }
                static max() {
                    return new Ft(new mr(253402300799, 999999999));
                }
                compareTo(e) {
                    return this.timestamp._compareTo(e.timestamp);
                }
                isEqual(e) {
                    return this.timestamp.isEqual(e.timestamp);
                }
                toMicroseconds() {
                    return (
                        1e6 * this.timestamp.seconds +
                        this.timestamp.nanoseconds / 1e3
                    );
                }
                toString() {
                    return "SnapshotVersion(" + this.timestamp.toString() + ")";
                }
                toTimestamp() {
                    return this.timestamp;
                }
            }
            class $0 {
                constructor(e, t, r) {
                    void 0 === t ? (t = 0) : t > e.length && ft(),
                        void 0 === r
                            ? (r = e.length - t)
                            : r > e.length - t && ft(),
                        (this.segments = e),
                        (this.offset = t),
                        (this.len = r);
                }
                get length() {
                    return this.len;
                }
                isEqual(e) {
                    return 0 === $0.comparator(this, e);
                }
                child(e) {
                    const t = this.segments.slice(this.offset, this.limit());
                    return (
                        e instanceof $0
                            ? e.forEach((r) => {
                                  t.push(r);
                              })
                            : t.push(e),
                        this.construct(t)
                    );
                }
                limit() {
                    return this.offset + this.length;
                }
                popFirst(e) {
                    return this.construct(
                        this.segments,
                        this.offset + (e = void 0 === e ? 1 : e),
                        this.length - e
                    );
                }
                popLast() {
                    return this.construct(
                        this.segments,
                        this.offset,
                        this.length - 1
                    );
                }
                firstSegment() {
                    return this.segments[this.offset];
                }
                lastSegment() {
                    return this.get(this.length - 1);
                }
                get(e) {
                    return this.segments[this.offset + e];
                }
                isEmpty() {
                    return 0 === this.length;
                }
                isPrefixOf(e) {
                    if (e.length < this.length) return !1;
                    for (let t = 0; t < this.length; t++)
                        if (this.get(t) !== e.get(t)) return !1;
                    return !0;
                }
                isImmediateParentOf(e) {
                    if (this.length + 1 !== e.length) return !1;
                    for (let t = 0; t < this.length; t++)
                        if (this.get(t) !== e.get(t)) return !1;
                    return !0;
                }
                forEach(e) {
                    for (let t = this.offset, r = this.limit(); t < r; t++)
                        e(this.segments[t]);
                }
                toArray() {
                    return this.segments.slice(this.offset, this.limit());
                }
                static comparator(e, t) {
                    const r = Math.min(e.length, t.length);
                    for (let i = 0; i < r; i++) {
                        const a = e.get(i),
                            l = t.get(i);
                        if (a < l) return -1;
                        if (a > l) return 1;
                    }
                    return e.length < t.length
                        ? -1
                        : e.length > t.length
                        ? 1
                        : 0;
                }
            }
            class wn extends $0 {
                construct(e, t, r) {
                    return new wn(e, t, r);
                }
                canonicalString() {
                    return this.toArray().join("/");
                }
                toString() {
                    return this.canonicalString();
                }
                static fromString(...e) {
                    const t = [];
                    for (const r of e) {
                        if (r.indexOf("//") >= 0)
                            throw new Ve(
                                me.INVALID_ARGUMENT,
                                `Invalid segment (${r}). Paths must not contain // in them.`
                            );
                        t.push(...r.split("/").filter((i) => i.length > 0));
                    }
                    return new wn(t);
                }
                static emptyPath() {
                    return new wn([]);
                }
            }
            const CV = /^[_a-zA-Z][_a-zA-Z0-9]*$/;
            class Br extends $0 {
                construct(e, t, r) {
                    return new Br(e, t, r);
                }
                static isValidIdentifier(e) {
                    return CV.test(e);
                }
                canonicalString() {
                    return this.toArray()
                        .map(
                            (e) => (
                                (e = e
                                    .replace(/\\/g, "\\\\")
                                    .replace(/`/g, "\\`")),
                                Br.isValidIdentifier(e) || (e = "`" + e + "`"),
                                e
                            )
                        )
                        .join(".");
                }
                toString() {
                    return this.canonicalString();
                }
                isKeyField() {
                    return 1 === this.length && "__name__" === this.get(0);
                }
                static keyField() {
                    return new Br(["__name__"]);
                }
                static fromServerFormat(e) {
                    const t = [];
                    let r = "",
                        i = 0;
                    const a = () => {
                        if (0 === r.length)
                            throw new Ve(
                                me.INVALID_ARGUMENT,
                                `Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`
                            );
                        t.push(r), (r = "");
                    };
                    let l = !1;
                    for (; i < e.length; ) {
                        const h = e[i];
                        if ("\\" === h) {
                            if (i + 1 === e.length)
                                throw new Ve(
                                    me.INVALID_ARGUMENT,
                                    "Path has trailing escape character: " + e
                                );
                            const _ = e[i + 1];
                            if ("\\" !== _ && "." !== _ && "`" !== _)
                                throw new Ve(
                                    me.INVALID_ARGUMENT,
                                    "Path has invalid escape sequence: " + e
                                );
                            (r += _), (i += 2);
                        } else
                            "`" === h
                                ? ((l = !l), i++)
                                : "." !== h || l
                                ? ((r += h), i++)
                                : (a(), i++);
                    }
                    if ((a(), l))
                        throw new Ve(
                            me.INVALID_ARGUMENT,
                            "Unterminated ` in path: " + e
                        );
                    return new Br(t);
                }
                static emptyPath() {
                    return new Br([]);
                }
            }
            class Xe {
                constructor(e) {
                    this.path = e;
                }
                static fromPath(e) {
                    return new Xe(wn.fromString(e));
                }
                static fromName(e) {
                    return new Xe(wn.fromString(e).popFirst(5));
                }
                static empty() {
                    return new Xe(wn.emptyPath());
                }
                get collectionGroup() {
                    return this.path.popLast().lastSegment();
                }
                hasCollectionId(e) {
                    return (
                        this.path.length >= 2 &&
                        this.path.get(this.path.length - 2) === e
                    );
                }
                getCollectionGroup() {
                    return this.path.get(this.path.length - 2);
                }
                getCollectionPath() {
                    return this.path.popLast();
                }
                isEqual(e) {
                    return null !== e && 0 === wn.comparator(this.path, e.path);
                }
                toString() {
                    return this.path.toString();
                }
                static comparator(e, t) {
                    return wn.comparator(e.path, t.path);
                }
                static isDocumentKey(e) {
                    return e.length % 2 == 0;
                }
                static fromSegments(e) {
                    return new Xe(new wn(e.slice()));
                }
            }
            class DD {
                constructor(e, t, r, i) {
                    (this.indexId = e),
                        (this.collectionGroup = t),
                        (this.fields = r),
                        (this.indexState = i);
                }
            }
            function jx(n) {
                return n.fields.find((e) => 2 === e.kind);
            }
            function up(n) {
                return n.fields.filter((e) => 2 !== e.kind);
            }
            DD.UNKNOWN_ID = -1;
            class TD {
                constructor(e, t) {
                    (this.fieldPath = e), (this.kind = t);
                }
            }
            class G0 {
                constructor(e, t) {
                    (this.sequenceNumber = e), (this.offset = t);
                }
                static empty() {
                    return new G0(0, go.min());
                }
            }
            function ZP(n, e) {
                const t = n.toTimestamp().seconds,
                    r = n.toTimestamp().nanoseconds + 1,
                    i = Ft.fromTimestamp(
                        1e9 === r ? new mr(t + 1, 0) : new mr(t, r)
                    );
                return new go(i, Xe.empty(), e);
            }
            function YP(n) {
                return new go(n.readTime, n.key, -1);
            }
            class go {
                constructor(e, t, r) {
                    (this.readTime = e),
                        (this.documentKey = t),
                        (this.largestBatchId = r);
                }
                static min() {
                    return new go(Ft.min(), Xe.empty(), -1);
                }
                static max() {
                    return new go(Ft.max(), Xe.empty(), -1);
                }
            }
            function Hx(n, e) {
                let t = n.readTime.compareTo(e.readTime);
                return 0 !== t
                    ? t
                    : ((t = Xe.comparator(n.documentKey, e.documentKey)),
                      0 !== t ? t : Qt(n.largestBatchId, e.largestBatchId));
            }
            const QP =
                "The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.";
            class JP {
                constructor() {
                    this.onCommittedListeners = [];
                }
                addOnCommittedListener(e) {
                    this.onCommittedListeners.push(e);
                }
                raiseOnCommittedEvent() {
                    this.onCommittedListeners.forEach((e) => e());
                }
            }
            function qd(n) {
                return $x.apply(this, arguments);
            }
            function $x() {
                return (
                    ($x = (0, y.Z)(function* (n) {
                        if (
                            n.code !== me.FAILED_PRECONDITION ||
                            n.message !== QP
                        )
                            throw n;
                        $e("LocalStore", "Unexpectedly lost primary lease");
                    })),
                    $x.apply(this, arguments)
                );
            }
            class ue {
                constructor(e) {
                    (this.nextCallback = null),
                        (this.catchCallback = null),
                        (this.result = void 0),
                        (this.error = void 0),
                        (this.isDone = !1),
                        (this.callbackAttached = !1),
                        e(
                            (t) => {
                                (this.isDone = !0),
                                    (this.result = t),
                                    this.nextCallback && this.nextCallback(t);
                            },
                            (t) => {
                                (this.isDone = !0),
                                    (this.error = t),
                                    this.catchCallback && this.catchCallback(t);
                            }
                        );
                }
                catch(e) {
                    return this.next(void 0, e);
                }
                next(e, t) {
                    return (
                        this.callbackAttached && ft(),
                        (this.callbackAttached = !0),
                        this.isDone
                            ? this.error
                                ? this.wrapFailure(t, this.error)
                                : this.wrapSuccess(e, this.result)
                            : new ue((r, i) => {
                                  (this.nextCallback = (a) => {
                                      this.wrapSuccess(e, a).next(r, i);
                                  }),
                                      (this.catchCallback = (a) => {
                                          this.wrapFailure(t, a).next(r, i);
                                      });
                              })
                    );
                }
                toPromise() {
                    return new Promise((e, t) => {
                        this.next(e, t);
                    });
                }
                wrapUserFunction(e) {
                    try {
                        const t = e();
                        return t instanceof ue ? t : ue.resolve(t);
                    } catch (t) {
                        return ue.reject(t);
                    }
                }
                wrapSuccess(e, t) {
                    return e
                        ? this.wrapUserFunction(() => e(t))
                        : ue.resolve(t);
                }
                wrapFailure(e, t) {
                    return e ? this.wrapUserFunction(() => e(t)) : ue.reject(t);
                }
                static resolve(e) {
                    return new ue((t, r) => {
                        t(e);
                    });
                }
                static reject(e) {
                    return new ue((t, r) => {
                        r(e);
                    });
                }
                static waitFor(e) {
                    return new ue((t, r) => {
                        let i = 0,
                            a = 0,
                            l = !1;
                        e.forEach((h) => {
                            ++i,
                                h.next(
                                    () => {
                                        ++a, l && a === i && t();
                                    },
                                    (_) => r(_)
                                );
                        }),
                            (l = !0),
                            a === i && t();
                    });
                }
                static or(e) {
                    let t = ue.resolve(!1);
                    for (const r of e)
                        t = t.next((i) => (i ? ue.resolve(i) : r()));
                    return t;
                }
                static forEach(e, t) {
                    const r = [];
                    return (
                        e.forEach((i, a) => {
                            r.push(t.call(this, i, a));
                        }),
                        this.waitFor(r)
                    );
                }
                static mapArray(e, t) {
                    return new ue((r, i) => {
                        const a = e.length,
                            l = new Array(a);
                        let h = 0;
                        for (let _ = 0; _ < a; _++) {
                            const E = _;
                            t(e[E]).next(
                                (D) => {
                                    (l[E] = D), ++h, h === a && r(l);
                                },
                                (D) => i(D)
                            );
                        }
                    });
                }
                static doWhile(e, t) {
                    return new ue((r, i) => {
                        const a = () => {
                            !0 === e()
                                ? t().next(() => {
                                      a();
                                  }, i)
                                : r();
                        };
                        a();
                    });
                }
            }
            class SD {
                constructor(e, t) {
                    (this.action = e),
                        (this.transaction = t),
                        (this.aborted = !1),
                        (this.T = new vi()),
                        (this.transaction.oncomplete = () => {
                            this.T.resolve();
                        }),
                        (this.transaction.onabort = () => {
                            t.error
                                ? this.T.reject(new W0(e, t.error))
                                : this.T.resolve();
                        }),
                        (this.transaction.onerror = (r) => {
                            const i = Gx(r.target.error);
                            this.T.reject(new W0(e, i));
                        });
                }
                static open(e, t, r, i) {
                    try {
                        return new SD(t, e.transaction(i, r));
                    } catch (a) {
                        throw new W0(t, a);
                    }
                }
                get A() {
                    return this.T.promise;
                }
                abort(e) {
                    e && this.T.reject(e),
                        this.aborted ||
                            ($e(
                                "SimpleDb",
                                "Aborting transaction:",
                                e ? e.message : "Client-initiated abort"
                            ),
                            (this.aborted = !0),
                            this.transaction.abort());
                }
                R() {
                    const e = this.transaction;
                    this.aborted || "function" != typeof e.commit || e.commit();
                }
                store(e) {
                    const t = this.transaction.objectStore(e);
                    return new DV(t);
                }
            }
            class Pa {
                constructor(e, t, r) {
                    (this.name = e),
                        (this.version = t),
                        (this.P = r),
                        12.2 === Pa.v((0, C.z$)()) &&
                            qr(
                                "Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround."
                            );
                }
                static delete(e) {
                    return (
                        $e("SimpleDb", "Removing database:", e),
                        lp(window.indexedDB.deleteDatabase(e)).toPromise()
                    );
                }
                static V() {
                    if (!(0, C.hl)()) return !1;
                    if (Pa.S()) return !0;
                    const e = (0, C.z$)(),
                        t = Pa.v(e),
                        r = 0 < t && t < 10,
                        i = Pa.D(e),
                        a = 0 < i && i < 4.5;
                    return !(
                        e.indexOf("MSIE ") > 0 ||
                        e.indexOf("Trident/") > 0 ||
                        e.indexOf("Edge/") > 0 ||
                        r ||
                        a
                    );
                }
                static S() {
                    var e;
                    return (
                        typeof process < "u" &&
                        "YES" ===
                            (null === (e = process.env) || void 0 === e
                                ? void 0
                                : e.C)
                    );
                }
                static N(e, t) {
                    return e.store(t);
                }
                static v(e) {
                    const t = e.match(/i(?:phone|pad|pod) os ([\d_]+)/i),
                        r = t ? t[1].split("_").slice(0, 2).join(".") : "-1";
                    return Number(r);
                }
                static D(e) {
                    const t = e.match(/Android ([\d.]+)/i),
                        r = t ? t[1].split(".").slice(0, 2).join(".") : "-1";
                    return Number(r);
                }
                k(e) {
                    var t = this;
                    return (0, y.Z)(function* () {
                        return (
                            t.db ||
                                ($e("SimpleDb", "Opening database:", t.name),
                                (t.db = yield new Promise((r, i) => {
                                    const a = indexedDB.open(t.name, t.version);
                                    (a.onsuccess = (l) => {
                                        r(l.target.result);
                                    }),
                                        (a.onblocked = () => {
                                            i(
                                                new W0(
                                                    e,
                                                    "Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed."
                                                )
                                            );
                                        }),
                                        (a.onerror = (l) => {
                                            const h = l.target.error;
                                            i(
                                                "VersionError" === h.name
                                                    ? new Ve(
                                                          me.FAILED_PRECONDITION,
                                                          "A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh."
                                                      )
                                                    : "InvalidStateError" ===
                                                      h.name
                                                    ? new Ve(
                                                          me.FAILED_PRECONDITION,
                                                          "Unable to open an IndexedDB connection. This could be due to running in a private browsing session on a browser whose private browsing sessions do not support IndexedDB: " +
                                                              h
                                                      )
                                                    : new W0(e, h)
                                            );
                                        }),
                                        (a.onupgradeneeded = (l) => {
                                            $e(
                                                "SimpleDb",
                                                'Database "' +
                                                    t.name +
                                                    '" requires upgrade from version:',
                                                l.oldVersion
                                            ),
                                                t.P.O(
                                                    l.target.result,
                                                    a.transaction,
                                                    l.oldVersion,
                                                    t.version
                                                ).next(() => {
                                                    $e(
                                                        "SimpleDb",
                                                        "Database upgrade to version " +
                                                            t.version +
                                                            " complete"
                                                    );
                                                });
                                        });
                                }))),
                            t.M && (t.db.onversionchange = (r) => t.M(r)),
                            t.db
                        );
                    })();
                }
                F(e) {
                    (this.M = e),
                        this.db && (this.db.onversionchange = (t) => e(t));
                }
                runTransaction(e, t, r, i) {
                    var a = this;
                    return (0, y.Z)(function* () {
                        const l = "readonly" === t;
                        let h = 0;
                        for (;;) {
                            ++h;
                            try {
                                a.db = yield a.k(e);
                                const _ = SD.open(
                                        a.db,
                                        e,
                                        l ? "readonly" : "readwrite",
                                        r
                                    ),
                                    E = i(_)
                                        .next((D) => (_.R(), D))
                                        .catch(
                                            (D) => (_.abort(D), ue.reject(D))
                                        )
                                        .toPromise();
                                return E.catch(() => {}), yield _.A, E;
                            } catch (_) {
                                const E = _,
                                    D = "FirebaseError" !== E.name && h < 3;
                                if (
                                    ($e(
                                        "SimpleDb",
                                        "Transaction failed with error:",
                                        E.message,
                                        "Retrying:",
                                        D
                                    ),
                                    a.close(),
                                    !D)
                                )
                                    return Promise.reject(E);
                            }
                        }
                    })();
                }
                close() {
                    this.db && this.db.close(), (this.db = void 0);
                }
            }
            class bV {
                constructor(e) {
                    (this.$ = e), (this.B = !1), (this.L = null);
                }
                get isDone() {
                    return this.B;
                }
                get U() {
                    return this.L;
                }
                set cursor(e) {
                    this.$ = e;
                }
                done() {
                    this.B = !0;
                }
                q(e) {
                    this.L = e;
                }
                delete() {
                    return lp(this.$.delete());
                }
            }
            class W0 extends Ve {
                constructor(e, t) {
                    super(
                        me.UNAVAILABLE,
                        `IndexedDB transaction '${e}' failed: ${t}`
                    ),
                        (this.name = "IndexedDbTransactionError");
                }
            }
            function Kd(n) {
                return "IndexedDbTransactionError" === n.name;
            }
            class DV {
                constructor(e) {
                    this.store = e;
                }
                put(e, t) {
                    let r;
                    return (
                        void 0 !== t
                            ? ($e("SimpleDb", "PUT", this.store.name, e, t),
                              (r = this.store.put(t, e)))
                            : ($e(
                                  "SimpleDb",
                                  "PUT",
                                  this.store.name,
                                  "<auto-key>",
                                  e
                              ),
                              (r = this.store.put(e))),
                        lp(r)
                    );
                }
                add(e) {
                    return (
                        $e("SimpleDb", "ADD", this.store.name, e, e),
                        lp(this.store.add(e))
                    );
                }
                get(e) {
                    return lp(this.store.get(e)).next(
                        (t) => (
                            void 0 === t && (t = null),
                            $e("SimpleDb", "GET", this.store.name, e, t),
                            t
                        )
                    );
                }
                delete(e) {
                    return (
                        $e("SimpleDb", "DELETE", this.store.name, e),
                        lp(this.store.delete(e))
                    );
                }
                count() {
                    return (
                        $e("SimpleDb", "COUNT", this.store.name),
                        lp(this.store.count())
                    );
                }
                K(e, t) {
                    const r = this.options(e, t);
                    if (r.index || "function" != typeof this.store.getAll) {
                        const i = this.cursor(r),
                            a = [];
                        return this.G(i, (l, h) => {
                            a.push(h);
                        }).next(() => a);
                    }
                    {
                        const i = this.store.getAll(r.range);
                        return new ue((a, l) => {
                            (i.onerror = (h) => {
                                l(h.target.error);
                            }),
                                (i.onsuccess = (h) => {
                                    a(h.target.result);
                                });
                        });
                    }
                }
                j(e, t) {
                    const r = this.store.getAll(e, null === t ? void 0 : t);
                    return new ue((i, a) => {
                        (r.onerror = (l) => {
                            a(l.target.error);
                        }),
                            (r.onsuccess = (l) => {
                                i(l.target.result);
                            });
                    });
                }
                W(e, t) {
                    $e("SimpleDb", "DELETE ALL", this.store.name);
                    const r = this.options(e, t);
                    r.H = !1;
                    const i = this.cursor(r);
                    return this.G(i, (a, l, h) => h.delete());
                }
                J(e, t) {
                    let r;
                    t ? (r = e) : ((r = {}), (t = e));
                    const i = this.cursor(r);
                    return this.G(i, t);
                }
                Y(e) {
                    const t = this.cursor({});
                    return new ue((r, i) => {
                        (t.onerror = (a) => {
                            const l = Gx(a.target.error);
                            i(l);
                        }),
                            (t.onsuccess = (a) => {
                                const l = a.target.result;
                                l
                                    ? e(l.primaryKey, l.value).next((h) => {
                                          h ? l.continue() : r();
                                      })
                                    : r();
                            });
                    });
                }
                G(e, t) {
                    const r = [];
                    return new ue((i, a) => {
                        (e.onerror = (l) => {
                            a(l.target.error);
                        }),
                            (e.onsuccess = (l) => {
                                const h = l.target.result;
                                if (!h) return void i();
                                const _ = new bV(h),
                                    E = t(h.primaryKey, h.value, _);
                                if (E instanceof ue) {
                                    const D = E.catch(
                                        (T) => (_.done(), ue.reject(T))
                                    );
                                    r.push(D);
                                }
                                _.isDone
                                    ? i()
                                    : null === _.U
                                    ? h.continue()
                                    : h.continue(_.U);
                            });
                    }).next(() => ue.waitFor(r));
                }
                options(e, t) {
                    let r;
                    return (
                        void 0 !== e &&
                            ("string" == typeof e ? (r = e) : (t = e)),
                        { index: r, range: t }
                    );
                }
                cursor(e) {
                    let t = "next";
                    if ((e.reverse && (t = "prev"), e.index)) {
                        const r = this.store.index(e.index);
                        return e.H
                            ? r.openKeyCursor(e.range, t)
                            : r.openCursor(e.range, t);
                    }
                    return this.store.openCursor(e.range, t);
                }
            }
            function lp(n) {
                return new ue((e, t) => {
                    (n.onsuccess = (r) => {
                        e(r.target.result);
                    }),
                        (n.onerror = (r) => {
                            const i = Gx(r.target.error);
                            t(i);
                        });
                });
            }
            let XP = !1;
            function Gx(n) {
                const e = Pa.v((0, C.z$)());
                if (e >= 12.2 && e < 13) {
                    const t =
                        "An internal error was encountered in the Indexed Database server";
                    if (n.message.indexOf(t) >= 0) {
                        const r = new Ve(
                            "internal",
                            `IOS_INDEXEDDB_BUG1: IndexedDb has thrown '${t}'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.`
                        );
                        return (
                            XP ||
                                ((XP = !0),
                                setTimeout(() => {
                                    throw r;
                                }, 0)),
                            r
                        );
                    }
                }
                return n;
            }
            class TV {
                constructor(e, t) {
                    (this.asyncQueue = e), (this.X = t), (this.task = null);
                }
                start() {}
                stop() {
                    this.task && (this.task.cancel(), (this.task = null));
                }
                get started() {
                    return null !== this.task;
                }
                Z(e) {
                    var t = this;
                    $e("IndexBackiller", `Scheduled in ${e}ms`),
                        (this.task = this.asyncQueue.enqueueAfterDelay(
                            "index_backfill",
                            e,
                            (0, y.Z)(function* () {
                                t.task = null;
                                try {
                                    $e(
                                        "IndexBackiller",
                                        `Documents written: ${yield t.X.tt()}`
                                    );
                                } catch (r) {
                                    Kd(r)
                                        ? $e(
                                              "IndexBackiller",
                                              "Ignoring IndexedDB error during index backfill: ",
                                              r
                                          )
                                        : yield qd(r);
                                }
                                yield t.Z(1);
                            })
                        ));
                }
            }
            class SV {
                constructor(e, t) {
                    (this.localStore = e), (this.persistence = t);
                }
                tt(e = 50) {
                    var t = this;
                    return (0, y.Z)(function* () {
                        return t.persistence.runTransaction(
                            "Backfill Indexes",
                            "readwrite-primary",
                            (r) => t.et(r, e)
                        );
                    })();
                }
                et(e, t) {
                    const r = new Set();
                    let i = t,
                        a = !0;
                    return ue
                        .doWhile(
                            () => !0 === a && i > 0,
                            () =>
                                this.localStore.indexManager
                                    .getNextCollectionGroupToUpdate(e)
                                    .next((l) => {
                                        if (null !== l && !r.has(l))
                                            return (
                                                $e(
                                                    "IndexBackiller",
                                                    `Processing collection: ${l}`
                                                ),
                                                this.nt(e, l, i).next((h) => {
                                                    (i -= h), r.add(l);
                                                })
                                            );
                                        a = !1;
                                    })
                        )
                        .next(() => t - i);
                }
                nt(e, t, r) {
                    return this.localStore.indexManager
                        .getMinOffsetFromCollectionGroup(e, t)
                        .next((i) =>
                            this.localStore.localDocuments
                                .getNextDocuments(e, t, i, r)
                                .next((a) => {
                                    const l = a.changes;
                                    return this.localStore.indexManager
                                        .updateIndexEntries(e, l)
                                        .next(() => this.st(i, a))
                                        .next(
                                            (h) => (
                                                $e(
                                                    "IndexBackiller",
                                                    `Updating offset: ${h}`
                                                ),
                                                this.localStore.indexManager.updateCollectionGroup(
                                                    e,
                                                    t,
                                                    h
                                                )
                                            )
                                        )
                                        .next(() => l.size);
                                })
                        );
                }
                st(e, t) {
                    let r = e;
                    return (
                        t.changes.forEach((i, a) => {
                            const l = YP(a);
                            Hx(l, r) > 0 && (r = l);
                        }),
                        new go(
                            r.readTime,
                            r.documentKey,
                            Math.max(t.batchId, e.largestBatchId)
                        )
                    );
                }
            }
            class Bs {
                constructor(e, t) {
                    (this.previousValue = e),
                        t &&
                            ((t.sequenceNumberHandler = (r) => this.it(r)),
                            (this.rt = (r) => t.writeSequenceNumber(r)));
                }
                it(e) {
                    return (
                        (this.previousValue = Math.max(e, this.previousValue)),
                        this.previousValue
                    );
                }
                next() {
                    const e = ++this.previousValue;
                    return this.rt && this.rt(e), e;
                }
            }
            function ek(n) {
                let e = 0;
                for (const t in n)
                    Object.prototype.hasOwnProperty.call(n, t) && e++;
                return e;
            }
            function cp(n, e) {
                for (const t in n)
                    Object.prototype.hasOwnProperty.call(n, t) && e(t, n[t]);
            }
            function tk(n) {
                for (const e in n)
                    if (Object.prototype.hasOwnProperty.call(n, e)) return !1;
                return !0;
            }
            Bs.ot = -1;
            class Nr {
                constructor(e, t) {
                    (this.comparator = e), (this.root = t || Li.EMPTY);
                }
                insert(e, t) {
                    return new Nr(
                        this.comparator,
                        this.root
                            .insert(e, t, this.comparator)
                            .copy(null, null, Li.BLACK, null, null)
                    );
                }
                remove(e) {
                    return new Nr(
                        this.comparator,
                        this.root
                            .remove(e, this.comparator)
                            .copy(null, null, Li.BLACK, null, null)
                    );
                }
                get(e) {
                    let t = this.root;
                    for (; !t.isEmpty(); ) {
                        const r = this.comparator(e, t.key);
                        if (0 === r) return t.value;
                        r < 0 ? (t = t.left) : r > 0 && (t = t.right);
                    }
                    return null;
                }
                indexOf(e) {
                    let t = 0,
                        r = this.root;
                    for (; !r.isEmpty(); ) {
                        const i = this.comparator(e, r.key);
                        if (0 === i) return t + r.left.size;
                        i < 0
                            ? (r = r.left)
                            : ((t += r.left.size + 1), (r = r.right));
                    }
                    return -1;
                }
                isEmpty() {
                    return this.root.isEmpty();
                }
                get size() {
                    return this.root.size;
                }
                minKey() {
                    return this.root.minKey();
                }
                maxKey() {
                    return this.root.maxKey();
                }
                inorderTraversal(e) {
                    return this.root.inorderTraversal(e);
                }
                forEach(e) {
                    this.inorderTraversal((t, r) => (e(t, r), !1));
                }
                toString() {
                    const e = [];
                    return (
                        this.inorderTraversal(
                            (t, r) => (e.push(`${t}:${r}`), !1)
                        ),
                        `{${e.join(", ")}}`
                    );
                }
                reverseTraversal(e) {
                    return this.root.reverseTraversal(e);
                }
                getIterator() {
                    return new AD(this.root, null, this.comparator, !1);
                }
                getIteratorFrom(e) {
                    return new AD(this.root, e, this.comparator, !1);
                }
                getReverseIterator() {
                    return new AD(this.root, null, this.comparator, !0);
                }
                getReverseIteratorFrom(e) {
                    return new AD(this.root, e, this.comparator, !0);
                }
            }
            class AD {
                constructor(e, t, r, i) {
                    (this.isReverse = i), (this.nodeStack = []);
                    let a = 1;
                    for (; !e.isEmpty(); )
                        if (
                            ((a = t ? r(e.key, t) : 1),
                            t && i && (a *= -1),
                            a < 0)
                        )
                            e = this.isReverse ? e.left : e.right;
                        else {
                            if (0 === a) {
                                this.nodeStack.push(e);
                                break;
                            }
                            this.nodeStack.push(e),
                                (e = this.isReverse ? e.right : e.left);
                        }
                }
                getNext() {
                    let e = this.nodeStack.pop();
                    const t = { key: e.key, value: e.value };
                    if (this.isReverse)
                        for (e = e.left; !e.isEmpty(); )
                            this.nodeStack.push(e), (e = e.right);
                    else
                        for (e = e.right; !e.isEmpty(); )
                            this.nodeStack.push(e), (e = e.left);
                    return t;
                }
                hasNext() {
                    return this.nodeStack.length > 0;
                }
                peek() {
                    if (0 === this.nodeStack.length) return null;
                    const e = this.nodeStack[this.nodeStack.length - 1];
                    return { key: e.key, value: e.value };
                }
            }
            class Li {
                constructor(e, t, r, i, a) {
                    (this.key = e),
                        (this.value = t),
                        (this.color = r ?? Li.RED),
                        (this.left = i ?? Li.EMPTY),
                        (this.right = a ?? Li.EMPTY),
                        (this.size = this.left.size + 1 + this.right.size);
                }
                copy(e, t, r, i, a) {
                    return new Li(
                        e ?? this.key,
                        t ?? this.value,
                        r ?? this.color,
                        i ?? this.left,
                        a ?? this.right
                    );
                }
                isEmpty() {
                    return !1;
                }
                inorderTraversal(e) {
                    return (
                        this.left.inorderTraversal(e) ||
                        e(this.key, this.value) ||
                        this.right.inorderTraversal(e)
                    );
                }
                reverseTraversal(e) {
                    return (
                        this.right.reverseTraversal(e) ||
                        e(this.key, this.value) ||
                        this.left.reverseTraversal(e)
                    );
                }
                min() {
                    return this.left.isEmpty() ? this : this.left.min();
                }
                minKey() {
                    return this.min().key;
                }
                maxKey() {
                    return this.right.isEmpty()
                        ? this.key
                        : this.right.maxKey();
                }
                insert(e, t, r) {
                    let i = this;
                    const a = r(e, i.key);
                    return (
                        (i =
                            a < 0
                                ? i.copy(
                                      null,
                                      null,
                                      null,
                                      i.left.insert(e, t, r),
                                      null
                                  )
                                : 0 === a
                                ? i.copy(null, t, null, null, null)
                                : i.copy(
                                      null,
                                      null,
                                      null,
                                      null,
                                      i.right.insert(e, t, r)
                                  )),
                        i.fixUp()
                    );
                }
                removeMin() {
                    if (this.left.isEmpty()) return Li.EMPTY;
                    let e = this;
                    return (
                        e.left.isRed() ||
                            e.left.left.isRed() ||
                            (e = e.moveRedLeft()),
                        (e = e.copy(
                            null,
                            null,
                            null,
                            e.left.removeMin(),
                            null
                        )),
                        e.fixUp()
                    );
                }
                remove(e, t) {
                    let r,
                        i = this;
                    if (t(e, i.key) < 0)
                        i.left.isEmpty() ||
                            i.left.isRed() ||
                            i.left.left.isRed() ||
                            (i = i.moveRedLeft()),
                            (i = i.copy(
                                null,
                                null,
                                null,
                                i.left.remove(e, t),
                                null
                            ));
                    else {
                        if (
                            (i.left.isRed() && (i = i.rotateRight()),
                            i.right.isEmpty() ||
                                i.right.isRed() ||
                                i.right.left.isRed() ||
                                (i = i.moveRedRight()),
                            0 === t(e, i.key))
                        ) {
                            if (i.right.isEmpty()) return Li.EMPTY;
                            (r = i.right.min()),
                                (i = i.copy(
                                    r.key,
                                    r.value,
                                    null,
                                    null,
                                    i.right.removeMin()
                                ));
                        }
                        i = i.copy(
                            null,
                            null,
                            null,
                            null,
                            i.right.remove(e, t)
                        );
                    }
                    return i.fixUp();
                }
                isRed() {
                    return this.color;
                }
                fixUp() {
                    let e = this;
                    return (
                        e.right.isRed() &&
                            !e.left.isRed() &&
                            (e = e.rotateLeft()),
                        e.left.isRed() &&
                            e.left.left.isRed() &&
                            (e = e.rotateRight()),
                        e.left.isRed() &&
                            e.right.isRed() &&
                            (e = e.colorFlip()),
                        e
                    );
                }
                moveRedLeft() {
                    let e = this.colorFlip();
                    return (
                        e.right.left.isRed() &&
                            ((e = e.copy(
                                null,
                                null,
                                null,
                                null,
                                e.right.rotateRight()
                            )),
                            (e = e.rotateLeft()),
                            (e = e.colorFlip())),
                        e
                    );
                }
                moveRedRight() {
                    let e = this.colorFlip();
                    return (
                        e.left.left.isRed() &&
                            ((e = e.rotateRight()), (e = e.colorFlip())),
                        e
                    );
                }
                rotateLeft() {
                    const e = this.copy(
                        null,
                        null,
                        Li.RED,
                        null,
                        this.right.left
                    );
                    return this.right.copy(null, null, this.color, e, null);
                }
                rotateRight() {
                    const e = this.copy(
                        null,
                        null,
                        Li.RED,
                        this.left.right,
                        null
                    );
                    return this.left.copy(null, null, this.color, null, e);
                }
                colorFlip() {
                    const e = this.left.copy(
                            null,
                            null,
                            !this.left.color,
                            null,
                            null
                        ),
                        t = this.right.copy(
                            null,
                            null,
                            !this.right.color,
                            null,
                            null
                        );
                    return this.copy(null, null, !this.color, e, t);
                }
                checkMaxDepth() {
                    const e = this.check();
                    return Math.pow(2, e) <= this.size + 1;
                }
                check() {
                    if (
                        (this.isRed() && this.left.isRed()) ||
                        this.right.isRed()
                    )
                        throw ft();
                    const e = this.left.check();
                    if (e !== this.right.check()) throw ft();
                    return e + (this.isRed() ? 0 : 1);
                }
            }
            (Li.EMPTY = null),
                (Li.RED = !0),
                (Li.BLACK = !1),
                (Li.EMPTY = new (class {
                    constructor() {
                        this.size = 0;
                    }
                    get key() {
                        throw ft();
                    }
                    get value() {
                        throw ft();
                    }
                    get color() {
                        throw ft();
                    }
                    get left() {
                        throw ft();
                    }
                    get right() {
                        throw ft();
                    }
                    copy(n, e, t, r, i) {
                        return this;
                    }
                    insert(n, e, t) {
                        return new Li(n, e);
                    }
                    remove(n, e) {
                        return this;
                    }
                    isEmpty() {
                        return !0;
                    }
                    inorderTraversal(n) {
                        return !1;
                    }
                    reverseTraversal(n) {
                        return !1;
                    }
                    minKey() {
                        return null;
                    }
                    maxKey() {
                        return null;
                    }
                    isRed() {
                        return !1;
                    }
                    checkMaxDepth() {
                        return !0;
                    }
                    check() {
                        return 0;
                    }
                })());
            class Hn {
                constructor(e) {
                    (this.comparator = e),
                        (this.data = new Nr(this.comparator));
                }
                has(e) {
                    return null !== this.data.get(e);
                }
                first() {
                    return this.data.minKey();
                }
                last() {
                    return this.data.maxKey();
                }
                get size() {
                    return this.data.size;
                }
                indexOf(e) {
                    return this.data.indexOf(e);
                }
                forEach(e) {
                    this.data.inorderTraversal((t, r) => (e(t), !1));
                }
                forEachInRange(e, t) {
                    const r = this.data.getIteratorFrom(e[0]);
                    for (; r.hasNext(); ) {
                        const i = r.getNext();
                        if (this.comparator(i.key, e[1]) >= 0) return;
                        t(i.key);
                    }
                }
                forEachWhile(e, t) {
                    let r;
                    for (
                        r =
                            void 0 !== t
                                ? this.data.getIteratorFrom(t)
                                : this.data.getIterator();
                        r.hasNext();

                    )
                        if (!e(r.getNext().key)) return;
                }
                firstAfterOrEqual(e) {
                    const t = this.data.getIteratorFrom(e);
                    return t.hasNext() ? t.getNext().key : null;
                }
                getIterator() {
                    return new nk(this.data.getIterator());
                }
                getIteratorFrom(e) {
                    return new nk(this.data.getIteratorFrom(e));
                }
                add(e) {
                    return this.copy(this.data.remove(e).insert(e, !0));
                }
                delete(e) {
                    return this.has(e) ? this.copy(this.data.remove(e)) : this;
                }
                isEmpty() {
                    return this.data.isEmpty();
                }
                unionWith(e) {
                    let t = this;
                    return (
                        t.size < e.size && ((t = e), (e = this)),
                        e.forEach((r) => {
                            t = t.add(r);
                        }),
                        t
                    );
                }
                isEqual(e) {
                    if (!(e instanceof Hn) || this.size !== e.size) return !1;
                    const t = this.data.getIterator(),
                        r = e.data.getIterator();
                    for (; t.hasNext(); ) {
                        const i = t.getNext().key,
                            a = r.getNext().key;
                        if (0 !== this.comparator(i, a)) return !1;
                    }
                    return !0;
                }
                toArray() {
                    const e = [];
                    return (
                        this.forEach((t) => {
                            e.push(t);
                        }),
                        e
                    );
                }
                toString() {
                    const e = [];
                    return (
                        this.forEach((t) => e.push(t)),
                        "SortedSet(" + e.toString() + ")"
                    );
                }
                copy(e) {
                    const t = new Hn(this.comparator);
                    return (t.data = e), t;
                }
            }
            class nk {
                constructor(e) {
                    this.iter = e;
                }
                getNext() {
                    return this.iter.getNext().key;
                }
                hasNext() {
                    return this.iter.hasNext();
                }
            }
            function x_(n) {
                return n.hasNext() ? n.getNext() : void 0;
            }
            class mo {
                constructor(e) {
                    (this.fields = e), e.sort(Br.comparator);
                }
                static empty() {
                    return new mo([]);
                }
                unionWith(e) {
                    let t = new Hn(Br.comparator);
                    for (const r of this.fields) t = t.add(r);
                    for (const r of e) t = t.add(r);
                    return new mo(t.toArray());
                }
                covers(e) {
                    for (const t of this.fields) if (t.isPrefixOf(e)) return !0;
                    return !1;
                }
                isEqual(e) {
                    return A_(this.fields, e.fields, (t, r) => t.isEqual(r));
                }
            }
            class hi {
                constructor(e) {
                    this.binaryString = e;
                }
                static fromBase64String(e) {
                    const t = atob(e);
                    return new hi(t);
                }
                static fromUint8Array(e) {
                    const t = (function (r) {
                        let i = "";
                        for (let a = 0; a < r.length; ++a)
                            i += String.fromCharCode(r[a]);
                        return i;
                    })(e);
                    return new hi(t);
                }
                [Symbol.iterator]() {
                    let e = 0;
                    return {
                        next: () =>
                            e < this.binaryString.length
                                ? {
                                      value: this.binaryString.charCodeAt(e++),
                                      done: !1,
                                  }
                                : { value: void 0, done: !0 },
                    };
                }
                toBase64() {
                    return btoa(this.binaryString);
                }
                toUint8Array() {
                    return (function (e) {
                        const t = new Uint8Array(e.length);
                        for (let r = 0; r < e.length; r++)
                            t[r] = e.charCodeAt(r);
                        return t;
                    })(this.binaryString);
                }
                approximateByteSize() {
                    return 2 * this.binaryString.length;
                }
                compareTo(e) {
                    return Qt(this.binaryString, e.binaryString);
                }
                isEqual(e) {
                    return this.binaryString === e.binaryString;
                }
            }
            hi.EMPTY_BYTE_STRING = new hi("");
            const xV = new RegExp(
                /^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/
            );
            function Zd(n) {
                if ((Vt(!!n), "string" == typeof n)) {
                    let e = 0;
                    const t = xV.exec(n);
                    if ((Vt(!!t), t[1])) {
                        let i = t[1];
                        (i = (i + "000000000").substr(0, 9)), (e = Number(i));
                    }
                    const r = new Date(n);
                    return { seconds: Math.floor(r.getTime() / 1e3), nanos: e };
                }
                return { seconds: Pr(n.seconds), nanos: Pr(n.nanos) };
            }
            function Pr(n) {
                return "number" == typeof n
                    ? n
                    : "string" == typeof n
                    ? Number(n)
                    : 0;
            }
            function dp(n) {
                return "string" == typeof n
                    ? hi.fromBase64String(n)
                    : hi.fromUint8Array(n);
            }
            function Wx(n) {
                var e, t;
                return (
                    "server_timestamp" ===
                    (null ===
                        (t = (
                            (null === (e = n?.mapValue) || void 0 === e
                                ? void 0
                                : e.fields) || {}
                        ).__type__) || void 0 === t
                        ? void 0
                        : t.stringValue)
                );
            }
            function rk(n) {
                const e = n.mapValue.fields.__previous_value__;
                return Wx(e) ? rk(e) : e;
            }
            function z0(n) {
                const e = Zd(
                    n.mapValue.fields.__local_write_time__.timestampValue
                );
                return new mr(e.seconds, e.nanos);
            }
            class RV {
                constructor(e, t, r, i, a, l, h, _) {
                    (this.databaseId = e),
                        (this.appId = t),
                        (this.persistenceKey = r),
                        (this.host = i),
                        (this.ssl = a),
                        (this.forceLongPolling = l),
                        (this.autoDetectLongPolling = h),
                        (this.useFetchStreams = _);
                }
            }
            class Ql {
                constructor(e, t) {
                    (this.projectId = e), (this.database = t || "(default)");
                }
                static empty() {
                    return new Ql("", "");
                }
                get isDefaultDatabase() {
                    return "(default)" === this.database;
                }
                isEqual(e) {
                    return (
                        e instanceof Ql &&
                        e.projectId === this.projectId &&
                        e.database === this.database
                    );
                }
            }
            function q0(n) {
                return null == n;
            }
            function K0(n) {
                return 0 === n && 1 / n == -1 / 0;
            }
            function ik(n) {
                return (
                    "number" == typeof n &&
                    Number.isInteger(n) &&
                    !K0(n) &&
                    n <= Number.MAX_SAFE_INTEGER &&
                    n >= Number.MIN_SAFE_INTEGER
                );
            }
            const Yd = {
                    mapValue: {
                        fields: { __type__: { stringValue: "__max__" } },
                    },
                },
                xD = { nullValue: "NULL_VALUE" };
            function hp(n) {
                return "nullValue" in n
                    ? 0
                    : "booleanValue" in n
                    ? 1
                    : "integerValue" in n || "doubleValue" in n
                    ? 2
                    : "timestampValue" in n
                    ? 3
                    : "stringValue" in n
                    ? 5
                    : "bytesValue" in n
                    ? 6
                    : "referenceValue" in n
                    ? 7
                    : "geoPointValue" in n
                    ? 8
                    : "arrayValue" in n
                    ? 9
                    : "mapValue" in n
                    ? Wx(n)
                        ? 4
                        : uk(n)
                        ? 9007199254740991
                        : 10
                    : ft();
            }
            function Pu(n, e) {
                if (n === e) return !0;
                const t = hp(n);
                if (t !== hp(e)) return !1;
                switch (t) {
                    case 0:
                    case 9007199254740991:
                        return !0;
                    case 1:
                        return n.booleanValue === e.booleanValue;
                    case 4:
                        return z0(n).isEqual(z0(e));
                    case 3:
                        return (function (r, i) {
                            if (
                                "string" == typeof r.timestampValue &&
                                "string" == typeof i.timestampValue &&
                                r.timestampValue.length ===
                                    i.timestampValue.length
                            )
                                return r.timestampValue === i.timestampValue;
                            const a = Zd(r.timestampValue),
                                l = Zd(i.timestampValue);
                            return (
                                a.seconds === l.seconds && a.nanos === l.nanos
                            );
                        })(n, e);
                    case 5:
                        return n.stringValue === e.stringValue;
                    case 6:
                        return (
                            (i = e), dp(n.bytesValue).isEqual(dp(i.bytesValue))
                        );
                    case 7:
                        return n.referenceValue === e.referenceValue;
                    case 8:
                        return (function (r, i) {
                            return (
                                Pr(r.geoPointValue.latitude) ===
                                    Pr(i.geoPointValue.latitude) &&
                                Pr(r.geoPointValue.longitude) ===
                                    Pr(i.geoPointValue.longitude)
                            );
                        })(n, e);
                    case 2:
                        return (function (r, i) {
                            if ("integerValue" in r && "integerValue" in i)
                                return (
                                    Pr(r.integerValue) === Pr(i.integerValue)
                                );
                            if ("doubleValue" in r && "doubleValue" in i) {
                                const a = Pr(r.doubleValue),
                                    l = Pr(i.doubleValue);
                                return a === l
                                    ? K0(a) === K0(l)
                                    : isNaN(a) && isNaN(l);
                            }
                            return !1;
                        })(n, e);
                    case 9:
                        return A_(
                            n.arrayValue.values || [],
                            e.arrayValue.values || [],
                            Pu
                        );
                    case 10:
                        return (function (r, i) {
                            const a = r.mapValue.fields || {},
                                l = i.mapValue.fields || {};
                            if (ek(a) !== ek(l)) return !1;
                            for (const h in a)
                                if (
                                    a.hasOwnProperty(h) &&
                                    (void 0 === l[h] || !Pu(a[h], l[h]))
                                )
                                    return !1;
                            return !0;
                        })(n, e);
                    default:
                        return ft();
                }
                var i;
            }
            function Z0(n, e) {
                return void 0 !== (n.values || []).find((t) => Pu(t, e));
            }
            function Qd(n, e) {
                if (n === e) return 0;
                const t = hp(n),
                    r = hp(e);
                if (t !== r) return Qt(t, r);
                switch (t) {
                    case 0:
                    case 9007199254740991:
                        return 0;
                    case 1:
                        return Qt(n.booleanValue, e.booleanValue);
                    case 2:
                        return (function (i, a) {
                            const l = Pr(i.integerValue || i.doubleValue),
                                h = Pr(a.integerValue || a.doubleValue);
                            return l < h
                                ? -1
                                : l > h
                                ? 1
                                : l === h
                                ? 0
                                : isNaN(l)
                                ? isNaN(h)
                                    ? 0
                                    : -1
                                : 1;
                        })(n, e);
                    case 3:
                        return sk(n.timestampValue, e.timestampValue);
                    case 4:
                        return sk(z0(n), z0(e));
                    case 5:
                        return Qt(n.stringValue, e.stringValue);
                    case 6:
                        return (function (i, a) {
                            const l = dp(i),
                                h = dp(a);
                            return l.compareTo(h);
                        })(n.bytesValue, e.bytesValue);
                    case 7:
                        return (function (i, a) {
                            const l = i.split("/"),
                                h = a.split("/");
                            for (let _ = 0; _ < l.length && _ < h.length; _++) {
                                const E = Qt(l[_], h[_]);
                                if (0 !== E) return E;
                            }
                            return Qt(l.length, h.length);
                        })(n.referenceValue, e.referenceValue);
                    case 8:
                        return (function (i, a) {
                            const l = Qt(Pr(i.latitude), Pr(a.latitude));
                            return 0 !== l
                                ? l
                                : Qt(Pr(i.longitude), Pr(a.longitude));
                        })(n.geoPointValue, e.geoPointValue);
                    case 9:
                        return (function (i, a) {
                            const l = i.values || [],
                                h = a.values || [];
                            for (let _ = 0; _ < l.length && _ < h.length; ++_) {
                                const E = Qd(l[_], h[_]);
                                if (E) return E;
                            }
                            return Qt(l.length, h.length);
                        })(n.arrayValue, e.arrayValue);
                    case 10:
                        return (function (i, a) {
                            if (i === Yd.mapValue && a === Yd.mapValue)
                                return 0;
                            if (i === Yd.mapValue) return 1;
                            if (a === Yd.mapValue) return -1;
                            const l = i.fields || {},
                                h = Object.keys(l),
                                _ = a.fields || {},
                                E = Object.keys(_);
                            h.sort(), E.sort();
                            for (let D = 0; D < h.length && D < E.length; ++D) {
                                const T = Qt(h[D], E[D]);
                                if (0 !== T) return T;
                                const R = Qd(l[h[D]], _[E[D]]);
                                if (0 !== R) return R;
                            }
                            return Qt(h.length, E.length);
                        })(n.mapValue, e.mapValue);
                    default:
                        throw ft();
                }
            }
            function sk(n, e) {
                if (
                    "string" == typeof n &&
                    "string" == typeof e &&
                    n.length === e.length
                )
                    return Qt(n, e);
                const t = Zd(n),
                    r = Zd(e),
                    i = Qt(t.seconds, r.seconds);
                return 0 !== i ? i : Qt(t.nanos, r.nanos);
            }
            function R_(n) {
                return zx(n);
            }
            function zx(n) {
                return "nullValue" in n
                    ? "null"
                    : "booleanValue" in n
                    ? "" + n.booleanValue
                    : "integerValue" in n
                    ? "" + n.integerValue
                    : "doubleValue" in n
                    ? "" + n.doubleValue
                    : "timestampValue" in n
                    ? (function (r) {
                          const i = Zd(r);
                          return `time(${i.seconds},${i.nanos})`;
                      })(n.timestampValue)
                    : "stringValue" in n
                    ? n.stringValue
                    : "bytesValue" in n
                    ? dp(n.bytesValue).toBase64()
                    : "referenceValue" in n
                    ? Xe.fromName(n.referenceValue).toString()
                    : "geoPointValue" in n
                    ? `geo(${(e = n.geoPointValue).latitude},${e.longitude})`
                    : "arrayValue" in n
                    ? (function (r) {
                          let i = "[",
                              a = !0;
                          for (const l of r.values || [])
                              a ? (a = !1) : (i += ","), (i += zx(l));
                          return i + "]";
                      })(n.arrayValue)
                    : "mapValue" in n
                    ? (function (r) {
                          const i = Object.keys(r.fields || {}).sort();
                          let a = "{",
                              l = !0;
                          for (const h of i)
                              l ? (l = !1) : (a += ","),
                                  (a += `${h}:${zx(r.fields[h])}`);
                          return a + "}";
                      })(n.mapValue)
                    : ft();
                var e;
            }
            function fp(n, e) {
                return {
                    referenceValue: `projects/${n.projectId}/databases/${
                        n.database
                    }/documents/${e.path.canonicalString()}`,
                };
            }
            function qx(n) {
                return !!n && "integerValue" in n;
            }
            function Y0(n) {
                return !!n && "arrayValue" in n;
            }
            function ok(n) {
                return !!n && "nullValue" in n;
            }
            function ak(n) {
                return (
                    !!n && "doubleValue" in n && isNaN(Number(n.doubleValue))
                );
            }
            function RD(n) {
                return !!n && "mapValue" in n;
            }
            function Q0(n) {
                if (n.geoPointValue)
                    return {
                        geoPointValue: Object.assign({}, n.geoPointValue),
                    };
                if (n.timestampValue && "object" == typeof n.timestampValue)
                    return {
                        timestampValue: Object.assign({}, n.timestampValue),
                    };
                if (n.mapValue) {
                    const e = { mapValue: { fields: {} } };
                    return (
                        cp(
                            n.mapValue.fields,
                            (t, r) => (e.mapValue.fields[t] = Q0(r))
                        ),
                        e
                    );
                }
                if (n.arrayValue) {
                    const e = { arrayValue: { values: [] } };
                    for (let t = 0; t < (n.arrayValue.values || []).length; ++t)
                        e.arrayValue.values[t] = Q0(n.arrayValue.values[t]);
                    return e;
                }
                return Object.assign({}, n);
            }
            function uk(n) {
                return (
                    "__max__" ===
                    (((n.mapValue || {}).fields || {}).__type__ || {})
                        .stringValue
                );
            }
            function MV(n) {
                return "nullValue" in n
                    ? xD
                    : "booleanValue" in n
                    ? { booleanValue: !1 }
                    : "integerValue" in n || "doubleValue" in n
                    ? { doubleValue: NaN }
                    : "timestampValue" in n
                    ? { timestampValue: { seconds: Number.MIN_SAFE_INTEGER } }
                    : "stringValue" in n
                    ? { stringValue: "" }
                    : "bytesValue" in n
                    ? { bytesValue: "" }
                    : "referenceValue" in n
                    ? fp(Ql.empty(), Xe.empty())
                    : "geoPointValue" in n
                    ? { geoPointValue: { latitude: -90, longitude: -180 } }
                    : "arrayValue" in n
                    ? { arrayValue: {} }
                    : "mapValue" in n
                    ? { mapValue: {} }
                    : ft();
            }
            function NV(n) {
                return "nullValue" in n
                    ? { booleanValue: !1 }
                    : "booleanValue" in n
                    ? { doubleValue: NaN }
                    : "integerValue" in n || "doubleValue" in n
                    ? { timestampValue: { seconds: Number.MIN_SAFE_INTEGER } }
                    : "timestampValue" in n
                    ? { stringValue: "" }
                    : "stringValue" in n
                    ? { bytesValue: "" }
                    : "bytesValue" in n
                    ? fp(Ql.empty(), Xe.empty())
                    : "referenceValue" in n
                    ? { geoPointValue: { latitude: -90, longitude: -180 } }
                    : "geoPointValue" in n
                    ? { arrayValue: {} }
                    : "arrayValue" in n
                    ? { mapValue: {} }
                    : "mapValue" in n
                    ? Yd
                    : ft();
            }
            function lk(n, e) {
                const t = Qd(n.value, e.value);
                return 0 !== t
                    ? t
                    : n.inclusive && !e.inclusive
                    ? -1
                    : !n.inclusive && e.inclusive
                    ? 1
                    : 0;
            }
            function ck(n, e) {
                const t = Qd(n.value, e.value);
                return 0 !== t
                    ? t
                    : n.inclusive && !e.inclusive
                    ? 1
                    : !n.inclusive && e.inclusive
                    ? -1
                    : 0;
            }
            class Vi {
                constructor(e) {
                    this.value = e;
                }
                static empty() {
                    return new Vi({ mapValue: {} });
                }
                field(e) {
                    if (e.isEmpty()) return this.value;
                    {
                        let t = this.value;
                        for (let r = 0; r < e.length - 1; ++r)
                            if (
                                ((t = (t.mapValue.fields || {})[e.get(r)]),
                                !RD(t))
                            )
                                return null;
                        return (
                            (t = (t.mapValue.fields || {})[e.lastSegment()]),
                            t || null
                        );
                    }
                }
                set(e, t) {
                    this.getFieldsMap(e.popLast())[e.lastSegment()] = Q0(t);
                }
                setAll(e) {
                    let t = Br.emptyPath(),
                        r = {},
                        i = [];
                    e.forEach((l, h) => {
                        if (!t.isImmediateParentOf(h)) {
                            const _ = this.getFieldsMap(t);
                            this.applyChanges(_, r, i),
                                (r = {}),
                                (i = []),
                                (t = h.popLast());
                        }
                        l
                            ? (r[h.lastSegment()] = Q0(l))
                            : i.push(h.lastSegment());
                    });
                    const a = this.getFieldsMap(t);
                    this.applyChanges(a, r, i);
                }
                delete(e) {
                    const t = this.field(e.popLast());
                    RD(t) &&
                        t.mapValue.fields &&
                        delete t.mapValue.fields[e.lastSegment()];
                }
                isEqual(e) {
                    return Pu(this.value, e.value);
                }
                getFieldsMap(e) {
                    let t = this.value;
                    t.mapValue.fields || (t.mapValue = { fields: {} });
                    for (let r = 0; r < e.length; ++r) {
                        let i = t.mapValue.fields[e.get(r)];
                        (RD(i) && i.mapValue.fields) ||
                            ((i = { mapValue: { fields: {} } }),
                            (t.mapValue.fields[e.get(r)] = i)),
                            (t = i);
                    }
                    return t.mapValue.fields;
                }
                applyChanges(e, t, r) {
                    cp(t, (i, a) => (e[i] = a));
                    for (const i of r) delete e[i];
                }
                clone() {
                    return new Vi(Q0(this.value));
                }
            }
            function dk(n) {
                const e = [];
                return (
                    cp(n.fields, (t, r) => {
                        const i = new Br([t]);
                        if (RD(r)) {
                            const a = dk(r.mapValue).fields;
                            if (0 === a.length) e.push(i);
                            else for (const l of a) e.push(i.child(l));
                        } else e.push(i);
                    }),
                    new mo(e)
                );
            }
            class Zn {
                constructor(e, t, r, i, a, l) {
                    (this.key = e),
                        (this.documentType = t),
                        (this.version = r),
                        (this.readTime = i),
                        (this.data = a),
                        (this.documentState = l);
                }
                static newInvalidDocument(e) {
                    return new Zn(e, 0, Ft.min(), Ft.min(), Vi.empty(), 0);
                }
                static newFoundDocument(e, t, r) {
                    return new Zn(e, 1, t, Ft.min(), r, 0);
                }
                static newNoDocument(e, t) {
                    return new Zn(e, 2, t, Ft.min(), Vi.empty(), 0);
                }
                static newUnknownDocument(e, t) {
                    return new Zn(e, 3, t, Ft.min(), Vi.empty(), 2);
                }
                convertToFoundDocument(e, t) {
                    return (
                        (this.version = e),
                        (this.documentType = 1),
                        (this.data = t),
                        (this.documentState = 0),
                        this
                    );
                }
                convertToNoDocument(e) {
                    return (
                        (this.version = e),
                        (this.documentType = 2),
                        (this.data = Vi.empty()),
                        (this.documentState = 0),
                        this
                    );
                }
                convertToUnknownDocument(e) {
                    return (
                        (this.version = e),
                        (this.documentType = 3),
                        (this.data = Vi.empty()),
                        (this.documentState = 2),
                        this
                    );
                }
                setHasCommittedMutations() {
                    return (this.documentState = 2), this;
                }
                setHasLocalMutations() {
                    return (
                        (this.documentState = 1),
                        (this.version = Ft.min()),
                        this
                    );
                }
                setReadTime(e) {
                    return (this.readTime = e), this;
                }
                get hasLocalMutations() {
                    return 1 === this.documentState;
                }
                get hasCommittedMutations() {
                    return 2 === this.documentState;
                }
                get hasPendingWrites() {
                    return this.hasLocalMutations || this.hasCommittedMutations;
                }
                isValidDocument() {
                    return 0 !== this.documentType;
                }
                isFoundDocument() {
                    return 1 === this.documentType;
                }
                isNoDocument() {
                    return 2 === this.documentType;
                }
                isUnknownDocument() {
                    return 3 === this.documentType;
                }
                isEqual(e) {
                    return (
                        e instanceof Zn &&
                        this.key.isEqual(e.key) &&
                        this.version.isEqual(e.version) &&
                        this.documentType === e.documentType &&
                        this.documentState === e.documentState &&
                        this.data.isEqual(e.data)
                    );
                }
                mutableCopy() {
                    return new Zn(
                        this.key,
                        this.documentType,
                        this.version,
                        this.readTime,
                        this.data.clone(),
                        this.documentState
                    );
                }
                toString() {
                    return `Document(${this.key}, ${
                        this.version
                    }, ${JSON.stringify(this.data.value)}, {documentType: ${
                        this.documentType
                    }}), {documentState: ${this.documentState}})`;
                }
            }
            class PV {
                constructor(
                    e,
                    t = null,
                    r = [],
                    i = [],
                    a = null,
                    l = null,
                    h = null
                ) {
                    (this.path = e),
                        (this.collectionGroup = t),
                        (this.orderBy = r),
                        (this.filters = i),
                        (this.limit = a),
                        (this.startAt = l),
                        (this.endAt = h),
                        (this.ut = null);
                }
            }
            function hk(
                n,
                e = null,
                t = [],
                r = [],
                i = null,
                a = null,
                l = null
            ) {
                return new PV(n, e, t, r, i, a, l);
            }
            function pp(n) {
                const e = rt(n);
                if (null === e.ut) {
                    let t = e.path.canonicalString();
                    null !== e.collectionGroup &&
                        (t += "|cg:" + e.collectionGroup),
                        (t += "|f:"),
                        (t += e.filters
                            .map((r) => {
                                return (
                                    (i = r).field.canonicalString() +
                                    i.op.toString() +
                                    R_(i.value)
                                );
                                var i;
                            })
                            .join(",")),
                        (t += "|ob:"),
                        (t += e.orderBy
                            .map((r) => {
                                return (i = r).field.canonicalString() + i.dir;
                                var i;
                            })
                            .join(",")),
                        q0(e.limit) || ((t += "|l:"), (t += e.limit)),
                        e.startAt &&
                            ((t += "|lb:"),
                            (t += e.startAt.inclusive ? "b:" : "a:"),
                            (t += e.startAt.position
                                .map((r) => R_(r))
                                .join(","))),
                        e.endAt &&
                            ((t += "|ub:"),
                            (t += e.endAt.inclusive ? "a:" : "b:"),
                            (t += e.endAt.position
                                .map((r) => R_(r))
                                .join(","))),
                        (e.ut = t);
                }
                return e.ut;
            }
            function J0(n, e) {
                if (
                    n.limit !== e.limit ||
                    n.orderBy.length !== e.orderBy.length
                )
                    return !1;
                for (let i = 0; i < n.orderBy.length; i++)
                    if (!HV(n.orderBy[i], e.orderBy[i])) return !1;
                if (n.filters.length !== e.filters.length) return !1;
                for (let i = 0; i < n.filters.length; i++)
                    if (
                        (t = n.filters[i]).op !== (r = e.filters[i]).op ||
                        !t.field.isEqual(r.field) ||
                        !Pu(t.value, r.value)
                    )
                        return !1;
                var t, r;
                return (
                    n.collectionGroup === e.collectionGroup &&
                    !!n.path.isEqual(e.path) &&
                    !!_k(n.startAt, e.startAt) &&
                    _k(n.endAt, e.endAt)
                );
            }
            function MD(n) {
                return (
                    Xe.isDocumentKey(n.path) &&
                    null === n.collectionGroup &&
                    0 === n.filters.length
                );
            }
            function ND(n, e) {
                return n.filters.filter(
                    (t) => t instanceof Ui && t.field.isEqual(e)
                );
            }
            function fk(n, e, t) {
                let r = xD,
                    i = !0;
                for (const a of ND(n, e)) {
                    let l = xD,
                        h = !0;
                    switch (a.op) {
                        case "<":
                        case "<=":
                            l = MV(a.value);
                            break;
                        case "==":
                        case "in":
                        case ">=":
                            l = a.value;
                            break;
                        case ">":
                            (l = a.value), (h = !1);
                            break;
                        case "!=":
                        case "not-in":
                            l = xD;
                    }
                    lk({ value: r, inclusive: i }, { value: l, inclusive: h }) <
                        0 && ((r = l), (i = h));
                }
                if (null !== t)
                    for (let a = 0; a < n.orderBy.length; ++a)
                        if (n.orderBy[a].field.isEqual(e)) {
                            const l = t.position[a];
                            lk(
                                { value: r, inclusive: i },
                                { value: l, inclusive: t.inclusive }
                            ) < 0 && ((r = l), (i = t.inclusive));
                            break;
                        }
                return { value: r, inclusive: i };
            }
            function pk(n, e, t) {
                let r = Yd,
                    i = !0;
                for (const a of ND(n, e)) {
                    let l = Yd,
                        h = !0;
                    switch (a.op) {
                        case ">=":
                        case ">":
                            (l = NV(a.value)), (h = !1);
                            break;
                        case "==":
                        case "in":
                        case "<=":
                            l = a.value;
                            break;
                        case "<":
                            (l = a.value), (h = !1);
                            break;
                        case "!=":
                        case "not-in":
                            l = Yd;
                    }
                    ck({ value: r, inclusive: i }, { value: l, inclusive: h }) >
                        0 && ((r = l), (i = h));
                }
                if (null !== t)
                    for (let a = 0; a < n.orderBy.length; ++a)
                        if (n.orderBy[a].field.isEqual(e)) {
                            const l = t.position[a];
                            ck(
                                { value: r, inclusive: i },
                                { value: l, inclusive: t.inclusive }
                            ) > 0 && ((r = l), (i = t.inclusive));
                            break;
                        }
                return { value: r, inclusive: i };
            }
            class Ui extends class {} {
                constructor(e, t, r) {
                    super(), (this.field = e), (this.op = t), (this.value = r);
                }
                static create(e, t, r) {
                    return e.isKeyField()
                        ? "in" === t || "not-in" === t
                            ? this.ct(e, t, r)
                            : new OV(e, t, r)
                        : "array-contains" === t
                        ? new VV(e, r)
                        : "in" === t
                        ? new UV(e, r)
                        : "not-in" === t
                        ? new BV(e, r)
                        : "array-contains-any" === t
                        ? new jV(e, r)
                        : new Ui(e, t, r);
                }
                static ct(e, t, r) {
                    return "in" === t ? new FV(e, r) : new LV(e, r);
                }
                matches(e) {
                    const t = e.data.field(this.field);
                    return "!=" === this.op
                        ? null !== t && this.at(Qd(t, this.value))
                        : null !== t &&
                              hp(this.value) === hp(t) &&
                              this.at(Qd(t, this.value));
                }
                at(e) {
                    switch (this.op) {
                        case "<":
                            return e < 0;
                        case "<=":
                            return e <= 0;
                        case "==":
                            return 0 === e;
                        case "!=":
                            return 0 !== e;
                        case ">":
                            return e > 0;
                        case ">=":
                            return e >= 0;
                        default:
                            return ft();
                    }
                }
                ht() {
                    return (
                        ["<", "<=", ">", ">=", "!=", "not-in"].indexOf(
                            this.op
                        ) >= 0
                    );
                }
            }
            class OV extends Ui {
                constructor(e, t, r) {
                    super(e, t, r), (this.key = Xe.fromName(r.referenceValue));
                }
                matches(e) {
                    const t = Xe.comparator(e.key, this.key);
                    return this.at(t);
                }
            }
            class FV extends Ui {
                constructor(e, t) {
                    super(e, "in", t), (this.keys = gk(0, t));
                }
                matches(e) {
                    return this.keys.some((t) => t.isEqual(e.key));
                }
            }
            class LV extends Ui {
                constructor(e, t) {
                    super(e, "not-in", t), (this.keys = gk(0, t));
                }
                matches(e) {
                    return !this.keys.some((t) => t.isEqual(e.key));
                }
            }
            function gk(n, e) {
                var t;
                return (
                    (null === (t = e.arrayValue) || void 0 === t
                        ? void 0
                        : t.values) || []
                ).map((r) => Xe.fromName(r.referenceValue));
            }
            class VV extends Ui {
                constructor(e, t) {
                    super(e, "array-contains", t);
                }
                matches(e) {
                    const t = e.data.field(this.field);
                    return Y0(t) && Z0(t.arrayValue, this.value);
                }
            }
            class UV extends Ui {
                constructor(e, t) {
                    super(e, "in", t);
                }
                matches(e) {
                    const t = e.data.field(this.field);
                    return null !== t && Z0(this.value.arrayValue, t);
                }
            }
            class BV extends Ui {
                constructor(e, t) {
                    super(e, "not-in", t);
                }
                matches(e) {
                    if (Z0(this.value.arrayValue, { nullValue: "NULL_VALUE" }))
                        return !1;
                    const t = e.data.field(this.field);
                    return null !== t && !Z0(this.value.arrayValue, t);
                }
            }
            class jV extends Ui {
                constructor(e, t) {
                    super(e, "array-contains-any", t);
                }
                matches(e) {
                    const t = e.data.field(this.field);
                    return (
                        !(!Y0(t) || !t.arrayValue.values) &&
                        t.arrayValue.values.some((r) =>
                            Z0(this.value.arrayValue, r)
                        )
                    );
                }
            }
            class Jd {
                constructor(e, t) {
                    (this.position = e), (this.inclusive = t);
                }
            }
            class M_ {
                constructor(e, t = "asc") {
                    (this.field = e), (this.dir = t);
                }
            }
            function HV(n, e) {
                return n.dir === e.dir && n.field.isEqual(e.field);
            }
            function mk(n, e, t) {
                let r = 0;
                for (let i = 0; i < n.position.length; i++) {
                    const a = e[i],
                        l = n.position[i];
                    if (
                        ((r = a.field.isKeyField()
                            ? Xe.comparator(
                                  Xe.fromName(l.referenceValue),
                                  t.key
                              )
                            : Qd(l, t.data.field(a.field))),
                        "desc" === a.dir && (r *= -1),
                        0 !== r)
                    )
                        break;
                }
                return r;
            }
            function _k(n, e) {
                if (null === n) return null === e;
                if (
                    null === e ||
                    n.inclusive !== e.inclusive ||
                    n.position.length !== e.position.length
                )
                    return !1;
                for (let t = 0; t < n.position.length; t++)
                    if (!Pu(n.position[t], e.position[t])) return !1;
                return !0;
            }
            class Jl {
                constructor(
                    e,
                    t = null,
                    r = [],
                    i = [],
                    a = null,
                    l = "F",
                    h = null,
                    _ = null
                ) {
                    (this.path = e),
                        (this.collectionGroup = t),
                        (this.explicitOrderBy = r),
                        (this.filters = i),
                        (this.limit = a),
                        (this.limitType = l),
                        (this.startAt = h),
                        (this.endAt = _),
                        (this.lt = null),
                        (this.ft = null);
                }
            }
            function yk(n, e, t, r, i, a, l, h) {
                return new Jl(n, e, t, r, i, a, l, h);
            }
            function N_(n) {
                return new Jl(n);
            }
            function Kx(n) {
                return n.explicitOrderBy.length > 0
                    ? n.explicitOrderBy[0].field
                    : null;
            }
            function Zx(n) {
                for (const e of n.filters) if (e.ht()) return e.field;
                return null;
            }
            function Yx(n) {
                return null !== n.collectionGroup;
            }
            function P_(n) {
                const e = rt(n);
                if (null === e.lt) {
                    e.lt = [];
                    const t = Zx(e),
                        r = Kx(e);
                    if (null !== t && null === r)
                        t.isKeyField() || e.lt.push(new M_(t)),
                            e.lt.push(new M_(Br.keyField(), "asc"));
                    else {
                        let i = !1;
                        for (const a of e.explicitOrderBy)
                            e.lt.push(a), a.field.isKeyField() && (i = !0);
                        if (!i) {
                            const a =
                                e.explicitOrderBy.length > 0
                                    ? e.explicitOrderBy[
                                          e.explicitOrderBy.length - 1
                                      ].dir
                                    : "asc";
                            e.lt.push(new M_(Br.keyField(), a));
                        }
                    }
                }
                return e.lt;
            }
            function Yo(n) {
                const e = rt(n);
                if (!e.ft)
                    if ("F" === e.limitType)
                        e.ft = hk(
                            e.path,
                            e.collectionGroup,
                            P_(e),
                            e.filters,
                            e.limit,
                            e.startAt,
                            e.endAt
                        );
                    else {
                        const t = [];
                        for (const a of P_(e))
                            t.push(
                                new M_(
                                    a.field,
                                    "desc" === a.dir ? "asc" : "desc"
                                )
                            );
                        const r = e.endAt
                                ? new Jd(e.endAt.position, e.endAt.inclusive)
                                : null,
                            i = e.startAt
                                ? new Jd(
                                      e.startAt.position,
                                      e.startAt.inclusive
                                  )
                                : null;
                        e.ft = hk(
                            e.path,
                            e.collectionGroup,
                            t,
                            e.filters,
                            e.limit,
                            r,
                            i
                        );
                    }
                return e.ft;
            }
            function vk(n, e, t) {
                return new Jl(
                    n.path,
                    n.collectionGroup,
                    n.explicitOrderBy.slice(),
                    n.filters.slice(),
                    e,
                    t,
                    n.startAt,
                    n.endAt
                );
            }
            function X0(n, e) {
                return J0(Yo(n), Yo(e)) && n.limitType === e.limitType;
            }
            function wk(n) {
                return `${pp(Yo(n))}|lt:${n.limitType}`;
            }
            function Qx(n) {
                return `Query(target=${(function kV(n) {
                    let e = n.path.canonicalString();
                    return (
                        null !== n.collectionGroup &&
                            (e += " collectionGroup=" + n.collectionGroup),
                        n.filters.length > 0 &&
                            (e += `, filters: [${n.filters
                                .map((t) => {
                                    return `${(r =
                                        t).field.canonicalString()} ${
                                        r.op
                                    } ${R_(r.value)}`;
                                    var r;
                                })
                                .join(", ")}]`),
                        q0(n.limit) || (e += ", limit: " + n.limit),
                        n.orderBy.length > 0 &&
                            (e += `, orderBy: [${n.orderBy
                                .map((t) => {
                                    return `${(r =
                                        t).field.canonicalString()} (${r.dir})`;
                                    var r;
                                })
                                .join(", ")}]`),
                        n.startAt &&
                            ((e += ", startAt: "),
                            (e += n.startAt.inclusive ? "b:" : "a:"),
                            (e += n.startAt.position
                                .map((t) => R_(t))
                                .join(","))),
                        n.endAt &&
                            ((e += ", endAt: "),
                            (e += n.endAt.inclusive ? "a:" : "b:"),
                            (e += n.endAt.position
                                .map((t) => R_(t))
                                .join(","))),
                        `Target(${e})`
                    );
                })(Yo(n))}; limitType=${n.limitType})`;
            }
            function Jx(n, e) {
                return (
                    e.isFoundDocument() &&
                    (function (t, r) {
                        const i = r.key.path;
                        return null !== t.collectionGroup
                            ? r.key.hasCollectionId(t.collectionGroup) &&
                                  t.path.isPrefixOf(i)
                            : Xe.isDocumentKey(t.path)
                            ? t.path.isEqual(i)
                            : t.path.isImmediateParentOf(i);
                    })(n, e) &&
                    (function (t, r) {
                        for (const i of t.explicitOrderBy)
                            if (
                                !i.field.isKeyField() &&
                                null === r.data.field(i.field)
                            )
                                return !1;
                        return !0;
                    })(n, e) &&
                    (function (t, r) {
                        for (const i of t.filters) if (!i.matches(r)) return !1;
                        return !0;
                    })(n, e) &&
                    ((r = e),
                    !(
                        ((t = n).startAt &&
                            !(function (i, a, l) {
                                const h = mk(i, a, l);
                                return i.inclusive ? h <= 0 : h < 0;
                            })(t.startAt, P_(t), r)) ||
                        (t.endAt &&
                            !(function (i, a, l) {
                                const h = mk(i, a, l);
                                return i.inclusive ? h >= 0 : h > 0;
                            })(t.endAt, P_(t), r))
                    ))
                );
                var t, r;
            }
            function Ek(n) {
                return (
                    n.collectionGroup ||
                    (n.path.length % 2 == 1
                        ? n.path.lastSegment()
                        : n.path.get(n.path.length - 2))
                );
            }
            function Ik(n) {
                return (e, t) => {
                    let r = !1;
                    for (const i of P_(n)) {
                        const a = GV(i, e, t);
                        if (0 !== a) return a;
                        r = r || i.field.isKeyField();
                    }
                    return 0;
                };
            }
            function GV(n, e, t) {
                const r = n.field.isKeyField()
                    ? Xe.comparator(e.key, t.key)
                    : (function (i, a, l) {
                          const h = a.data.field(i),
                              _ = l.data.field(i);
                          return null !== h && null !== _ ? Qd(h, _) : ft();
                      })(n.field, e, t);
                switch (n.dir) {
                    case "asc":
                        return r;
                    case "desc":
                        return -1 * r;
                    default:
                        return ft();
                }
            }
            function Ck(n, e) {
                if (n.dt) {
                    if (isNaN(e)) return { doubleValue: "NaN" };
                    if (e === 1 / 0) return { doubleValue: "Infinity" };
                    if (e === -1 / 0) return { doubleValue: "-Infinity" };
                }
                return { doubleValue: K0(e) ? "-0" : e };
            }
            function bk(n) {
                return { integerValue: "" + n };
            }
            function Dk(n, e) {
                return ik(e) ? bk(e) : Ck(n, e);
            }
            class PD {
                constructor() {
                    this._ = void 0;
                }
            }
            function WV(n, e, t) {
                return n instanceof k_
                    ? (function (r, i) {
                          const a = {
                              fields: {
                                  __type__: { stringValue: "server_timestamp" },
                                  __local_write_time__: {
                                      timestampValue: {
                                          seconds: r.seconds,
                                          nanos: r.nanoseconds,
                                      },
                                  },
                              },
                          };
                          return (
                              i && (a.fields.__previous_value__ = i),
                              { mapValue: a }
                          );
                      })(t, e)
                    : n instanceof gp
                    ? Sk(n, e)
                    : n instanceof mp
                    ? Ak(n, e)
                    : (function (r, i) {
                          const a = Tk(r, i),
                              l = xk(a) + xk(r._t);
                          return qx(a) && qx(r._t) ? bk(l) : Ck(r.wt, l);
                      })(n, e);
            }
            function zV(n, e, t) {
                return n instanceof gp
                    ? Sk(n, e)
                    : n instanceof mp
                    ? Ak(n, e)
                    : t;
            }
            function Tk(n, e) {
                return n instanceof O_
                    ? qx((t = e)) || ((r = t) && "doubleValue" in r)
                        ? e
                        : { integerValue: 0 }
                    : null;
                var r, t;
            }
            class k_ extends PD {}
            class gp extends PD {
                constructor(e) {
                    super(), (this.elements = e);
                }
            }
            function Sk(n, e) {
                const t = Rk(e);
                for (const r of n.elements)
                    t.some((i) => Pu(i, r)) || t.push(r);
                return { arrayValue: { values: t } };
            }
            class mp extends PD {
                constructor(e) {
                    super(), (this.elements = e);
                }
            }
            function Ak(n, e) {
                let t = Rk(e);
                for (const r of n.elements) t = t.filter((i) => !Pu(i, r));
                return { arrayValue: { values: t } };
            }
            class O_ extends PD {
                constructor(e, t) {
                    super(), (this.wt = e), (this._t = t);
                }
            }
            function xk(n) {
                return Pr(n.integerValue || n.doubleValue);
            }
            function Rk(n) {
                return Y0(n) && n.arrayValue.values
                    ? n.arrayValue.values.slice()
                    : [];
            }
            class eE {
                constructor(e, t) {
                    (this.field = e), (this.transform = t);
                }
            }
            class KV {
                constructor(e, t) {
                    (this.version = e), (this.transformResults = t);
                }
            }
            class Er {
                constructor(e, t) {
                    (this.updateTime = e), (this.exists = t);
                }
                static none() {
                    return new Er();
                }
                static exists(e) {
                    return new Er(void 0, e);
                }
                static updateTime(e) {
                    return new Er(e);
                }
                get isNone() {
                    return void 0 === this.updateTime && void 0 === this.exists;
                }
                isEqual(e) {
                    return (
                        this.exists === e.exists &&
                        (this.updateTime
                            ? !!e.updateTime &&
                              this.updateTime.isEqual(e.updateTime)
                            : !e.updateTime)
                    );
                }
            }
            function kD(n, e) {
                return void 0 !== n.updateTime
                    ? e.isFoundDocument() && e.version.isEqual(n.updateTime)
                    : void 0 === n.exists || n.exists === e.isFoundDocument();
            }
            class OD {}
            function Mk(n, e) {
                if (!n.hasLocalMutations || (e && 0 === e.fields.length))
                    return null;
                if (null === e)
                    return n.isNoDocument()
                        ? new L_(n.key, Er.none())
                        : new F_(n.key, n.data, Er.none());
                {
                    const t = n.data,
                        r = Vi.empty();
                    let i = new Hn(Br.comparator);
                    for (let a of e.fields)
                        if (!i.has(a)) {
                            let l = t.field(a);
                            null === l &&
                                a.length > 1 &&
                                ((a = a.popLast()), (l = t.field(a))),
                                null === l ? r.delete(a) : r.set(a, l),
                                (i = i.add(a));
                        }
                    return new Xl(n.key, r, new mo(i.toArray()), Er.none());
                }
            }
            function ZV(n, e, t) {
                n instanceof F_
                    ? (function (r, i, a) {
                          const l = r.value.clone(),
                              h = kk(r.fieldTransforms, i, a.transformResults);
                          l.setAll(h),
                              i
                                  .convertToFoundDocument(a.version, l)
                                  .setHasCommittedMutations();
                      })(n, e, t)
                    : n instanceof Xl
                    ? (function (r, i, a) {
                          if (!kD(r.precondition, i))
                              return void i.convertToUnknownDocument(a.version);
                          const l = kk(
                                  r.fieldTransforms,
                                  i,
                                  a.transformResults
                              ),
                              h = i.data;
                          h.setAll(Pk(r)),
                              h.setAll(l),
                              i
                                  .convertToFoundDocument(a.version, h)
                                  .setHasCommittedMutations();
                      })(n, e, t)
                    : e
                          .convertToNoDocument(t.version)
                          .setHasCommittedMutations();
            }
            function tE(n, e, t, r) {
                return n instanceof F_
                    ? (function (i, a, l, h) {
                          if (!kD(i.precondition, a)) return l;
                          const _ = i.value.clone(),
                              E = Ok(i.fieldTransforms, h, a);
                          return (
                              _.setAll(E),
                              a
                                  .convertToFoundDocument(a.version, _)
                                  .setHasLocalMutations(),
                              null
                          );
                      })(n, e, t, r)
                    : n instanceof Xl
                    ? (function (i, a, l, h) {
                          if (!kD(i.precondition, a)) return l;
                          const _ = Ok(i.fieldTransforms, h, a),
                              E = a.data;
                          return (
                              E.setAll(Pk(i)),
                              E.setAll(_),
                              a
                                  .convertToFoundDocument(a.version, E)
                                  .setHasLocalMutations(),
                              null === l
                                  ? null
                                  : l
                                        .unionWith(i.fieldMask.fields)
                                        .unionWith(
                                            i.fieldTransforms.map(
                                                (D) => D.field
                                            )
                                        )
                          );
                      })(n, e, t, r)
                    : ((l = t),
                      kD(n.precondition, (a = e))
                          ? (a
                                .convertToNoDocument(a.version)
                                .setHasLocalMutations(),
                            null)
                          : l);
                var a, l;
            }
            function YV(n, e) {
                let t = null;
                for (const r of n.fieldTransforms) {
                    const i = e.data.field(r.field),
                        a = Tk(r.transform, i || null);
                    null != a &&
                        (null === t && (t = Vi.empty()), t.set(r.field, a));
                }
                return t || null;
            }
            function Nk(n, e) {
                return (
                    n.type === e.type &&
                    !!n.key.isEqual(e.key) &&
                    !!n.precondition.isEqual(e.precondition) &&
                    ((r = e.fieldTransforms),
                    !!(
                        (void 0 === (t = n.fieldTransforms) && void 0 === r) ||
                        (t &&
                            r &&
                            A_(t, r, (i, a) =>
                                (function qV(n, e) {
                                    return (
                                        n.field.isEqual(e.field) &&
                                        ((r = e.transform),
                                        ((t = n.transform) instanceof gp &&
                                            r instanceof gp) ||
                                        (t instanceof mp && r instanceof mp)
                                            ? A_(t.elements, r.elements, Pu)
                                            : t instanceof O_ && r instanceof O_
                                            ? Pu(t._t, r._t)
                                            : t instanceof k_ &&
                                              r instanceof k_)
                                    );
                                    var t, r;
                                })(i, a)
                            ))
                    )) &&
                    (0 === n.type
                        ? n.value.isEqual(e.value)
                        : 1 !== n.type ||
                          (n.data.isEqual(e.data) &&
                              n.fieldMask.isEqual(e.fieldMask)))
                );
                var t, r;
            }
            class F_ extends OD {
                constructor(e, t, r, i = []) {
                    super(),
                        (this.key = e),
                        (this.value = t),
                        (this.precondition = r),
                        (this.fieldTransforms = i),
                        (this.type = 0);
                }
                getFieldMask() {
                    return null;
                }
            }
            class Xl extends OD {
                constructor(e, t, r, i, a = []) {
                    super(),
                        (this.key = e),
                        (this.data = t),
                        (this.fieldMask = r),
                        (this.precondition = i),
                        (this.fieldTransforms = a),
                        (this.type = 1);
                }
                getFieldMask() {
                    return this.fieldMask;
                }
            }
            function Pk(n) {
                const e = new Map();
                return (
                    n.fieldMask.fields.forEach((t) => {
                        if (!t.isEmpty()) {
                            const r = n.data.field(t);
                            e.set(t, r);
                        }
                    }),
                    e
                );
            }
            function kk(n, e, t) {
                const r = new Map();
                Vt(n.length === t.length);
                for (let i = 0; i < t.length; i++) {
                    const a = n[i],
                        l = a.transform,
                        h = e.data.field(a.field);
                    r.set(a.field, zV(l, h, t[i]));
                }
                return r;
            }
            function Ok(n, e, t) {
                const r = new Map();
                for (const i of n) {
                    const a = i.transform,
                        l = t.data.field(i.field);
                    r.set(i.field, WV(a, l, e));
                }
                return r;
            }
            class L_ extends OD {
                constructor(e, t) {
                    super(),
                        (this.key = e),
                        (this.precondition = t),
                        (this.type = 2),
                        (this.fieldTransforms = []);
                }
                getFieldMask() {
                    return null;
                }
            }
            class Xx extends OD {
                constructor(e, t) {
                    super(),
                        (this.key = e),
                        (this.precondition = t),
                        (this.type = 3),
                        (this.fieldTransforms = []);
                }
                getFieldMask() {
                    return null;
                }
            }
            class QV {
                constructor(e) {
                    this.count = e;
                }
            }
            var Kr, En;
            function Fk(n) {
                switch (n) {
                    default:
                        return ft();
                    case me.CANCELLED:
                    case me.UNKNOWN:
                    case me.DEADLINE_EXCEEDED:
                    case me.RESOURCE_EXHAUSTED:
                    case me.INTERNAL:
                    case me.UNAVAILABLE:
                    case me.UNAUTHENTICATED:
                        return !1;
                    case me.INVALID_ARGUMENT:
                    case me.NOT_FOUND:
                    case me.ALREADY_EXISTS:
                    case me.PERMISSION_DENIED:
                    case me.FAILED_PRECONDITION:
                    case me.ABORTED:
                    case me.OUT_OF_RANGE:
                    case me.UNIMPLEMENTED:
                    case me.DATA_LOSS:
                        return !0;
                }
            }
            function Lk(n) {
                if (void 0 === n)
                    return qr("GRPC error has no .code"), me.UNKNOWN;
                switch (n) {
                    case Kr.OK:
                        return me.OK;
                    case Kr.CANCELLED:
                        return me.CANCELLED;
                    case Kr.UNKNOWN:
                        return me.UNKNOWN;
                    case Kr.DEADLINE_EXCEEDED:
                        return me.DEADLINE_EXCEEDED;
                    case Kr.RESOURCE_EXHAUSTED:
                        return me.RESOURCE_EXHAUSTED;
                    case Kr.INTERNAL:
                        return me.INTERNAL;
                    case Kr.UNAVAILABLE:
                        return me.UNAVAILABLE;
                    case Kr.UNAUTHENTICATED:
                        return me.UNAUTHENTICATED;
                    case Kr.INVALID_ARGUMENT:
                        return me.INVALID_ARGUMENT;
                    case Kr.NOT_FOUND:
                        return me.NOT_FOUND;
                    case Kr.ALREADY_EXISTS:
                        return me.ALREADY_EXISTS;
                    case Kr.PERMISSION_DENIED:
                        return me.PERMISSION_DENIED;
                    case Kr.FAILED_PRECONDITION:
                        return me.FAILED_PRECONDITION;
                    case Kr.ABORTED:
                        return me.ABORTED;
                    case Kr.OUT_OF_RANGE:
                        return me.OUT_OF_RANGE;
                    case Kr.UNIMPLEMENTED:
                        return me.UNIMPLEMENTED;
                    case Kr.DATA_LOSS:
                        return me.DATA_LOSS;
                    default:
                        return ft();
                }
            }
            ((En = Kr || (Kr = {}))[(En.OK = 0)] = "OK"),
                (En[(En.CANCELLED = 1)] = "CANCELLED"),
                (En[(En.UNKNOWN = 2)] = "UNKNOWN"),
                (En[(En.INVALID_ARGUMENT = 3)] = "INVALID_ARGUMENT"),
                (En[(En.DEADLINE_EXCEEDED = 4)] = "DEADLINE_EXCEEDED"),
                (En[(En.NOT_FOUND = 5)] = "NOT_FOUND"),
                (En[(En.ALREADY_EXISTS = 6)] = "ALREADY_EXISTS"),
                (En[(En.PERMISSION_DENIED = 7)] = "PERMISSION_DENIED"),
                (En[(En.UNAUTHENTICATED = 16)] = "UNAUTHENTICATED"),
                (En[(En.RESOURCE_EXHAUSTED = 8)] = "RESOURCE_EXHAUSTED"),
                (En[(En.FAILED_PRECONDITION = 9)] = "FAILED_PRECONDITION"),
                (En[(En.ABORTED = 10)] = "ABORTED"),
                (En[(En.OUT_OF_RANGE = 11)] = "OUT_OF_RANGE"),
                (En[(En.UNIMPLEMENTED = 12)] = "UNIMPLEMENTED"),
                (En[(En.INTERNAL = 13)] = "INTERNAL"),
                (En[(En.UNAVAILABLE = 14)] = "UNAVAILABLE"),
                (En[(En.DATA_LOSS = 15)] = "DATA_LOSS");
            class Xd {
                constructor(e, t) {
                    (this.mapKeyFn = e),
                        (this.equalsFn = t),
                        (this.inner = {}),
                        (this.innerSize = 0);
                }
                get(e) {
                    const t = this.mapKeyFn(e),
                        r = this.inner[t];
                    if (void 0 !== r)
                        for (const [i, a] of r)
                            if (this.equalsFn(i, e)) return a;
                }
                has(e) {
                    return void 0 !== this.get(e);
                }
                set(e, t) {
                    const r = this.mapKeyFn(e),
                        i = this.inner[r];
                    if (void 0 === i)
                        return (
                            (this.inner[r] = [[e, t]]), void this.innerSize++
                        );
                    for (let a = 0; a < i.length; a++)
                        if (this.equalsFn(i[a][0], e))
                            return void (i[a] = [e, t]);
                    i.push([e, t]), this.innerSize++;
                }
                delete(e) {
                    const t = this.mapKeyFn(e),
                        r = this.inner[t];
                    if (void 0 === r) return !1;
                    for (let i = 0; i < r.length; i++)
                        if (this.equalsFn(r[i][0], e))
                            return (
                                1 === r.length
                                    ? delete this.inner[t]
                                    : r.splice(i, 1),
                                this.innerSize--,
                                !0
                            );
                    return !1;
                }
                forEach(e) {
                    cp(this.inner, (t, r) => {
                        for (const [i, a] of r) e(i, a);
                    });
                }
                isEmpty() {
                    return tk(this.inner);
                }
                size() {
                    return this.innerSize;
                }
            }
            const JV = new Nr(Xe.comparator);
            function js() {
                return JV;
            }
            const Vk = new Nr(Xe.comparator);
            function nE(...n) {
                let e = Vk;
                for (const t of n) e = e.insert(t.key, t);
                return e;
            }
            function Uk(n) {
                let e = Vk;
                return (
                    n.forEach((t, r) => (e = e.insert(t, r.overlayedDocument))),
                    e
                );
            }
            function ku() {
                return rE();
            }
            function Bk() {
                return rE();
            }
            function rE() {
                return new Xd(
                    (n) => n.toString(),
                    (n, e) => n.isEqual(e)
                );
            }
            const XV = new Nr(Xe.comparator),
                eU = new Hn(Xe.comparator);
            function nn(...n) {
                let e = eU;
                for (const t of n) e = e.add(t);
                return e;
            }
            const tU = new Hn(Qt);
            function FD() {
                return tU;
            }
            class iE {
                constructor(e, t, r, i, a) {
                    (this.snapshotVersion = e),
                        (this.targetChanges = t),
                        (this.targetMismatches = r),
                        (this.documentUpdates = i),
                        (this.resolvedLimboDocuments = a);
                }
                static createSynthesizedRemoteEventForCurrentChange(e, t) {
                    const r = new Map();
                    return (
                        r.set(
                            e,
                            sE.createSynthesizedTargetChangeForCurrentChange(
                                e,
                                t
                            )
                        ),
                        new iE(Ft.min(), r, FD(), js(), nn())
                    );
                }
            }
            class sE {
                constructor(e, t, r, i, a) {
                    (this.resumeToken = e),
                        (this.current = t),
                        (this.addedDocuments = r),
                        (this.modifiedDocuments = i),
                        (this.removedDocuments = a);
                }
                static createSynthesizedTargetChangeForCurrentChange(e, t) {
                    return new sE(hi.EMPTY_BYTE_STRING, t, nn(), nn(), nn());
                }
            }
            class LD {
                constructor(e, t, r, i) {
                    (this.gt = e),
                        (this.removedTargetIds = t),
                        (this.key = r),
                        (this.yt = i);
                }
            }
            class jk {
                constructor(e, t) {
                    (this.targetId = e), (this.It = t);
                }
            }
            class Hk {
                constructor(e, t, r = hi.EMPTY_BYTE_STRING, i = null) {
                    (this.state = e),
                        (this.targetIds = t),
                        (this.resumeToken = r),
                        (this.cause = i);
                }
            }
            class $k {
                constructor() {
                    (this.Tt = 0),
                        (this.Et = Wk()),
                        (this.At = hi.EMPTY_BYTE_STRING),
                        (this.Rt = !1),
                        (this.bt = !0);
                }
                get current() {
                    return this.Rt;
                }
                get resumeToken() {
                    return this.At;
                }
                get Pt() {
                    return 0 !== this.Tt;
                }
                get vt() {
                    return this.bt;
                }
                Vt(e) {
                    e.approximateByteSize() > 0 &&
                        ((this.bt = !0), (this.At = e));
                }
                St() {
                    let e = nn(),
                        t = nn(),
                        r = nn();
                    return (
                        this.Et.forEach((i, a) => {
                            switch (a) {
                                case 0:
                                    e = e.add(i);
                                    break;
                                case 2:
                                    t = t.add(i);
                                    break;
                                case 1:
                                    r = r.add(i);
                                    break;
                                default:
                                    ft();
                            }
                        }),
                        new sE(this.At, this.Rt, e, t, r)
                    );
                }
                Dt() {
                    (this.bt = !1), (this.Et = Wk());
                }
                Ct(e, t) {
                    (this.bt = !0), (this.Et = this.Et.insert(e, t));
                }
                xt(e) {
                    (this.bt = !0), (this.Et = this.Et.remove(e));
                }
                Nt() {
                    this.Tt += 1;
                }
                kt() {
                    this.Tt -= 1;
                }
                Ot() {
                    (this.bt = !0), (this.Rt = !0);
                }
            }
            class nU {
                constructor(e) {
                    (this.Mt = e),
                        (this.Ft = new Map()),
                        (this.$t = js()),
                        (this.Bt = Gk()),
                        (this.Lt = new Hn(Qt));
                }
                Ut(e) {
                    for (const t of e.gt)
                        e.yt && e.yt.isFoundDocument()
                            ? this.qt(t, e.yt)
                            : this.Kt(t, e.key, e.yt);
                    for (const t of e.removedTargetIds) this.Kt(t, e.key, e.yt);
                }
                Gt(e) {
                    this.forEachTarget(e, (t) => {
                        const r = this.Qt(t);
                        switch (e.state) {
                            case 0:
                                this.jt(t) && r.Vt(e.resumeToken);
                                break;
                            case 1:
                                r.kt(), r.Pt || r.Dt(), r.Vt(e.resumeToken);
                                break;
                            case 2:
                                r.kt(), r.Pt || this.removeTarget(t);
                                break;
                            case 3:
                                this.jt(t) && (r.Ot(), r.Vt(e.resumeToken));
                                break;
                            case 4:
                                this.jt(t) && (this.Wt(t), r.Vt(e.resumeToken));
                                break;
                            default:
                                ft();
                        }
                    });
                }
                forEachTarget(e, t) {
                    e.targetIds.length > 0
                        ? e.targetIds.forEach(t)
                        : this.Ft.forEach((r, i) => {
                              this.jt(i) && t(i);
                          });
                }
                zt(e) {
                    const t = e.targetId,
                        r = e.It.count,
                        i = this.Ht(t);
                    if (i) {
                        const a = i.target;
                        if (MD(a))
                            if (0 === r) {
                                const l = new Xe(a.path);
                                this.Kt(t, l, Zn.newNoDocument(l, Ft.min()));
                            } else Vt(1 === r);
                        else
                            this.Jt(t) !== r &&
                                (this.Wt(t), (this.Lt = this.Lt.add(t)));
                    }
                }
                Yt(e) {
                    const t = new Map();
                    this.Ft.forEach((a, l) => {
                        const h = this.Ht(l);
                        if (h) {
                            if (a.current && MD(h.target)) {
                                const _ = new Xe(h.target.path);
                                null !== this.$t.get(_) ||
                                    this.Xt(l, _) ||
                                    this.Kt(l, _, Zn.newNoDocument(_, e));
                            }
                            a.vt && (t.set(l, a.St()), a.Dt());
                        }
                    });
                    let r = nn();
                    this.Bt.forEach((a, l) => {
                        let h = !0;
                        l.forEachWhile((_) => {
                            const E = this.Ht(_);
                            return !E || 2 === E.purpose || ((h = !1), !1);
                        }),
                            h && (r = r.add(a));
                    }),
                        this.$t.forEach((a, l) => l.setReadTime(e));
                    const i = new iE(e, t, this.Lt, this.$t, r);
                    return (
                        (this.$t = js()),
                        (this.Bt = Gk()),
                        (this.Lt = new Hn(Qt)),
                        i
                    );
                }
                qt(e, t) {
                    if (!this.jt(e)) return;
                    const r = this.Xt(e, t.key) ? 2 : 0;
                    this.Qt(e).Ct(t.key, r),
                        (this.$t = this.$t.insert(t.key, t)),
                        (this.Bt = this.Bt.insert(
                            t.key,
                            this.Zt(t.key).add(e)
                        ));
                }
                Kt(e, t, r) {
                    if (!this.jt(e)) return;
                    const i = this.Qt(e);
                    this.Xt(e, t) ? i.Ct(t, 1) : i.xt(t),
                        (this.Bt = this.Bt.insert(t, this.Zt(t).delete(e))),
                        r && (this.$t = this.$t.insert(t, r));
                }
                removeTarget(e) {
                    this.Ft.delete(e);
                }
                Jt(e) {
                    const t = this.Qt(e).St();
                    return (
                        this.Mt.getRemoteKeysForTarget(e).size +
                        t.addedDocuments.size -
                        t.removedDocuments.size
                    );
                }
                Nt(e) {
                    this.Qt(e).Nt();
                }
                Qt(e) {
                    let t = this.Ft.get(e);
                    return t || ((t = new $k()), this.Ft.set(e, t)), t;
                }
                Zt(e) {
                    let t = this.Bt.get(e);
                    return (
                        t ||
                            ((t = new Hn(Qt)),
                            (this.Bt = this.Bt.insert(e, t))),
                        t
                    );
                }
                jt(e) {
                    const t = null !== this.Ht(e);
                    return (
                        t ||
                            $e(
                                "WatchChangeAggregator",
                                "Detected inactive target",
                                e
                            ),
                        t
                    );
                }
                Ht(e) {
                    const t = this.Ft.get(e);
                    return t && t.Pt ? null : this.Mt.te(e);
                }
                Wt(e) {
                    this.Ft.set(e, new $k()),
                        this.Mt.getRemoteKeysForTarget(e).forEach((t) => {
                            this.Kt(e, t, null);
                        });
                }
                Xt(e, t) {
                    return this.Mt.getRemoteKeysForTarget(e).has(t);
                }
            }
            function Gk() {
                return new Nr(Xe.comparator);
            }
            function Wk() {
                return new Nr(Xe.comparator);
            }
            const rU = { asc: "ASCENDING", desc: "DESCENDING" },
                iU = {
                    "<": "LESS_THAN",
                    "<=": "LESS_THAN_OR_EQUAL",
                    ">": "GREATER_THAN",
                    ">=": "GREATER_THAN_OR_EQUAL",
                    "==": "EQUAL",
                    "!=": "NOT_EQUAL",
                    "array-contains": "ARRAY_CONTAINS",
                    in: "IN",
                    "not-in": "NOT_IN",
                    "array-contains-any": "ARRAY_CONTAINS_ANY",
                };
            class sU {
                constructor(e, t) {
                    (this.databaseId = e), (this.dt = t);
                }
            }
            function oE(n, e) {
                return n.dt
                    ? `${new Date(1e3 * e.seconds)
                          .toISOString()
                          .replace(/\.\d*/, "")
                          .replace("Z", "")}.${(
                          "000000000" + e.nanoseconds
                      ).slice(-9)}Z`
                    : { seconds: "" + e.seconds, nanos: e.nanoseconds };
            }
            function zk(n, e) {
                return n.dt ? e.toBase64() : e.toUint8Array();
            }
            function oU(n, e) {
                return oE(n, e.toTimestamp());
            }
            function wi(n) {
                return (
                    Vt(!!n),
                    Ft.fromTimestamp(
                        (function (e) {
                            const t = Zd(e);
                            return new mr(t.seconds, t.nanos);
                        })(n)
                    )
                );
            }
            function eR(n, e) {
                return ((t = n),
                new wn(["projects", t.projectId, "databases", t.database]))
                    .child("documents")
                    .child(e)
                    .canonicalString();
                var t;
            }
            function qk(n) {
                const e = wn.fromString(n);
                return Vt(nO(e)), e;
            }
            function aE(n, e) {
                return eR(n.databaseId, e.path);
            }
            function Ou(n, e) {
                const t = qk(e);
                if (t.get(1) !== n.databaseId.projectId)
                    throw new Ve(
                        me.INVALID_ARGUMENT,
                        "Tried to deserialize key from different project: " +
                            t.get(1) +
                            " vs " +
                            n.databaseId.projectId
                    );
                if (t.get(3) !== n.databaseId.database)
                    throw new Ve(
                        me.INVALID_ARGUMENT,
                        "Tried to deserialize key from different database: " +
                            t.get(3) +
                            " vs " +
                            n.databaseId.database
                    );
                return new Xe(Zk(t));
            }
            function tR(n, e) {
                return eR(n.databaseId, e);
            }
            function Kk(n) {
                const e = qk(n);
                return 4 === e.length ? wn.emptyPath() : Zk(e);
            }
            function uE(n) {
                return new wn([
                    "projects",
                    n.databaseId.projectId,
                    "databases",
                    n.databaseId.database,
                ]).canonicalString();
            }
            function Zk(n) {
                return (
                    Vt(n.length > 4 && "documents" === n.get(4)), n.popFirst(5)
                );
            }
            function Yk(n, e, t) {
                return { name: aE(n, e), fields: t.value.mapValue.fields };
            }
            function Qk(n, e, t) {
                const r = Ou(n, e.name),
                    i = wi(e.updateTime),
                    a = new Vi({ mapValue: { fields: e.fields } }),
                    l = Zn.newFoundDocument(r, i, a);
                return (
                    t && l.setHasCommittedMutations(),
                    t ? l.setHasCommittedMutations() : l
                );
            }
            function lE(n, e) {
                let t;
                if (e instanceof F_) t = { update: Yk(n, e.key, e.value) };
                else if (e instanceof L_) t = { delete: aE(n, e.key) };
                else if (e instanceof Xl)
                    t = {
                        update: Yk(n, e.key, e.data),
                        updateMask: gU(e.fieldMask),
                    };
                else {
                    if (!(e instanceof Xx)) return ft();
                    t = { verify: aE(n, e.key) };
                }
                return (
                    e.fieldTransforms.length > 0 &&
                        (t.updateTransforms = e.fieldTransforms.map((r) =>
                            (function (i, a) {
                                const l = a.transform;
                                if (l instanceof k_)
                                    return {
                                        fieldPath: a.field.canonicalString(),
                                        setToServerValue: "REQUEST_TIME",
                                    };
                                if (l instanceof gp)
                                    return {
                                        fieldPath: a.field.canonicalString(),
                                        appendMissingElements: {
                                            values: l.elements,
                                        },
                                    };
                                if (l instanceof mp)
                                    return {
                                        fieldPath: a.field.canonicalString(),
                                        removeAllFromArray: {
                                            values: l.elements,
                                        },
                                    };
                                if (l instanceof O_)
                                    return {
                                        fieldPath: a.field.canonicalString(),
                                        increment: l._t,
                                    };
                                throw ft();
                            })(0, r)
                        )),
                    e.precondition.isNone ||
                        (t.currentDocument =
                            void 0 !== (i = e.precondition).updateTime
                                ? { updateTime: oU(n, i.updateTime) }
                                : void 0 !== i.exists
                                ? { exists: i.exists }
                                : ft()),
                    t
                );
                var i;
            }
            function nR(n, e) {
                const t = e.currentDocument
                        ? void 0 !== (i = e.currentDocument).updateTime
                            ? Er.updateTime(wi(i.updateTime))
                            : void 0 !== i.exists
                            ? Er.exists(i.exists)
                            : Er.none()
                        : Er.none(),
                    r = e.updateTransforms
                        ? e.updateTransforms.map((i) =>
                              (function (a, l) {
                                  let h = null;
                                  "setToServerValue" in l
                                      ? (Vt(
                                            "REQUEST_TIME" ===
                                                l.setToServerValue
                                        ),
                                        (h = new k_()))
                                      : "appendMissingElements" in l
                                      ? (h = new gp(
                                            l.appendMissingElements.values || []
                                        ))
                                      : "removeAllFromArray" in l
                                      ? (h = new mp(
                                            l.removeAllFromArray.values || []
                                        ))
                                      : "increment" in l
                                      ? (h = new O_(a, l.increment))
                                      : ft();
                                  const _ = Br.fromServerFormat(l.fieldPath);
                                  return new eE(_, h);
                              })(n, i)
                          )
                        : [];
                var i;
                if (e.update) {
                    const i = Ou(n, e.update.name),
                        a = new Vi({ mapValue: { fields: e.update.fields } });
                    if (e.updateMask) {
                        const l = new mo(
                            (e.updateMask.fieldPaths || []).map((E) =>
                                Br.fromServerFormat(E)
                            )
                        );
                        return new Xl(i, a, l, t, r);
                    }
                    return new F_(i, a, t, r);
                }
                if (e.delete) {
                    const i = Ou(n, e.delete);
                    return new L_(i, t);
                }
                if (e.verify) {
                    const i = Ou(n, e.verify);
                    return new Xx(i, t);
                }
                return ft();
            }
            function Jk(n, e) {
                return { documents: [tR(n, e.path)] };
            }
            function Xk(n, e) {
                const t = { structuredQuery: {} },
                    r = e.path;
                null !== e.collectionGroup
                    ? ((t.parent = tR(n, r)),
                      (t.structuredQuery.from = [
                          {
                              collectionId: e.collectionGroup,
                              allDescendants: !0,
                          },
                      ]))
                    : ((t.parent = tR(n, r.popLast())),
                      (t.structuredQuery.from = [
                          { collectionId: r.lastSegment() },
                      ]));
                const i = (function (_) {
                    if (0 === _.length) return;
                    const E = _.map((D) =>
                        (function (T) {
                            if ("==" === T.op) {
                                if (ak(T.value))
                                    return {
                                        unaryFilter: {
                                            field: V_(T.field),
                                            op: "IS_NAN",
                                        },
                                    };
                                if (ok(T.value))
                                    return {
                                        unaryFilter: {
                                            field: V_(T.field),
                                            op: "IS_NULL",
                                        },
                                    };
                            } else if ("!=" === T.op) {
                                if (ak(T.value))
                                    return {
                                        unaryFilter: {
                                            field: V_(T.field),
                                            op: "IS_NOT_NAN",
                                        },
                                    };
                                if (ok(T.value))
                                    return {
                                        unaryFilter: {
                                            field: V_(T.field),
                                            op: "IS_NOT_NULL",
                                        },
                                    };
                            }
                            return {
                                fieldFilter: {
                                    field: V_(T.field),
                                    op: hU(T.op),
                                    value: T.value,
                                },
                            };
                        })(D)
                    );
                    return 1 === E.length
                        ? E[0]
                        : { compositeFilter: { op: "AND", filters: E } };
                })(e.filters);
                i && (t.structuredQuery.where = i);
                const a = (function (_) {
                    if (0 !== _.length)
                        return _.map((E) => {
                            return {
                                field: V_((D = E).field),
                                direction: dU(D.dir),
                            };
                            var D;
                        });
                })(e.orderBy);
                a && (t.structuredQuery.orderBy = a);
                const l = ((E = e.limit), n.dt || q0(E) ? E : { value: E });
                var E, h, _;
                return (
                    null !== l && (t.structuredQuery.limit = l),
                    e.startAt &&
                        (t.structuredQuery.startAt = {
                            before: (h = e.startAt).inclusive,
                            values: h.position,
                        }),
                    e.endAt &&
                        (t.structuredQuery.endAt = {
                            before: !(_ = e.endAt).inclusive,
                            values: _.position,
                        }),
                    t
                );
            }
            function eO(n) {
                let e = Kk(n.parent);
                const t = n.structuredQuery,
                    r = t.from ? t.from.length : 0;
                let i = null;
                if (r > 0) {
                    Vt(1 === r);
                    const D = t.from[0];
                    D.allDescendants
                        ? (i = D.collectionId)
                        : (e = e.child(D.collectionId));
                }
                let a = [];
                t.where && (a = tO(t.where));
                let l = [];
                t.orderBy &&
                    (l = t.orderBy.map((D) => {
                        return new M_(
                            U_((T = D).field),
                            (function (R) {
                                switch (R) {
                                    case "ASCENDING":
                                        return "asc";
                                    case "DESCENDING":
                                        return "desc";
                                    default:
                                        return;
                                }
                            })(T.direction)
                        );
                        var T;
                    }));
                let h = null;
                t.limit &&
                    (h = (function (D) {
                        let T;
                        return (
                            (T = "object" == typeof D ? D.value : D),
                            q0(T) ? null : T
                        );
                    })(t.limit));
                let _ = null;
                var D;
                t.startAt &&
                    (_ = new Jd((D = t.startAt).values || [], !!D.before));
                let E = null;
                return (
                    t.endAt &&
                        (E = (function (D) {
                            return new Jd(D.values || [], !D.before);
                        })(t.endAt)),
                    yk(e, i, l, a, h, "F", _, E)
                );
            }
            function tO(n) {
                return n
                    ? void 0 !== n.unaryFilter
                        ? [pU(n)]
                        : void 0 !== n.fieldFilter
                        ? [fU(n)]
                        : void 0 !== n.compositeFilter
                        ? n.compositeFilter.filters
                              .map((e) => tO(e))
                              .reduce((e, t) => e.concat(t))
                        : ft()
                    : [];
            }
            function dU(n) {
                return rU[n];
            }
            function hU(n) {
                return iU[n];
            }
            function V_(n) {
                return { fieldPath: n.canonicalString() };
            }
            function U_(n) {
                return Br.fromServerFormat(n.fieldPath);
            }
            function fU(n) {
                return Ui.create(
                    U_(n.fieldFilter.field),
                    (function (e) {
                        switch (e) {
                            case "EQUAL":
                                return "==";
                            case "NOT_EQUAL":
                                return "!=";
                            case "GREATER_THAN":
                                return ">";
                            case "GREATER_THAN_OR_EQUAL":
                                return ">=";
                            case "LESS_THAN":
                                return "<";
                            case "LESS_THAN_OR_EQUAL":
                                return "<=";
                            case "ARRAY_CONTAINS":
                                return "array-contains";
                            case "IN":
                                return "in";
                            case "NOT_IN":
                                return "not-in";
                            case "ARRAY_CONTAINS_ANY":
                                return "array-contains-any";
                            default:
                                return ft();
                        }
                    })(n.fieldFilter.op),
                    n.fieldFilter.value
                );
            }
            function pU(n) {
                switch (n.unaryFilter.op) {
                    case "IS_NAN":
                        const e = U_(n.unaryFilter.field);
                        return Ui.create(e, "==", { doubleValue: NaN });
                    case "IS_NULL":
                        const t = U_(n.unaryFilter.field);
                        return Ui.create(t, "==", { nullValue: "NULL_VALUE" });
                    case "IS_NOT_NAN":
                        const r = U_(n.unaryFilter.field);
                        return Ui.create(r, "!=", { doubleValue: NaN });
                    case "IS_NOT_NULL":
                        const i = U_(n.unaryFilter.field);
                        return Ui.create(i, "!=", { nullValue: "NULL_VALUE" });
                    default:
                        return ft();
                }
            }
            function gU(n) {
                const e = [];
                return (
                    n.fields.forEach((t) => e.push(t.canonicalString())),
                    { fieldPaths: e }
                );
            }
            function nO(n) {
                return (
                    n.length >= 4 &&
                    "projects" === n.get(0) &&
                    "databases" === n.get(2)
                );
            }
            function ys(n) {
                let e = "";
                for (let t = 0; t < n.length; t++)
                    e.length > 0 && (e = rO(e)), (e = mU(n.get(t), e));
                return rO(e);
            }
            function mU(n, e) {
                let t = e;
                const r = n.length;
                for (let i = 0; i < r; i++) {
                    const a = n.charAt(i);
                    switch (a) {
                        case "\0":
                            t += "\x01\x10";
                            break;
                        case "\x01":
                            t += "\x01\x11";
                            break;
                        default:
                            t += a;
                    }
                }
                return t;
            }
            function rO(n) {
                return n + "\x01\x01";
            }
            function Fu(n) {
                const e = n.length;
                if ((Vt(e >= 2), 2 === e))
                    return (
                        Vt("\x01" === n.charAt(0) && "\x01" === n.charAt(1)),
                        wn.emptyPath()
                    );
                const t = e - 2,
                    r = [];
                let i = "";
                for (let a = 0; a < e; ) {
                    const l = n.indexOf("\x01", a);
                    switch (((l < 0 || l > t) && ft(), n.charAt(l + 1))) {
                        case "\x01":
                            const h = n.substring(a, l);
                            let _;
                            0 === i.length
                                ? (_ = h)
                                : ((i += h), (_ = i), (i = "")),
                                r.push(_);
                            break;
                        case "\x10":
                            (i += n.substring(a, l)), (i += "\0");
                            break;
                        case "\x11":
                            i += n.substring(a, l + 1);
                            break;
                        default:
                            ft();
                    }
                    a = l + 2;
                }
                return new wn(r);
            }
            const iO = ["userId", "batchId"];
            function VD(n, e) {
                return [n, ys(e)];
            }
            function sO(n, e, t) {
                return [n, ys(e), t];
            }
            const _U = {},
                yU = [
                    "prefixPath",
                    "collectionGroup",
                    "readTime",
                    "documentId",
                ],
                vU = ["prefixPath", "collectionGroup", "documentId"],
                wU = [
                    "collectionGroup",
                    "readTime",
                    "prefixPath",
                    "documentId",
                ],
                EU = ["canonicalId", "targetId"],
                IU = ["targetId", "path"],
                CU = ["path", "targetId"],
                bU = ["collectionId", "parent"],
                DU = ["indexId", "uid"],
                TU = ["uid", "sequenceNumber"],
                SU = [
                    "indexId",
                    "uid",
                    "arrayValue",
                    "directionalValue",
                    "orderedDocumentKey",
                    "documentKey",
                ],
                AU = ["indexId", "uid", "orderedDocumentKey"],
                xU = ["userId", "collectionPath", "documentId"],
                RU = ["userId", "collectionPath", "largestBatchId"],
                MU = ["userId", "collectionGroup", "largestBatchId"],
                oO = [
                    "mutationQueues",
                    "mutations",
                    "documentMutations",
                    "remoteDocuments",
                    "targets",
                    "owner",
                    "targetGlobal",
                    "targetDocuments",
                    "clientMetadata",
                    "remoteDocumentGlobal",
                    "collectionParents",
                    "bundles",
                    "namedQueries",
                ],
                NU = [...oO, "documentOverlays"],
                aO = [
                    "mutationQueues",
                    "mutations",
                    "documentMutations",
                    "remoteDocumentsV14",
                    "targets",
                    "owner",
                    "targetGlobal",
                    "targetDocuments",
                    "clientMetadata",
                    "remoteDocumentGlobal",
                    "collectionParents",
                    "bundles",
                    "namedQueries",
                    "documentOverlays",
                ],
                uO = aO,
                PU = [
                    ...uO,
                    "indexConfiguration",
                    "indexState",
                    "indexEntries",
                ];
            class rR extends JP {
                constructor(e, t) {
                    super(), (this.ee = e), (this.currentSequenceNumber = t);
                }
            }
            function Ei(n, e) {
                const t = rt(n);
                return Pa.N(t.ee, e);
            }
            class iR {
                constructor(e, t, r, i) {
                    (this.batchId = e),
                        (this.localWriteTime = t),
                        (this.baseMutations = r),
                        (this.mutations = i);
                }
                applyToRemoteDocument(e, t) {
                    const r = t.mutationResults;
                    for (let i = 0; i < this.mutations.length; i++) {
                        const a = this.mutations[i];
                        a.key.isEqual(e.key) && ZV(a, e, r[i]);
                    }
                }
                applyToLocalView(e, t) {
                    for (const r of this.baseMutations)
                        r.key.isEqual(e.key) &&
                            (t = tE(r, e, t, this.localWriteTime));
                    for (const r of this.mutations)
                        r.key.isEqual(e.key) &&
                            (t = tE(r, e, t, this.localWriteTime));
                    return t;
                }
                applyToLocalDocumentSet(e, t) {
                    const r = Bk();
                    return (
                        this.mutations.forEach((i) => {
                            const a = e.get(i.key),
                                l = a.overlayedDocument;
                            let h = this.applyToLocalView(l, a.mutatedFields);
                            h = t.has(i.key) ? null : h;
                            const _ = Mk(l, h);
                            null !== _ && r.set(i.key, _),
                                l.isValidDocument() ||
                                    l.convertToNoDocument(Ft.min());
                        }),
                        r
                    );
                }
                keys() {
                    return this.mutations.reduce((e, t) => e.add(t.key), nn());
                }
                isEqual(e) {
                    return (
                        this.batchId === e.batchId &&
                        A_(this.mutations, e.mutations, (t, r) => Nk(t, r)) &&
                        A_(this.baseMutations, e.baseMutations, (t, r) =>
                            Nk(t, r)
                        )
                    );
                }
            }
            class sR {
                constructor(e, t, r, i) {
                    (this.batch = e),
                        (this.commitVersion = t),
                        (this.mutationResults = r),
                        (this.docVersions = i);
                }
                static from(e, t, r) {
                    Vt(e.mutations.length === r.length);
                    let i = XV;
                    const a = e.mutations;
                    for (let l = 0; l < a.length; l++)
                        i = i.insert(a[l].key, r[l].version);
                    return new sR(e, t, r, i);
                }
            }
            class oR {
                constructor(e, t) {
                    (this.largestBatchId = e), (this.mutation = t);
                }
                getKey() {
                    return this.mutation.key;
                }
                isEqual(e) {
                    return null !== e && this.mutation === e.mutation;
                }
                toString() {
                    return `Overlay{\n      largestBatchId: ${
                        this.largestBatchId
                    },\n      mutation: ${this.mutation.toString()}\n    }`;
                }
            }
            class eh {
                constructor(
                    e,
                    t,
                    r,
                    i,
                    a = Ft.min(),
                    l = Ft.min(),
                    h = hi.EMPTY_BYTE_STRING
                ) {
                    (this.target = e),
                        (this.targetId = t),
                        (this.purpose = r),
                        (this.sequenceNumber = i),
                        (this.snapshotVersion = a),
                        (this.lastLimboFreeSnapshotVersion = l),
                        (this.resumeToken = h);
                }
                withSequenceNumber(e) {
                    return new eh(
                        this.target,
                        this.targetId,
                        this.purpose,
                        e,
                        this.snapshotVersion,
                        this.lastLimboFreeSnapshotVersion,
                        this.resumeToken
                    );
                }
                withResumeToken(e, t) {
                    return new eh(
                        this.target,
                        this.targetId,
                        this.purpose,
                        this.sequenceNumber,
                        t,
                        this.lastLimboFreeSnapshotVersion,
                        e
                    );
                }
                withLastLimboFreeSnapshotVersion(e) {
                    return new eh(
                        this.target,
                        this.targetId,
                        this.purpose,
                        this.sequenceNumber,
                        this.snapshotVersion,
                        e,
                        this.resumeToken
                    );
                }
            }
            class lO {
                constructor(e) {
                    this.ne = e;
                }
            }
            function cO(n, e) {
                const t = e.key,
                    r = {
                        prefixPath: t.getCollectionPath().popLast().toArray(),
                        collectionGroup: t.collectionGroup,
                        documentId: t.path.lastSegment(),
                        readTime: UD(e.readTime),
                        hasCommittedMutations: e.hasCommittedMutations,
                    };
                if (e.isFoundDocument())
                    r.document = {
                        name: aE((i = n.ne), (a = e).key),
                        fields: a.data.value.mapValue.fields,
                        updateTime: oE(i, a.version.toTimestamp()),
                    };
                else if (e.isNoDocument())
                    r.noDocument = {
                        path: t.path.toArray(),
                        readTime: _p(e.version),
                    };
                else {
                    if (!e.isUnknownDocument()) return ft();
                    r.unknownDocument = {
                        path: t.path.toArray(),
                        version: _p(e.version),
                    };
                }
                var i, a;
                return r;
            }
            function UD(n) {
                const e = n.toTimestamp();
                return [e.seconds, e.nanoseconds];
            }
            function _p(n) {
                const e = n.toTimestamp();
                return { seconds: e.seconds, nanoseconds: e.nanoseconds };
            }
            function yp(n) {
                const e = new mr(n.seconds, n.nanoseconds);
                return Ft.fromTimestamp(e);
            }
            function vp(n, e) {
                const t = (e.baseMutations || []).map((a) => nR(n.ne, a));
                for (let a = 0; a < e.mutations.length - 1; ++a) {
                    const l = e.mutations[a];
                    a + 1 < e.mutations.length &&
                        void 0 !== e.mutations[a + 1].transform &&
                        ((l.updateTransforms =
                            e.mutations[a + 1].transform.fieldTransforms),
                        e.mutations.splice(a + 1, 1),
                        ++a);
                }
                const r = e.mutations.map((a) => nR(n.ne, a)),
                    i = mr.fromMillis(e.localWriteTimeMs);
                return new iR(e.batchId, i, t, r);
            }
            function cE(n) {
                const e = yp(n.readTime),
                    t =
                        void 0 !== n.lastLimboFreeSnapshotVersion
                            ? yp(n.lastLimboFreeSnapshotVersion)
                            : Ft.min();
                let r;
                var i;
                return (
                    void 0 !== n.query.documents
                        ? (Vt(1 === (i = n.query).documents.length),
                          (r = Yo(N_(Kk(i.documents[0])))))
                        : (r = Yo(eO(n.query))),
                    new eh(
                        r,
                        n.targetId,
                        0,
                        n.lastListenSequenceNumber,
                        e,
                        t,
                        hi.fromBase64String(n.resumeToken)
                    )
                );
            }
            function dO(n, e) {
                const t = _p(e.snapshotVersion),
                    r = _p(e.lastLimboFreeSnapshotVersion);
                let i;
                i = MD(e.target) ? Jk(n.ne, e.target) : Xk(n.ne, e.target);
                const a = e.resumeToken.toBase64();
                return {
                    targetId: e.targetId,
                    canonicalId: pp(e.target),
                    readTime: t,
                    resumeToken: a,
                    lastListenSequenceNumber: e.sequenceNumber,
                    lastLimboFreeSnapshotVersion: r,
                    query: i,
                };
            }
            function aR(n) {
                const e = eO({
                    parent: n.parent,
                    structuredQuery: n.structuredQuery,
                });
                return "LAST" === n.limitType ? vk(e, e.limit, "L") : e;
            }
            function uR(n, e) {
                return new oR(e.largestBatchId, nR(n.ne, e.overlayMutation));
            }
            function hO(n, e) {
                const t = e.path.lastSegment();
                return [n, ys(e.path.popLast()), t];
            }
            function fO(n, e, t, r) {
                return {
                    indexId: n,
                    uid: e.uid || "",
                    sequenceNumber: t,
                    readTime: _p(r.readTime),
                    documentKey: ys(r.documentKey.path),
                    largestBatchId: r.largestBatchId,
                };
            }
            class OU {
                getBundleMetadata(e, t) {
                    return pO(e)
                        .get(t)
                        .next((r) => {
                            if (r)
                                return {
                                    id: (i = r).bundleId,
                                    createTime: yp(i.createTime),
                                    version: i.version,
                                };
                            var i;
                        });
                }
                saveBundleMetadata(e, t) {
                    return pO(e).put({
                        bundleId: (r = t).id,
                        createTime: _p(wi(r.createTime)),
                        version: r.version,
                    });
                    var r;
                }
                getNamedQuery(e, t) {
                    return gO(e)
                        .get(t)
                        .next((r) => {
                            if (r)
                                return {
                                    name: (i = r).name,
                                    query: aR(i.bundledQuery),
                                    readTime: yp(i.readTime),
                                };
                            var i;
                        });
                }
                saveNamedQuery(e, t) {
                    return gO(e).put({
                        name: (r = t).name,
                        readTime: _p(wi(r.readTime)),
                        bundledQuery: r.bundledQuery,
                    });
                    var r;
                }
            }
            function pO(n) {
                return Ei(n, "bundles");
            }
            function gO(n) {
                return Ei(n, "namedQueries");
            }
            class BD {
                constructor(e, t) {
                    (this.wt = e), (this.userId = t);
                }
                static se(e, t) {
                    return new BD(e, t.uid || "");
                }
                getOverlay(e, t) {
                    return dE(e)
                        .get(hO(this.userId, t))
                        .next((r) => (r ? uR(this.wt, r) : null));
                }
                getOverlays(e, t) {
                    const r = ku();
                    return ue
                        .forEach(t, (i) =>
                            this.getOverlay(e, i).next((a) => {
                                null !== a && r.set(i, a);
                            })
                        )
                        .next(() => r);
                }
                saveOverlays(e, t, r) {
                    const i = [];
                    return (
                        r.forEach((a, l) => {
                            const h = new oR(t, l);
                            i.push(this.ie(e, h));
                        }),
                        ue.waitFor(i)
                    );
                }
                removeOverlaysForBatchId(e, t, r) {
                    const i = new Set();
                    t.forEach((l) => i.add(ys(l.getCollectionPath())));
                    const a = [];
                    return (
                        i.forEach((l) => {
                            const h = IDBKeyRange.bound(
                                [this.userId, l, r],
                                [this.userId, l, r + 1],
                                !1,
                                !0
                            );
                            a.push(dE(e).W("collectionPathOverlayIndex", h));
                        }),
                        ue.waitFor(a)
                    );
                }
                getOverlaysForCollection(e, t, r) {
                    const i = ku(),
                        a = ys(t),
                        l = IDBKeyRange.bound(
                            [this.userId, a, r],
                            [this.userId, a, Number.POSITIVE_INFINITY],
                            !0
                        );
                    return dE(e)
                        .K("collectionPathOverlayIndex", l)
                        .next((h) => {
                            for (const _ of h) {
                                const E = uR(this.wt, _);
                                i.set(E.getKey(), E);
                            }
                            return i;
                        });
                }
                getOverlaysForCollectionGroup(e, t, r, i) {
                    const a = ku();
                    let l;
                    const h = IDBKeyRange.bound(
                        [this.userId, t, r],
                        [this.userId, t, Number.POSITIVE_INFINITY],
                        !0
                    );
                    return dE(e)
                        .J(
                            { index: "collectionGroupOverlayIndex", range: h },
                            (_, E, D) => {
                                const T = uR(this.wt, E);
                                a.size() < i || T.largestBatchId === l
                                    ? (a.set(T.getKey(), T),
                                      (l = T.largestBatchId))
                                    : D.done();
                            }
                        )
                        .next(() => a);
                }
                ie(e, t) {
                    return dE(e).put(
                        (function (r, i, a) {
                            const [l, h, _] = hO(i, a.mutation.key);
                            return {
                                userId: i,
                                collectionPath: h,
                                documentId: _,
                                collectionGroup:
                                    a.mutation.key.getCollectionGroup(),
                                largestBatchId: a.largestBatchId,
                                overlayMutation: lE(r.ne, a.mutation),
                            };
                        })(this.wt, this.userId, t)
                    );
                }
            }
            function dE(n) {
                return Ei(n, "documentOverlays");
            }
            class wp {
                constructor() {}
                re(e, t) {
                    this.oe(e, t), t.ue();
                }
                oe(e, t) {
                    if ("nullValue" in e) this.ce(t, 5);
                    else if ("booleanValue" in e)
                        this.ce(t, 10), t.ae(e.booleanValue ? 1 : 0);
                    else if ("integerValue" in e)
                        this.ce(t, 15), t.ae(Pr(e.integerValue));
                    else if ("doubleValue" in e) {
                        const r = Pr(e.doubleValue);
                        isNaN(r)
                            ? this.ce(t, 13)
                            : (this.ce(t, 15), K0(r) ? t.ae(0) : t.ae(r));
                    } else if ("timestampValue" in e) {
                        const r = e.timestampValue;
                        this.ce(t, 20),
                            "string" == typeof r
                                ? t.he(r)
                                : (t.he(`${r.seconds || ""}`),
                                  t.ae(r.nanos || 0));
                    } else if ("stringValue" in e)
                        this.le(e.stringValue, t), this.fe(t);
                    else if ("bytesValue" in e)
                        this.ce(t, 30), t.de(dp(e.bytesValue)), this.fe(t);
                    else if ("referenceValue" in e)
                        this._e(e.referenceValue, t);
                    else if ("geoPointValue" in e) {
                        const r = e.geoPointValue;
                        this.ce(t, 45),
                            t.ae(r.latitude || 0),
                            t.ae(r.longitude || 0);
                    } else
                        "mapValue" in e
                            ? uk(e)
                                ? this.ce(t, Number.MAX_SAFE_INTEGER)
                                : (this.we(e.mapValue, t), this.fe(t))
                            : "arrayValue" in e
                            ? (this.me(e.arrayValue, t), this.fe(t))
                            : ft();
                }
                le(e, t) {
                    this.ce(t, 25), this.ge(e, t);
                }
                ge(e, t) {
                    t.he(e);
                }
                we(e, t) {
                    const r = e.fields || {};
                    this.ce(t, 55);
                    for (const i of Object.keys(r))
                        this.le(i, t), this.oe(r[i], t);
                }
                me(e, t) {
                    const r = e.values || [];
                    this.ce(t, 50);
                    for (const i of r) this.oe(i, t);
                }
                _e(e, t) {
                    this.ce(t, 37),
                        Xe.fromName(e).path.forEach((r) => {
                            this.ce(t, 60), this.ge(r, t);
                        });
                }
                ce(e, t) {
                    e.ae(t);
                }
                fe(e) {
                    e.ae(2);
                }
            }
            function FU(n) {
                if (0 === n) return 8;
                let e = 0;
                return (
                    n >> 4 == 0 && ((e += 4), (n <<= 4)),
                    n >> 6 == 0 && ((e += 2), (n <<= 2)),
                    n >> 7 == 0 && (e += 1),
                    e
                );
            }
            function mO(n) {
                const e =
                    64 -
                    (function (t) {
                        let r = 0;
                        for (let i = 0; i < 8; ++i) {
                            const a = FU(255 & t[i]);
                            if (((r += a), 8 !== a)) break;
                        }
                        return r;
                    })(n);
                return Math.ceil(e / 8);
            }
            wp.ye = new wp();
            class LU {
                constructor() {
                    (this.buffer = new Uint8Array(1024)), (this.position = 0);
                }
                pe(e) {
                    const t = e[Symbol.iterator]();
                    let r = t.next();
                    for (; !r.done; ) this.Ie(r.value), (r = t.next());
                    this.Te();
                }
                Ee(e) {
                    const t = e[Symbol.iterator]();
                    let r = t.next();
                    for (; !r.done; ) this.Ae(r.value), (r = t.next());
                    this.Re();
                }
                be(e) {
                    for (const t of e) {
                        const r = t.charCodeAt(0);
                        if (r < 128) this.Ie(r);
                        else if (r < 2048)
                            this.Ie(960 | (r >>> 6)), this.Ie(128 | (63 & r));
                        else if (t < "\ud800" || "\udbff" < t)
                            this.Ie(480 | (r >>> 12)),
                                this.Ie(128 | (63 & (r >>> 6))),
                                this.Ie(128 | (63 & r));
                        else {
                            const i = t.codePointAt(0);
                            this.Ie(240 | (i >>> 18)),
                                this.Ie(128 | (63 & (i >>> 12))),
                                this.Ie(128 | (63 & (i >>> 6))),
                                this.Ie(128 | (63 & i));
                        }
                    }
                    this.Te();
                }
                Pe(e) {
                    for (const t of e) {
                        const r = t.charCodeAt(0);
                        if (r < 128) this.Ae(r);
                        else if (r < 2048)
                            this.Ae(960 | (r >>> 6)), this.Ae(128 | (63 & r));
                        else if (t < "\ud800" || "\udbff" < t)
                            this.Ae(480 | (r >>> 12)),
                                this.Ae(128 | (63 & (r >>> 6))),
                                this.Ae(128 | (63 & r));
                        else {
                            const i = t.codePointAt(0);
                            this.Ae(240 | (i >>> 18)),
                                this.Ae(128 | (63 & (i >>> 12))),
                                this.Ae(128 | (63 & (i >>> 6))),
                                this.Ae(128 | (63 & i));
                        }
                    }
                    this.Re();
                }
                ve(e) {
                    const t = this.Ve(e),
                        r = mO(t);
                    this.Se(1 + r), (this.buffer[this.position++] = 255 & r);
                    for (let i = t.length - r; i < t.length; ++i)
                        this.buffer[this.position++] = 255 & t[i];
                }
                De(e) {
                    const t = this.Ve(e),
                        r = mO(t);
                    this.Se(1 + r), (this.buffer[this.position++] = ~(255 & r));
                    for (let i = t.length - r; i < t.length; ++i)
                        this.buffer[this.position++] = ~(255 & t[i]);
                }
                Ce() {
                    this.xe(255), this.xe(255);
                }
                Ne() {
                    this.ke(255), this.ke(255);
                }
                reset() {
                    this.position = 0;
                }
                seed(e) {
                    this.Se(e.length),
                        this.buffer.set(e, this.position),
                        (this.position += e.length);
                }
                Oe() {
                    return this.buffer.slice(0, this.position);
                }
                Ve(e) {
                    const t = (function (i) {
                            const a = new DataView(new ArrayBuffer(8));
                            return (
                                a.setFloat64(0, i, !1), new Uint8Array(a.buffer)
                            );
                        })(e),
                        r = 0 != (128 & t[0]);
                    t[0] ^= r ? 255 : 128;
                    for (let i = 1; i < t.length; ++i) t[i] ^= r ? 255 : 0;
                    return t;
                }
                Ie(e) {
                    const t = 255 & e;
                    0 === t
                        ? (this.xe(0), this.xe(255))
                        : 255 === t
                        ? (this.xe(255), this.xe(0))
                        : this.xe(t);
                }
                Ae(e) {
                    const t = 255 & e;
                    0 === t
                        ? (this.ke(0), this.ke(255))
                        : 255 === t
                        ? (this.ke(255), this.ke(0))
                        : this.ke(e);
                }
                Te() {
                    this.xe(0), this.xe(1);
                }
                Re() {
                    this.ke(0), this.ke(1);
                }
                xe(e) {
                    this.Se(1), (this.buffer[this.position++] = e);
                }
                ke(e) {
                    this.Se(1), (this.buffer[this.position++] = ~e);
                }
                Se(e) {
                    const t = e + this.position;
                    if (t <= this.buffer.length) return;
                    let r = 2 * this.buffer.length;
                    r < t && (r = t);
                    const i = new Uint8Array(r);
                    i.set(this.buffer), (this.buffer = i);
                }
            }
            class VU {
                constructor(e) {
                    this.Me = e;
                }
                de(e) {
                    this.Me.pe(e);
                }
                he(e) {
                    this.Me.be(e);
                }
                ae(e) {
                    this.Me.ve(e);
                }
                ue() {
                    this.Me.Ce();
                }
            }
            class UU {
                constructor(e) {
                    this.Me = e;
                }
                de(e) {
                    this.Me.Ee(e);
                }
                he(e) {
                    this.Me.Pe(e);
                }
                ae(e) {
                    this.Me.De(e);
                }
                ue() {
                    this.Me.Ne();
                }
            }
            class hE {
                constructor() {
                    (this.Me = new LU()),
                        (this.Fe = new VU(this.Me)),
                        (this.$e = new UU(this.Me));
                }
                seed(e) {
                    this.Me.seed(e);
                }
                Be(e) {
                    return 0 === e ? this.Fe : this.$e;
                }
                Oe() {
                    return this.Me.Oe();
                }
                reset() {
                    this.Me.reset();
                }
            }
            class Ep {
                constructor(e, t, r, i) {
                    (this.indexId = e),
                        (this.documentKey = t),
                        (this.arrayValue = r),
                        (this.directionalValue = i);
                }
                Le() {
                    const e = this.directionalValue.length,
                        t =
                            0 === e || 255 === this.directionalValue[e - 1]
                                ? e + 1
                                : e,
                        r = new Uint8Array(t);
                    return (
                        r.set(this.directionalValue, 0),
                        t !== e
                            ? r.set([0], this.directionalValue.length)
                            : ++r[r.length - 1],
                        new Ep(
                            this.indexId,
                            this.documentKey,
                            this.arrayValue,
                            r
                        )
                    );
                }
            }
            function Ip(n, e) {
                let t = n.indexId - e.indexId;
                return 0 !== t
                    ? t
                    : ((t = _O(n.arrayValue, e.arrayValue)),
                      0 !== t
                          ? t
                          : ((t = _O(n.directionalValue, e.directionalValue)),
                            0 !== t
                                ? t
                                : Xe.comparator(n.documentKey, e.documentKey)));
            }
            function _O(n, e) {
                for (let t = 0; t < n.length && t < e.length; ++t) {
                    const r = n[t] - e[t];
                    if (0 !== r) return r;
                }
                return n.length - e.length;
            }
            class BU {
                constructor(e) {
                    (this.collectionId =
                        null != e.collectionGroup
                            ? e.collectionGroup
                            : e.path.lastSegment()),
                        (this.Ue = e.orderBy),
                        (this.qe = []);
                    for (const t of e.filters) {
                        const r = t;
                        r.ht() ? (this.Ke = r) : this.qe.push(r);
                    }
                }
                Ge(e) {
                    const t = jx(e);
                    if (void 0 !== t && !this.Qe(t)) return !1;
                    const r = up(e);
                    let i = 0,
                        a = 0;
                    for (; i < r.length && this.Qe(r[i]); ++i);
                    if (i === r.length) return !0;
                    if (void 0 !== this.Ke) {
                        const l = r[i];
                        if (!this.je(this.Ke, l) || !this.We(this.Ue[a++], l))
                            return !1;
                        ++i;
                    }
                    for (; i < r.length; ++i) {
                        const l = r[i];
                        if (a >= this.Ue.length || !this.We(this.Ue[a++], l))
                            return !1;
                    }
                    return !0;
                }
                Qe(e) {
                    for (const t of this.qe) if (this.je(t, e)) return !0;
                    return !1;
                }
                je(e, t) {
                    return (
                        !(void 0 === e || !e.field.isEqual(t.fieldPath)) &&
                        (2 === t.kind) ==
                            ("array-contains" === e.op ||
                                "array-contains-any" === e.op)
                    );
                }
                We(e, t) {
                    return (
                        !!e.field.isEqual(t.fieldPath) &&
                        ((0 === t.kind && "asc" === e.dir) ||
                            (1 === t.kind && "desc" === e.dir))
                    );
                }
            }
            class jU {
                constructor() {
                    this.ze = new lR();
                }
                addToCollectionParentIndex(e, t) {
                    return this.ze.add(t), ue.resolve();
                }
                getCollectionParents(e, t) {
                    return ue.resolve(this.ze.getEntries(t));
                }
                addFieldIndex(e, t) {
                    return ue.resolve();
                }
                deleteFieldIndex(e, t) {
                    return ue.resolve();
                }
                getDocumentsMatchingTarget(e, t) {
                    return ue.resolve(null);
                }
                getIndexType(e, t) {
                    return ue.resolve(0);
                }
                getFieldIndexes(e, t) {
                    return ue.resolve([]);
                }
                getNextCollectionGroupToUpdate(e) {
                    return ue.resolve(null);
                }
                getMinOffset(e, t) {
                    return ue.resolve(go.min());
                }
                getMinOffsetFromCollectionGroup(e, t) {
                    return ue.resolve(go.min());
                }
                updateCollectionGroup(e, t, r) {
                    return ue.resolve();
                }
                updateIndexEntries(e, t) {
                    return ue.resolve();
                }
            }
            class lR {
                constructor() {
                    this.index = {};
                }
                add(e) {
                    const t = e.lastSegment(),
                        r = e.popLast(),
                        i = this.index[t] || new Hn(wn.comparator),
                        a = !i.has(r);
                    return (this.index[t] = i.add(r)), a;
                }
                has(e) {
                    const t = e.lastSegment(),
                        r = e.popLast(),
                        i = this.index[t];
                    return i && i.has(r);
                }
                getEntries(e) {
                    return (this.index[e] || new Hn(wn.comparator)).toArray();
                }
            }
            const jD = new Uint8Array(0);
            class HU {
                constructor(e, t) {
                    (this.user = e),
                        (this.databaseId = t),
                        (this.He = new lR()),
                        (this.Je = new Xd(
                            (r) => pp(r),
                            (r, i) => J0(r, i)
                        )),
                        (this.uid = e.uid || "");
                }
                addToCollectionParentIndex(e, t) {
                    if (!this.He.has(t)) {
                        const r = t.lastSegment(),
                            i = t.popLast();
                        e.addOnCommittedListener(() => {
                            this.He.add(t);
                        });
                        const a = { collectionId: r, parent: ys(i) };
                        return yO(e).put(a);
                    }
                    return ue.resolve();
                }
                getCollectionParents(e, t) {
                    const r = [],
                        i = IDBKeyRange.bound([t, ""], [KP(t), ""], !1, !0);
                    return yO(e)
                        .K(i)
                        .next((a) => {
                            for (const l of a) {
                                if (l.collectionId !== t) break;
                                r.push(Fu(l.parent));
                            }
                            return r;
                        });
                }
                addFieldIndex(e, t) {
                    const r = HD(e),
                        i = {
                            indexId: (l = t).indexId,
                            collectionGroup: l.collectionGroup,
                            fields: l.fields.map((h) => [
                                h.fieldPath.canonicalString(),
                                h.kind,
                            ]),
                        };
                    var l;
                    delete i.indexId;
                    const a = r.add(i);
                    if (t.indexState) {
                        const l = pE(e);
                        return a.next((h) => {
                            l.put(
                                fO(
                                    h,
                                    this.user,
                                    t.indexState.sequenceNumber,
                                    t.indexState.offset
                                )
                            );
                        });
                    }
                    return a.next();
                }
                deleteFieldIndex(e, t) {
                    const r = HD(e),
                        i = pE(e),
                        a = fE(e);
                    return r
                        .delete(t.indexId)
                        .next(() =>
                            i.delete(
                                IDBKeyRange.bound(
                                    [t.indexId],
                                    [t.indexId + 1],
                                    !1,
                                    !0
                                )
                            )
                        )
                        .next(() =>
                            a.delete(
                                IDBKeyRange.bound(
                                    [t.indexId],
                                    [t.indexId + 1],
                                    !1,
                                    !0
                                )
                            )
                        );
                }
                getDocumentsMatchingTarget(e, t) {
                    const r = fE(e);
                    let i = !0;
                    const a = new Map();
                    return ue
                        .forEach(this.Ye(t), (l) =>
                            this.Xe(e, l).next((h) => {
                                i && (i = !!h), a.set(l, h);
                            })
                        )
                        .next(() => {
                            if (i) {
                                let l = nn();
                                const h = [];
                                return ue
                                    .forEach(a, (_, E) => {
                                        var D;
                                        $e(
                                            "IndexedDbIndexManager",
                                            `Using index ${
                                                ((D = _),
                                                `id=${D.indexId}|cg=${
                                                    D.collectionGroup
                                                }|f=${D.fields
                                                    .map(
                                                        (yt) =>
                                                            `${yt.fieldPath}:${yt.kind}`
                                                    )
                                                    .join(",")}`)
                                            } to execute ${pp(t)}`
                                        );
                                        const T = (function (yt, gt) {
                                                const $t = jx(gt);
                                                if (void 0 === $t) return null;
                                                for (const un of ND(
                                                    yt,
                                                    $t.fieldPath
                                                ))
                                                    switch (un.op) {
                                                        case "array-contains-any":
                                                            return (
                                                                un.value
                                                                    .arrayValue
                                                                    .values ||
                                                                []
                                                            );
                                                        case "array-contains":
                                                            return [un.value];
                                                    }
                                                return null;
                                            })(E, _),
                                            R = (function (yt, gt) {
                                                const $t = new Map();
                                                for (const un of up(gt))
                                                    for (const Yr of ND(
                                                        yt,
                                                        un.fieldPath
                                                    ))
                                                        switch (Yr.op) {
                                                            case "==":
                                                            case "in":
                                                                $t.set(
                                                                    un.fieldPath.canonicalString(),
                                                                    Yr.value
                                                                );
                                                                break;
                                                            case "not-in":
                                                            case "!=":
                                                                return (
                                                                    $t.set(
                                                                        un.fieldPath.canonicalString(),
                                                                        Yr.value
                                                                    ),
                                                                    Array.from(
                                                                        $t.values()
                                                                    )
                                                                );
                                                        }
                                                return null;
                                            })(E, _),
                                            F = (function (yt, gt) {
                                                const $t = [];
                                                let un = !0;
                                                for (const Yr of up(gt)) {
                                                    const Fa =
                                                        0 === Yr.kind
                                                            ? fk(
                                                                  yt,
                                                                  Yr.fieldPath,
                                                                  yt.startAt
                                                              )
                                                            : pk(
                                                                  yt,
                                                                  Yr.fieldPath,
                                                                  yt.startAt
                                                              );
                                                    $t.push(Fa.value),
                                                        un &&
                                                            (un = Fa.inclusive);
                                                }
                                                return new Jd($t, un);
                                            })(E, _),
                                            K = (function (yt, gt) {
                                                const $t = [];
                                                let un = !0;
                                                for (const Yr of up(gt)) {
                                                    const Fa =
                                                        0 === Yr.kind
                                                            ? pk(
                                                                  yt,
                                                                  Yr.fieldPath,
                                                                  yt.endAt
                                                              )
                                                            : fk(
                                                                  yt,
                                                                  Yr.fieldPath,
                                                                  yt.endAt
                                                              );
                                                    $t.push(Fa.value),
                                                        un &&
                                                            (un = Fa.inclusive);
                                                }
                                                return new Jd($t, un);
                                            })(E, _),
                                            Ie = this.Ze(_, E, F),
                                            Re = this.Ze(_, E, K),
                                            mt = this.tn(_, E, R),
                                            _t = this.en(
                                                _.indexId,
                                                T,
                                                Ie,
                                                F.inclusive,
                                                Re,
                                                K.inclusive,
                                                mt
                                            );
                                        return ue.forEach(_t, (yt) =>
                                            r.j(yt, t.limit).next((gt) => {
                                                gt.forEach(($t) => {
                                                    const un = Xe.fromSegments(
                                                        $t.documentKey
                                                    );
                                                    l.has(un) ||
                                                        ((l = l.add(un)),
                                                        h.push(un));
                                                });
                                            })
                                        );
                                    })
                                    .next(() => h);
                            }
                            return ue.resolve(null);
                        });
                }
                Ye(e) {
                    let t = this.Je.get(e);
                    return t || ((t = [e]), this.Je.set(e, t), t);
                }
                en(e, t, r, i, a, l, h) {
                    const _ =
                            (null != t ? t.length : 1) *
                            Math.max(r.length, a.length),
                        E = _ / (null != t ? t.length : 1),
                        D = [];
                    for (let T = 0; T < _; ++T) {
                        const R = t ? this.nn(t[T / E]) : jD,
                            F = this.sn(e, R, r[T % E], i),
                            K = this.rn(e, R, a[T % E], l),
                            Ie = h.map((Re) => this.sn(e, R, Re, !0));
                        D.push(...this.createRange(F, K, Ie));
                    }
                    return D;
                }
                sn(e, t, r, i) {
                    const a = new Ep(e, Xe.empty(), t, r);
                    return i ? a : a.Le();
                }
                rn(e, t, r, i) {
                    const a = new Ep(e, Xe.empty(), t, r);
                    return i ? a.Le() : a;
                }
                Xe(e, t) {
                    const r = new BU(t),
                        i =
                            null != t.collectionGroup
                                ? t.collectionGroup
                                : t.path.lastSegment();
                    return this.getFieldIndexes(e, i).next((a) => {
                        let l = null;
                        for (const h of a)
                            r.Ge(h) &&
                                (!l || h.fields.length > l.fields.length) &&
                                (l = h);
                        return l;
                    });
                }
                getIndexType(e, t) {
                    let r = 2;
                    return ue
                        .forEach(this.Ye(t), (i) =>
                            this.Xe(e, i).next((a) => {
                                a
                                    ? 0 !== r &&
                                      a.fields.length <
                                          (function (l) {
                                              let h = new Hn(Br.comparator),
                                                  _ = !1;
                                              for (const E of l.filters) {
                                                  const D = E;
                                                  D.field.isKeyField() ||
                                                      ("array-contains" ===
                                                          D.op ||
                                                      "array-contains-any" ===
                                                          D.op
                                                          ? (_ = !0)
                                                          : (h = h.add(
                                                                D.field
                                                            )));
                                              }
                                              for (const E of l.orderBy)
                                                  E.field.isKeyField() ||
                                                      (h = h.add(E.field));
                                              return h.size + (_ ? 1 : 0);
                                          })(i) &&
                                      (r = 1)
                                    : (r = 0);
                            })
                        )
                        .next(() => r);
                }
                on(e, t) {
                    const r = new hE();
                    for (const i of up(e)) {
                        const a = t.data.field(i.fieldPath);
                        if (null == a) return null;
                        const l = r.Be(i.kind);
                        wp.ye.re(a, l);
                    }
                    return r.Oe();
                }
                nn(e) {
                    const t = new hE();
                    return wp.ye.re(e, t.Be(0)), t.Oe();
                }
                un(e, t) {
                    const r = new hE();
                    return (
                        wp.ye.re(
                            fp(this.databaseId, t),
                            r.Be(
                                (function (i) {
                                    const a = up(i);
                                    return 0 === a.length
                                        ? 0
                                        : a[a.length - 1].kind;
                                })(e)
                            )
                        ),
                        r.Oe()
                    );
                }
                tn(e, t, r) {
                    if (null === r) return [];
                    let i = [];
                    i.push(new hE());
                    let a = 0;
                    for (const l of up(e)) {
                        const h = r[a++];
                        for (const _ of i)
                            if (this.cn(t, l.fieldPath) && Y0(h))
                                i = this.an(i, l, h);
                            else {
                                const E = _.Be(l.kind);
                                wp.ye.re(h, E);
                            }
                    }
                    return this.hn(i);
                }
                Ze(e, t, r) {
                    return this.tn(e, t, r.position);
                }
                hn(e) {
                    const t = [];
                    for (let r = 0; r < e.length; ++r) t[r] = e[r].Oe();
                    return t;
                }
                an(e, t, r) {
                    const i = [...e],
                        a = [];
                    for (const l of r.arrayValue.values || [])
                        for (const h of i) {
                            const _ = new hE();
                            _.seed(h.Oe()),
                                wp.ye.re(l, _.Be(t.kind)),
                                a.push(_);
                        }
                    return a;
                }
                cn(e, t) {
                    return !!e.filters.find(
                        (r) =>
                            r instanceof Ui &&
                            r.field.isEqual(t) &&
                            ("in" === r.op || "not-in" === r.op)
                    );
                }
                getFieldIndexes(e, t) {
                    const r = HD(e),
                        i = pE(e);
                    return (
                        t
                            ? r.K(
                                  "collectionGroupIndex",
                                  IDBKeyRange.bound(t, t)
                              )
                            : r.K()
                    ).next((a) => {
                        const l = [];
                        return ue
                            .forEach(a, (h) =>
                                i.get([h.indexId, this.uid]).next((_) => {
                                    l.push(
                                        (function (E, D) {
                                            const T = D
                                                    ? new G0(
                                                          D.sequenceNumber,
                                                          new go(
                                                              yp(D.readTime),
                                                              new Xe(
                                                                  Fu(
                                                                      D.documentKey
                                                                  )
                                                              ),
                                                              D.largestBatchId
                                                          )
                                                      )
                                                    : G0.empty(),
                                                R = E.fields.map(
                                                    ([F, K]) =>
                                                        new TD(
                                                            Br.fromServerFormat(
                                                                F
                                                            ),
                                                            K
                                                        )
                                                );
                                            return new DD(
                                                E.indexId,
                                                E.collectionGroup,
                                                R,
                                                T
                                            );
                                        })(h, _)
                                    );
                                })
                            )
                            .next(() => l);
                    });
                }
                getNextCollectionGroupToUpdate(e) {
                    return this.getFieldIndexes(e).next((t) =>
                        0 === t.length
                            ? null
                            : (t.sort((r, i) => {
                                  const a =
                                      r.indexState.sequenceNumber -
                                      i.indexState.sequenceNumber;
                                  return 0 !== a
                                      ? a
                                      : Qt(
                                            r.collectionGroup,
                                            i.collectionGroup
                                        );
                              }),
                              t[0].collectionGroup)
                    );
                }
                updateCollectionGroup(e, t, r) {
                    const i = HD(e),
                        a = pE(e);
                    return this.ln(e).next((l) =>
                        i
                            .K("collectionGroupIndex", IDBKeyRange.bound(t, t))
                            .next((h) =>
                                ue.forEach(h, (_) =>
                                    a.put(fO(_.indexId, this.user, l, r))
                                )
                            )
                    );
                }
                updateIndexEntries(e, t) {
                    const r = new Map();
                    return ue.forEach(t, (i, a) => {
                        const l = r.get(i.collectionGroup);
                        return (
                            l
                                ? ue.resolve(l)
                                : this.getFieldIndexes(e, i.collectionGroup)
                        ).next(
                            (h) => (
                                r.set(i.collectionGroup, h),
                                ue.forEach(h, (_) =>
                                    this.fn(e, i, _).next((E) => {
                                        const D = this.dn(a, _);
                                        return E.isEqual(D)
                                            ? ue.resolve()
                                            : this._n(e, a, _, E, D);
                                    })
                                )
                            )
                        );
                    });
                }
                wn(e, t, r, i) {
                    return fE(e).put({
                        indexId: i.indexId,
                        uid: this.uid,
                        arrayValue: i.arrayValue,
                        directionalValue: i.directionalValue,
                        orderedDocumentKey: this.un(r, t.key),
                        documentKey: t.key.path.toArray(),
                    });
                }
                mn(e, t, r, i) {
                    return fE(e).delete([
                        i.indexId,
                        this.uid,
                        i.arrayValue,
                        i.directionalValue,
                        this.un(r, t.key),
                        t.key.path.toArray(),
                    ]);
                }
                fn(e, t, r) {
                    const i = fE(e);
                    let a = new Hn(Ip);
                    return i
                        .J(
                            {
                                index: "documentKeyIndex",
                                range: IDBKeyRange.only([
                                    r.indexId,
                                    this.uid,
                                    this.un(r, t),
                                ]),
                            },
                            (l, h) => {
                                a = a.add(
                                    new Ep(
                                        r.indexId,
                                        t,
                                        h.arrayValue,
                                        h.directionalValue
                                    )
                                );
                            }
                        )
                        .next(() => a);
                }
                dn(e, t) {
                    let r = new Hn(Ip);
                    const i = this.on(t, e);
                    if (null == i) return r;
                    const a = jx(t);
                    if (null != a) {
                        const l = e.data.field(a.fieldPath);
                        if (Y0(l))
                            for (const h of l.arrayValue.values || [])
                                r = r.add(
                                    new Ep(t.indexId, e.key, this.nn(h), i)
                                );
                    } else r = r.add(new Ep(t.indexId, e.key, jD, i));
                    return r;
                }
                _n(e, t, r, i, a) {
                    $e(
                        "IndexedDbIndexManager",
                        "Updating index entries for document '%s'",
                        t.key
                    );
                    const l = [];
                    return (
                        (function (h, _, E, D, T) {
                            const R = h.getIterator(),
                                F = _.getIterator();
                            let K = x_(R),
                                Ie = x_(F);
                            for (; K || Ie; ) {
                                let Re = !1,
                                    mt = !1;
                                if (K && Ie) {
                                    const _t = E(K, Ie);
                                    _t < 0 ? (mt = !0) : _t > 0 && (Re = !0);
                                } else null != K ? (mt = !0) : (Re = !0);
                                Re
                                    ? (D(Ie), (Ie = x_(F)))
                                    : mt
                                    ? (T(K), (K = x_(R)))
                                    : ((K = x_(R)), (Ie = x_(F)));
                            }
                        })(
                            i,
                            a,
                            Ip,
                            (h) => {
                                l.push(this.wn(e, t, r, h));
                            },
                            (h) => {
                                l.push(this.mn(e, t, r, h));
                            }
                        ),
                        ue.waitFor(l)
                    );
                }
                ln(e) {
                    let t = 1;
                    return pE(e)
                        .J(
                            {
                                index: "sequenceNumberIndex",
                                reverse: !0,
                                range: IDBKeyRange.upperBound([
                                    this.uid,
                                    Number.MAX_SAFE_INTEGER,
                                ]),
                            },
                            (r, i, a) => {
                                a.done(), (t = i.sequenceNumber + 1);
                            }
                        )
                        .next(() => t);
                }
                createRange(e, t, r) {
                    r = r
                        .sort((l, h) => Ip(l, h))
                        .filter((l, h, _) => !h || 0 !== Ip(l, _[h - 1]));
                    const i = [];
                    i.push(e);
                    for (const l of r) {
                        const h = Ip(l, e),
                            _ = Ip(l, t);
                        if (0 === h) i[0] = e.Le();
                        else if (h > 0 && _ < 0) i.push(l), i.push(l.Le());
                        else if (_ > 0) break;
                    }
                    i.push(t);
                    const a = [];
                    for (let l = 0; l < i.length; l += 2)
                        a.push(
                            IDBKeyRange.bound(
                                [
                                    i[l].indexId,
                                    this.uid,
                                    i[l].arrayValue,
                                    i[l].directionalValue,
                                    jD,
                                    [],
                                ],
                                [
                                    i[l + 1].indexId,
                                    this.uid,
                                    i[l + 1].arrayValue,
                                    i[l + 1].directionalValue,
                                    jD,
                                    [],
                                ]
                            )
                        );
                    return a;
                }
                getMinOffsetFromCollectionGroup(e, t) {
                    return this.getFieldIndexes(e, t).next(vO);
                }
                getMinOffset(e, t) {
                    return ue
                        .mapArray(this.Ye(t), (r) =>
                            this.Xe(e, r).next((i) => i || ft())
                        )
                        .next(vO);
                }
            }
            function yO(n) {
                return Ei(n, "collectionParents");
            }
            function fE(n) {
                return Ei(n, "indexEntries");
            }
            function HD(n) {
                return Ei(n, "indexConfiguration");
            }
            function pE(n) {
                return Ei(n, "indexState");
            }
            function vO(n) {
                Vt(0 !== n.length);
                let e = n[0].indexState.offset,
                    t = e.largestBatchId;
                for (let r = 1; r < n.length; r++) {
                    const i = n[r].indexState.offset;
                    Hx(i, e) < 0 && (e = i),
                        t < i.largestBatchId && (t = i.largestBatchId);
                }
                return new go(e.readTime, e.documentKey, t);
            }
            const wO = {
                didRun: !1,
                sequenceNumbersCollected: 0,
                targetsRemoved: 0,
                documentsRemoved: 0,
            };
            class Hs {
                constructor(e, t, r) {
                    (this.cacheSizeCollectionThreshold = e),
                        (this.percentileToCollect = t),
                        (this.maximumSequenceNumbersToCollect = r);
                }
                static withCacheSize(e) {
                    return new Hs(
                        e,
                        Hs.DEFAULT_COLLECTION_PERCENTILE,
                        Hs.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT
                    );
                }
            }
            function EO(n, e, t) {
                const r = n.store("mutations"),
                    i = n.store("documentMutations"),
                    a = [],
                    l = IDBKeyRange.only(t.batchId);
                let h = 0;
                const _ = r.J({ range: l }, (D, T, R) => (h++, R.delete()));
                a.push(
                    _.next(() => {
                        Vt(1 === h);
                    })
                );
                const E = [];
                for (const D of t.mutations) {
                    const T = sO(e, D.key.path, t.batchId);
                    a.push(i.delete(T)), E.push(D.key);
                }
                return ue.waitFor(a).next(() => E);
            }
            function $D(n) {
                if (!n) return 0;
                let e;
                if (n.document) e = n.document;
                else if (n.unknownDocument) e = n.unknownDocument;
                else {
                    if (!n.noDocument) throw ft();
                    e = n.noDocument;
                }
                return JSON.stringify(e).length;
            }
            (Hs.DEFAULT_COLLECTION_PERCENTILE = 10),
                (Hs.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT = 1e3),
                (Hs.DEFAULT = new Hs(
                    41943040,
                    Hs.DEFAULT_COLLECTION_PERCENTILE,
                    Hs.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT
                )),
                (Hs.DISABLED = new Hs(-1, 0, 0));
            class GD {
                constructor(e, t, r, i) {
                    (this.userId = e),
                        (this.wt = t),
                        (this.indexManager = r),
                        (this.referenceDelegate = i),
                        (this.gn = {});
                }
                static se(e, t, r, i) {
                    Vt("" !== e.uid);
                    const a = e.isAuthenticated() ? e.uid : "";
                    return new GD(a, t, r, i);
                }
                checkEmpty(e) {
                    let t = !0;
                    const r = IDBKeyRange.bound(
                        [this.userId, Number.NEGATIVE_INFINITY],
                        [this.userId, Number.POSITIVE_INFINITY]
                    );
                    return th(e)
                        .J(
                            { index: "userMutationsIndex", range: r },
                            (i, a, l) => {
                                (t = !1), l.done();
                            }
                        )
                        .next(() => t);
                }
                addMutationBatch(e, t, r, i) {
                    const a = B_(e),
                        l = th(e);
                    return l.add({}).next((h) => {
                        Vt("number" == typeof h);
                        const _ = new iR(h, t, r, i),
                            E = (function (R, F, K) {
                                const Ie = K.baseMutations.map((mt) =>
                                        lE(R.ne, mt)
                                    ),
                                    Re = K.mutations.map((mt) => lE(R.ne, mt));
                                return {
                                    userId: F,
                                    batchId: K.batchId,
                                    localWriteTimeMs:
                                        K.localWriteTime.toMillis(),
                                    baseMutations: Ie,
                                    mutations: Re,
                                };
                            })(this.wt, this.userId, _),
                            D = [];
                        let T = new Hn((R, F) =>
                            Qt(R.canonicalString(), F.canonicalString())
                        );
                        for (const R of i) {
                            const F = sO(this.userId, R.key.path, h);
                            (T = T.add(R.key.path.popLast())),
                                D.push(l.put(E)),
                                D.push(a.put(F, _U));
                        }
                        return (
                            T.forEach((R) => {
                                D.push(
                                    this.indexManager.addToCollectionParentIndex(
                                        e,
                                        R
                                    )
                                );
                            }),
                            e.addOnCommittedListener(() => {
                                this.gn[h] = _.keys();
                            }),
                            ue.waitFor(D).next(() => _)
                        );
                    });
                }
                lookupMutationBatch(e, t) {
                    return th(e)
                        .get(t)
                        .next((r) =>
                            r
                                ? (Vt(r.userId === this.userId), vp(this.wt, r))
                                : null
                        );
                }
                yn(e, t) {
                    return this.gn[t]
                        ? ue.resolve(this.gn[t])
                        : this.lookupMutationBatch(e, t).next((r) => {
                              if (r) {
                                  const i = r.keys();
                                  return (this.gn[t] = i), i;
                              }
                              return null;
                          });
                }
                getNextMutationBatchAfterBatchId(e, t) {
                    const r = t + 1,
                        i = IDBKeyRange.lowerBound([this.userId, r]);
                    let a = null;
                    return th(e)
                        .J(
                            { index: "userMutationsIndex", range: i },
                            (l, h, _) => {
                                h.userId === this.userId &&
                                    (Vt(h.batchId >= r), (a = vp(this.wt, h))),
                                    _.done();
                            }
                        )
                        .next(() => a);
                }
                getHighestUnacknowledgedBatchId(e) {
                    const t = IDBKeyRange.upperBound([
                        this.userId,
                        Number.POSITIVE_INFINITY,
                    ]);
                    let r = -1;
                    return th(e)
                        .J(
                            {
                                index: "userMutationsIndex",
                                range: t,
                                reverse: !0,
                            },
                            (i, a, l) => {
                                (r = a.batchId), l.done();
                            }
                        )
                        .next(() => r);
                }
                getAllMutationBatches(e) {
                    const t = IDBKeyRange.bound(
                        [this.userId, -1],
                        [this.userId, Number.POSITIVE_INFINITY]
                    );
                    return th(e)
                        .K("userMutationsIndex", t)
                        .next((r) => r.map((i) => vp(this.wt, i)));
                }
                getAllMutationBatchesAffectingDocumentKey(e, t) {
                    const r = VD(this.userId, t.path),
                        i = IDBKeyRange.lowerBound(r),
                        a = [];
                    return B_(e)
                        .J({ range: i }, (l, h, _) => {
                            const [E, D, T] = l,
                                R = Fu(D);
                            if (E === this.userId && t.path.isEqual(R))
                                return th(e)
                                    .get(T)
                                    .next((F) => {
                                        if (!F) throw ft();
                                        Vt(F.userId === this.userId),
                                            a.push(vp(this.wt, F));
                                    });
                            _.done();
                        })
                        .next(() => a);
                }
                getAllMutationBatchesAffectingDocumentKeys(e, t) {
                    let r = new Hn(Qt);
                    const i = [];
                    return (
                        t.forEach((a) => {
                            const l = VD(this.userId, a.path),
                                h = IDBKeyRange.lowerBound(l),
                                _ = B_(e).J({ range: h }, (E, D, T) => {
                                    const [R, F, K] = E,
                                        Ie = Fu(F);
                                    R === this.userId && a.path.isEqual(Ie)
                                        ? (r = r.add(K))
                                        : T.done();
                                });
                            i.push(_);
                        }),
                        ue.waitFor(i).next(() => this.pn(e, r))
                    );
                }
                getAllMutationBatchesAffectingQuery(e, t) {
                    const r = t.path,
                        i = r.length + 1,
                        a = VD(this.userId, r),
                        l = IDBKeyRange.lowerBound(a);
                    let h = new Hn(Qt);
                    return B_(e)
                        .J({ range: l }, (_, E, D) => {
                            const [T, R, F] = _,
                                K = Fu(R);
                            T === this.userId && r.isPrefixOf(K)
                                ? K.length === i && (h = h.add(F))
                                : D.done();
                        })
                        .next(() => this.pn(e, h));
                }
                pn(e, t) {
                    const r = [],
                        i = [];
                    return (
                        t.forEach((a) => {
                            i.push(
                                th(e)
                                    .get(a)
                                    .next((l) => {
                                        if (null === l) throw ft();
                                        Vt(l.userId === this.userId),
                                            r.push(vp(this.wt, l));
                                    })
                            );
                        }),
                        ue.waitFor(i).next(() => r)
                    );
                }
                removeMutationBatch(e, t) {
                    return EO(e.ee, this.userId, t).next(
                        (r) => (
                            e.addOnCommittedListener(() => {
                                this.In(t.batchId);
                            }),
                            ue.forEach(r, (i) =>
                                this.referenceDelegate.markPotentiallyOrphaned(
                                    e,
                                    i
                                )
                            )
                        )
                    );
                }
                In(e) {
                    delete this.gn[e];
                }
                performConsistencyCheck(e) {
                    return this.checkEmpty(e).next((t) => {
                        if (!t) return ue.resolve();
                        const r = IDBKeyRange.lowerBound([this.userId]),
                            i = [];
                        return B_(e)
                            .J({ range: r }, (a, l, h) => {
                                if (a[0] === this.userId) {
                                    const _ = Fu(a[1]);
                                    i.push(_);
                                } else h.done();
                            })
                            .next(() => {
                                Vt(0 === i.length);
                            });
                    });
                }
                containsKey(e, t) {
                    return IO(e, this.userId, t);
                }
                Tn(e) {
                    return CO(e)
                        .get(this.userId)
                        .next(
                            (t) =>
                                t || {
                                    userId: this.userId,
                                    lastAcknowledgedBatchId: -1,
                                    lastStreamToken: "",
                                }
                        );
                }
            }
            function IO(n, e, t) {
                const r = VD(e, t.path),
                    i = r[1],
                    a = IDBKeyRange.lowerBound(r);
                let l = !1;
                return B_(n)
                    .J({ range: a, H: !0 }, (h, _, E) => {
                        const [D, T, R] = h;
                        D === e && T === i && (l = !0), E.done();
                    })
                    .next(() => l);
            }
            function th(n) {
                return Ei(n, "mutations");
            }
            function B_(n) {
                return Ei(n, "documentMutations");
            }
            function CO(n) {
                return Ei(n, "mutationQueues");
            }
            class Cp {
                constructor(e) {
                    this.En = e;
                }
                next() {
                    return (this.En += 2), this.En;
                }
                static An() {
                    return new Cp(0);
                }
                static Rn() {
                    return new Cp(-1);
                }
            }
            class $U {
                constructor(e, t) {
                    (this.referenceDelegate = e), (this.wt = t);
                }
                allocateTargetId(e) {
                    return this.bn(e).next((t) => {
                        const r = new Cp(t.highestTargetId);
                        return (
                            (t.highestTargetId = r.next()),
                            this.Pn(e, t).next(() => t.highestTargetId)
                        );
                    });
                }
                getLastRemoteSnapshotVersion(e) {
                    return this.bn(e).next((t) =>
                        Ft.fromTimestamp(
                            new mr(
                                t.lastRemoteSnapshotVersion.seconds,
                                t.lastRemoteSnapshotVersion.nanoseconds
                            )
                        )
                    );
                }
                getHighestSequenceNumber(e) {
                    return this.bn(e).next(
                        (t) => t.highestListenSequenceNumber
                    );
                }
                setTargetsMetadata(e, t, r) {
                    return this.bn(e).next(
                        (i) => (
                            (i.highestListenSequenceNumber = t),
                            r &&
                                (i.lastRemoteSnapshotVersion = r.toTimestamp()),
                            t > i.highestListenSequenceNumber &&
                                (i.highestListenSequenceNumber = t),
                            this.Pn(e, i)
                        )
                    );
                }
                addTargetData(e, t) {
                    return this.vn(e, t).next(() =>
                        this.bn(e).next(
                            (r) => (
                                (r.targetCount += 1),
                                this.Vn(t, r),
                                this.Pn(e, r)
                            )
                        )
                    );
                }
                updateTargetData(e, t) {
                    return this.vn(e, t);
                }
                removeTargetData(e, t) {
                    return this.removeMatchingKeysForTargetId(e, t.targetId)
                        .next(() => j_(e).delete(t.targetId))
                        .next(() => this.bn(e))
                        .next(
                            (r) => (
                                Vt(r.targetCount > 0),
                                (r.targetCount -= 1),
                                this.Pn(e, r)
                            )
                        );
                }
                removeTargets(e, t, r) {
                    let i = 0;
                    const a = [];
                    return j_(e)
                        .J((l, h) => {
                            const _ = cE(h);
                            _.sequenceNumber <= t &&
                                null === r.get(_.targetId) &&
                                (i++, a.push(this.removeTargetData(e, _)));
                        })
                        .next(() => ue.waitFor(a))
                        .next(() => i);
                }
                forEachTarget(e, t) {
                    return j_(e).J((r, i) => {
                        const a = cE(i);
                        t(a);
                    });
                }
                bn(e) {
                    return bO(e)
                        .get("targetGlobalKey")
                        .next((t) => (Vt(null !== t), t));
                }
                Pn(e, t) {
                    return bO(e).put("targetGlobalKey", t);
                }
                vn(e, t) {
                    return j_(e).put(dO(this.wt, t));
                }
                Vn(e, t) {
                    let r = !1;
                    return (
                        e.targetId > t.highestTargetId &&
                            ((t.highestTargetId = e.targetId), (r = !0)),
                        e.sequenceNumber > t.highestListenSequenceNumber &&
                            ((t.highestListenSequenceNumber = e.sequenceNumber),
                            (r = !0)),
                        r
                    );
                }
                getTargetCount(e) {
                    return this.bn(e).next((t) => t.targetCount);
                }
                getTargetData(e, t) {
                    const r = pp(t),
                        i = IDBKeyRange.bound(
                            [r, Number.NEGATIVE_INFINITY],
                            [r, Number.POSITIVE_INFINITY]
                        );
                    let a = null;
                    return j_(e)
                        .J(
                            { range: i, index: "queryTargetsIndex" },
                            (l, h, _) => {
                                const E = cE(h);
                                J0(t, E.target) && ((a = E), _.done());
                            }
                        )
                        .next(() => a);
                }
                addMatchingKeys(e, t, r) {
                    const i = [],
                        a = nh(e);
                    return (
                        t.forEach((l) => {
                            const h = ys(l.path);
                            i.push(a.put({ targetId: r, path: h })),
                                i.push(
                                    this.referenceDelegate.addReference(e, r, l)
                                );
                        }),
                        ue.waitFor(i)
                    );
                }
                removeMatchingKeys(e, t, r) {
                    const i = nh(e);
                    return ue.forEach(t, (a) => {
                        const l = ys(a.path);
                        return ue.waitFor([
                            i.delete([r, l]),
                            this.referenceDelegate.removeReference(e, r, a),
                        ]);
                    });
                }
                removeMatchingKeysForTargetId(e, t) {
                    const r = nh(e),
                        i = IDBKeyRange.bound([t], [t + 1], !1, !0);
                    return r.delete(i);
                }
                getMatchingKeysForTargetId(e, t) {
                    const r = IDBKeyRange.bound([t], [t + 1], !1, !0),
                        i = nh(e);
                    let a = nn();
                    return i
                        .J({ range: r, H: !0 }, (l, h, _) => {
                            const E = Fu(l[1]),
                                D = new Xe(E);
                            a = a.add(D);
                        })
                        .next(() => a);
                }
                containsKey(e, t) {
                    const r = ys(t.path),
                        i = IDBKeyRange.bound([r], [KP(r)], !1, !0);
                    let a = 0;
                    return nh(e)
                        .J(
                            { index: "documentTargetsIndex", H: !0, range: i },
                            ([l, h], _, E) => {
                                0 !== l && (a++, E.done());
                            }
                        )
                        .next(() => a > 0);
                }
                te(e, t) {
                    return j_(e)
                        .get(t)
                        .next((r) => (r ? cE(r) : null));
                }
            }
            function j_(n) {
                return Ei(n, "targets");
            }
            function bO(n) {
                return Ei(n, "targetGlobal");
            }
            function nh(n) {
                return Ei(n, "targetDocuments");
            }
            function DO([n, e], [t, r]) {
                const i = Qt(n, t);
                return 0 === i ? Qt(e, r) : i;
            }
            class GU {
                constructor(e) {
                    (this.Sn = e), (this.buffer = new Hn(DO)), (this.Dn = 0);
                }
                Cn() {
                    return ++this.Dn;
                }
                xn(e) {
                    const t = [e, this.Cn()];
                    if (this.buffer.size < this.Sn)
                        this.buffer = this.buffer.add(t);
                    else {
                        const r = this.buffer.last();
                        DO(t, r) < 0 &&
                            (this.buffer = this.buffer.delete(r).add(t));
                    }
                }
                get maxValue() {
                    return this.buffer.last()[0];
                }
            }
            class WU {
                constructor(e, t, r) {
                    (this.garbageCollector = e),
                        (this.asyncQueue = t),
                        (this.localStore = r),
                        (this.Nn = null);
                }
                start() {
                    -1 !==
                        this.garbageCollector.params
                            .cacheSizeCollectionThreshold && this.kn(6e4);
                }
                stop() {
                    this.Nn && (this.Nn.cancel(), (this.Nn = null));
                }
                get started() {
                    return null !== this.Nn;
                }
                kn(e) {
                    var t = this;
                    $e(
                        "LruGarbageCollector",
                        `Garbage collection scheduled in ${e}ms`
                    ),
                        (this.Nn = this.asyncQueue.enqueueAfterDelay(
                            "lru_garbage_collection",
                            e,
                            (0, y.Z)(function* () {
                                t.Nn = null;
                                try {
                                    yield t.localStore.collectGarbage(
                                        t.garbageCollector
                                    );
                                } catch (r) {
                                    Kd(r)
                                        ? $e(
                                              "LruGarbageCollector",
                                              "Ignoring IndexedDB error during garbage collection: ",
                                              r
                                          )
                                        : yield qd(r);
                                }
                                yield t.kn(3e5);
                            })
                        ));
                }
            }
            class zU {
                constructor(e, t) {
                    (this.On = e), (this.params = t);
                }
                calculateTargetCount(e, t) {
                    return this.On.Mn(e).next((r) => Math.floor((t / 100) * r));
                }
                nthSequenceNumber(e, t) {
                    if (0 === t) return ue.resolve(Bs.ot);
                    const r = new GU(t);
                    return this.On.forEachTarget(e, (i) =>
                        r.xn(i.sequenceNumber)
                    )
                        .next(() => this.On.Fn(e, (i) => r.xn(i)))
                        .next(() => r.maxValue);
                }
                removeTargets(e, t, r) {
                    return this.On.removeTargets(e, t, r);
                }
                removeOrphanedDocuments(e, t) {
                    return this.On.removeOrphanedDocuments(e, t);
                }
                collect(e, t) {
                    return -1 === this.params.cacheSizeCollectionThreshold
                        ? ($e(
                              "LruGarbageCollector",
                              "Garbage collection skipped; disabled"
                          ),
                          ue.resolve(wO))
                        : this.getCacheSize(e).next((r) =>
                              r < this.params.cacheSizeCollectionThreshold
                                  ? ($e(
                                        "LruGarbageCollector",
                                        `Garbage collection skipped; Cache size ${r} is lower than threshold ${this.params.cacheSizeCollectionThreshold}`
                                    ),
                                    wO)
                                  : this.$n(e, t)
                          );
                }
                getCacheSize(e) {
                    return this.On.getCacheSize(e);
                }
                $n(e, t) {
                    let r, i, a, l, h, _, E;
                    const D = Date.now();
                    return this.calculateTargetCount(
                        e,
                        this.params.percentileToCollect
                    )
                        .next(
                            (T) => (
                                T > this.params.maximumSequenceNumbersToCollect
                                    ? ($e(
                                          "LruGarbageCollector",
                                          `Capping sequence numbers to collect down to the maximum of ${this.params.maximumSequenceNumbersToCollect} from ${T}`
                                      ),
                                      (i =
                                          this.params
                                              .maximumSequenceNumbersToCollect))
                                    : (i = T),
                                (l = Date.now()),
                                this.nthSequenceNumber(e, i)
                            )
                        )
                        .next(
                            (T) => (
                                (r = T),
                                (h = Date.now()),
                                this.removeTargets(e, r, t)
                            )
                        )
                        .next(
                            (T) => (
                                (a = T),
                                (_ = Date.now()),
                                this.removeOrphanedDocuments(e, r)
                            )
                        )
                        .next(
                            (T) => (
                                (E = Date.now()),
                                Ux() <= H.in.DEBUG &&
                                    $e(
                                        "LruGarbageCollector",
                                        `LRU Garbage Collection\n\tCounted targets in ${
                                            l - D
                                        }ms\n\tDetermined least recently used ${i} in ` +
                                            (h - l) +
                                            `ms\n\tRemoved ${a} targets in ` +
                                            (_ - h) +
                                            `ms\n\tRemoved ${T} documents in ` +
                                            (E - _) +
                                            `ms\nTotal Duration: ${E - D}ms`
                                    ),
                                ue.resolve({
                                    didRun: !0,
                                    sequenceNumbersCollected: i,
                                    targetsRemoved: a,
                                    documentsRemoved: T,
                                })
                            )
                        );
                }
            }
            class qU {
                constructor(e, t) {
                    (this.db = e), (this.garbageCollector = new zU(this, t));
                }
                Mn(e) {
                    const t = this.Bn(e);
                    return this.db
                        .getTargetCache()
                        .getTargetCount(e)
                        .next((r) => t.next((i) => r + i));
                }
                Bn(e) {
                    let t = 0;
                    return this.Fn(e, (r) => {
                        t++;
                    }).next(() => t);
                }
                forEachTarget(e, t) {
                    return this.db.getTargetCache().forEachTarget(e, t);
                }
                Fn(e, t) {
                    return this.Ln(e, (r, i) => t(i));
                }
                addReference(e, t, r) {
                    return WD(e, r);
                }
                removeReference(e, t, r) {
                    return WD(e, r);
                }
                removeTargets(e, t, r) {
                    return this.db.getTargetCache().removeTargets(e, t, r);
                }
                markPotentiallyOrphaned(e, t) {
                    return WD(e, t);
                }
                Un(e, t) {
                    return (function (r, i) {
                        let a = !1;
                        return CO(r)
                            .Y((l) =>
                                IO(r, l, i).next(
                                    (h) => (h && (a = !0), ue.resolve(!h))
                                )
                            )
                            .next(() => a);
                    })(e, t);
                }
                removeOrphanedDocuments(e, t) {
                    const r = this.db
                            .getRemoteDocumentCache()
                            .newChangeBuffer(),
                        i = [];
                    let a = 0;
                    return this.Ln(e, (l, h) => {
                        if (h <= t) {
                            const _ = this.Un(e, l).next((E) => {
                                if (!E)
                                    return (
                                        a++,
                                        r
                                            .getEntry(e, l)
                                            .next(
                                                () => (
                                                    r.removeEntry(l, Ft.min()),
                                                    nh(e).delete([
                                                        0,
                                                        ys(l.path),
                                                    ])
                                                )
                                            )
                                    );
                            });
                            i.push(_);
                        }
                    })
                        .next(() => ue.waitFor(i))
                        .next(() => r.apply(e))
                        .next(() => a);
                }
                removeTarget(e, t) {
                    const r = t.withSequenceNumber(e.currentSequenceNumber);
                    return this.db.getTargetCache().updateTargetData(e, r);
                }
                updateLimboDocument(e, t) {
                    return WD(e, t);
                }
                Ln(e, t) {
                    const r = nh(e);
                    let i,
                        a = Bs.ot;
                    return r
                        .J(
                            { index: "documentTargetsIndex" },
                            ([l, h], { path: _, sequenceNumber: E }) => {
                                0 === l
                                    ? (a !== Bs.ot && t(new Xe(Fu(i)), a),
                                      (a = E),
                                      (i = _))
                                    : (a = Bs.ot);
                            }
                        )
                        .next(() => {
                            a !== Bs.ot && t(new Xe(Fu(i)), a);
                        });
                }
                getCacheSize(e) {
                    return this.db.getRemoteDocumentCache().getSize(e);
                }
            }
            function WD(n, e) {
                return nh(n).put(
                    ((r = n.currentSequenceNumber),
                    { targetId: 0, path: ys(e.path), sequenceNumber: r })
                );
                var r;
            }
            class TO {
                constructor() {
                    (this.changes = new Xd(
                        (e) => e.toString(),
                        (e, t) => e.isEqual(t)
                    )),
                        (this.changesApplied = !1);
                }
                addEntry(e) {
                    this.assertNotApplied(), this.changes.set(e.key, e);
                }
                removeEntry(e, t) {
                    this.assertNotApplied(),
                        this.changes.set(
                            e,
                            Zn.newInvalidDocument(e).setReadTime(t)
                        );
                }
                getEntry(e, t) {
                    this.assertNotApplied();
                    const r = this.changes.get(t);
                    return void 0 !== r
                        ? ue.resolve(r)
                        : this.getFromCache(e, t);
                }
                getEntries(e, t) {
                    return this.getAllFromCache(e, t);
                }
                apply(e) {
                    return (
                        this.assertNotApplied(),
                        (this.changesApplied = !0),
                        this.applyChanges(e)
                    );
                }
                assertNotApplied() {}
            }
            class KU {
                constructor(e) {
                    this.wt = e;
                }
                setIndexManager(e) {
                    this.indexManager = e;
                }
                addEntry(e, t, r) {
                    return bp(e).put(r);
                }
                removeEntry(e, t, r) {
                    return bp(e).delete(
                        (function (i, a) {
                            const l = i.path.toArray();
                            return [
                                l.slice(0, l.length - 2),
                                l[l.length - 2],
                                UD(a),
                                l[l.length - 1],
                            ];
                        })(t, r)
                    );
                }
                updateMetadata(e, t) {
                    return this.getMetadata(e).next(
                        (r) => ((r.byteSize += t), this.qn(e, r))
                    );
                }
                getEntry(e, t) {
                    let r = Zn.newInvalidDocument(t);
                    return bp(e)
                        .J(
                            {
                                index: "documentKeyIndex",
                                range: IDBKeyRange.only(gE(t)),
                            },
                            (i, a) => {
                                r = this.Kn(t, a);
                            }
                        )
                        .next(() => r);
                }
                Gn(e, t) {
                    let r = { size: 0, document: Zn.newInvalidDocument(t) };
                    return bp(e)
                        .J(
                            {
                                index: "documentKeyIndex",
                                range: IDBKeyRange.only(gE(t)),
                            },
                            (i, a) => {
                                r = { document: this.Kn(t, a), size: $D(a) };
                            }
                        )
                        .next(() => r);
                }
                getEntries(e, t) {
                    let r = js();
                    return this.Qn(e, t, (i, a) => {
                        const l = this.Kn(i, a);
                        r = r.insert(i, l);
                    }).next(() => r);
                }
                jn(e, t) {
                    let r = js(),
                        i = new Nr(Xe.comparator);
                    return this.Qn(e, t, (a, l) => {
                        const h = this.Kn(a, l);
                        (r = r.insert(a, h)), (i = i.insert(a, $D(l)));
                    }).next(() => ({ documents: r, Wn: i }));
                }
                Qn(e, t, r) {
                    if (t.isEmpty()) return ue.resolve();
                    let i = new Hn(RO);
                    t.forEach((_) => (i = i.add(_)));
                    const a = IDBKeyRange.bound(gE(i.first()), gE(i.last())),
                        l = i.getIterator();
                    let h = l.getNext();
                    return bp(e)
                        .J(
                            { index: "documentKeyIndex", range: a },
                            (_, E, D) => {
                                const T = Xe.fromSegments([
                                    ...E.prefixPath,
                                    E.collectionGroup,
                                    E.documentId,
                                ]);
                                for (; h && RO(h, T) < 0; )
                                    r(h, null), (h = l.getNext());
                                h &&
                                    h.isEqual(T) &&
                                    (r(h, E),
                                    (h = l.hasNext() ? l.getNext() : null)),
                                    h ? D.q(gE(h)) : D.done();
                            }
                        )
                        .next(() => {
                            for (; h; )
                                r(h, null),
                                    (h = l.hasNext() ? l.getNext() : null);
                        });
                }
                getAllFromCollection(e, t, r) {
                    const i = [
                            t.popLast().toArray(),
                            t.lastSegment(),
                            UD(r.readTime),
                            r.documentKey.path.isEmpty()
                                ? ""
                                : r.documentKey.path.lastSegment(),
                        ],
                        a = [
                            t.popLast().toArray(),
                            t.lastSegment(),
                            [Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER],
                            "",
                        ];
                    return bp(e)
                        .K(IDBKeyRange.bound(i, a, !0))
                        .next((l) => {
                            let h = js();
                            for (const _ of l) {
                                const E = this.Kn(
                                    Xe.fromSegments(
                                        _.prefixPath.concat(
                                            _.collectionGroup,
                                            _.documentId
                                        )
                                    ),
                                    _
                                );
                                h = h.insert(E.key, E);
                            }
                            return h;
                        });
                }
                getAllFromCollectionGroup(e, t, r, i) {
                    let a = js();
                    const l = xO(t, r),
                        h = xO(t, go.max());
                    return bp(e)
                        .J(
                            {
                                index: "collectionGroupIndex",
                                range: IDBKeyRange.bound(l, h, !0),
                            },
                            (_, E, D) => {
                                const T = this.Kn(
                                    Xe.fromSegments(
                                        E.prefixPath.concat(
                                            E.collectionGroup,
                                            E.documentId
                                        )
                                    ),
                                    E
                                );
                                (a = a.insert(T.key, T)),
                                    a.size === i && D.done();
                            }
                        )
                        .next(() => a);
                }
                newChangeBuffer(e) {
                    return new ZU(this, !!e && e.trackRemovals);
                }
                getSize(e) {
                    return this.getMetadata(e).next((t) => t.byteSize);
                }
                getMetadata(e) {
                    return AO(e)
                        .get("remoteDocumentGlobalKey")
                        .next((t) => (Vt(!!t), t));
                }
                qn(e, t) {
                    return AO(e).put("remoteDocumentGlobalKey", t);
                }
                Kn(e, t) {
                    if (t) {
                        const r = (function kU(n, e) {
                            let t;
                            if (e.document)
                                t = Qk(
                                    n.ne,
                                    e.document,
                                    !!e.hasCommittedMutations
                                );
                            else if (e.noDocument) {
                                const r = Xe.fromSegments(e.noDocument.path),
                                    i = yp(e.noDocument.readTime);
                                (t = Zn.newNoDocument(r, i)),
                                    e.hasCommittedMutations &&
                                        t.setHasCommittedMutations();
                            } else {
                                if (!e.unknownDocument) return ft();
                                {
                                    const r = Xe.fromSegments(
                                            e.unknownDocument.path
                                        ),
                                        i = yp(e.unknownDocument.version);
                                    t = Zn.newUnknownDocument(r, i);
                                }
                            }
                            return (
                                e.readTime &&
                                    t.setReadTime(
                                        (function (r) {
                                            const i = new mr(r[0], r[1]);
                                            return Ft.fromTimestamp(i);
                                        })(e.readTime)
                                    ),
                                t
                            );
                        })(this.wt, t);
                        if (!r.isNoDocument() || !r.version.isEqual(Ft.min()))
                            return r;
                    }
                    return Zn.newInvalidDocument(e);
                }
            }
            function SO(n) {
                return new KU(n);
            }
            class ZU extends TO {
                constructor(e, t) {
                    super(),
                        (this.zn = e),
                        (this.trackRemovals = t),
                        (this.Hn = new Xd(
                            (r) => r.toString(),
                            (r, i) => r.isEqual(i)
                        ));
                }
                applyChanges(e) {
                    const t = [];
                    let r = 0,
                        i = new Hn((a, l) =>
                            Qt(a.canonicalString(), l.canonicalString())
                        );
                    return (
                        this.changes.forEach((a, l) => {
                            const h = this.Hn.get(a);
                            if (
                                (t.push(this.zn.removeEntry(e, a, h.readTime)),
                                l.isValidDocument())
                            ) {
                                const _ = cO(this.zn.wt, l);
                                (i = i.add(a.path.popLast())),
                                    (r += $D(_) - h.size),
                                    t.push(this.zn.addEntry(e, a, _));
                            } else if (((r -= h.size), this.trackRemovals)) {
                                const _ = cO(
                                    this.zn.wt,
                                    l.convertToNoDocument(Ft.min())
                                );
                                t.push(this.zn.addEntry(e, a, _));
                            }
                        }),
                        i.forEach((a) => {
                            t.push(
                                this.zn.indexManager.addToCollectionParentIndex(
                                    e,
                                    a
                                )
                            );
                        }),
                        t.push(this.zn.updateMetadata(e, r)),
                        ue.waitFor(t)
                    );
                }
                getFromCache(e, t) {
                    return this.zn
                        .Gn(e, t)
                        .next(
                            (r) => (
                                this.Hn.set(t, {
                                    size: r.size,
                                    readTime: r.document.readTime,
                                }),
                                r.document
                            )
                        );
                }
                getAllFromCache(e, t) {
                    return this.zn.jn(e, t).next(
                        ({ documents: r, Wn: i }) => (
                            i.forEach((a, l) => {
                                this.Hn.set(a, {
                                    size: l,
                                    readTime: r.get(a).readTime,
                                });
                            }),
                            r
                        )
                    );
                }
            }
            function AO(n) {
                return Ei(n, "remoteDocumentGlobal");
            }
            function bp(n) {
                return Ei(n, "remoteDocumentsV14");
            }
            function gE(n) {
                const e = n.path.toArray();
                return [
                    e.slice(0, e.length - 2),
                    e[e.length - 2],
                    e[e.length - 1],
                ];
            }
            function xO(n, e) {
                const t = e.documentKey.path.toArray();
                return [
                    n,
                    UD(e.readTime),
                    t.slice(0, t.length - 2),
                    t.length > 0 ? t[t.length - 1] : "",
                ];
            }
            function RO(n, e) {
                const t = n.path.toArray(),
                    r = e.path.toArray();
                let i = 0;
                for (let a = 0; a < t.length - 2 && a < r.length - 2; ++a)
                    if (((i = Qt(t[a], r[a])), i)) return i;
                return (
                    (i = Qt(t.length, r.length)),
                    i ||
                        ((i = Qt(t[t.length - 2], r[r.length - 2])),
                        i || Qt(t[t.length - 1], r[r.length - 1]))
                );
            }
            class YU {
                constructor(e, t) {
                    (this.overlayedDocument = e), (this.mutatedFields = t);
                }
            }
            class MO {
                constructor(e, t, r, i) {
                    (this.remoteDocumentCache = e),
                        (this.mutationQueue = t),
                        (this.documentOverlayCache = r),
                        (this.indexManager = i);
                }
                getDocument(e, t) {
                    let r = null;
                    return this.documentOverlayCache
                        .getOverlay(e, t)
                        .next((i) => ((r = i), this.getBaseDocument(e, t, r)))
                        .next(
                            (i) => (
                                null !== r &&
                                    tE(r.mutation, i, mo.empty(), mr.now()),
                                i
                            )
                        );
                }
                getDocuments(e, t) {
                    return this.remoteDocumentCache
                        .getEntries(e, t)
                        .next((r) =>
                            this.getLocalViewOfDocuments(e, r, nn()).next(
                                () => r
                            )
                        );
                }
                getLocalViewOfDocuments(e, t, r = nn()) {
                    const i = ku();
                    return this.populateOverlays(e, i, t).next(() =>
                        this.computeViews(e, t, i, r).next((a) => {
                            let l = nE();
                            return (
                                a.forEach((h, _) => {
                                    l = l.insert(h, _.overlayedDocument);
                                }),
                                l
                            );
                        })
                    );
                }
                getOverlayedDocuments(e, t) {
                    const r = ku();
                    return this.populateOverlays(e, r, t).next(() =>
                        this.computeViews(e, t, r, nn())
                    );
                }
                populateOverlays(e, t, r) {
                    const i = [];
                    return (
                        r.forEach((a) => {
                            t.has(a) || i.push(a);
                        }),
                        this.documentOverlayCache
                            .getOverlays(e, i)
                            .next((a) => {
                                a.forEach((l, h) => {
                                    t.set(l, h);
                                });
                            })
                    );
                }
                computeViews(e, t, r, i) {
                    let a = js();
                    const l = rE(),
                        h = rE();
                    return (
                        t.forEach((_, E) => {
                            const D = r.get(E.key);
                            i.has(E.key) &&
                            (void 0 === D || D.mutation instanceof Xl)
                                ? (a = a.insert(E.key, E))
                                : void 0 !== D &&
                                  (l.set(E.key, D.mutation.getFieldMask()),
                                  tE(
                                      D.mutation,
                                      E,
                                      D.mutation.getFieldMask(),
                                      mr.now()
                                  ));
                        }),
                        this.recalculateAndSaveOverlays(e, a).next(
                            (_) => (
                                _.forEach((E, D) => l.set(E, D)),
                                t.forEach((E, D) => {
                                    var T;
                                    return h.set(
                                        E,
                                        new YU(
                                            D,
                                            null !== (T = l.get(E)) &&
                                            void 0 !== T
                                                ? T
                                                : null
                                        )
                                    );
                                }),
                                h
                            )
                        )
                    );
                }
                recalculateAndSaveOverlays(e, t) {
                    const r = rE();
                    let i = new Nr((l, h) => l - h),
                        a = nn();
                    return this.mutationQueue
                        .getAllMutationBatchesAffectingDocumentKeys(e, t)
                        .next((l) => {
                            for (const h of l)
                                h.keys().forEach((_) => {
                                    const E = t.get(_);
                                    if (null === E) return;
                                    let D = r.get(_) || mo.empty();
                                    (D = h.applyToLocalView(E, D)), r.set(_, D);
                                    const T = (i.get(h.batchId) || nn()).add(_);
                                    i = i.insert(h.batchId, T);
                                });
                        })
                        .next(() => {
                            const l = [],
                                h = i.getReverseIterator();
                            for (; h.hasNext(); ) {
                                const _ = h.getNext(),
                                    E = _.key,
                                    D = _.value,
                                    T = Bk();
                                D.forEach((R) => {
                                    if (!a.has(R)) {
                                        const F = Mk(t.get(R), r.get(R));
                                        null !== F && T.set(R, F),
                                            (a = a.add(R));
                                    }
                                }),
                                    l.push(
                                        this.documentOverlayCache.saveOverlays(
                                            e,
                                            E,
                                            T
                                        )
                                    );
                            }
                            return ue.waitFor(l);
                        })
                        .next(() => r);
                }
                recalculateAndSaveOverlaysForDocumentKeys(e, t) {
                    return this.remoteDocumentCache
                        .getEntries(e, t)
                        .next((r) => this.recalculateAndSaveOverlays(e, r));
                }
                getDocumentsMatchingQuery(e, t, r) {
                    return Xe.isDocumentKey((i = t).path) &&
                        null === i.collectionGroup &&
                        0 === i.filters.length
                        ? this.getDocumentsMatchingDocumentQuery(e, t.path)
                        : Yx(t)
                        ? this.getDocumentsMatchingCollectionGroupQuery(e, t, r)
                        : this.getDocumentsMatchingCollectionQuery(e, t, r);
                    var i;
                }
                getNextDocuments(e, t, r, i) {
                    return this.remoteDocumentCache
                        .getAllFromCollectionGroup(e, t, r, i)
                        .next((a) => {
                            const l =
                                i - a.size > 0
                                    ? this.documentOverlayCache.getOverlaysForCollectionGroup(
                                          e,
                                          t,
                                          r.largestBatchId,
                                          i - a.size
                                      )
                                    : ue.resolve(ku());
                            let h = -1,
                                _ = a;
                            return l.next((E) =>
                                ue
                                    .forEach(
                                        E,
                                        (D, T) => (
                                            h < T.largestBatchId &&
                                                (h = T.largestBatchId),
                                            a.get(D)
                                                ? ue.resolve()
                                                : this.getBaseDocument(
                                                      e,
                                                      D,
                                                      T
                                                  ).next((R) => {
                                                      _ = _.insert(D, R);
                                                  })
                                        )
                                    )
                                    .next(() => this.populateOverlays(e, E, a))
                                    .next(() =>
                                        this.computeViews(e, _, E, nn())
                                    )
                                    .next((D) => ({
                                        batchId: h,
                                        changes: Uk(D),
                                    }))
                            );
                        });
                }
                getDocumentsMatchingDocumentQuery(e, t) {
                    return this.getDocument(e, new Xe(t)).next((r) => {
                        let i = nE();
                        return (
                            r.isFoundDocument() && (i = i.insert(r.key, r)), i
                        );
                    });
                }
                getDocumentsMatchingCollectionGroupQuery(e, t, r) {
                    const i = t.collectionGroup;
                    let a = nE();
                    return this.indexManager
                        .getCollectionParents(e, i)
                        .next((l) =>
                            ue
                                .forEach(l, (h) => {
                                    const _ =
                                        ((E = t),
                                        (D = h.child(i)),
                                        new Jl(
                                            D,
                                            null,
                                            E.explicitOrderBy.slice(),
                                            E.filters.slice(),
                                            E.limit,
                                            E.limitType,
                                            E.startAt,
                                            E.endAt
                                        ));
                                    var E, D;
                                    return this.getDocumentsMatchingCollectionQuery(
                                        e,
                                        _,
                                        r
                                    ).next((E) => {
                                        E.forEach((D, T) => {
                                            a = a.insert(D, T);
                                        });
                                    });
                                })
                                .next(() => a)
                        );
                }
                getDocumentsMatchingCollectionQuery(e, t, r) {
                    let i;
                    return this.remoteDocumentCache
                        .getAllFromCollection(e, t.path, r)
                        .next(
                            (a) => (
                                (i = a),
                                this.documentOverlayCache.getOverlaysForCollection(
                                    e,
                                    t.path,
                                    r.largestBatchId
                                )
                            )
                        )
                        .next((a) => {
                            a.forEach((h, _) => {
                                const E = _.getKey();
                                null === i.get(E) &&
                                    (i = i.insert(E, Zn.newInvalidDocument(E)));
                            });
                            let l = nE();
                            return (
                                i.forEach((h, _) => {
                                    const E = a.get(h);
                                    void 0 !== E &&
                                        tE(E.mutation, _, mo.empty(), mr.now()),
                                        Jx(t, _) && (l = l.insert(h, _));
                                }),
                                l
                            );
                        });
                }
                getBaseDocument(e, t, r) {
                    return null === r || 1 === r.mutation.type
                        ? this.remoteDocumentCache.getEntry(e, t)
                        : ue.resolve(Zn.newInvalidDocument(t));
                }
            }
            class QU {
                constructor(e) {
                    (this.wt = e), (this.Jn = new Map()), (this.Yn = new Map());
                }
                getBundleMetadata(e, t) {
                    return ue.resolve(this.Jn.get(t));
                }
                saveBundleMetadata(e, t) {
                    var r;
                    return (
                        this.Jn.set(t.id, {
                            id: (r = t).id,
                            version: r.version,
                            createTime: wi(r.createTime),
                        }),
                        ue.resolve()
                    );
                }
                getNamedQuery(e, t) {
                    return ue.resolve(this.Yn.get(t));
                }
                saveNamedQuery(e, t) {
                    return (
                        this.Yn.set(t.name, {
                            name: (r = t).name,
                            query: aR(r.bundledQuery),
                            readTime: wi(r.readTime),
                        }),
                        ue.resolve()
                    );
                    var r;
                }
            }
            class JU {
                constructor() {
                    (this.overlays = new Nr(Xe.comparator)),
                        (this.Xn = new Map());
                }
                getOverlay(e, t) {
                    return ue.resolve(this.overlays.get(t));
                }
                getOverlays(e, t) {
                    const r = ku();
                    return ue
                        .forEach(t, (i) =>
                            this.getOverlay(e, i).next((a) => {
                                null !== a && r.set(i, a);
                            })
                        )
                        .next(() => r);
                }
                saveOverlays(e, t, r) {
                    return (
                        r.forEach((i, a) => {
                            this.ie(e, t, a);
                        }),
                        ue.resolve()
                    );
                }
                removeOverlaysForBatchId(e, t, r) {
                    const i = this.Xn.get(r);
                    return (
                        void 0 !== i &&
                            (i.forEach(
                                (a) => (this.overlays = this.overlays.remove(a))
                            ),
                            this.Xn.delete(r)),
                        ue.resolve()
                    );
                }
                getOverlaysForCollection(e, t, r) {
                    const i = ku(),
                        a = t.length + 1,
                        l = new Xe(t.child("")),
                        h = this.overlays.getIteratorFrom(l);
                    for (; h.hasNext(); ) {
                        const _ = h.getNext().value,
                            E = _.getKey();
                        if (!t.isPrefixOf(E.path)) break;
                        E.path.length === a &&
                            _.largestBatchId > r &&
                            i.set(_.getKey(), _);
                    }
                    return ue.resolve(i);
                }
                getOverlaysForCollectionGroup(e, t, r, i) {
                    let a = new Nr((E, D) => E - D);
                    const l = this.overlays.getIterator();
                    for (; l.hasNext(); ) {
                        const E = l.getNext().value;
                        if (
                            E.getKey().getCollectionGroup() === t &&
                            E.largestBatchId > r
                        ) {
                            let D = a.get(E.largestBatchId);
                            null === D &&
                                ((D = ku()),
                                (a = a.insert(E.largestBatchId, D))),
                                D.set(E.getKey(), E);
                        }
                    }
                    const h = ku(),
                        _ = a.getIterator();
                    for (
                        ;
                        _.hasNext() &&
                        (_.getNext().value.forEach((E, D) => h.set(E, D)),
                        !(h.size() >= i));

                    );
                    return ue.resolve(h);
                }
                ie(e, t, r) {
                    const i = this.overlays.get(r.key);
                    if (null !== i) {
                        const l = this.Xn.get(i.largestBatchId).delete(r.key);
                        this.Xn.set(i.largestBatchId, l);
                    }
                    this.overlays = this.overlays.insert(r.key, new oR(t, r));
                    let a = this.Xn.get(t);
                    void 0 === a && ((a = nn()), this.Xn.set(t, a)),
                        this.Xn.set(t, a.add(r.key));
                }
            }
            class cR {
                constructor() {
                    (this.Zn = new Hn(Ii.ts)), (this.es = new Hn(Ii.ns));
                }
                isEmpty() {
                    return this.Zn.isEmpty();
                }
                addReference(e, t) {
                    const r = new Ii(e, t);
                    (this.Zn = this.Zn.add(r)), (this.es = this.es.add(r));
                }
                ss(e, t) {
                    e.forEach((r) => this.addReference(r, t));
                }
                removeReference(e, t) {
                    this.rs(new Ii(e, t));
                }
                os(e, t) {
                    e.forEach((r) => this.removeReference(r, t));
                }
                us(e) {
                    const t = new Xe(new wn([])),
                        r = new Ii(t, e),
                        i = new Ii(t, e + 1),
                        a = [];
                    return (
                        this.es.forEachInRange([r, i], (l) => {
                            this.rs(l), a.push(l.key);
                        }),
                        a
                    );
                }
                cs() {
                    this.Zn.forEach((e) => this.rs(e));
                }
                rs(e) {
                    (this.Zn = this.Zn.delete(e)),
                        (this.es = this.es.delete(e));
                }
                hs(e) {
                    const t = new Xe(new wn([])),
                        r = new Ii(t, e),
                        i = new Ii(t, e + 1);
                    let a = nn();
                    return (
                        this.es.forEachInRange([r, i], (l) => {
                            a = a.add(l.key);
                        }),
                        a
                    );
                }
                containsKey(e) {
                    const t = new Ii(e, 0),
                        r = this.Zn.firstAfterOrEqual(t);
                    return null !== r && e.isEqual(r.key);
                }
            }
            class Ii {
                constructor(e, t) {
                    (this.key = e), (this.ls = t);
                }
                static ts(e, t) {
                    return Xe.comparator(e.key, t.key) || Qt(e.ls, t.ls);
                }
                static ns(e, t) {
                    return Qt(e.ls, t.ls) || Xe.comparator(e.key, t.key);
                }
            }
            class XU {
                constructor(e, t) {
                    (this.indexManager = e),
                        (this.referenceDelegate = t),
                        (this.mutationQueue = []),
                        (this.fs = 1),
                        (this.ds = new Hn(Ii.ts));
                }
                checkEmpty(e) {
                    return ue.resolve(0 === this.mutationQueue.length);
                }
                addMutationBatch(e, t, r, i) {
                    const a = this.fs;
                    this.fs++;
                    const l = new iR(a, t, r, i);
                    this.mutationQueue.push(l);
                    for (const h of i)
                        (this.ds = this.ds.add(new Ii(h.key, a))),
                            this.indexManager.addToCollectionParentIndex(
                                e,
                                h.key.path.popLast()
                            );
                    return ue.resolve(l);
                }
                lookupMutationBatch(e, t) {
                    return ue.resolve(this._s(t));
                }
                getNextMutationBatchAfterBatchId(e, t) {
                    const i = this.ws(t + 1),
                        a = i < 0 ? 0 : i;
                    return ue.resolve(
                        this.mutationQueue.length > a
                            ? this.mutationQueue[a]
                            : null
                    );
                }
                getHighestUnacknowledgedBatchId() {
                    return ue.resolve(
                        0 === this.mutationQueue.length ? -1 : this.fs - 1
                    );
                }
                getAllMutationBatches(e) {
                    return ue.resolve(this.mutationQueue.slice());
                }
                getAllMutationBatchesAffectingDocumentKey(e, t) {
                    const r = new Ii(t, 0),
                        i = new Ii(t, Number.POSITIVE_INFINITY),
                        a = [];
                    return (
                        this.ds.forEachInRange([r, i], (l) => {
                            const h = this._s(l.ls);
                            a.push(h);
                        }),
                        ue.resolve(a)
                    );
                }
                getAllMutationBatchesAffectingDocumentKeys(e, t) {
                    let r = new Hn(Qt);
                    return (
                        t.forEach((i) => {
                            const a = new Ii(i, 0),
                                l = new Ii(i, Number.POSITIVE_INFINITY);
                            this.ds.forEachInRange([a, l], (h) => {
                                r = r.add(h.ls);
                            });
                        }),
                        ue.resolve(this.gs(r))
                    );
                }
                getAllMutationBatchesAffectingQuery(e, t) {
                    const r = t.path,
                        i = r.length + 1;
                    let a = r;
                    Xe.isDocumentKey(a) || (a = a.child(""));
                    const l = new Ii(new Xe(a), 0);
                    let h = new Hn(Qt);
                    return (
                        this.ds.forEachWhile((_) => {
                            const E = _.key.path;
                            return (
                                !!r.isPrefixOf(E) &&
                                (E.length === i && (h = h.add(_.ls)), !0)
                            );
                        }, l),
                        ue.resolve(this.gs(h))
                    );
                }
                gs(e) {
                    const t = [];
                    return (
                        e.forEach((r) => {
                            const i = this._s(r);
                            null !== i && t.push(i);
                        }),
                        t
                    );
                }
                removeMutationBatch(e, t) {
                    Vt(0 === this.ys(t.batchId, "removed")),
                        this.mutationQueue.shift();
                    let r = this.ds;
                    return ue
                        .forEach(t.mutations, (i) => {
                            const a = new Ii(i.key, t.batchId);
                            return (
                                (r = r.delete(a)),
                                this.referenceDelegate.markPotentiallyOrphaned(
                                    e,
                                    i.key
                                )
                            );
                        })
                        .next(() => {
                            this.ds = r;
                        });
                }
                In(e) {}
                containsKey(e, t) {
                    const r = new Ii(t, 0),
                        i = this.ds.firstAfterOrEqual(r);
                    return ue.resolve(t.isEqual(i && i.key));
                }
                performConsistencyCheck(e) {
                    return ue.resolve();
                }
                ys(e, t) {
                    return this.ws(e);
                }
                ws(e) {
                    return 0 === this.mutationQueue.length
                        ? 0
                        : e - this.mutationQueue[0].batchId;
                }
                _s(e) {
                    const t = this.ws(e);
                    return t < 0 || t >= this.mutationQueue.length
                        ? null
                        : this.mutationQueue[t];
                }
            }
            class eB {
                constructor(e) {
                    (this.ps = e),
                        (this.docs = new Nr(Xe.comparator)),
                        (this.size = 0);
                }
                setIndexManager(e) {
                    this.indexManager = e;
                }
                addEntry(e, t) {
                    const r = t.key,
                        i = this.docs.get(r),
                        a = i ? i.size : 0,
                        l = this.ps(t);
                    return (
                        (this.docs = this.docs.insert(r, {
                            document: t.mutableCopy(),
                            size: l,
                        })),
                        (this.size += l - a),
                        this.indexManager.addToCollectionParentIndex(
                            e,
                            r.path.popLast()
                        )
                    );
                }
                removeEntry(e) {
                    const t = this.docs.get(e);
                    t &&
                        ((this.docs = this.docs.remove(e)),
                        (this.size -= t.size));
                }
                getEntry(e, t) {
                    const r = this.docs.get(t);
                    return ue.resolve(
                        r ? r.document.mutableCopy() : Zn.newInvalidDocument(t)
                    );
                }
                getEntries(e, t) {
                    let r = js();
                    return (
                        t.forEach((i) => {
                            const a = this.docs.get(i);
                            r = r.insert(
                                i,
                                a
                                    ? a.document.mutableCopy()
                                    : Zn.newInvalidDocument(i)
                            );
                        }),
                        ue.resolve(r)
                    );
                }
                getAllFromCollection(e, t, r) {
                    let i = js();
                    const a = new Xe(t.child("")),
                        l = this.docs.getIteratorFrom(a);
                    for (; l.hasNext(); ) {
                        const {
                            key: h,
                            value: { document: _ },
                        } = l.getNext();
                        if (!t.isPrefixOf(h.path)) break;
                        h.path.length > t.length + 1 ||
                            Hx(YP(_), r) <= 0 ||
                            (i = i.insert(_.key, _.mutableCopy()));
                    }
                    return ue.resolve(i);
                }
                getAllFromCollectionGroup(e, t, r, i) {
                    ft();
                }
                Is(e, t) {
                    return ue.forEach(this.docs, (r) => t(r));
                }
                newChangeBuffer(e) {
                    return new tB(this);
                }
                getSize(e) {
                    return ue.resolve(this.size);
                }
            }
            class tB extends TO {
                constructor(e) {
                    super(), (this.zn = e);
                }
                applyChanges(e) {
                    const t = [];
                    return (
                        this.changes.forEach((r, i) => {
                            i.isValidDocument()
                                ? t.push(this.zn.addEntry(e, i))
                                : this.zn.removeEntry(r);
                        }),
                        ue.waitFor(t)
                    );
                }
                getFromCache(e, t) {
                    return this.zn.getEntry(e, t);
                }
                getAllFromCache(e, t) {
                    return this.zn.getEntries(e, t);
                }
            }
            class nB {
                constructor(e) {
                    (this.persistence = e),
                        (this.Ts = new Xd((t) => pp(t), J0)),
                        (this.lastRemoteSnapshotVersion = Ft.min()),
                        (this.highestTargetId = 0),
                        (this.Es = 0),
                        (this.As = new cR()),
                        (this.targetCount = 0),
                        (this.Rs = Cp.An());
                }
                forEachTarget(e, t) {
                    return this.Ts.forEach((r, i) => t(i)), ue.resolve();
                }
                getLastRemoteSnapshotVersion(e) {
                    return ue.resolve(this.lastRemoteSnapshotVersion);
                }
                getHighestSequenceNumber(e) {
                    return ue.resolve(this.Es);
                }
                allocateTargetId(e) {
                    return (
                        (this.highestTargetId = this.Rs.next()),
                        ue.resolve(this.highestTargetId)
                    );
                }
                setTargetsMetadata(e, t, r) {
                    return (
                        r && (this.lastRemoteSnapshotVersion = r),
                        t > this.Es && (this.Es = t),
                        ue.resolve()
                    );
                }
                vn(e) {
                    this.Ts.set(e.target, e);
                    const t = e.targetId;
                    t > this.highestTargetId &&
                        ((this.Rs = new Cp(t)), (this.highestTargetId = t)),
                        e.sequenceNumber > this.Es &&
                            (this.Es = e.sequenceNumber);
                }
                addTargetData(e, t) {
                    return this.vn(t), (this.targetCount += 1), ue.resolve();
                }
                updateTargetData(e, t) {
                    return this.vn(t), ue.resolve();
                }
                removeTargetData(e, t) {
                    return (
                        this.Ts.delete(t.target),
                        this.As.us(t.targetId),
                        (this.targetCount -= 1),
                        ue.resolve()
                    );
                }
                removeTargets(e, t, r) {
                    let i = 0;
                    const a = [];
                    return (
                        this.Ts.forEach((l, h) => {
                            h.sequenceNumber <= t &&
                                null === r.get(h.targetId) &&
                                (this.Ts.delete(l),
                                a.push(
                                    this.removeMatchingKeysForTargetId(
                                        e,
                                        h.targetId
                                    )
                                ),
                                i++);
                        }),
                        ue.waitFor(a).next(() => i)
                    );
                }
                getTargetCount(e) {
                    return ue.resolve(this.targetCount);
                }
                getTargetData(e, t) {
                    const r = this.Ts.get(t) || null;
                    return ue.resolve(r);
                }
                addMatchingKeys(e, t, r) {
                    return this.As.ss(t, r), ue.resolve();
                }
                removeMatchingKeys(e, t, r) {
                    this.As.os(t, r);
                    const i = this.persistence.referenceDelegate,
                        a = [];
                    return (
                        i &&
                            t.forEach((l) => {
                                a.push(i.markPotentiallyOrphaned(e, l));
                            }),
                        ue.waitFor(a)
                    );
                }
                removeMatchingKeysForTargetId(e, t) {
                    return this.As.us(t), ue.resolve();
                }
                getMatchingKeysForTargetId(e, t) {
                    const r = this.As.hs(t);
                    return ue.resolve(r);
                }
                containsKey(e, t) {
                    return ue.resolve(this.As.containsKey(t));
                }
            }
            class NO {
                constructor(e, t) {
                    (this.bs = {}),
                        (this.overlays = {}),
                        (this.Ps = new Bs(0)),
                        (this.vs = !1),
                        (this.vs = !0),
                        (this.referenceDelegate = e(this)),
                        (this.Vs = new nB(this)),
                        (this.indexManager = new jU()),
                        (this.remoteDocumentCache = new eB((r) =>
                            this.referenceDelegate.Ss(r)
                        )),
                        (this.wt = new lO(t)),
                        (this.Ds = new QU(this.wt));
                }
                start() {
                    return Promise.resolve();
                }
                shutdown() {
                    return (this.vs = !1), Promise.resolve();
                }
                get started() {
                    return this.vs;
                }
                setDatabaseDeletedListener() {}
                setNetworkEnabled() {}
                getIndexManager(e) {
                    return this.indexManager;
                }
                getDocumentOverlayCache(e) {
                    let t = this.overlays[e.toKey()];
                    return (
                        t || ((t = new JU()), (this.overlays[e.toKey()] = t)), t
                    );
                }
                getMutationQueue(e, t) {
                    let r = this.bs[e.toKey()];
                    return (
                        r ||
                            ((r = new XU(t, this.referenceDelegate)),
                            (this.bs[e.toKey()] = r)),
                        r
                    );
                }
                getTargetCache() {
                    return this.Vs;
                }
                getRemoteDocumentCache() {
                    return this.remoteDocumentCache;
                }
                getBundleCache() {
                    return this.Ds;
                }
                runTransaction(e, t, r) {
                    $e("MemoryPersistence", "Starting transaction:", e);
                    const i = new rB(this.Ps.next());
                    return (
                        this.referenceDelegate.Cs(),
                        r(i)
                            .next((a) =>
                                this.referenceDelegate.xs(i).next(() => a)
                            )
                            .toPromise()
                            .then((a) => (i.raiseOnCommittedEvent(), a))
                    );
                }
                Ns(e, t) {
                    return ue.or(
                        Object.values(this.bs).map(
                            (r) => () => r.containsKey(e, t)
                        )
                    );
                }
            }
            class rB extends JP {
                constructor(e) {
                    super(), (this.currentSequenceNumber = e);
                }
            }
            class zD {
                constructor(e) {
                    (this.persistence = e),
                        (this.ks = new cR()),
                        (this.Os = null);
                }
                static Ms(e) {
                    return new zD(e);
                }
                get Fs() {
                    if (this.Os) return this.Os;
                    throw ft();
                }
                addReference(e, t, r) {
                    return (
                        this.ks.addReference(r, t),
                        this.Fs.delete(r.toString()),
                        ue.resolve()
                    );
                }
                removeReference(e, t, r) {
                    return (
                        this.ks.removeReference(r, t),
                        this.Fs.add(r.toString()),
                        ue.resolve()
                    );
                }
                markPotentiallyOrphaned(e, t) {
                    return this.Fs.add(t.toString()), ue.resolve();
                }
                removeTarget(e, t) {
                    this.ks
                        .us(t.targetId)
                        .forEach((i) => this.Fs.add(i.toString()));
                    const r = this.persistence.getTargetCache();
                    return r
                        .getMatchingKeysForTargetId(e, t.targetId)
                        .next((i) => {
                            i.forEach((a) => this.Fs.add(a.toString()));
                        })
                        .next(() => r.removeTargetData(e, t));
                }
                Cs() {
                    this.Os = new Set();
                }
                xs(e) {
                    const t = this.persistence
                        .getRemoteDocumentCache()
                        .newChangeBuffer();
                    return ue
                        .forEach(this.Fs, (r) => {
                            const i = Xe.fromPath(r);
                            return this.$s(e, i).next((a) => {
                                a || t.removeEntry(i, Ft.min());
                            });
                        })
                        .next(() => ((this.Os = null), t.apply(e)));
                }
                updateLimboDocument(e, t) {
                    return this.$s(e, t).next((r) => {
                        r
                            ? this.Fs.delete(t.toString())
                            : this.Fs.add(t.toString());
                    });
                }
                Ss(e) {
                    return 0;
                }
                $s(e, t) {
                    return ue.or([
                        () => ue.resolve(this.ks.containsKey(t)),
                        () =>
                            this.persistence.getTargetCache().containsKey(e, t),
                        () => this.persistence.Ns(e, t),
                    ]);
                }
            }
            class iB {
                constructor(e) {
                    this.wt = e;
                }
                O(e, t, r, i) {
                    const a = new SD("createOrUpgrade", t);
                    var h;
                    r < 1 &&
                        i >= 1 &&
                        (e.createObjectStore("owner"),
                        (h = e).createObjectStore("mutationQueues", {
                            keyPath: "userId",
                        }),
                        h
                            .createObjectStore("mutations", {
                                keyPath: "batchId",
                                autoIncrement: !0,
                            })
                            .createIndex("userMutationsIndex", iO, {
                                unique: !0,
                            }),
                        h.createObjectStore("documentMutations"),
                        PO(e),
                        (function (h) {
                            h.createObjectStore("remoteDocuments");
                        })(e));
                    let l = ue.resolve();
                    return (
                        r < 3 &&
                            i >= 3 &&
                            (0 !== r &&
                                ((function (h) {
                                    h.deleteObjectStore("targetDocuments"),
                                        h.deleteObjectStore("targets"),
                                        h.deleteObjectStore("targetGlobal");
                                })(e),
                                PO(e)),
                            (l = l.next(() =>
                                (function (h) {
                                    const _ = h.store("targetGlobal"),
                                        E = {
                                            highestTargetId: 0,
                                            highestListenSequenceNumber: 0,
                                            lastRemoteSnapshotVersion:
                                                Ft.min().toTimestamp(),
                                            targetCount: 0,
                                        };
                                    return _.put("targetGlobalKey", E);
                                })(a)
                            ))),
                        r < 4 &&
                            i >= 4 &&
                            (0 !== r &&
                                (l = l.next(() =>
                                    (function (h, _) {
                                        return _.store("mutations")
                                            .K()
                                            .next((E) => {
                                                h.deleteObjectStore(
                                                    "mutations"
                                                ),
                                                    h
                                                        .createObjectStore(
                                                            "mutations",
                                                            {
                                                                keyPath:
                                                                    "batchId",
                                                                autoIncrement:
                                                                    !0,
                                                            }
                                                        )
                                                        .createIndex(
                                                            "userMutationsIndex",
                                                            iO,
                                                            { unique: !0 }
                                                        );
                                                const D = _.store("mutations"),
                                                    T = E.map((R) => D.put(R));
                                                return ue.waitFor(T);
                                            });
                                    })(e, a)
                                )),
                            (l = l.next(() => {
                                !(function (h) {
                                    h.createObjectStore("clientMetadata", {
                                        keyPath: "clientId",
                                    });
                                })(e);
                            }))),
                        r < 5 && i >= 5 && (l = l.next(() => this.Bs(a))),
                        r < 6 &&
                            i >= 6 &&
                            (l = l.next(
                                () => (
                                    (function (h) {
                                        h.createObjectStore(
                                            "remoteDocumentGlobal"
                                        );
                                    })(e),
                                    this.Ls(a)
                                )
                            )),
                        r < 7 && i >= 7 && (l = l.next(() => this.Us(a))),
                        r < 8 && i >= 8 && (l = l.next(() => this.qs(e, a))),
                        r < 9 &&
                            i >= 9 &&
                            (l = l.next(() => {
                                !(function (h) {
                                    h.objectStoreNames.contains(
                                        "remoteDocumentChanges"
                                    ) &&
                                        h.deleteObjectStore(
                                            "remoteDocumentChanges"
                                        );
                                })(e);
                            })),
                        r < 10 && i >= 10 && (l = l.next(() => this.Ks(a))),
                        r < 11 &&
                            i >= 11 &&
                            (l = l.next(() => {
                                (function (h) {
                                    h.createObjectStore("bundles", {
                                        keyPath: "bundleId",
                                    });
                                })(e),
                                    (function (h) {
                                        h.createObjectStore("namedQueries", {
                                            keyPath: "name",
                                        });
                                    })(e);
                            })),
                        r < 12 &&
                            i >= 12 &&
                            (l = l.next(() => {
                                !(function (h) {
                                    const _ = h.createObjectStore(
                                        "documentOverlays",
                                        { keyPath: xU }
                                    );
                                    _.createIndex(
                                        "collectionPathOverlayIndex",
                                        RU,
                                        { unique: !1 }
                                    ),
                                        _.createIndex(
                                            "collectionGroupOverlayIndex",
                                            MU,
                                            { unique: !1 }
                                        );
                                })(e);
                            })),
                        r < 13 &&
                            i >= 13 &&
                            (l = l
                                .next(() =>
                                    (function (h) {
                                        const _ = h.createObjectStore(
                                            "remoteDocumentsV14",
                                            { keyPath: yU }
                                        );
                                        _.createIndex("documentKeyIndex", vU),
                                            _.createIndex(
                                                "collectionGroupIndex",
                                                wU
                                            );
                                    })(e)
                                )
                                .next(() => this.Gs(e, a))
                                .next(() =>
                                    e.deleteObjectStore("remoteDocuments")
                                )),
                        r < 14 && i >= 14 && (l = l.next(() => this.Qs(e, a))),
                        r < 15 &&
                            i >= 15 &&
                            (l = l.next(() =>
                                (function (h) {
                                    h
                                        .createObjectStore(
                                            "indexConfiguration",
                                            {
                                                keyPath: "indexId",
                                                autoIncrement: !0,
                                            }
                                        )
                                        .createIndex(
                                            "collectionGroupIndex",
                                            "collectionGroup",
                                            { unique: !1 }
                                        ),
                                        h
                                            .createObjectStore("indexState", {
                                                keyPath: DU,
                                            })
                                            .createIndex(
                                                "sequenceNumberIndex",
                                                TU,
                                                { unique: !1 }
                                            ),
                                        h
                                            .createObjectStore("indexEntries", {
                                                keyPath: SU,
                                            })
                                            .createIndex(
                                                "documentKeyIndex",
                                                AU,
                                                { unique: !1 }
                                            );
                                })(e)
                            )),
                        l
                    );
                }
                Ls(e) {
                    let t = 0;
                    return e
                        .store("remoteDocuments")
                        .J((r, i) => {
                            t += $D(i);
                        })
                        .next(() => {
                            const r = { byteSize: t };
                            return e
                                .store("remoteDocumentGlobal")
                                .put("remoteDocumentGlobalKey", r);
                        });
                }
                Bs(e) {
                    const t = e.store("mutationQueues"),
                        r = e.store("mutations");
                    return t.K().next((i) =>
                        ue.forEach(i, (a) => {
                            const l = IDBKeyRange.bound(
                                [a.userId, -1],
                                [a.userId, a.lastAcknowledgedBatchId]
                            );
                            return r.K("userMutationsIndex", l).next((h) =>
                                ue.forEach(h, (_) => {
                                    Vt(_.userId === a.userId);
                                    const E = vp(this.wt, _);
                                    return EO(e, a.userId, E).next(() => {});
                                })
                            );
                        })
                    );
                }
                Us(e) {
                    const t = e.store("targetDocuments"),
                        r = e.store("remoteDocuments");
                    return e
                        .store("targetGlobal")
                        .get("targetGlobalKey")
                        .next((i) => {
                            const a = [];
                            return r
                                .J((l, h) => {
                                    const _ = new wn(l),
                                        E = [0, ys(_)];
                                    a.push(
                                        t
                                            .get(E)
                                            .next((D) =>
                                                D
                                                    ? ue.resolve()
                                                    : t.put({
                                                          targetId: 0,
                                                          path: ys(_),
                                                          sequenceNumber:
                                                              i.highestListenSequenceNumber,
                                                      })
                                            )
                                    );
                                })
                                .next(() => ue.waitFor(a));
                        });
                }
                qs(e, t) {
                    e.createObjectStore("collectionParents", { keyPath: bU });
                    const r = t.store("collectionParents"),
                        i = new lR(),
                        a = (l) => {
                            if (i.add(l)) {
                                const h = l.lastSegment(),
                                    _ = l.popLast();
                                return r.put({
                                    collectionId: h,
                                    parent: ys(_),
                                });
                            }
                        };
                    return t
                        .store("remoteDocuments")
                        .J({ H: !0 }, (l, h) => {
                            const _ = new wn(l);
                            return a(_.popLast());
                        })
                        .next(() =>
                            t
                                .store("documentMutations")
                                .J({ H: !0 }, ([l, h, _], E) => {
                                    const D = Fu(h);
                                    return a(D.popLast());
                                })
                        );
                }
                Ks(e) {
                    const t = e.store("targets");
                    return t.J((r, i) => {
                        const a = cE(i),
                            l = dO(this.wt, a);
                        return t.put(l);
                    });
                }
                Gs(e, t) {
                    const r = t.store("remoteDocuments"),
                        i = [];
                    return r
                        .J((a, l) => {
                            const h = t.store("remoteDocumentsV14"),
                                _ = ((E = l),
                                E.document
                                    ? new Xe(
                                          wn
                                              .fromString(E.document.name)
                                              .popFirst(5)
                                      )
                                    : E.noDocument
                                    ? Xe.fromSegments(E.noDocument.path)
                                    : E.unknownDocument
                                    ? Xe.fromSegments(E.unknownDocument.path)
                                    : ft()).path.toArray();
                            var E;
                            const D = {
                                prefixPath: _.slice(0, _.length - 2),
                                collectionGroup: _[_.length - 2],
                                documentId: _[_.length - 1],
                                readTime: l.readTime || [0, 0],
                                unknownDocument: l.unknownDocument,
                                noDocument: l.noDocument,
                                document: l.document,
                                hasCommittedMutations:
                                    !!l.hasCommittedMutations,
                            };
                            i.push(h.put(D));
                        })
                        .next(() => ue.waitFor(i));
                }
                Qs(e, t) {
                    const r = t.store("mutations"),
                        i = SO(this.wt),
                        a = new NO(zD.Ms, this.wt.ne);
                    return r.K().next((l) => {
                        const h = new Map();
                        return (
                            l.forEach((_) => {
                                var E;
                                let D =
                                    null !== (E = h.get(_.userId)) &&
                                    void 0 !== E
                                        ? E
                                        : nn();
                                vp(this.wt, _)
                                    .keys()
                                    .forEach((T) => (D = D.add(T))),
                                    h.set(_.userId, D);
                            }),
                            ue.forEach(h, (_, E) => {
                                const D = new yi(E),
                                    T = BD.se(this.wt, D),
                                    R = a.getIndexManager(D),
                                    F = GD.se(
                                        D,
                                        this.wt,
                                        R,
                                        a.referenceDelegate
                                    );
                                return new MO(i, F, T, R)
                                    .recalculateAndSaveOverlaysForDocumentKeys(
                                        new rR(t, Bs.ot),
                                        _
                                    )
                                    .next();
                            })
                        );
                    });
                }
            }
            function PO(n) {
                n
                    .createObjectStore("targetDocuments", { keyPath: IU })
                    .createIndex("documentTargetsIndex", CU, { unique: !0 }),
                    n
                        .createObjectStore("targets", { keyPath: "targetId" })
                        .createIndex("queryTargetsIndex", EU, { unique: !0 }),
                    n.createObjectStore("targetGlobal");
            }
            const dR =
                "Failed to obtain exclusive access to the persistence layer. To allow shared access, multi-tab synchronization has to be enabled in all tabs. If you are using `experimentalForceOwningTab:true`, make sure that only one tab has persistence enabled at any given time.";
            class hR {
                constructor(e, t, r, i, a, l, h, _, E, D, T = 14) {
                    if (
                        ((this.allowTabSynchronization = e),
                        (this.persistenceKey = t),
                        (this.clientId = r),
                        (this.js = a),
                        (this.window = l),
                        (this.document = h),
                        (this.Ws = E),
                        (this.zs = D),
                        (this.Hs = T),
                        (this.Ps = null),
                        (this.vs = !1),
                        (this.isPrimary = !1),
                        (this.networkEnabled = !0),
                        (this.Js = null),
                        (this.inForeground = !1),
                        (this.Ys = null),
                        (this.Xs = null),
                        (this.Zs = Number.NEGATIVE_INFINITY),
                        (this.ti = (R) => Promise.resolve()),
                        !hR.V())
                    )
                        throw new Ve(
                            me.UNIMPLEMENTED,
                            "This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled."
                        );
                    (this.referenceDelegate = new qU(this, i)),
                        (this.ei = t + "main"),
                        (this.wt = new lO(_)),
                        (this.ni = new Pa(this.ei, this.Hs, new iB(this.wt))),
                        (this.Vs = new $U(this.referenceDelegate, this.wt)),
                        (this.remoteDocumentCache = SO(this.wt)),
                        (this.Ds = new OU()),
                        this.window && this.window.localStorage
                            ? (this.si = this.window.localStorage)
                            : ((this.si = null),
                              !1 === D &&
                                  qr(
                                      "IndexedDbPersistence",
                                      "LocalStorage is unavailable. As a result, persistence may not work reliably. In particular enablePersistence() could fail immediately after refreshing the page."
                                  ));
                }
                start() {
                    return this.ii()
                        .then(() => {
                            if (
                                !this.isPrimary &&
                                !this.allowTabSynchronization
                            )
                                throw new Ve(me.FAILED_PRECONDITION, dR);
                            return (
                                this.ri(),
                                this.oi(),
                                this.ui(),
                                this.runTransaction(
                                    "getHighestListenSequenceNumber",
                                    "readonly",
                                    (e) => this.Vs.getHighestSequenceNumber(e)
                                )
                            );
                        })
                        .then((e) => {
                            this.Ps = new Bs(e, this.Ws);
                        })
                        .then(() => {
                            this.vs = !0;
                        })
                        .catch(
                            (e) => (
                                this.ni && this.ni.close(), Promise.reject(e)
                            )
                        );
                }
                ci(e) {
                    var t = this;
                    return (
                        (this.ti = (function () {
                            var r = (0, y.Z)(function* (i) {
                                if (t.started) return e(i);
                            });
                            return function (i) {
                                return r.apply(this, arguments);
                            };
                        })()),
                        e(this.isPrimary)
                    );
                }
                setDatabaseDeletedListener(e) {
                    this.ni.F(
                        (function () {
                            var t = (0, y.Z)(function* (r) {
                                null === r.newVersion && (yield e());
                            });
                            return function (r) {
                                return t.apply(this, arguments);
                            };
                        })()
                    );
                }
                setNetworkEnabled(e) {
                    var t = this;
                    this.networkEnabled !== e &&
                        ((this.networkEnabled = e),
                        this.js.enqueueAndForget(
                            (0, y.Z)(function* () {
                                t.started && (yield t.ii());
                            })
                        ));
                }
                ii() {
                    return this.runTransaction(
                        "updateClientMetadataAndTryBecomePrimary",
                        "readwrite",
                        (e) =>
                            qD(e)
                                .put({
                                    clientId: this.clientId,
                                    updateTimeMs: Date.now(),
                                    networkEnabled: this.networkEnabled,
                                    inForeground: this.inForeground,
                                })
                                .next(() => {
                                    if (this.isPrimary)
                                        return this.ai(e).next((t) => {
                                            t ||
                                                ((this.isPrimary = !1),
                                                this.js.enqueueRetryable(() =>
                                                    this.ti(!1)
                                                ));
                                        });
                                })
                                .next(() => this.hi(e))
                                .next((t) =>
                                    this.isPrimary && !t
                                        ? this.li(e).next(() => !1)
                                        : !!t && this.fi(e).next(() => !0)
                                )
                    )
                        .catch((e) => {
                            if (Kd(e))
                                return (
                                    $e(
                                        "IndexedDbPersistence",
                                        "Failed to extend owner lease: ",
                                        e
                                    ),
                                    this.isPrimary
                                );
                            if (!this.allowTabSynchronization) throw e;
                            return (
                                $e(
                                    "IndexedDbPersistence",
                                    "Releasing owner lease after error during lease refresh",
                                    e
                                ),
                                !1
                            );
                        })
                        .then((e) => {
                            this.isPrimary !== e &&
                                this.js.enqueueRetryable(() => this.ti(e)),
                                (this.isPrimary = e);
                        });
                }
                ai(e) {
                    return mE(e)
                        .get("owner")
                        .next((t) => ue.resolve(this.di(t)));
                }
                _i(e) {
                    return qD(e).delete(this.clientId);
                }
                wi() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        if (e.isPrimary && !e.mi(e.Zs, 18e5)) {
                            e.Zs = Date.now();
                            const t = yield e
                                .runTransaction(
                                    "maybeGarbageCollectMultiClientState",
                                    "readwrite-primary",
                                    (r) => {
                                        const i = Ei(r, "clientMetadata");
                                        return i.K().next((a) => {
                                            const l = e.gi(a, 18e5),
                                                h = a.filter(
                                                    (_) => -1 === l.indexOf(_)
                                                );
                                            return ue
                                                .forEach(h, (_) =>
                                                    i.delete(_.clientId)
                                                )
                                                .next(() => h);
                                        });
                                    }
                                )
                                .catch(() => []);
                            if (e.si)
                                for (const r of t)
                                    e.si.removeItem(e.yi(r.clientId));
                        }
                    })();
                }
                ui() {
                    this.Xs = this.js.enqueueAfterDelay(
                        "client_metadata_refresh",
                        4e3,
                        () =>
                            this.ii()
                                .then(() => this.wi())
                                .then(() => this.ui())
                    );
                }
                di(e) {
                    return !!e && e.ownerId === this.clientId;
                }
                hi(e) {
                    return this.zs
                        ? ue.resolve(!0)
                        : mE(e)
                              .get("owner")
                              .next((t) => {
                                  if (
                                      null !== t &&
                                      this.mi(t.leaseTimestampMs, 5e3) &&
                                      !this.pi(t.ownerId)
                                  ) {
                                      if (this.di(t) && this.networkEnabled)
                                          return !0;
                                      if (!this.di(t)) {
                                          if (!t.allowTabSynchronization)
                                              throw new Ve(
                                                  me.FAILED_PRECONDITION,
                                                  dR
                                              );
                                          return !1;
                                      }
                                  }
                                  return (
                                      !(
                                          !this.networkEnabled ||
                                          !this.inForeground
                                      ) ||
                                      qD(e)
                                          .K()
                                          .next(
                                              (r) =>
                                                  void 0 ===
                                                  this.gi(r, 5e3).find((i) => {
                                                      if (
                                                          this.clientId !==
                                                          i.clientId
                                                      ) {
                                                          const l =
                                                                  !this
                                                                      .inForeground &&
                                                                  i.inForeground,
                                                              h =
                                                                  this
                                                                      .networkEnabled ===
                                                                  i.networkEnabled;
                                                          if (
                                                              (!this
                                                                  .networkEnabled &&
                                                                  i.networkEnabled) ||
                                                              (l && h)
                                                          )
                                                              return !0;
                                                      }
                                                      return !1;
                                                  })
                                          )
                                  );
                              })
                              .next(
                                  (t) => (
                                      this.isPrimary !== t &&
                                          $e(
                                              "IndexedDbPersistence",
                                              `Client ${
                                                  t ? "is" : "is not"
                                              } eligible for a primary lease.`
                                          ),
                                      t
                                  )
                              );
                }
                shutdown() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        (e.vs = !1),
                            e.Ii(),
                            e.Xs && (e.Xs.cancel(), (e.Xs = null)),
                            e.Ti(),
                            e.Ei(),
                            yield e.ni.runTransaction(
                                "shutdown",
                                "readwrite",
                                ["owner", "clientMetadata"],
                                (t) => {
                                    const r = new rR(t, Bs.ot);
                                    return e.li(r).next(() => e._i(r));
                                }
                            ),
                            e.ni.close(),
                            e.Ai();
                    })();
                }
                gi(e, t) {
                    return e.filter(
                        (r) =>
                            this.mi(r.updateTimeMs, t) && !this.pi(r.clientId)
                    );
                }
                Ri() {
                    return this.runTransaction(
                        "getActiveClients",
                        "readonly",
                        (e) =>
                            qD(e)
                                .K()
                                .next((t) =>
                                    this.gi(t, 18e5).map((r) => r.clientId)
                                )
                    );
                }
                get started() {
                    return this.vs;
                }
                getMutationQueue(e, t) {
                    return GD.se(e, this.wt, t, this.referenceDelegate);
                }
                getTargetCache() {
                    return this.Vs;
                }
                getRemoteDocumentCache() {
                    return this.remoteDocumentCache;
                }
                getIndexManager(e) {
                    return new HU(e, this.wt.ne.databaseId);
                }
                getDocumentOverlayCache(e) {
                    return BD.se(this.wt, e);
                }
                getBundleCache() {
                    return this.Ds;
                }
                runTransaction(e, t, r) {
                    $e("IndexedDbPersistence", "Starting transaction:", e);
                    const i = "readonly" === t ? "readonly" : "readwrite",
                        a =
                            15 === (l = this.Hs)
                                ? PU
                                : 14 === l
                                ? uO
                                : 13 === l
                                ? aO
                                : 12 === l
                                ? NU
                                : 11 === l
                                ? oO
                                : void ft();
                    var l;
                    let h;
                    return this.ni
                        .runTransaction(
                            e,
                            i,
                            a,
                            (_) => (
                                (h = new rR(
                                    _,
                                    this.Ps ? this.Ps.next() : Bs.ot
                                )),
                                "readwrite-primary" === t
                                    ? this.ai(h)
                                          .next((E) => !!E || this.hi(h))
                                          .next((E) => {
                                              if (!E)
                                                  throw (
                                                      (qr(
                                                          `Failed to obtain primary lease for action '${e}'.`
                                                      ),
                                                      (this.isPrimary = !1),
                                                      this.js.enqueueRetryable(
                                                          () => this.ti(!1)
                                                      ),
                                                      new Ve(
                                                          me.FAILED_PRECONDITION,
                                                          QP
                                                      ))
                                                  );
                                              return r(h);
                                          })
                                          .next((E) => this.fi(h).next(() => E))
                                    : this.bi(h).next(() => r(h))
                            )
                        )
                        .then((_) => (h.raiseOnCommittedEvent(), _));
                }
                bi(e) {
                    return mE(e)
                        .get("owner")
                        .next((t) => {
                            if (
                                null !== t &&
                                this.mi(t.leaseTimestampMs, 5e3) &&
                                !this.pi(t.ownerId) &&
                                !this.di(t) &&
                                !(
                                    this.zs ||
                                    (this.allowTabSynchronization &&
                                        t.allowTabSynchronization)
                                )
                            )
                                throw new Ve(me.FAILED_PRECONDITION, dR);
                        });
                }
                fi(e) {
                    const t = {
                        ownerId: this.clientId,
                        allowTabSynchronization: this.allowTabSynchronization,
                        leaseTimestampMs: Date.now(),
                    };
                    return mE(e).put("owner", t);
                }
                static V() {
                    return Pa.V();
                }
                li(e) {
                    const t = mE(e);
                    return t
                        .get("owner")
                        .next((r) =>
                            this.di(r)
                                ? ($e(
                                      "IndexedDbPersistence",
                                      "Releasing primary lease."
                                  ),
                                  t.delete("owner"))
                                : ue.resolve()
                        );
                }
                mi(e, t) {
                    const r = Date.now();
                    return !(
                        e < r - t ||
                        (e > r &&
                            (qr(
                                `Detected an update time that is in the future: ${e} > ${r}`
                            ),
                            1))
                    );
                }
                ri() {
                    null !== this.document &&
                        "function" == typeof this.document.addEventListener &&
                        ((this.Ys = () => {
                            this.js.enqueueAndForget(
                                () => (
                                    (this.inForeground =
                                        "visible" ===
                                        this.document.visibilityState),
                                    this.ii()
                                )
                            );
                        }),
                        this.document.addEventListener(
                            "visibilitychange",
                            this.Ys
                        ),
                        (this.inForeground =
                            "visible" === this.document.visibilityState));
                }
                Ti() {
                    this.Ys &&
                        (this.document.removeEventListener(
                            "visibilitychange",
                            this.Ys
                        ),
                        (this.Ys = null));
                }
                oi() {
                    var e;
                    "function" ==
                        typeof (null === (e = this.window) || void 0 === e
                            ? void 0
                            : e.addEventListener) &&
                        ((this.Js = () => {
                            this.Ii(),
                                (0, C.G6)() &&
                                    navigator.appVersion.match(
                                        /Version\/1[45]/
                                    ) &&
                                    this.js.enterRestrictedMode(!0),
                                this.js.enqueueAndForget(() => this.shutdown());
                        }),
                        this.window.addEventListener("pagehide", this.Js));
                }
                Ei() {
                    this.Js &&
                        (this.window.removeEventListener("pagehide", this.Js),
                        (this.Js = null));
                }
                pi(e) {
                    var t;
                    try {
                        const r =
                            null !==
                            (null === (t = this.si) || void 0 === t
                                ? void 0
                                : t.getItem(this.yi(e)));
                        return (
                            $e(
                                "IndexedDbPersistence",
                                `Client '${e}' ${
                                    r ? "is" : "is not"
                                } zombied in LocalStorage`
                            ),
                            r
                        );
                    } catch (r) {
                        return (
                            qr(
                                "IndexedDbPersistence",
                                "Failed to get zombied client id.",
                                r
                            ),
                            !1
                        );
                    }
                }
                Ii() {
                    if (this.si)
                        try {
                            this.si.setItem(
                                this.yi(this.clientId),
                                String(Date.now())
                            );
                        } catch (e) {
                            qr("Failed to set zombie client id.", e);
                        }
                }
                Ai() {
                    if (this.si)
                        try {
                            this.si.removeItem(this.yi(this.clientId));
                        } catch {}
                }
                yi(e) {
                    return `firestore_zombie_${this.persistenceKey}_${e}`;
                }
            }
            function mE(n) {
                return Ei(n, "owner");
            }
            function qD(n) {
                return Ei(n, "clientMetadata");
            }
            function fR(n, e) {
                let t = n.projectId;
                return (
                    n.isDefaultDatabase || (t += "." + n.database),
                    "firestore/" + e + "/" + t + "/"
                );
            }
            class pR {
                constructor(e, t, r, i) {
                    (this.targetId = e),
                        (this.fromCache = t),
                        (this.Pi = r),
                        (this.vi = i);
                }
                static Vi(e, t) {
                    let r = nn(),
                        i = nn();
                    for (const a of t.docChanges)
                        switch (a.type) {
                            case 0:
                                r = r.add(a.doc.key);
                                break;
                            case 1:
                                i = i.add(a.doc.key);
                        }
                    return new pR(e, t.fromCache, r, i);
                }
            }
            class kO {
                constructor() {
                    this.Si = !1;
                }
                initialize(e, t) {
                    (this.Di = e), (this.indexManager = t), (this.Si = !0);
                }
                getDocumentsMatchingQuery(e, t, r, i) {
                    return this.Ci(e, t)
                        .next((a) => a || this.xi(e, t, i, r))
                        .next((a) => a || this.Ni(e, t));
                }
                Ci(e, t) {
                    return ue.resolve(null);
                }
                xi(e, t, r, i) {
                    return (function $V(n) {
                        return (
                            0 === n.filters.length &&
                            null === n.limit &&
                            null == n.startAt &&
                            null == n.endAt &&
                            (0 === n.explicitOrderBy.length ||
                                (1 === n.explicitOrderBy.length &&
                                    n.explicitOrderBy[0].field.isKeyField()))
                        );
                    })(t) || i.isEqual(Ft.min())
                        ? this.Ni(e, t)
                        : this.Di.getDocuments(e, r).next((a) => {
                              const l = this.ki(t, a);
                              return this.Oi(t, l, r, i)
                                  ? this.Ni(e, t)
                                  : (Ux() <= H.in.DEBUG &&
                                        $e(
                                            "QueryEngine",
                                            "Re-using previous result from %s to execute query: %s",
                                            i.toString(),
                                            Qx(t)
                                        ),
                                    this.Mi(e, l, t, ZP(i, -1)));
                          });
                }
                ki(e, t) {
                    let r = new Hn(Ik(e));
                    return (
                        t.forEach((i, a) => {
                            Jx(e, a) && (r = r.add(a));
                        }),
                        r
                    );
                }
                Oi(e, t, r, i) {
                    if (null === e.limit) return !1;
                    if (r.size !== t.size) return !0;
                    const a = "F" === e.limitType ? t.last() : t.first();
                    return (
                        !!a &&
                        (a.hasPendingWrites || a.version.compareTo(i) > 0)
                    );
                }
                Ni(e, t) {
                    return (
                        Ux() <= H.in.DEBUG &&
                            $e(
                                "QueryEngine",
                                "Using full collection scan to execute query:",
                                Qx(t)
                            ),
                        this.Di.getDocumentsMatchingQuery(e, t, go.min())
                    );
                }
                Mi(e, t, r, i) {
                    return this.Di.getDocumentsMatchingQuery(e, r, i).next(
                        (a) => (
                            t.forEach((l) => {
                                a = a.insert(l.key, l);
                            }),
                            a
                        )
                    );
                }
            }
            class sB {
                constructor(e, t, r, i) {
                    (this.persistence = e),
                        (this.Fi = t),
                        (this.wt = i),
                        (this.$i = new Nr(Qt)),
                        (this.Bi = new Xd((a) => pp(a), J0)),
                        (this.Li = new Map()),
                        (this.Ui = e.getRemoteDocumentCache()),
                        (this.Vs = e.getTargetCache()),
                        (this.Ds = e.getBundleCache()),
                        this.qi(r);
                }
                qi(e) {
                    (this.documentOverlayCache =
                        this.persistence.getDocumentOverlayCache(e)),
                        (this.indexManager =
                            this.persistence.getIndexManager(e)),
                        (this.mutationQueue = this.persistence.getMutationQueue(
                            e,
                            this.indexManager
                        )),
                        (this.localDocuments = new MO(
                            this.Ui,
                            this.mutationQueue,
                            this.documentOverlayCache,
                            this.indexManager
                        )),
                        this.Ui.setIndexManager(this.indexManager),
                        this.Fi.initialize(
                            this.localDocuments,
                            this.indexManager
                        );
                }
                collectGarbage(e) {
                    return this.persistence.runTransaction(
                        "Collect garbage",
                        "readwrite-primary",
                        (t) => e.collect(t, this.$i)
                    );
                }
            }
            function OO(n, e, t, r) {
                return new sB(n, e, t, r);
            }
            function FO(n, e) {
                return gR.apply(this, arguments);
            }
            function gR() {
                return (
                    (gR = (0, y.Z)(function* (n, e) {
                        const t = rt(n);
                        return yield t.persistence.runTransaction(
                            "Handle user change",
                            "readonly",
                            (r) => {
                                let i;
                                return t.mutationQueue
                                    .getAllMutationBatches(r)
                                    .next(
                                        (a) => (
                                            (i = a),
                                            t.qi(e),
                                            t.mutationQueue.getAllMutationBatches(
                                                r
                                            )
                                        )
                                    )
                                    .next((a) => {
                                        const l = [],
                                            h = [];
                                        let _ = nn();
                                        for (const E of i) {
                                            l.push(E.batchId);
                                            for (const D of E.mutations)
                                                _ = _.add(D.key);
                                        }
                                        for (const E of a) {
                                            h.push(E.batchId);
                                            for (const D of E.mutations)
                                                _ = _.add(D.key);
                                        }
                                        return t.localDocuments
                                            .getDocuments(r, _)
                                            .next((E) => ({
                                                Ki: E,
                                                removedBatchIds: l,
                                                addedBatchIds: h,
                                            }));
                                    });
                            }
                        );
                    })),
                    gR.apply(this, arguments)
                );
            }
            function oB(n, e) {
                const t = rt(n);
                return t.persistence.runTransaction(
                    "Acknowledge batch",
                    "readwrite-primary",
                    (r) => {
                        const i = e.batch.keys(),
                            a = t.Ui.newChangeBuffer({ trackRemovals: !0 });
                        return (function (l, h, _, E) {
                            const D = _.batch,
                                T = D.keys();
                            let R = ue.resolve();
                            return (
                                T.forEach((F) => {
                                    R = R.next(() => E.getEntry(h, F)).next(
                                        (K) => {
                                            const Ie = _.docVersions.get(F);
                                            Vt(null !== Ie),
                                                K.version.compareTo(Ie) < 0 &&
                                                    (D.applyToRemoteDocument(
                                                        K,
                                                        _
                                                    ),
                                                    K.isValidDocument() &&
                                                        (K.setReadTime(
                                                            _.commitVersion
                                                        ),
                                                        E.addEntry(K)));
                                        }
                                    );
                                }),
                                R.next(() =>
                                    l.mutationQueue.removeMutationBatch(h, D)
                                )
                            );
                        })(t, r, e, a)
                            .next(() => a.apply(r))
                            .next(() =>
                                t.mutationQueue.performConsistencyCheck(r)
                            )
                            .next(() =>
                                t.documentOverlayCache.removeOverlaysForBatchId(
                                    r,
                                    i,
                                    e.batch.batchId
                                )
                            )
                            .next(() =>
                                t.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(
                                    r,
                                    (function (l) {
                                        let h = nn();
                                        for (
                                            let _ = 0;
                                            _ < l.mutationResults.length;
                                            ++_
                                        )
                                            l.mutationResults[_]
                                                .transformResults.length > 0 &&
                                                (h = h.add(
                                                    l.batch.mutations[_].key
                                                ));
                                        return h;
                                    })(e)
                                )
                            )
                            .next(() => t.localDocuments.getDocuments(r, i));
                    }
                );
            }
            function LO(n) {
                const e = rt(n);
                return e.persistence.runTransaction(
                    "Get last remote snapshot version",
                    "readonly",
                    (t) => e.Vs.getLastRemoteSnapshotVersion(t)
                );
            }
            function aB(n, e) {
                const t = rt(n),
                    r = e.snapshotVersion;
                let i = t.$i;
                return t.persistence
                    .runTransaction(
                        "Apply remote event",
                        "readwrite-primary",
                        (a) => {
                            const l = t.Ui.newChangeBuffer({
                                trackRemovals: !0,
                            });
                            i = t.$i;
                            const h = [];
                            e.targetChanges.forEach((D, T) => {
                                const R = i.get(T);
                                if (!R) return;
                                h.push(
                                    t.Vs.removeMatchingKeys(
                                        a,
                                        D.removedDocuments,
                                        T
                                    ).next(() =>
                                        t.Vs.addMatchingKeys(
                                            a,
                                            D.addedDocuments,
                                            T
                                        )
                                    )
                                );
                                let F = R.withSequenceNumber(
                                    a.currentSequenceNumber
                                );
                                var K, Ie, Re;
                                e.targetMismatches.has(T)
                                    ? (F = F.withResumeToken(
                                          hi.EMPTY_BYTE_STRING,
                                          Ft.min()
                                      ).withLastLimboFreeSnapshotVersion(
                                          Ft.min()
                                      ))
                                    : D.resumeToken.approximateByteSize() > 0 &&
                                      (F = F.withResumeToken(D.resumeToken, r)),
                                    (i = i.insert(T, F)),
                                    (Ie = F),
                                    (Re = D),
                                    (0 ===
                                        (K =
                                            R).resumeToken.approximateByteSize() ||
                                        Ie.snapshotVersion.toMicroseconds() -
                                            K.snapshotVersion.toMicroseconds() >=
                                            3e8 ||
                                        Re.addedDocuments.size +
                                            Re.modifiedDocuments.size +
                                            Re.removedDocuments.size >
                                            0) &&
                                        h.push(t.Vs.updateTargetData(a, F));
                            });
                            let _ = js(),
                                E = nn();
                            if (
                                (e.documentUpdates.forEach((D) => {
                                    e.resolvedLimboDocuments.has(D) &&
                                        h.push(
                                            t.persistence.referenceDelegate.updateLimboDocument(
                                                a,
                                                D
                                            )
                                        );
                                }),
                                h.push(
                                    VO(a, l, e.documentUpdates).next((D) => {
                                        (_ = D.Gi), (E = D.Qi);
                                    })
                                ),
                                !r.isEqual(Ft.min()))
                            ) {
                                const D = t.Vs.getLastRemoteSnapshotVersion(
                                    a
                                ).next((T) =>
                                    t.Vs.setTargetsMetadata(
                                        a,
                                        a.currentSequenceNumber,
                                        r
                                    )
                                );
                                h.push(D);
                            }
                            return ue
                                .waitFor(h)
                                .next(() => l.apply(a))
                                .next(() =>
                                    t.localDocuments.getLocalViewOfDocuments(
                                        a,
                                        _,
                                        E
                                    )
                                )
                                .next(() => _);
                        }
                    )
                    .then((a) => ((t.$i = i), a));
            }
            function VO(n, e, t) {
                let r = nn(),
                    i = nn();
                return (
                    t.forEach((a) => (r = r.add(a))),
                    e.getEntries(n, r).next((a) => {
                        let l = js();
                        return (
                            t.forEach((h, _) => {
                                const E = a.get(h);
                                _.isFoundDocument() !== E.isFoundDocument() &&
                                    (i = i.add(h)),
                                    _.isNoDocument() &&
                                    _.version.isEqual(Ft.min())
                                        ? (e.removeEntry(h, _.readTime),
                                          (l = l.insert(h, _)))
                                        : !E.isValidDocument() ||
                                          _.version.compareTo(E.version) > 0 ||
                                          (0 ===
                                              _.version.compareTo(E.version) &&
                                              E.hasPendingWrites)
                                        ? (e.addEntry(_), (l = l.insert(h, _)))
                                        : $e(
                                              "LocalStore",
                                              "Ignoring outdated watch update for ",
                                              h,
                                              ". Current version:",
                                              E.version,
                                              " Watch version:",
                                              _.version
                                          );
                            }),
                            { Gi: l, Qi: i }
                        );
                    })
                );
            }
            function uB(n, e) {
                const t = rt(n);
                return t.persistence.runTransaction(
                    "Get next mutation batch",
                    "readonly",
                    (r) => (
                        void 0 === e && (e = -1),
                        t.mutationQueue.getNextMutationBatchAfterBatchId(r, e)
                    )
                );
            }
            function H_(n, e) {
                const t = rt(n);
                return t.persistence
                    .runTransaction("Allocate target", "readwrite", (r) => {
                        let i;
                        return t.Vs.getTargetData(r, e).next((a) =>
                            a
                                ? ((i = a), ue.resolve(i))
                                : t.Vs.allocateTargetId(r).next(
                                      (l) => (
                                          (i = new eh(
                                              e,
                                              l,
                                              0,
                                              r.currentSequenceNumber
                                          )),
                                          t.Vs.addTargetData(r, i).next(() => i)
                                      )
                                  )
                        );
                    })
                    .then((r) => {
                        const i = t.$i.get(r.targetId);
                        return (
                            (null === i ||
                                r.snapshotVersion.compareTo(i.snapshotVersion) >
                                    0) &&
                                ((t.$i = t.$i.insert(r.targetId, r)),
                                t.Bi.set(e, r.targetId)),
                            r
                        );
                    });
            }
            function $_(n, e, t) {
                return mR.apply(this, arguments);
            }
            function mR() {
                return (
                    (mR = (0, y.Z)(function* (n, e, t) {
                        const r = rt(n),
                            i = r.$i.get(e),
                            a = t ? "readwrite" : "readwrite-primary";
                        try {
                            t ||
                                (yield r.persistence.runTransaction(
                                    "Release target",
                                    a,
                                    (l) =>
                                        r.persistence.referenceDelegate.removeTarget(
                                            l,
                                            i
                                        )
                                ));
                        } catch (l) {
                            if (!Kd(l)) throw l;
                            $e(
                                "LocalStore",
                                `Failed to update sequence numbers for target ${e}: ${l}`
                            );
                        }
                        (r.$i = r.$i.remove(e)), r.Bi.delete(i.target);
                    })),
                    mR.apply(this, arguments)
                );
            }
            function KD(n, e, t) {
                const r = rt(n);
                let i = Ft.min(),
                    a = nn();
                return r.persistence.runTransaction(
                    "Execute query",
                    "readonly",
                    (l) =>
                        (function (h, _, E) {
                            const D = rt(h),
                                T = D.Bi.get(E);
                            return void 0 !== T
                                ? ue.resolve(D.$i.get(T))
                                : D.Vs.getTargetData(_, E);
                        })(r, l, Yo(e))
                            .next((h) => {
                                if (h)
                                    return (
                                        (i = h.lastLimboFreeSnapshotVersion),
                                        r.Vs.getMatchingKeysForTargetId(
                                            l,
                                            h.targetId
                                        ).next((_) => {
                                            a = _;
                                        })
                                    );
                            })
                            .next(() =>
                                r.Fi.getDocumentsMatchingQuery(
                                    l,
                                    e,
                                    t ? i : Ft.min(),
                                    t ? a : nn()
                                )
                            )
                            .next(
                                (h) => (
                                    jO(r, Ek(e), h), { documents: h, ji: a }
                                )
                            )
                );
            }
            function UO(n, e) {
                const t = rt(n),
                    r = rt(t.Vs),
                    i = t.$i.get(e);
                return i
                    ? Promise.resolve(i.target)
                    : t.persistence.runTransaction(
                          "Get target data",
                          "readonly",
                          (a) => r.te(a, e).next((l) => (l ? l.target : null))
                      );
            }
            function BO(n, e) {
                const t = rt(n),
                    r = t.Li.get(e) || Ft.min();
                return t.persistence
                    .runTransaction(
                        "Get new document changes",
                        "readonly",
                        (i) =>
                            t.Ui.getAllFromCollectionGroup(
                                i,
                                e,
                                ZP(r, -1),
                                Number.MAX_SAFE_INTEGER
                            )
                    )
                    .then((i) => (jO(t, e, i), i));
            }
            function jO(n, e, t) {
                let r = Ft.min();
                t.forEach((i, a) => {
                    a.readTime.compareTo(r) > 0 && (r = a.readTime);
                }),
                    n.Li.set(e, r);
            }
            function _R() {
                return (
                    (_R = (0, y.Z)(function* (n, e, t, r) {
                        const i = rt(n);
                        let a = nn(),
                            l = js();
                        for (const E of t) {
                            const D = e.Wi(E.metadata.name);
                            E.document && (a = a.add(D));
                            const T = e.zi(E);
                            T.setReadTime(e.Hi(E.metadata.readTime)),
                                (l = l.insert(D, T));
                        }
                        const h = i.Ui.newChangeBuffer({ trackRemovals: !0 }),
                            _ = yield H_(
                                i,
                                ((E = r),
                                Yo(N_(wn.fromString(`__bundle__/docs/${E}`))))
                            );
                        var E;
                        return i.persistence.runTransaction(
                            "Apply bundle documents",
                            "readwrite",
                            (E) =>
                                VO(E, h, l)
                                    .next((D) => (h.apply(E), D))
                                    .next((D) =>
                                        i.Vs.removeMatchingKeysForTargetId(
                                            E,
                                            _.targetId
                                        )
                                            .next(() =>
                                                i.Vs.addMatchingKeys(
                                                    E,
                                                    a,
                                                    _.targetId
                                                )
                                            )
                                            .next(() =>
                                                i.localDocuments.getLocalViewOfDocuments(
                                                    E,
                                                    D.Gi,
                                                    D.Qi
                                                )
                                            )
                                            .next(() => D.Gi)
                                    )
                        );
                    })),
                    _R.apply(this, arguments)
                );
            }
            function cB(n, e) {
                return yR.apply(this, arguments);
            }
            function yR() {
                return (
                    (yR = (0, y.Z)(function* (n, e, t = nn()) {
                        const r = yield H_(n, Yo(aR(e.bundledQuery))),
                            i = rt(n);
                        return i.persistence.runTransaction(
                            "Save named query",
                            "readwrite",
                            (a) => {
                                const l = wi(e.readTime);
                                if (r.snapshotVersion.compareTo(l) >= 0)
                                    return i.Ds.saveNamedQuery(a, e);
                                const h = r.withResumeToken(
                                    hi.EMPTY_BYTE_STRING,
                                    l
                                );
                                return (
                                    (i.$i = i.$i.insert(h.targetId, h)),
                                    i.Vs.updateTargetData(a, h)
                                        .next(() =>
                                            i.Vs.removeMatchingKeysForTargetId(
                                                a,
                                                r.targetId
                                            )
                                        )
                                        .next(() =>
                                            i.Vs.addMatchingKeys(
                                                a,
                                                t,
                                                r.targetId
                                            )
                                        )
                                        .next(() => i.Ds.saveNamedQuery(a, e))
                                );
                            }
                        );
                    })),
                    yR.apply(this, arguments)
                );
            }
            function HO(n, e) {
                return `firestore_clients_${n}_${e}`;
            }
            function $O(n, e, t) {
                let r = `firestore_mutations_${n}_${t}`;
                return e.isAuthenticated() && (r += `_${e.uid}`), r;
            }
            function vR(n, e) {
                return `firestore_targets_${n}_${e}`;
            }
            class ZD {
                constructor(e, t, r, i) {
                    (this.user = e),
                        (this.batchId = t),
                        (this.state = r),
                        (this.error = i);
                }
                static Ji(e, t, r) {
                    const i = JSON.parse(r);
                    let a,
                        l =
                            "object" == typeof i &&
                            -1 !==
                                ["pending", "acknowledged", "rejected"].indexOf(
                                    i.state
                                ) &&
                            (void 0 === i.error || "object" == typeof i.error);
                    return (
                        l &&
                            i.error &&
                            ((l =
                                "string" == typeof i.error.message &&
                                "string" == typeof i.error.code),
                            l && (a = new Ve(i.error.code, i.error.message))),
                        l
                            ? new ZD(e, t, i.state, a)
                            : (qr(
                                  "SharedClientState",
                                  `Failed to parse mutation state for ID '${t}': ${r}`
                              ),
                              null)
                    );
                }
                Yi() {
                    const e = { state: this.state, updateTimeMs: Date.now() };
                    return (
                        this.error &&
                            (e.error = {
                                code: this.error.code,
                                message: this.error.message,
                            }),
                        JSON.stringify(e)
                    );
                }
            }
            class _E {
                constructor(e, t, r) {
                    (this.targetId = e), (this.state = t), (this.error = r);
                }
                static Ji(e, t) {
                    const r = JSON.parse(t);
                    let i,
                        a =
                            "object" == typeof r &&
                            -1 !==
                                ["not-current", "current", "rejected"].indexOf(
                                    r.state
                                ) &&
                            (void 0 === r.error || "object" == typeof r.error);
                    return (
                        a &&
                            r.error &&
                            ((a =
                                "string" == typeof r.error.message &&
                                "string" == typeof r.error.code),
                            a && (i = new Ve(r.error.code, r.error.message))),
                        a
                            ? new _E(e, r.state, i)
                            : (qr(
                                  "SharedClientState",
                                  `Failed to parse target state for ID '${e}': ${t}`
                              ),
                              null)
                    );
                }
                Yi() {
                    const e = { state: this.state, updateTimeMs: Date.now() };
                    return (
                        this.error &&
                            (e.error = {
                                code: this.error.code,
                                message: this.error.message,
                            }),
                        JSON.stringify(e)
                    );
                }
            }
            class YD {
                constructor(e, t) {
                    (this.clientId = e), (this.activeTargetIds = t);
                }
                static Ji(e, t) {
                    const r = JSON.parse(t);
                    let i =
                            "object" == typeof r &&
                            r.activeTargetIds instanceof Array,
                        a = FD();
                    for (let l = 0; i && l < r.activeTargetIds.length; ++l)
                        (i = ik(r.activeTargetIds[l])),
                            (a = a.add(r.activeTargetIds[l]));
                    return i
                        ? new YD(e, a)
                        : (qr(
                              "SharedClientState",
                              `Failed to parse client data for instance '${e}': ${t}`
                          ),
                          null);
                }
            }
            class wR {
                constructor(e, t) {
                    (this.clientId = e), (this.onlineState = t);
                }
                static Ji(e) {
                    const t = JSON.parse(e);
                    return "object" == typeof t &&
                        -1 !==
                            ["Unknown", "Online", "Offline"].indexOf(
                                t.onlineState
                            ) &&
                        "string" == typeof t.clientId
                        ? new wR(t.clientId, t.onlineState)
                        : (qr(
                              "SharedClientState",
                              `Failed to parse online state: ${e}`
                          ),
                          null);
                }
            }
            class ER {
                constructor() {
                    this.activeTargetIds = FD();
                }
                Xi(e) {
                    this.activeTargetIds = this.activeTargetIds.add(e);
                }
                Zi(e) {
                    this.activeTargetIds = this.activeTargetIds.delete(e);
                }
                Yi() {
                    const e = {
                        activeTargetIds: this.activeTargetIds.toArray(),
                        updateTimeMs: Date.now(),
                    };
                    return JSON.stringify(e);
                }
            }
            class IR {
                constructor(e, t, r, i, a) {
                    (this.window = e),
                        (this.js = t),
                        (this.persistenceKey = r),
                        (this.tr = i),
                        (this.syncEngine = null),
                        (this.onlineStateHandler = null),
                        (this.sequenceNumberHandler = null),
                        (this.er = this.nr.bind(this)),
                        (this.sr = new Nr(Qt)),
                        (this.started = !1),
                        (this.ir = []);
                    const l = r.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
                    (this.storage = this.window.localStorage),
                        (this.currentUser = a),
                        (this.rr = HO(this.persistenceKey, this.tr)),
                        (this.ur = `firestore_sequence_number_${this.persistenceKey}`),
                        (this.sr = this.sr.insert(this.tr, new ER())),
                        (this.cr = new RegExp(
                            `^firestore_clients_${l}_([^_]*)$`
                        )),
                        (this.ar = new RegExp(
                            `^firestore_mutations_${l}_(\\d+)(?:_(.*))?$`
                        )),
                        (this.hr = new RegExp(
                            `^firestore_targets_${l}_(\\d+)$`
                        )),
                        (this.lr = `firestore_online_state_${this.persistenceKey}`),
                        (this.dr = (function (h) {
                            return `firestore_bundle_loaded_v2_${h}`;
                        })(this.persistenceKey)),
                        this.window.addEventListener("storage", this.er);
                }
                static V(e) {
                    return !(!e || !e.localStorage);
                }
                start() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        const t = yield e.syncEngine.Ri();
                        for (const i of t) {
                            if (i === e.tr) continue;
                            const a = e.getItem(HO(e.persistenceKey, i));
                            if (a) {
                                const l = YD.Ji(i, a);
                                l && (e.sr = e.sr.insert(l.clientId, l));
                            }
                        }
                        e._r();
                        const r = e.storage.getItem(e.lr);
                        if (r) {
                            const i = e.wr(r);
                            i && e.mr(i);
                        }
                        for (const i of e.ir) e.nr(i);
                        (e.ir = []),
                            e.window.addEventListener("pagehide", () =>
                                e.shutdown()
                            ),
                            (e.started = !0);
                    })();
                }
                writeSequenceNumber(e) {
                    this.setItem(this.ur, JSON.stringify(e));
                }
                getAllActiveQueryTargets() {
                    return this.gr(this.sr);
                }
                isActiveQueryTarget(e) {
                    let t = !1;
                    return (
                        this.sr.forEach((r, i) => {
                            i.activeTargetIds.has(e) && (t = !0);
                        }),
                        t
                    );
                }
                addPendingMutation(e) {
                    this.yr(e, "pending");
                }
                updateMutationState(e, t, r) {
                    this.yr(e, t, r), this.pr(e);
                }
                addLocalQueryTarget(e) {
                    let t = "not-current";
                    if (this.isActiveQueryTarget(e)) {
                        const r = this.storage.getItem(
                            vR(this.persistenceKey, e)
                        );
                        if (r) {
                            const i = _E.Ji(e, r);
                            i && (t = i.state);
                        }
                    }
                    return this.Ir.Xi(e), this._r(), t;
                }
                removeLocalQueryTarget(e) {
                    this.Ir.Zi(e), this._r();
                }
                isLocalQueryTarget(e) {
                    return this.Ir.activeTargetIds.has(e);
                }
                clearQueryState(e) {
                    this.removeItem(vR(this.persistenceKey, e));
                }
                updateQueryState(e, t, r) {
                    this.Tr(e, t, r);
                }
                handleUserChange(e, t, r) {
                    t.forEach((i) => {
                        this.pr(i);
                    }),
                        (this.currentUser = e),
                        r.forEach((i) => {
                            this.addPendingMutation(i);
                        });
                }
                setOnlineState(e) {
                    this.Er(e);
                }
                notifyBundleLoaded(e) {
                    this.Ar(e);
                }
                shutdown() {
                    this.started &&
                        (this.window.removeEventListener("storage", this.er),
                        this.removeItem(this.rr),
                        (this.started = !1));
                }
                getItem(e) {
                    const t = this.storage.getItem(e);
                    return $e("SharedClientState", "READ", e, t), t;
                }
                setItem(e, t) {
                    $e("SharedClientState", "SET", e, t),
                        this.storage.setItem(e, t);
                }
                removeItem(e) {
                    $e("SharedClientState", "REMOVE", e),
                        this.storage.removeItem(e);
                }
                nr(e) {
                    var t = this;
                    const r = e;
                    if (r.storageArea === this.storage) {
                        if (
                            ($e(
                                "SharedClientState",
                                "EVENT",
                                r.key,
                                r.newValue
                            ),
                            r.key === this.rr)
                        )
                            return void qr(
                                "Received WebStorage notification for local change. Another client might have garbage-collected our state"
                            );
                        this.js.enqueueRetryable(
                            (0, y.Z)(function* () {
                                if (t.started) {
                                    if (null !== r.key)
                                        if (t.cr.test(r.key)) {
                                            if (null == r.newValue) {
                                                const i = t.Rr(r.key);
                                                return t.br(i, null);
                                            }
                                            {
                                                const i = t.Pr(
                                                    r.key,
                                                    r.newValue
                                                );
                                                if (i)
                                                    return t.br(i.clientId, i);
                                            }
                                        } else if (t.ar.test(r.key)) {
                                            if (null !== r.newValue) {
                                                const i = t.vr(
                                                    r.key,
                                                    r.newValue
                                                );
                                                if (i) return t.Vr(i);
                                            }
                                        } else if (t.hr.test(r.key)) {
                                            if (null !== r.newValue) {
                                                const i = t.Sr(
                                                    r.key,
                                                    r.newValue
                                                );
                                                if (i) return t.Dr(i);
                                            }
                                        } else if (r.key === t.lr) {
                                            if (null !== r.newValue) {
                                                const i = t.wr(r.newValue);
                                                if (i) return t.mr(i);
                                            }
                                        } else if (r.key === t.ur) {
                                            const i = (function (a) {
                                                let l = Bs.ot;
                                                if (null != a)
                                                    try {
                                                        const h = JSON.parse(a);
                                                        Vt(
                                                            "number" == typeof h
                                                        ),
                                                            (l = h);
                                                    } catch (h) {
                                                        qr(
                                                            "SharedClientState",
                                                            "Failed to read sequence number from WebStorage",
                                                            h
                                                        );
                                                    }
                                                return l;
                                            })(r.newValue);
                                            i !== Bs.ot &&
                                                t.sequenceNumberHandler(i);
                                        } else if (r.key === t.dr) {
                                            const i = t.Cr(r.newValue);
                                            yield Promise.all(
                                                i.map((a) => t.syncEngine.Nr(a))
                                            );
                                        }
                                } else t.ir.push(r);
                            })
                        );
                    }
                }
                get Ir() {
                    return this.sr.get(this.tr);
                }
                _r() {
                    this.setItem(this.rr, this.Ir.Yi());
                }
                yr(e, t, r) {
                    const i = new ZD(this.currentUser, e, t, r),
                        a = $O(this.persistenceKey, this.currentUser, e);
                    this.setItem(a, i.Yi());
                }
                pr(e) {
                    const t = $O(this.persistenceKey, this.currentUser, e);
                    this.removeItem(t);
                }
                Er(e) {
                    this.storage.setItem(
                        this.lr,
                        JSON.stringify({ clientId: this.tr, onlineState: e })
                    );
                }
                Tr(e, t, r) {
                    const i = vR(this.persistenceKey, e),
                        a = new _E(e, t, r);
                    this.setItem(i, a.Yi());
                }
                Ar(e) {
                    const t = JSON.stringify(Array.from(e));
                    this.setItem(this.dr, t);
                }
                Rr(e) {
                    const t = this.cr.exec(e);
                    return t ? t[1] : null;
                }
                Pr(e, t) {
                    const r = this.Rr(e);
                    return YD.Ji(r, t);
                }
                vr(e, t) {
                    const r = this.ar.exec(e),
                        i = Number(r[1]);
                    return ZD.Ji(new yi(void 0 !== r[2] ? r[2] : null), i, t);
                }
                Sr(e, t) {
                    const r = this.hr.exec(e),
                        i = Number(r[1]);
                    return _E.Ji(i, t);
                }
                wr(e) {
                    return wR.Ji(e);
                }
                Cr(e) {
                    return JSON.parse(e);
                }
                Vr(e) {
                    var t = this;
                    return (0, y.Z)(function* () {
                        if (e.user.uid === t.currentUser.uid)
                            return t.syncEngine.kr(e.batchId, e.state, e.error);
                        $e(
                            "SharedClientState",
                            `Ignoring mutation for non-active user ${e.user.uid}`
                        );
                    })();
                }
                Dr(e) {
                    return this.syncEngine.Or(e.targetId, e.state, e.error);
                }
                br(e, t) {
                    const r = t ? this.sr.insert(e, t) : this.sr.remove(e),
                        i = this.gr(this.sr),
                        a = this.gr(r),
                        l = [],
                        h = [];
                    return (
                        a.forEach((_) => {
                            i.has(_) || l.push(_);
                        }),
                        i.forEach((_) => {
                            a.has(_) || h.push(_);
                        }),
                        this.syncEngine.Mr(l, h).then(() => {
                            this.sr = r;
                        })
                    );
                }
                mr(e) {
                    this.sr.get(e.clientId) &&
                        this.onlineStateHandler(e.onlineState);
                }
                gr(e) {
                    let t = FD();
                    return (
                        e.forEach((r, i) => {
                            t = t.unionWith(i.activeTargetIds);
                        }),
                        t
                    );
                }
            }
            class GO {
                constructor() {
                    (this.Fr = new ER()),
                        (this.$r = {}),
                        (this.onlineStateHandler = null),
                        (this.sequenceNumberHandler = null);
                }
                addPendingMutation(e) {}
                updateMutationState(e, t, r) {}
                addLocalQueryTarget(e) {
                    return this.Fr.Xi(e), this.$r[e] || "not-current";
                }
                updateQueryState(e, t, r) {
                    this.$r[e] = t;
                }
                removeLocalQueryTarget(e) {
                    this.Fr.Zi(e);
                }
                isLocalQueryTarget(e) {
                    return this.Fr.activeTargetIds.has(e);
                }
                clearQueryState(e) {
                    delete this.$r[e];
                }
                getAllActiveQueryTargets() {
                    return this.Fr.activeTargetIds;
                }
                isActiveQueryTarget(e) {
                    return this.Fr.activeTargetIds.has(e);
                }
                start() {
                    return (this.Fr = new ER()), Promise.resolve();
                }
                handleUserChange(e, t, r) {}
                setOnlineState(e) {}
                shutdown() {}
                writeSequenceNumber(e) {}
                notifyBundleLoaded(e) {}
            }
            class dB {
                Br(e) {}
                shutdown() {}
            }
            class WO {
                constructor() {
                    (this.Lr = () => this.Ur()),
                        (this.qr = () => this.Kr()),
                        (this.Gr = []),
                        this.Qr();
                }
                Br(e) {
                    this.Gr.push(e);
                }
                shutdown() {
                    window.removeEventListener("online", this.Lr),
                        window.removeEventListener("offline", this.qr);
                }
                Qr() {
                    window.addEventListener("online", this.Lr),
                        window.addEventListener("offline", this.qr);
                }
                Ur() {
                    $e(
                        "ConnectivityMonitor",
                        "Network connectivity changed: AVAILABLE"
                    );
                    for (const e of this.Gr) e(0);
                }
                Kr() {
                    $e(
                        "ConnectivityMonitor",
                        "Network connectivity changed: UNAVAILABLE"
                    );
                    for (const e of this.Gr) e(1);
                }
                static V() {
                    return (
                        typeof window < "u" &&
                        void 0 !== window.addEventListener &&
                        void 0 !== window.removeEventListener
                    );
                }
            }
            const hB = {
                BatchGetDocuments: "batchGet",
                Commit: "commit",
                RunQuery: "runQuery",
            };
            class fB {
                constructor(e) {
                    (this.jr = e.jr), (this.Wr = e.Wr);
                }
                zr(e) {
                    this.Hr = e;
                }
                Jr(e) {
                    this.Yr = e;
                }
                onMessage(e) {
                    this.Xr = e;
                }
                close() {
                    this.Wr();
                }
                send(e) {
                    this.jr(e);
                }
                Zr() {
                    this.Hr();
                }
                eo(e) {
                    this.Yr(e);
                }
                no(e) {
                    this.Xr(e);
                }
            }
            class pB extends class {
                constructor(e) {
                    (this.databaseInfo = e),
                        (this.databaseId = e.databaseId),
                        (this.so = (e.ssl ? "https" : "http") + "://" + e.host),
                        (this.io =
                            "projects/" +
                            this.databaseId.projectId +
                            "/databases/" +
                            this.databaseId.database +
                            "/documents");
                }
                ro(e, t, r, i, a) {
                    const l = this.oo(e, t);
                    $e("RestConnection", "Sending: ", l, r);
                    const h = {};
                    return (
                        this.uo(h, i, a),
                        this.co(e, l, h, r).then(
                            (_) => ($e("RestConnection", "Received: ", _), _),
                            (_) => {
                                throw (
                                    (H0(
                                        "RestConnection",
                                        `${e} failed with error: `,
                                        _,
                                        "url: ",
                                        l,
                                        "request:",
                                        r
                                    ),
                                    _)
                                );
                            }
                        )
                    );
                }
                ao(e, t, r, i, a, l) {
                    return this.ro(e, t, r, i, a);
                }
                uo(e, t, r) {
                    (e["X-Goog-Api-Client"] = "gl-js/ fire/" + S_),
                        (e["Content-Type"] = "text/plain"),
                        this.databaseInfo.appId &&
                            (e["X-Firebase-GMPID"] = this.databaseInfo.appId),
                        t && t.headers.forEach((i, a) => (e[a] = i)),
                        r && r.headers.forEach((i, a) => (e[a] = i));
                }
                oo(e, t) {
                    return `${this.so}/v1/${t}:${hB[e]}`;
                }
            } {
                constructor(e) {
                    super(e),
                        (this.forceLongPolling = e.forceLongPolling),
                        (this.autoDetectLongPolling = e.autoDetectLongPolling),
                        (this.useFetchStreams = e.useFetchStreams);
                }
                co(e, t, r, i) {
                    return new Promise((a, l) => {
                        const h = new fV();
                        h.listenOnce(cV.COMPLETE, () => {
                            try {
                                switch (h.getLastErrorCode()) {
                                    case Vx.NO_ERROR:
                                        const E = h.getResponseJson();
                                        $e(
                                            "Connection",
                                            "XHR received:",
                                            JSON.stringify(E)
                                        ),
                                            a(E);
                                        break;
                                    case Vx.TIMEOUT:
                                        $e(
                                            "Connection",
                                            'RPC "' + e + '" timed out'
                                        ),
                                            l(
                                                new Ve(
                                                    me.DEADLINE_EXCEEDED,
                                                    "Request time out"
                                                )
                                            );
                                        break;
                                    case Vx.HTTP_ERROR:
                                        const D = h.getStatus();
                                        if (
                                            ($e(
                                                "Connection",
                                                'RPC "' +
                                                    e +
                                                    '" failed with status:',
                                                D,
                                                "response text:",
                                                h.getResponseText()
                                            ),
                                            D > 0)
                                        ) {
                                            const T = h.getResponseJson().error;
                                            if (T && T.status && T.message) {
                                                const R = (function (F) {
                                                    const K =
                                                        F.toLowerCase().replace(
                                                            /_/g,
                                                            "-"
                                                        );
                                                    return Object.values(
                                                        me
                                                    ).indexOf(K) >= 0
                                                        ? K
                                                        : me.UNKNOWN;
                                                })(T.status);
                                                l(new Ve(R, T.message));
                                            } else
                                                l(
                                                    new Ve(
                                                        me.UNKNOWN,
                                                        "Server responded with status " +
                                                            h.getStatus()
                                                    )
                                                );
                                        } else
                                            l(
                                                new Ve(
                                                    me.UNAVAILABLE,
                                                    "Connection failed."
                                                )
                                            );
                                        break;
                                    default:
                                        ft();
                                }
                            } finally {
                                $e("Connection", 'RPC "' + e + '" completed.');
                            }
                        });
                        const _ = JSON.stringify(i);
                        h.send(t, "POST", _, r, 15);
                    });
                }
                ho(e, t, r) {
                    const i = [
                            this.so,
                            "/",
                            "google.firestore.v1.Firestore",
                            "/",
                            e,
                            "/channel",
                        ],
                        a = uV(),
                        l = lV(),
                        h = {
                            httpSessionIdParam: "gsessionid",
                            initMessageHeaders: {},
                            messageUrlParams: {
                                database: `projects/${this.databaseId.projectId}/databases/${this.databaseId.database}`,
                            },
                            sendRawJson: !0,
                            supportsCrossDomainXhr: !0,
                            internalChannelParams: {
                                forwardChannelRequestTimeoutMs: 6e5,
                            },
                            forceLongPolling: this.forceLongPolling,
                            detectBufferingProxy: this.autoDetectLongPolling,
                        };
                    this.useFetchStreams && (h.xmlHttpFactory = new hV({})),
                        this.uo(h.initMessageHeaders, t, r),
                        (0, C.uI)() ||
                            (0, C.b$)() ||
                            (0, C.d)() ||
                            (0, C.w1)() ||
                            (0, C.Mn)() ||
                            (0, C.ru)() ||
                            (h.httpHeadersOverwriteParam = "$httpHeaders");
                    const _ = i.join("");
                    $e("Connection", "Creating WebChannel: " + _, h);
                    const E = a.createWebChannel(_, h);
                    let D = !1,
                        T = !1;
                    const R = new fB({
                            jr: (K) => {
                                T
                                    ? $e(
                                          "Connection",
                                          "Not sending because WebChannel is closed:",
                                          K
                                      )
                                    : (D ||
                                          ($e(
                                              "Connection",
                                              "Opening WebChannel transport."
                                          ),
                                          E.open(),
                                          (D = !0)),
                                      $e(
                                          "Connection",
                                          "WebChannel sending:",
                                          K
                                      ),
                                      E.send(K));
                            },
                            Wr: () => E.close(),
                        }),
                        F = (K, Ie, Re) => {
                            K.listen(Ie, (mt) => {
                                try {
                                    Re(mt);
                                } catch (_t) {
                                    setTimeout(() => {
                                        throw _t;
                                    }, 0);
                                }
                            });
                        };
                    return (
                        F(E, bD.EventType.OPEN, () => {
                            T ||
                                $e(
                                    "Connection",
                                    "WebChannel transport opened."
                                );
                        }),
                        F(E, bD.EventType.CLOSE, () => {
                            T ||
                                ((T = !0),
                                $e("Connection", "WebChannel transport closed"),
                                R.eo());
                        }),
                        F(E, bD.EventType.ERROR, (K) => {
                            T ||
                                ((T = !0),
                                H0(
                                    "Connection",
                                    "WebChannel transport errored:",
                                    K
                                ),
                                R.eo(
                                    new Ve(
                                        me.UNAVAILABLE,
                                        "The operation could not be completed"
                                    )
                                ));
                        }),
                        F(E, bD.EventType.MESSAGE, (K) => {
                            var Ie;
                            if (!T) {
                                const Re = K.data[0];
                                Vt(!!Re);
                                const mt = Re,
                                    _t =
                                        mt.error ||
                                        (null === (Ie = mt[0]) || void 0 === Ie
                                            ? void 0
                                            : Ie.error);
                                if (_t) {
                                    $e(
                                        "Connection",
                                        "WebChannel received error:",
                                        _t
                                    );
                                    const yt = _t.status;
                                    let gt = (function (un) {
                                            const Yr = Kr[un];
                                            if (void 0 !== Yr) return Lk(Yr);
                                        })(yt),
                                        $t = _t.message;
                                    void 0 === gt &&
                                        ((gt = me.INTERNAL),
                                        ($t =
                                            "Unknown error status: " +
                                            yt +
                                            " with message " +
                                            _t.message)),
                                        (T = !0),
                                        R.eo(new Ve(gt, $t)),
                                        E.close();
                                } else
                                    $e(
                                        "Connection",
                                        "WebChannel received:",
                                        Re
                                    ),
                                        R.no(Re);
                            }
                        }),
                        F(l, dV.STAT_EVENT, (K) => {
                            K.stat === $P.PROXY
                                ? $e("Connection", "Detected buffering proxy")
                                : K.stat === $P.NOPROXY &&
                                  $e(
                                      "Connection",
                                      "Detected no buffering proxy"
                                  );
                        }),
                        setTimeout(() => {
                            R.Zr();
                        }, 0),
                        R
                    );
                }
            }
            function zO() {
                return typeof window < "u" ? window : null;
            }
            function QD() {
                return typeof document < "u" ? document : null;
            }
            function yE(n) {
                return new sU(n, !0);
            }
            class CR {
                constructor(e, t, r = 1e3, i = 1.5, a = 6e4) {
                    (this.js = e),
                        (this.timerId = t),
                        (this.lo = r),
                        (this.fo = i),
                        (this._o = a),
                        (this.wo = 0),
                        (this.mo = null),
                        (this.yo = Date.now()),
                        this.reset();
                }
                reset() {
                    this.wo = 0;
                }
                po() {
                    this.wo = this._o;
                }
                Io(e) {
                    this.cancel();
                    const t = Math.floor(this.wo + this.To()),
                        r = Math.max(0, Date.now() - this.yo),
                        i = Math.max(0, t - r);
                    i > 0 &&
                        $e(
                            "ExponentialBackoff",
                            `Backing off for ${i} ms (base delay: ${this.wo} ms, delay with jitter: ${t} ms, last attempt: ${r} ms ago)`
                        ),
                        (this.mo = this.js.enqueueAfterDelay(
                            this.timerId,
                            i,
                            () => ((this.yo = Date.now()), e())
                        )),
                        (this.wo *= this.fo),
                        this.wo < this.lo && (this.wo = this.lo),
                        this.wo > this._o && (this.wo = this._o);
                }
                Eo() {
                    null !== this.mo && (this.mo.skipDelay(), (this.mo = null));
                }
                cancel() {
                    null !== this.mo && (this.mo.cancel(), (this.mo = null));
                }
                To() {
                    return (Math.random() - 0.5) * this.wo;
                }
            }
            class qO {
                constructor(e, t, r, i, a, l, h, _) {
                    (this.js = e),
                        (this.Ao = r),
                        (this.Ro = i),
                        (this.bo = a),
                        (this.authCredentialsProvider = l),
                        (this.appCheckCredentialsProvider = h),
                        (this.listener = _),
                        (this.state = 0),
                        (this.Po = 0),
                        (this.vo = null),
                        (this.Vo = null),
                        (this.stream = null),
                        (this.So = new CR(e, t));
                }
                Do() {
                    return 1 === this.state || 5 === this.state || this.Co();
                }
                Co() {
                    return 2 === this.state || 3 === this.state;
                }
                start() {
                    4 !== this.state ? this.auth() : this.xo();
                }
                stop() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        e.Do() && (yield e.close(0));
                    })();
                }
                No() {
                    (this.state = 0), this.So.reset();
                }
                ko() {
                    this.Co() &&
                        null === this.vo &&
                        (this.vo = this.js.enqueueAfterDelay(this.Ao, 6e4, () =>
                            this.Oo()
                        ));
                }
                Mo(e) {
                    this.Fo(), this.stream.send(e);
                }
                Oo() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        if (e.Co()) return e.close(0);
                    })();
                }
                Fo() {
                    this.vo && (this.vo.cancel(), (this.vo = null));
                }
                $o() {
                    this.Vo && (this.Vo.cancel(), (this.Vo = null));
                }
                close(e, t) {
                    var r = this;
                    return (0, y.Z)(function* () {
                        r.Fo(),
                            r.$o(),
                            r.So.cancel(),
                            r.Po++,
                            4 !== e
                                ? r.So.reset()
                                : t && t.code === me.RESOURCE_EXHAUSTED
                                ? (qr(t.toString()),
                                  qr(
                                      "Using maximum backoff delay to prevent overloading the backend."
                                  ),
                                  r.So.po())
                                : t &&
                                  t.code === me.UNAUTHENTICATED &&
                                  3 !== r.state &&
                                  (r.authCredentialsProvider.invalidateToken(),
                                  r.appCheckCredentialsProvider.invalidateToken()),
                            null !== r.stream &&
                                (r.Bo(), r.stream.close(), (r.stream = null)),
                            (r.state = e),
                            yield r.listener.Jr(t);
                    })();
                }
                Bo() {}
                auth() {
                    this.state = 1;
                    const e = this.Lo(this.Po),
                        t = this.Po;
                    Promise.all([
                        this.authCredentialsProvider.getToken(),
                        this.appCheckCredentialsProvider.getToken(),
                    ]).then(
                        ([r, i]) => {
                            this.Po === t && this.Uo(r, i);
                        },
                        (r) => {
                            e(() => {
                                const i = new Ve(
                                    me.UNKNOWN,
                                    "Fetching auth token failed: " + r.message
                                );
                                return this.qo(i);
                            });
                        }
                    );
                }
                Uo(e, t) {
                    const r = this.Lo(this.Po);
                    (this.stream = this.Ko(e, t)),
                        this.stream.zr(() => {
                            r(
                                () => (
                                    (this.state = 2),
                                    (this.Vo = this.js.enqueueAfterDelay(
                                        this.Ro,
                                        1e4,
                                        () => (
                                            this.Co() && (this.state = 3),
                                            Promise.resolve()
                                        )
                                    )),
                                    this.listener.zr()
                                )
                            );
                        }),
                        this.stream.Jr((i) => {
                            r(() => this.qo(i));
                        }),
                        this.stream.onMessage((i) => {
                            r(() => this.onMessage(i));
                        });
                }
                xo() {
                    var e = this;
                    (this.state = 5),
                        this.So.Io(
                            (0, y.Z)(function* () {
                                (e.state = 0), e.start();
                            })
                        );
                }
                qo(e) {
                    return (
                        $e("PersistentStream", `close with error: ${e}`),
                        (this.stream = null),
                        this.close(4, e)
                    );
                }
                Lo(e) {
                    return (t) => {
                        this.js.enqueueAndForget(() =>
                            this.Po === e
                                ? t()
                                : ($e(
                                      "PersistentStream",
                                      "stream callback skipped by getCloseGuardedDispatcher."
                                  ),
                                  Promise.resolve())
                        );
                    };
                }
            }
            class gB extends qO {
                constructor(e, t, r, i, a, l) {
                    super(
                        e,
                        "listen_stream_connection_backoff",
                        "listen_stream_idle",
                        "health_check_timeout",
                        t,
                        r,
                        i,
                        l
                    ),
                        (this.wt = a);
                }
                Ko(e, t) {
                    return this.bo.ho("Listen", e, t);
                }
                onMessage(e) {
                    this.So.reset();
                    const t = (function uU(n, e) {
                            let t;
                            if ("targetChange" in e) {
                                const r =
                                        "NO_CHANGE" ===
                                        (_ =
                                            e.targetChange.targetChangeType ||
                                            "NO_CHANGE")
                                            ? 0
                                            : "ADD" === _
                                            ? 1
                                            : "REMOVE" === _
                                            ? 2
                                            : "CURRENT" === _
                                            ? 3
                                            : "RESET" === _
                                            ? 4
                                            : ft(),
                                    i = e.targetChange.targetIds || [],
                                    a = (function (_, E) {
                                        return _.dt
                                            ? (Vt(
                                                  void 0 === E ||
                                                      "string" == typeof E
                                              ),
                                              hi.fromBase64String(E || ""))
                                            : (Vt(
                                                  void 0 === E ||
                                                      E instanceof Uint8Array
                                              ),
                                              hi.fromUint8Array(
                                                  E || new Uint8Array()
                                              ));
                                    })(n, e.targetChange.resumeToken),
                                    l = e.targetChange.cause,
                                    h =
                                        l &&
                                        (function (_) {
                                            const E =
                                                void 0 === _.code
                                                    ? me.UNKNOWN
                                                    : Lk(_.code);
                                            return new Ve(E, _.message || "");
                                        })(l);
                                t = new Hk(r, i, a, h || null);
                            } else if ("documentChange" in e) {
                                const r = e.documentChange,
                                    i = Ou(n, r.document.name),
                                    a = wi(r.document.updateTime),
                                    l = new Vi({
                                        mapValue: { fields: r.document.fields },
                                    }),
                                    h = Zn.newFoundDocument(i, a, l);
                                t = new LD(
                                    r.targetIds || [],
                                    r.removedTargetIds || [],
                                    h.key,
                                    h
                                );
                            } else if ("documentDelete" in e) {
                                const r = e.documentDelete,
                                    i = Ou(n, r.document),
                                    a = r.readTime ? wi(r.readTime) : Ft.min(),
                                    l = Zn.newNoDocument(i, a);
                                t = new LD(
                                    [],
                                    r.removedTargetIds || [],
                                    l.key,
                                    l
                                );
                            } else if ("documentRemove" in e) {
                                const r = e.documentRemove,
                                    i = Ou(n, r.document);
                                t = new LD(
                                    [],
                                    r.removedTargetIds || [],
                                    i,
                                    null
                                );
                            } else {
                                if (!("filter" in e)) return ft();
                                {
                                    const r = e.filter,
                                        a = new QV(r.count || 0);
                                    t = new jk(r.targetId, a);
                                }
                            }
                            var _;
                            return t;
                        })(this.wt, e),
                        r = (function (i) {
                            if (!("targetChange" in i)) return Ft.min();
                            const a = i.targetChange;
                            return a.targetIds && a.targetIds.length
                                ? Ft.min()
                                : a.readTime
                                ? wi(a.readTime)
                                : Ft.min();
                        })(e);
                    return this.listener.Go(t, r);
                }
                Qo(e) {
                    const t = {};
                    (t.database = uE(this.wt)),
                        (t.addTarget = (function (i, a) {
                            let l;
                            const h = a.target;
                            return (
                                (l = MD(h)
                                    ? { documents: Jk(i, h) }
                                    : { query: Xk(i, h) }),
                                (l.targetId = a.targetId),
                                a.resumeToken.approximateByteSize() > 0
                                    ? (l.resumeToken = zk(i, a.resumeToken))
                                    : a.snapshotVersion.compareTo(Ft.min()) >
                                          0 &&
                                      (l.readTime = oE(
                                          i,
                                          a.snapshotVersion.toTimestamp()
                                      )),
                                l
                            );
                        })(this.wt, e));
                    const r = (function cU(n, e) {
                        const t = (function (r, i) {
                            switch (i) {
                                case 0:
                                    return null;
                                case 1:
                                    return "existence-filter-mismatch";
                                case 2:
                                    return "limbo-document";
                                default:
                                    return ft();
                            }
                        })(0, e.purpose);
                        return null == t ? null : { "goog-listen-tags": t };
                    })(0, e);
                    r && (t.labels = r), this.Mo(t);
                }
                jo(e) {
                    const t = {};
                    (t.database = uE(this.wt)),
                        (t.removeTarget = e),
                        this.Mo(t);
                }
            }
            class mB extends qO {
                constructor(e, t, r, i, a, l) {
                    super(
                        e,
                        "write_stream_connection_backoff",
                        "write_stream_idle",
                        "health_check_timeout",
                        t,
                        r,
                        i,
                        l
                    ),
                        (this.wt = a),
                        (this.Wo = !1);
                }
                get zo() {
                    return this.Wo;
                }
                start() {
                    (this.Wo = !1),
                        (this.lastStreamToken = void 0),
                        super.start();
                }
                Bo() {
                    this.Wo && this.Ho([]);
                }
                Ko(e, t) {
                    return this.bo.ho("Write", e, t);
                }
                onMessage(e) {
                    if (
                        (Vt(!!e.streamToken),
                        (this.lastStreamToken = e.streamToken),
                        this.Wo)
                    ) {
                        this.So.reset();
                        const t = (function lU(n, e) {
                                return n && n.length > 0
                                    ? (Vt(void 0 !== e),
                                      n.map((t) =>
                                          (function (r, i) {
                                              let a = wi(
                                                  r.updateTime
                                                      ? r.updateTime
                                                      : i
                                              );
                                              return (
                                                  a.isEqual(Ft.min()) &&
                                                      (a = wi(i)),
                                                  new KV(
                                                      a,
                                                      r.transformResults || []
                                                  )
                                              );
                                          })(t, e)
                                      ))
                                    : [];
                            })(e.writeResults, e.commitTime),
                            r = wi(e.commitTime);
                        return this.listener.Jo(r, t);
                    }
                    return (
                        Vt(!e.writeResults || 0 === e.writeResults.length),
                        (this.Wo = !0),
                        this.listener.Yo()
                    );
                }
                Xo() {
                    const e = {};
                    (e.database = uE(this.wt)), this.Mo(e);
                }
                Ho(e) {
                    const t = {
                        streamToken: this.lastStreamToken,
                        writes: e.map((r) => lE(this.wt, r)),
                    };
                    this.Mo(t);
                }
            }
            class _B extends class {} {
                constructor(e, t, r, i) {
                    super(),
                        (this.authCredentials = e),
                        (this.appCheckCredentials = t),
                        (this.bo = r),
                        (this.wt = i),
                        (this.Zo = !1);
                }
                tu() {
                    if (this.Zo)
                        throw new Ve(
                            me.FAILED_PRECONDITION,
                            "The client has already been terminated."
                        );
                }
                ro(e, t, r) {
                    return (
                        this.tu(),
                        Promise.all([
                            this.authCredentials.getToken(),
                            this.appCheckCredentials.getToken(),
                        ])
                            .then(([i, a]) => this.bo.ro(e, t, r, i, a))
                            .catch((i) => {
                                throw "FirebaseError" === i.name
                                    ? (i.code === me.UNAUTHENTICATED &&
                                          (this.authCredentials.invalidateToken(),
                                          this.appCheckCredentials.invalidateToken()),
                                      i)
                                    : new Ve(me.UNKNOWN, i.toString());
                            })
                    );
                }
                ao(e, t, r, i) {
                    return (
                        this.tu(),
                        Promise.all([
                            this.authCredentials.getToken(),
                            this.appCheckCredentials.getToken(),
                        ])
                            .then(([a, l]) => this.bo.ao(e, t, r, a, l, i))
                            .catch((a) => {
                                throw "FirebaseError" === a.name
                                    ? (a.code === me.UNAUTHENTICATED &&
                                          (this.authCredentials.invalidateToken(),
                                          this.appCheckCredentials.invalidateToken()),
                                      a)
                                    : new Ve(me.UNKNOWN, a.toString());
                            })
                    );
                }
                terminate() {
                    this.Zo = !0;
                }
            }
            class yB {
                constructor(e, t) {
                    (this.asyncQueue = e),
                        (this.onlineStateHandler = t),
                        (this.state = "Unknown"),
                        (this.eu = 0),
                        (this.nu = null),
                        (this.su = !0);
                }
                iu() {
                    0 === this.eu &&
                        (this.ru("Unknown"),
                        (this.nu = this.asyncQueue.enqueueAfterDelay(
                            "online_state_timeout",
                            1e4,
                            () => (
                                (this.nu = null),
                                this.ou(
                                    "Backend didn't respond within 10 seconds."
                                ),
                                this.ru("Offline"),
                                Promise.resolve()
                            )
                        )));
                }
                uu(e) {
                    "Online" === this.state
                        ? this.ru("Unknown")
                        : (this.eu++,
                          this.eu >= 1 &&
                              (this.cu(),
                              this.ou(
                                  `Connection failed 1 times. Most recent error: ${e.toString()}`
                              ),
                              this.ru("Offline")));
                }
                set(e) {
                    this.cu(),
                        (this.eu = 0),
                        "Online" === e && (this.su = !1),
                        this.ru(e);
                }
                ru(e) {
                    e !== this.state &&
                        ((this.state = e), this.onlineStateHandler(e));
                }
                ou(e) {
                    const t = `Could not reach Cloud Firestore backend. ${e}\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.`;
                    this.su
                        ? (qr(t), (this.su = !1))
                        : $e("OnlineStateTracker", t);
                }
                cu() {
                    null !== this.nu && (this.nu.cancel(), (this.nu = null));
                }
            }
            class vB {
                constructor(e, t, r, i, a) {
                    var l = this;
                    (this.localStore = e),
                        (this.datastore = t),
                        (this.asyncQueue = r),
                        (this.remoteSyncer = {}),
                        (this.au = []),
                        (this.hu = new Map()),
                        (this.lu = new Set()),
                        (this.fu = []),
                        (this.du = a),
                        this.du.Br((h) => {
                            r.enqueueAndForget(
                                (0, y.Z)(function* () {
                                    var _;
                                    rh(l) &&
                                        ($e(
                                            "RemoteStore",
                                            "Restarting streams for network reachability change."
                                        ),
                                        yield ((_ = (0, y.Z)(function* (E) {
                                            const D = rt(E);
                                            D.lu.add(4),
                                                yield G_(D),
                                                D._u.set("Unknown"),
                                                D.lu.delete(4),
                                                yield vE(D);
                                        })),
                                        function (E) {
                                            return _.apply(this, arguments);
                                        })(l));
                                })
                            );
                        }),
                        (this._u = new yB(r, i));
                }
            }
            function vE(n) {
                return bR.apply(this, arguments);
            }
            function bR() {
                return (
                    (bR = (0, y.Z)(function* (n) {
                        if (rh(n)) for (const e of n.fu) yield e(!0);
                    })),
                    bR.apply(this, arguments)
                );
            }
            function G_(n) {
                return DR.apply(this, arguments);
            }
            function DR() {
                return (
                    (DR = (0, y.Z)(function* (n) {
                        for (const e of n.fu) yield e(!1);
                    })),
                    DR.apply(this, arguments)
                );
            }
            function JD(n, e) {
                const t = rt(n);
                t.hu.has(e.targetId) ||
                    (t.hu.set(e.targetId, e),
                    AR(t) ? SR(t) : z_(t).Co() && TR(t, e));
            }
            function wE(n, e) {
                const t = rt(n),
                    r = z_(t);
                t.hu.delete(e),
                    r.Co() && KO(t, e),
                    0 === t.hu.size &&
                        (r.Co() ? r.ko() : rh(t) && t._u.set("Unknown"));
            }
            function TR(n, e) {
                n.wu.Nt(e.targetId), z_(n).Qo(e);
            }
            function KO(n, e) {
                n.wu.Nt(e), z_(n).jo(e);
            }
            function SR(n) {
                (n.wu = new nU({
                    getRemoteKeysForTarget: (e) =>
                        n.remoteSyncer.getRemoteKeysForTarget(e),
                    te: (e) => n.hu.get(e) || null,
                })),
                    z_(n).start(),
                    n._u.iu();
            }
            function AR(n) {
                return rh(n) && !z_(n).Do() && n.hu.size > 0;
            }
            function rh(n) {
                return 0 === rt(n).lu.size;
            }
            function ZO(n) {
                n.wu = void 0;
            }
            function wB(n) {
                return xR.apply(this, arguments);
            }
            function xR() {
                return (
                    (xR = (0, y.Z)(function* (n) {
                        n.hu.forEach((e, t) => {
                            TR(n, e);
                        });
                    })),
                    xR.apply(this, arguments)
                );
            }
            function EB(n, e) {
                return RR.apply(this, arguments);
            }
            function RR() {
                return (
                    (RR = (0, y.Z)(function* (n, e) {
                        ZO(n),
                            AR(n) ? (n._u.uu(e), SR(n)) : n._u.set("Unknown");
                    })),
                    RR.apply(this, arguments)
                );
            }
            function IB(n, e, t) {
                return MR.apply(this, arguments);
            }
            function MR() {
                return (
                    (MR = (0, y.Z)(function* (n, e, t) {
                        if (
                            (n._u.set("Online"),
                            e instanceof Hk && 2 === e.state && e.cause)
                        )
                            try {
                                yield ((r = (0, y.Z)(function* (i, a) {
                                    const l = a.cause;
                                    for (const h of a.targetIds)
                                        i.hu.has(h) &&
                                            (yield i.remoteSyncer.rejectListen(
                                                h,
                                                l
                                            ),
                                            i.hu.delete(h),
                                            i.wu.removeTarget(h));
                                })),
                                function (i, a) {
                                    return r.apply(this, arguments);
                                })(n, e);
                            } catch (r) {
                                $e(
                                    "RemoteStore",
                                    "Failed to remove targets %s: %s ",
                                    e.targetIds.join(","),
                                    r
                                ),
                                    yield XD(n, r);
                            }
                        else if (
                            (e instanceof LD
                                ? n.wu.Ut(e)
                                : e instanceof jk
                                ? n.wu.zt(e)
                                : n.wu.Gt(e),
                            !t.isEqual(Ft.min()))
                        )
                            try {
                                const r = yield LO(n.localStore);
                                t.compareTo(r) >= 0 &&
                                    (yield (function (i, a) {
                                        const l = i.wu.Yt(a);
                                        return (
                                            l.targetChanges.forEach((h, _) => {
                                                if (
                                                    h.resumeToken.approximateByteSize() >
                                                    0
                                                ) {
                                                    const E = i.hu.get(_);
                                                    E &&
                                                        i.hu.set(
                                                            _,
                                                            E.withResumeToken(
                                                                h.resumeToken,
                                                                a
                                                            )
                                                        );
                                                }
                                            }),
                                            l.targetMismatches.forEach((h) => {
                                                const _ = i.hu.get(h);
                                                if (!_) return;
                                                i.hu.set(
                                                    h,
                                                    _.withResumeToken(
                                                        hi.EMPTY_BYTE_STRING,
                                                        _.snapshotVersion
                                                    )
                                                ),
                                                    KO(i, h);
                                                const E = new eh(
                                                    _.target,
                                                    h,
                                                    1,
                                                    _.sequenceNumber
                                                );
                                                TR(i, E);
                                            }),
                                            i.remoteSyncer.applyRemoteEvent(l)
                                        );
                                    })(n, t));
                            } catch (r) {
                                $e(
                                    "RemoteStore",
                                    "Failed to raise snapshot:",
                                    r
                                ),
                                    yield XD(n, r);
                            }
                        var r;
                    })),
                    MR.apply(this, arguments)
                );
            }
            function XD(n, e, t) {
                return NR.apply(this, arguments);
            }
            function NR() {
                return (
                    (NR = (0, y.Z)(function* (n, e, t) {
                        if (!Kd(e)) throw e;
                        n.lu.add(1),
                            yield G_(n),
                            n._u.set("Offline"),
                            t || (t = () => LO(n.localStore)),
                            n.asyncQueue.enqueueRetryable(
                                (0, y.Z)(function* () {
                                    $e(
                                        "RemoteStore",
                                        "Retrying IndexedDB access"
                                    ),
                                        yield t(),
                                        n.lu.delete(1),
                                        yield vE(n);
                                })
                            );
                    })),
                    NR.apply(this, arguments)
                );
            }
            function YO(n, e) {
                return e().catch((t) => XD(n, t, e));
            }
            function W_(n) {
                return PR.apply(this, arguments);
            }
            function PR() {
                return (
                    (PR = (0, y.Z)(function* (n) {
                        const e = rt(n),
                            t = ih(e);
                        let r =
                            e.au.length > 0
                                ? e.au[e.au.length - 1].batchId
                                : -1;
                        for (; CB(e); )
                            try {
                                const i = yield uB(e.localStore, r);
                                if (null === i) {
                                    0 === e.au.length && t.ko();
                                    break;
                                }
                                (r = i.batchId), bB(e, i);
                            } catch (i) {
                                yield XD(e, i);
                            }
                        QO(e) && JO(e);
                    })),
                    PR.apply(this, arguments)
                );
            }
            function CB(n) {
                return rh(n) && n.au.length < 10;
            }
            function bB(n, e) {
                n.au.push(e);
                const t = ih(n);
                t.Co() && t.zo && t.Ho(e.mutations);
            }
            function QO(n) {
                return rh(n) && !ih(n).Do() && n.au.length > 0;
            }
            function JO(n) {
                ih(n).start();
            }
            function DB(n) {
                return kR.apply(this, arguments);
            }
            function kR() {
                return (
                    (kR = (0, y.Z)(function* (n) {
                        ih(n).Xo();
                    })),
                    kR.apply(this, arguments)
                );
            }
            function TB(n) {
                return OR.apply(this, arguments);
            }
            function OR() {
                return (
                    (OR = (0, y.Z)(function* (n) {
                        const e = ih(n);
                        for (const t of n.au) e.Ho(t.mutations);
                    })),
                    OR.apply(this, arguments)
                );
            }
            function SB(n, e, t) {
                return FR.apply(this, arguments);
            }
            function FR() {
                return (
                    (FR = (0, y.Z)(function* (n, e, t) {
                        const r = n.au.shift(),
                            i = sR.from(r, e, t);
                        yield YO(n, () =>
                            n.remoteSyncer.applySuccessfulWrite(i)
                        ),
                            yield W_(n);
                    })),
                    FR.apply(this, arguments)
                );
            }
            function AB(n, e) {
                return LR.apply(this, arguments);
            }
            function LR() {
                return (
                    (LR = (0, y.Z)(function* (n, e) {
                        var t;
                        e &&
                            ih(n).zo &&
                            (yield ((t = (0, y.Z)(function* (r, i) {
                                if (Fk((a = i.code)) && a !== me.ABORTED) {
                                    const l = r.au.shift();
                                    ih(r).No(),
                                        yield YO(r, () =>
                                            r.remoteSyncer.rejectFailedWrite(
                                                l.batchId,
                                                i
                                            )
                                        ),
                                        yield W_(r);
                                }
                                var a;
                            })),
                            function (r, i) {
                                return t.apply(this, arguments);
                            })(n, e)),
                            QO(n) && JO(n);
                    })),
                    LR.apply(this, arguments)
                );
            }
            function XO(n, e) {
                return VR.apply(this, arguments);
            }
            function VR() {
                return (
                    (VR = (0, y.Z)(function* (n, e) {
                        const t = rt(n);
                        t.asyncQueue.verifyOperationInProgress(),
                            $e(
                                "RemoteStore",
                                "RemoteStore received new credentials"
                            );
                        const r = rh(t);
                        t.lu.add(3),
                            yield G_(t),
                            r && t._u.set("Unknown"),
                            yield t.remoteSyncer.handleCredentialChange(e),
                            t.lu.delete(3),
                            yield vE(t);
                    })),
                    VR.apply(this, arguments)
                );
            }
            function UR(n, e) {
                return BR.apply(this, arguments);
            }
            function BR() {
                return (
                    (BR = (0, y.Z)(function* (n, e) {
                        const t = rt(n);
                        e
                            ? (t.lu.delete(2), yield vE(t))
                            : e ||
                              (t.lu.add(2), yield G_(t), t._u.set("Unknown"));
                    })),
                    BR.apply(this, arguments)
                );
            }
            function z_(n) {
                return (
                    n.mu ||
                        ((n.mu = (function (e, t, r) {
                            const i = rt(e);
                            return (
                                i.tu(),
                                new gB(
                                    t,
                                    i.bo,
                                    i.authCredentials,
                                    i.appCheckCredentials,
                                    i.wt,
                                    r
                                )
                            );
                        })(n.datastore, n.asyncQueue, {
                            zr: wB.bind(null, n),
                            Jr: EB.bind(null, n),
                            Go: IB.bind(null, n),
                        })),
                        n.fu.push(
                            (function () {
                                var e = (0, y.Z)(function* (t) {
                                    t
                                        ? (n.mu.No(),
                                          AR(n) ? SR(n) : n._u.set("Unknown"))
                                        : (yield n.mu.stop(), ZO(n));
                                });
                                return function (t) {
                                    return e.apply(this, arguments);
                                };
                            })()
                        )),
                    n.mu
                );
            }
            function ih(n) {
                return (
                    n.gu ||
                        ((n.gu = (function (e, t, r) {
                            const i = rt(e);
                            return (
                                i.tu(),
                                new mB(
                                    t,
                                    i.bo,
                                    i.authCredentials,
                                    i.appCheckCredentials,
                                    i.wt,
                                    r
                                )
                            );
                        })(n.datastore, n.asyncQueue, {
                            zr: DB.bind(null, n),
                            Jr: AB.bind(null, n),
                            Yo: TB.bind(null, n),
                            Jo: SB.bind(null, n),
                        })),
                        n.fu.push(
                            (function () {
                                var e = (0, y.Z)(function* (t) {
                                    t
                                        ? (n.gu.No(), yield W_(n))
                                        : (yield n.gu.stop(),
                                          n.au.length > 0 &&
                                              ($e(
                                                  "RemoteStore",
                                                  `Stopping write stream with ${n.au.length} pending writes`
                                              ),
                                              (n.au = [])));
                                });
                                return function (t) {
                                    return e.apply(this, arguments);
                                };
                            })()
                        )),
                    n.gu
                );
            }
            class jR {
                constructor(e, t, r, i, a) {
                    (this.asyncQueue = e),
                        (this.timerId = t),
                        (this.targetTimeMs = r),
                        (this.op = i),
                        (this.removalCallback = a),
                        (this.deferred = new vi()),
                        (this.then = this.deferred.promise.then.bind(
                            this.deferred.promise
                        )),
                        this.deferred.promise.catch((l) => {});
                }
                static createAndSchedule(e, t, r, i, a) {
                    const l = Date.now() + r,
                        h = new jR(e, t, l, i, a);
                    return h.start(r), h;
                }
                start(e) {
                    this.timerHandle = setTimeout(
                        () => this.handleDelayElapsed(),
                        e
                    );
                }
                skipDelay() {
                    return this.handleDelayElapsed();
                }
                cancel(e) {
                    null !== this.timerHandle &&
                        (this.clearTimeout(),
                        this.deferred.reject(
                            new Ve(
                                me.CANCELLED,
                                "Operation cancelled" + (e ? ": " + e : "")
                            )
                        ));
                }
                handleDelayElapsed() {
                    this.asyncQueue.enqueueAndForget(() =>
                        null !== this.timerHandle
                            ? (this.clearTimeout(),
                              this.op().then((e) => this.deferred.resolve(e)))
                            : Promise.resolve()
                    );
                }
                clearTimeout() {
                    null !== this.timerHandle &&
                        (this.removalCallback(this),
                        clearTimeout(this.timerHandle),
                        (this.timerHandle = null));
                }
            }
            function q_(n, e) {
                if ((qr("AsyncQueue", `${e}: ${n}`), Kd(n)))
                    return new Ve(me.UNAVAILABLE, `${e}: ${n}`);
                throw n;
            }
            class K_ {
                constructor(e) {
                    (this.comparator = e
                        ? (t, r) => e(t, r) || Xe.comparator(t.key, r.key)
                        : (t, r) => Xe.comparator(t.key, r.key)),
                        (this.keyedMap = nE()),
                        (this.sortedSet = new Nr(this.comparator));
                }
                static emptySet(e) {
                    return new K_(e.comparator);
                }
                has(e) {
                    return null != this.keyedMap.get(e);
                }
                get(e) {
                    return this.keyedMap.get(e);
                }
                first() {
                    return this.sortedSet.minKey();
                }
                last() {
                    return this.sortedSet.maxKey();
                }
                isEmpty() {
                    return this.sortedSet.isEmpty();
                }
                indexOf(e) {
                    const t = this.keyedMap.get(e);
                    return t ? this.sortedSet.indexOf(t) : -1;
                }
                get size() {
                    return this.sortedSet.size;
                }
                forEach(e) {
                    this.sortedSet.inorderTraversal((t, r) => (e(t), !1));
                }
                add(e) {
                    const t = this.delete(e.key);
                    return t.copy(
                        t.keyedMap.insert(e.key, e),
                        t.sortedSet.insert(e, null)
                    );
                }
                delete(e) {
                    const t = this.get(e);
                    return t
                        ? this.copy(
                              this.keyedMap.remove(e),
                              this.sortedSet.remove(t)
                          )
                        : this;
                }
                isEqual(e) {
                    if (!(e instanceof K_) || this.size !== e.size) return !1;
                    const t = this.sortedSet.getIterator(),
                        r = e.sortedSet.getIterator();
                    for (; t.hasNext(); ) {
                        const i = t.getNext().key,
                            a = r.getNext().key;
                        if (!i.isEqual(a)) return !1;
                    }
                    return !0;
                }
                toString() {
                    const e = [];
                    return (
                        this.forEach((t) => {
                            e.push(t.toString());
                        }),
                        0 === e.length
                            ? "DocumentSet ()"
                            : "DocumentSet (\n  " + e.join("  \n") + "\n)"
                    );
                }
                copy(e, t) {
                    const r = new K_();
                    return (
                        (r.comparator = this.comparator),
                        (r.keyedMap = e),
                        (r.sortedSet = t),
                        r
                    );
                }
            }
            class e1 {
                constructor() {
                    this.yu = new Nr(Xe.comparator);
                }
                track(e) {
                    const t = e.doc.key,
                        r = this.yu.get(t);
                    r
                        ? 0 !== e.type && 3 === r.type
                            ? (this.yu = this.yu.insert(t, e))
                            : 3 === e.type && 1 !== r.type
                            ? (this.yu = this.yu.insert(t, {
                                  type: r.type,
                                  doc: e.doc,
                              }))
                            : 2 === e.type && 2 === r.type
                            ? (this.yu = this.yu.insert(t, {
                                  type: 2,
                                  doc: e.doc,
                              }))
                            : 2 === e.type && 0 === r.type
                            ? (this.yu = this.yu.insert(t, {
                                  type: 0,
                                  doc: e.doc,
                              }))
                            : 1 === e.type && 0 === r.type
                            ? (this.yu = this.yu.remove(t))
                            : 1 === e.type && 2 === r.type
                            ? (this.yu = this.yu.insert(t, {
                                  type: 1,
                                  doc: r.doc,
                              }))
                            : 0 === e.type && 1 === r.type
                            ? (this.yu = this.yu.insert(t, {
                                  type: 2,
                                  doc: e.doc,
                              }))
                            : ft()
                        : (this.yu = this.yu.insert(t, e));
                }
                pu() {
                    const e = [];
                    return (
                        this.yu.inorderTraversal((t, r) => {
                            e.push(r);
                        }),
                        e
                    );
                }
            }
            class Z_ {
                constructor(e, t, r, i, a, l, h, _) {
                    (this.query = e),
                        (this.docs = t),
                        (this.oldDocs = r),
                        (this.docChanges = i),
                        (this.mutatedKeys = a),
                        (this.fromCache = l),
                        (this.syncStateChanged = h),
                        (this.excludesMetadataChanges = _);
                }
                static fromInitialDocuments(e, t, r, i) {
                    const a = [];
                    return (
                        t.forEach((l) => {
                            a.push({ type: 0, doc: l });
                        }),
                        new Z_(e, t, K_.emptySet(t), a, r, i, !0, !1)
                    );
                }
                get hasPendingWrites() {
                    return !this.mutatedKeys.isEmpty();
                }
                isEqual(e) {
                    if (
                        !(
                            this.fromCache === e.fromCache &&
                            this.syncStateChanged === e.syncStateChanged &&
                            this.mutatedKeys.isEqual(e.mutatedKeys) &&
                            X0(this.query, e.query) &&
                            this.docs.isEqual(e.docs) &&
                            this.oldDocs.isEqual(e.oldDocs)
                        )
                    )
                        return !1;
                    const t = this.docChanges,
                        r = e.docChanges;
                    if (t.length !== r.length) return !1;
                    for (let i = 0; i < t.length; i++)
                        if (
                            t[i].type !== r[i].type ||
                            !t[i].doc.isEqual(r[i].doc)
                        )
                            return !1;
                    return !0;
                }
            }
            class xB {
                constructor() {
                    (this.Iu = void 0), (this.listeners = []);
                }
            }
            class RB {
                constructor() {
                    (this.queries = new Xd((e) => wk(e), X0)),
                        (this.onlineState = "Unknown"),
                        (this.Tu = new Set());
                }
            }
            function HR(n, e) {
                return $R.apply(this, arguments);
            }
            function $R() {
                return (
                    ($R = (0, y.Z)(function* (n, e) {
                        const t = rt(n),
                            r = e.query;
                        let i = !1,
                            a = t.queries.get(r);
                        if ((a || ((i = !0), (a = new xB())), i))
                            try {
                                a.Iu = yield t.onListen(r);
                            } catch (l) {
                                const h = q_(
                                    l,
                                    `Initialization of query '${Qx(
                                        e.query
                                    )}' failed`
                                );
                                return void e.onError(h);
                            }
                        t.queries.set(r, a),
                            a.listeners.push(e),
                            e.Eu(t.onlineState),
                            a.Iu && e.Au(a.Iu) && zR(t);
                    })),
                    $R.apply(this, arguments)
                );
            }
            function GR(n, e) {
                return WR.apply(this, arguments);
            }
            function WR() {
                return (
                    (WR = (0, y.Z)(function* (n, e) {
                        const t = rt(n),
                            r = e.query;
                        let i = !1;
                        const a = t.queries.get(r);
                        if (a) {
                            const l = a.listeners.indexOf(e);
                            l >= 0 &&
                                (a.listeners.splice(l, 1),
                                (i = 0 === a.listeners.length));
                        }
                        if (i) return t.queries.delete(r), t.onUnlisten(r);
                    })),
                    WR.apply(this, arguments)
                );
            }
            function MB(n, e) {
                const t = rt(n);
                let r = !1;
                for (const i of e) {
                    const l = t.queries.get(i.query);
                    if (l) {
                        for (const h of l.listeners) h.Au(i) && (r = !0);
                        l.Iu = i;
                    }
                }
                r && zR(t);
            }
            function NB(n, e, t) {
                const r = rt(n),
                    i = r.queries.get(e);
                if (i) for (const a of i.listeners) a.onError(t);
                r.queries.delete(e);
            }
            function zR(n) {
                n.Tu.forEach((e) => {
                    e.next();
                });
            }
            class qR {
                constructor(e, t, r) {
                    (this.query = e),
                        (this.Ru = t),
                        (this.bu = !1),
                        (this.Pu = null),
                        (this.onlineState = "Unknown"),
                        (this.options = r || {});
                }
                Au(e) {
                    if (!this.options.includeMetadataChanges) {
                        const r = [];
                        for (const i of e.docChanges) 3 !== i.type && r.push(i);
                        e = new Z_(
                            e.query,
                            e.docs,
                            e.oldDocs,
                            r,
                            e.mutatedKeys,
                            e.fromCache,
                            e.syncStateChanged,
                            !0
                        );
                    }
                    let t = !1;
                    return (
                        this.bu
                            ? this.vu(e) && (this.Ru.next(e), (t = !0))
                            : this.Vu(e, this.onlineState) &&
                              (this.Su(e), (t = !0)),
                        (this.Pu = e),
                        t
                    );
                }
                onError(e) {
                    this.Ru.error(e);
                }
                Eu(e) {
                    this.onlineState = e;
                    let t = !1;
                    return (
                        this.Pu &&
                            !this.bu &&
                            this.Vu(this.Pu, e) &&
                            (this.Su(this.Pu), (t = !0)),
                        t
                    );
                }
                Vu(e, t) {
                    return (
                        !e.fromCache ||
                        !(
                            (this.options.Du && "Offline" !== t) ||
                            (e.docs.isEmpty() && "Offline" !== t)
                        )
                    );
                }
                vu(e) {
                    return (
                        e.docChanges.length > 0 ||
                        (!!(
                            e.syncStateChanged ||
                            (this.Pu &&
                                this.Pu.hasPendingWrites !== e.hasPendingWrites)
                        ) &&
                            !0 === this.options.includeMetadataChanges)
                    );
                }
                Su(e) {
                    (e = Z_.fromInitialDocuments(
                        e.query,
                        e.docs,
                        e.mutatedKeys,
                        e.fromCache
                    )),
                        (this.bu = !0),
                        this.Ru.next(e);
                }
            }
            class PB {
                constructor(e, t) {
                    (this.payload = e), (this.byteLength = t);
                }
                Cu() {
                    return "metadata" in this.payload;
                }
            }
            class t1 {
                constructor(e) {
                    this.wt = e;
                }
                Wi(e) {
                    return Ou(this.wt, e);
                }
                zi(e) {
                    return e.metadata.exists
                        ? Qk(this.wt, e.document, !1)
                        : Zn.newNoDocument(
                              this.Wi(e.metadata.name),
                              this.Hi(e.metadata.readTime)
                          );
                }
                Hi(e) {
                    return wi(e);
                }
            }
            class kB {
                constructor(e, t, r) {
                    (this.xu = e),
                        (this.localStore = t),
                        (this.wt = r),
                        (this.queries = []),
                        (this.documents = []),
                        (this.collectionGroups = new Set()),
                        (this.progress = n1(e));
                }
                Nu(e) {
                    this.progress.bytesLoaded += e.byteLength;
                    let t = this.progress.documentsLoaded;
                    if (e.payload.namedQuery)
                        this.queries.push(e.payload.namedQuery);
                    else if (e.payload.documentMetadata) {
                        this.documents.push({
                            metadata: e.payload.documentMetadata,
                        }),
                            e.payload.documentMetadata.exists || ++t;
                        const r = wn.fromString(
                            e.payload.documentMetadata.name
                        );
                        this.collectionGroups.add(r.get(r.length - 2));
                    } else
                        e.payload.document &&
                            ((this.documents[
                                this.documents.length - 1
                            ].document = e.payload.document),
                            ++t);
                    return t !== this.progress.documentsLoaded
                        ? ((this.progress.documentsLoaded = t),
                          Object.assign({}, this.progress))
                        : null;
                }
                ku(e) {
                    const t = new Map(),
                        r = new t1(this.wt);
                    for (const i of e)
                        if (i.metadata.queries) {
                            const a = r.Wi(i.metadata.name);
                            for (const l of i.metadata.queries) {
                                const h = (t.get(l) || nn()).add(a);
                                t.set(l, h);
                            }
                        }
                    return t;
                }
                complete() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        const t = yield (function lB(n, e, t, r) {
                                return _R.apply(this, arguments);
                            })(
                                e.localStore,
                                new t1(e.wt),
                                e.documents,
                                e.xu.id
                            ),
                            r = e.ku(e.documents);
                        for (const i of e.queries)
                            yield cB(e.localStore, i, r.get(i.name));
                        return (
                            (e.progress.taskState = "Success"),
                            {
                                progress: e.progress,
                                Ou: e.collectionGroups,
                                Mu: t,
                            }
                        );
                    })();
                }
            }
            function n1(n) {
                return {
                    taskState: "Running",
                    documentsLoaded: 0,
                    bytesLoaded: 0,
                    totalDocuments: n.totalDocuments,
                    totalBytes: n.totalBytes,
                };
            }
            class r1 {
                constructor(e) {
                    this.key = e;
                }
            }
            class i1 {
                constructor(e) {
                    this.key = e;
                }
            }
            class s1 {
                constructor(e, t) {
                    (this.query = e),
                        (this.Fu = t),
                        (this.$u = null),
                        (this.current = !1),
                        (this.Bu = nn()),
                        (this.mutatedKeys = nn()),
                        (this.Lu = Ik(e)),
                        (this.Uu = new K_(this.Lu));
                }
                get qu() {
                    return this.Fu;
                }
                Ku(e, t) {
                    const r = t ? t.Gu : new e1(),
                        i = t ? t.Uu : this.Uu;
                    let a = t ? t.mutatedKeys : this.mutatedKeys,
                        l = i,
                        h = !1;
                    const _ =
                            "F" === this.query.limitType &&
                            i.size === this.query.limit
                                ? i.last()
                                : null,
                        E =
                            "L" === this.query.limitType &&
                            i.size === this.query.limit
                                ? i.first()
                                : null;
                    if (
                        (e.inorderTraversal((D, T) => {
                            const R = i.get(D),
                                F = Jx(this.query, T) ? T : null,
                                K = !!R && this.mutatedKeys.has(R.key),
                                Ie =
                                    !!F &&
                                    (F.hasLocalMutations ||
                                        (this.mutatedKeys.has(F.key) &&
                                            F.hasCommittedMutations));
                            let Re = !1;
                            R && F
                                ? R.data.isEqual(F.data)
                                    ? K !== Ie &&
                                      (r.track({ type: 3, doc: F }), (Re = !0))
                                    : this.Qu(R, F) ||
                                      (r.track({ type: 2, doc: F }),
                                      (Re = !0),
                                      ((_ && this.Lu(F, _) > 0) ||
                                          (E && this.Lu(F, E) < 0)) &&
                                          (h = !0))
                                : !R && F
                                ? (r.track({ type: 0, doc: F }), (Re = !0))
                                : R &&
                                  !F &&
                                  (r.track({ type: 1, doc: R }),
                                  (Re = !0),
                                  (_ || E) && (h = !0)),
                                Re &&
                                    (F
                                        ? ((l = l.add(F)),
                                          (a = Ie ? a.add(D) : a.delete(D)))
                                        : ((l = l.delete(D)),
                                          (a = a.delete(D))));
                        }),
                        null !== this.query.limit)
                    )
                        for (; l.size > this.query.limit; ) {
                            const D =
                                "F" === this.query.limitType
                                    ? l.last()
                                    : l.first();
                            (l = l.delete(D.key)),
                                (a = a.delete(D.key)),
                                r.track({ type: 1, doc: D });
                        }
                    return { Uu: l, Gu: r, Oi: h, mutatedKeys: a };
                }
                Qu(e, t) {
                    return (
                        e.hasLocalMutations &&
                        t.hasCommittedMutations &&
                        !t.hasLocalMutations
                    );
                }
                applyChanges(e, t, r) {
                    const i = this.Uu;
                    (this.Uu = e.Uu), (this.mutatedKeys = e.mutatedKeys);
                    const a = e.Gu.pu();
                    a.sort(
                        (E, D) =>
                            (function (T, R) {
                                const F = (K) => {
                                    switch (K) {
                                        case 0:
                                            return 1;
                                        case 2:
                                        case 3:
                                            return 2;
                                        case 1:
                                            return 0;
                                        default:
                                            return ft();
                                    }
                                };
                                return F(T) - F(R);
                            })(E.type, D.type) || this.Lu(E.doc, D.doc)
                    ),
                        this.ju(r);
                    const l = t ? this.Wu() : [],
                        h = 0 === this.Bu.size && this.current ? 1 : 0,
                        _ = h !== this.$u;
                    return (
                        (this.$u = h),
                        0 !== a.length || _
                            ? {
                                  snapshot: new Z_(
                                      this.query,
                                      e.Uu,
                                      i,
                                      a,
                                      e.mutatedKeys,
                                      0 === h,
                                      _,
                                      !1
                                  ),
                                  zu: l,
                              }
                            : { zu: l }
                    );
                }
                Eu(e) {
                    return this.current && "Offline" === e
                        ? ((this.current = !1),
                          this.applyChanges(
                              {
                                  Uu: this.Uu,
                                  Gu: new e1(),
                                  mutatedKeys: this.mutatedKeys,
                                  Oi: !1,
                              },
                              !1
                          ))
                        : { zu: [] };
                }
                Hu(e) {
                    return (
                        !this.Fu.has(e) &&
                        !!this.Uu.has(e) &&
                        !this.Uu.get(e).hasLocalMutations
                    );
                }
                ju(e) {
                    e &&
                        (e.addedDocuments.forEach(
                            (t) => (this.Fu = this.Fu.add(t))
                        ),
                        e.modifiedDocuments.forEach((t) => {}),
                        e.removedDocuments.forEach(
                            (t) => (this.Fu = this.Fu.delete(t))
                        ),
                        (this.current = e.current));
                }
                Wu() {
                    if (!this.current) return [];
                    const e = this.Bu;
                    (this.Bu = nn()),
                        this.Uu.forEach((r) => {
                            this.Hu(r.key) && (this.Bu = this.Bu.add(r.key));
                        });
                    const t = [];
                    return (
                        e.forEach((r) => {
                            this.Bu.has(r) || t.push(new i1(r));
                        }),
                        this.Bu.forEach((r) => {
                            e.has(r) || t.push(new r1(r));
                        }),
                        t
                    );
                }
                Ju(e) {
                    (this.Fu = e.ji), (this.Bu = nn());
                    const t = this.Ku(e.documents);
                    return this.applyChanges(t, !0);
                }
                Yu() {
                    return Z_.fromInitialDocuments(
                        this.query,
                        this.Uu,
                        this.mutatedKeys,
                        0 === this.$u
                    );
                }
            }
            class OB {
                constructor(e, t, r) {
                    (this.query = e), (this.targetId = t), (this.view = r);
                }
            }
            class FB {
                constructor(e) {
                    (this.key = e), (this.Xu = !1);
                }
            }
            class LB {
                constructor(e, t, r, i, a, l) {
                    (this.localStore = e),
                        (this.remoteStore = t),
                        (this.eventManager = r),
                        (this.sharedClientState = i),
                        (this.currentUser = a),
                        (this.maxConcurrentLimboResolutions = l),
                        (this.Zu = {}),
                        (this.tc = new Xd((h) => wk(h), X0)),
                        (this.ec = new Map()),
                        (this.nc = new Set()),
                        (this.sc = new Nr(Xe.comparator)),
                        (this.ic = new Map()),
                        (this.rc = new cR()),
                        (this.oc = {}),
                        (this.uc = new Map()),
                        (this.cc = Cp.Rn()),
                        (this.onlineState = "Unknown"),
                        (this.ac = void 0);
                }
                get isPrimaryClient() {
                    return !0 === this.ac;
                }
            }
            function VB(n, e) {
                return KR.apply(this, arguments);
            }
            function KR() {
                return (
                    (KR = (0, y.Z)(function* (n, e) {
                        const t = _M(n);
                        let r, i;
                        const a = t.tc.get(e);
                        if (a)
                            (r = a.targetId),
                                t.sharedClientState.addLocalQueryTarget(r),
                                (i = a.view.Yu());
                        else {
                            const l = yield H_(t.localStore, Yo(e));
                            t.isPrimaryClient && JD(t.remoteStore, l);
                            const h = t.sharedClientState.addLocalQueryTarget(
                                l.targetId
                            );
                            (r = l.targetId),
                                (i = yield ZR(t, e, r, "current" === h));
                        }
                        return i;
                    })),
                    KR.apply(this, arguments)
                );
            }
            function ZR(n, e, t, r) {
                return YR.apply(this, arguments);
            }
            function YR() {
                return (
                    (YR = (0, y.Z)(function* (n, e, t, r) {
                        n.hc = (D, T, R) => {
                            return ((F = (0, y.Z)(function* (K, Ie, Re, mt) {
                                let _t = Ie.view.Ku(Re);
                                _t.Oi &&
                                    (_t = yield KD(
                                        K.localStore,
                                        Ie.query,
                                        !1
                                    ).then(({ documents: $t }) =>
                                        Ie.view.Ku($t, _t)
                                    ));
                                const yt =
                                        mt && mt.targetChanges.get(Ie.targetId),
                                    gt = Ie.view.applyChanges(
                                        _t,
                                        K.isPrimaryClient,
                                        yt
                                    );
                                return oM(K, Ie.targetId, gt.zu), gt.snapshot;
                            })),
                            function (K, Ie, Re, mt) {
                                return F.apply(this, arguments);
                            })(n, D, T, R);
                            var F;
                        };
                        const i = yield KD(n.localStore, e, !0),
                            a = new s1(e, i.ji),
                            l = a.Ku(i.documents),
                            h =
                                sE.createSynthesizedTargetChangeForCurrentChange(
                                    t,
                                    r && "Offline" !== n.onlineState
                                ),
                            _ = a.applyChanges(l, n.isPrimaryClient, h);
                        oM(n, t, _.zu);
                        const E = new OB(e, t, a);
                        return (
                            n.tc.set(e, E),
                            n.ec.has(t)
                                ? n.ec.get(t).push(e)
                                : n.ec.set(t, [e]),
                            _.snapshot
                        );
                    })),
                    YR.apply(this, arguments)
                );
            }
            function UB(n, e) {
                return QR.apply(this, arguments);
            }
            function QR() {
                return (
                    (QR = (0, y.Z)(function* (n, e) {
                        const t = rt(n),
                            r = t.tc.get(e),
                            i = t.ec.get(r.targetId);
                        if (i.length > 1)
                            return (
                                t.ec.set(
                                    r.targetId,
                                    i.filter((a) => !X0(a, e))
                                ),
                                void t.tc.delete(e)
                            );
                        t.isPrimaryClient
                            ? (t.sharedClientState.removeLocalQueryTarget(
                                  r.targetId
                              ),
                              t.sharedClientState.isActiveQueryTarget(
                                  r.targetId
                              ) ||
                                  (yield $_(t.localStore, r.targetId, !1)
                                      .then(() => {
                                          t.sharedClientState.clearQueryState(
                                              r.targetId
                                          ),
                                              wE(t.remoteStore, r.targetId),
                                              Y_(t, r.targetId);
                                      })
                                      .catch(qd)))
                            : (Y_(t, r.targetId),
                              yield $_(t.localStore, r.targetId, !0));
                    })),
                    QR.apply(this, arguments)
                );
            }
            function JR() {
                return (
                    (JR = (0, y.Z)(function* (n, e, t) {
                        const r = yM(n);
                        try {
                            const i = yield (function (a, l) {
                                const h = rt(a),
                                    _ = mr.now(),
                                    E = l.reduce((R, F) => R.add(F.key), nn());
                                let D, T;
                                return h.persistence
                                    .runTransaction(
                                        "Locally write mutations",
                                        "readwrite",
                                        (R) => {
                                            let F = js(),
                                                K = nn();
                                            return h.Ui.getEntries(R, E)
                                                .next((Ie) => {
                                                    (F = Ie),
                                                        F.forEach((Re, mt) => {
                                                            mt.isValidDocument() ||
                                                                (K = K.add(Re));
                                                        });
                                                })
                                                .next(() =>
                                                    h.localDocuments.getOverlayedDocuments(
                                                        R,
                                                        F
                                                    )
                                                )
                                                .next((Ie) => {
                                                    D = Ie;
                                                    const Re = [];
                                                    for (const mt of l) {
                                                        const _t = YV(
                                                            mt,
                                                            D.get(mt.key)
                                                                .overlayedDocument
                                                        );
                                                        null != _t &&
                                                            Re.push(
                                                                new Xl(
                                                                    mt.key,
                                                                    _t,
                                                                    dk(
                                                                        _t.value
                                                                            .mapValue
                                                                    ),
                                                                    Er.exists(
                                                                        !0
                                                                    )
                                                                )
                                                            );
                                                    }
                                                    return h.mutationQueue.addMutationBatch(
                                                        R,
                                                        _,
                                                        Re,
                                                        l
                                                    );
                                                })
                                                .next((Ie) => {
                                                    T = Ie;
                                                    const Re =
                                                        Ie.applyToLocalDocumentSet(
                                                            D,
                                                            K
                                                        );
                                                    return h.documentOverlayCache.saveOverlays(
                                                        R,
                                                        Ie.batchId,
                                                        Re
                                                    );
                                                });
                                        }
                                    )
                                    .then(() => ({
                                        batchId: T.batchId,
                                        changes: Uk(D),
                                    }));
                            })(r.localStore, e);
                            r.sharedClientState.addPendingMutation(i.batchId),
                                (function (a, l, h) {
                                    let _ = a.oc[a.currentUser.toKey()];
                                    _ || (_ = new Nr(Qt)),
                                        (_ = _.insert(l, h)),
                                        (a.oc[a.currentUser.toKey()] = _);
                                })(r, i.batchId, t),
                                yield ec(r, i.changes),
                                yield W_(r.remoteStore);
                        } catch (i) {
                            const a = q_(i, "Failed to persist write");
                            t.reject(a);
                        }
                    })),
                    JR.apply(this, arguments)
                );
            }
            function o1(n, e) {
                return XR.apply(this, arguments);
            }
            function XR() {
                return (
                    (XR = (0, y.Z)(function* (n, e) {
                        const t = rt(n);
                        try {
                            const r = yield aB(t.localStore, e);
                            e.targetChanges.forEach((i, a) => {
                                const l = t.ic.get(a);
                                l &&
                                    (Vt(
                                        i.addedDocuments.size +
                                            i.modifiedDocuments.size +
                                            i.removedDocuments.size <=
                                            1
                                    ),
                                    i.addedDocuments.size > 0
                                        ? (l.Xu = !0)
                                        : i.modifiedDocuments.size > 0
                                        ? Vt(l.Xu)
                                        : i.removedDocuments.size > 0 &&
                                          (Vt(l.Xu), (l.Xu = !1)));
                            }),
                                yield ec(t, r, e);
                        } catch (r) {
                            yield qd(r);
                        }
                    })),
                    XR.apply(this, arguments)
                );
            }
            function a1(n, e, t) {
                const r = rt(n);
                if (
                    (r.isPrimaryClient && 0 === t) ||
                    (!r.isPrimaryClient && 1 === t)
                ) {
                    const i = [];
                    r.tc.forEach((a, l) => {
                        const h = l.view.Eu(e);
                        h.snapshot && i.push(h.snapshot);
                    }),
                        (function (a, l) {
                            const h = rt(a);
                            h.onlineState = l;
                            let _ = !1;
                            h.queries.forEach((E, D) => {
                                for (const T of D.listeners)
                                    T.Eu(l) && (_ = !0);
                            }),
                                _ && zR(h);
                        })(r.eventManager, e),
                        i.length && r.Zu.Go(i),
                        (r.onlineState = e),
                        r.isPrimaryClient &&
                            r.sharedClientState.setOnlineState(e);
                }
            }
            function jB(n, e, t) {
                return eM.apply(this, arguments);
            }
            function eM() {
                return (
                    (eM = (0, y.Z)(function* (n, e, t) {
                        const r = rt(n);
                        r.sharedClientState.updateQueryState(e, "rejected", t);
                        const i = r.ic.get(e),
                            a = i && i.key;
                        if (a) {
                            let l = new Nr(Xe.comparator);
                            l = l.insert(a, Zn.newNoDocument(a, Ft.min()));
                            const h = nn().add(a),
                                _ = new iE(
                                    Ft.min(),
                                    new Map(),
                                    new Hn(Qt),
                                    l,
                                    h
                                );
                            yield o1(r, _),
                                (r.sc = r.sc.remove(a)),
                                r.ic.delete(e),
                                aM(r);
                        } else
                            yield $_(r.localStore, e, !1)
                                .then(() => Y_(r, e, t))
                                .catch(qd);
                    })),
                    eM.apply(this, arguments)
                );
            }
            function HB(n, e) {
                return tM.apply(this, arguments);
            }
            function tM() {
                return (
                    (tM = (0, y.Z)(function* (n, e) {
                        const t = rt(n),
                            r = e.batch.batchId;
                        try {
                            const i = yield oB(t.localStore, e);
                            sM(t, r, null),
                                iM(t, r),
                                t.sharedClientState.updateMutationState(
                                    r,
                                    "acknowledged"
                                ),
                                yield ec(t, i);
                        } catch (i) {
                            yield qd(i);
                        }
                    })),
                    tM.apply(this, arguments)
                );
            }
            function $B(n, e, t) {
                return nM.apply(this, arguments);
            }
            function nM() {
                return (
                    (nM = (0, y.Z)(function* (n, e, t) {
                        const r = rt(n);
                        try {
                            const i = yield (function (a, l) {
                                const h = rt(a);
                                return h.persistence.runTransaction(
                                    "Reject batch",
                                    "readwrite-primary",
                                    (_) => {
                                        let E;
                                        return h.mutationQueue
                                            .lookupMutationBatch(_, l)
                                            .next(
                                                (D) => (
                                                    Vt(null !== D),
                                                    (E = D.keys()),
                                                    h.mutationQueue.removeMutationBatch(
                                                        _,
                                                        D
                                                    )
                                                )
                                            )
                                            .next(() =>
                                                h.mutationQueue.performConsistencyCheck(
                                                    _
                                                )
                                            )
                                            .next(() =>
                                                h.documentOverlayCache.removeOverlaysForBatchId(
                                                    _,
                                                    E,
                                                    l
                                                )
                                            )
                                            .next(() =>
                                                h.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(
                                                    _,
                                                    E
                                                )
                                            )
                                            .next(() =>
                                                h.localDocuments.getDocuments(
                                                    _,
                                                    E
                                                )
                                            );
                                    }
                                );
                            })(r.localStore, e);
                            sM(r, e, t),
                                iM(r, e),
                                r.sharedClientState.updateMutationState(
                                    e,
                                    "rejected",
                                    t
                                ),
                                yield ec(r, i);
                        } catch (i) {
                            yield qd(i);
                        }
                    })),
                    nM.apply(this, arguments)
                );
            }
            function rM() {
                return (
                    (rM = (0, y.Z)(function* (n, e) {
                        const t = rt(n);
                        rh(t.remoteStore) ||
                            $e(
                                "SyncEngine",
                                "The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled."
                            );
                        try {
                            const r = yield (function (a) {
                                const l = rt(a);
                                return l.persistence.runTransaction(
                                    "Get highest unacknowledged batch id",
                                    "readonly",
                                    (h) =>
                                        l.mutationQueue.getHighestUnacknowledgedBatchId(
                                            h
                                        )
                                );
                            })(t.localStore);
                            if (-1 === r) return void e.resolve();
                            const i = t.uc.get(r) || [];
                            i.push(e), t.uc.set(r, i);
                        } catch (r) {
                            const i = q_(
                                r,
                                "Initialization of waitForPendingWrites() operation failed"
                            );
                            e.reject(i);
                        }
                    })),
                    rM.apply(this, arguments)
                );
            }
            function iM(n, e) {
                (n.uc.get(e) || []).forEach((t) => {
                    t.resolve();
                }),
                    n.uc.delete(e);
            }
            function sM(n, e, t) {
                const r = rt(n);
                let i = r.oc[r.currentUser.toKey()];
                if (i) {
                    const a = i.get(e);
                    a && (t ? a.reject(t) : a.resolve(), (i = i.remove(e))),
                        (r.oc[r.currentUser.toKey()] = i);
                }
            }
            function Y_(n, e, t = null) {
                n.sharedClientState.removeLocalQueryTarget(e);
                for (const r of n.ec.get(e)) n.tc.delete(r), t && n.Zu.lc(r, t);
                n.ec.delete(e),
                    n.isPrimaryClient &&
                        n.rc.us(e).forEach((r) => {
                            n.rc.containsKey(r) || u1(n, r);
                        });
            }
            function u1(n, e) {
                n.nc.delete(e.path.canonicalString());
                const t = n.sc.get(e);
                null !== t &&
                    (wE(n.remoteStore, t),
                    (n.sc = n.sc.remove(e)),
                    n.ic.delete(t),
                    aM(n));
            }
            function oM(n, e, t) {
                for (const r of t)
                    r instanceof r1
                        ? (n.rc.addReference(r.key, e), WB(n, r))
                        : r instanceof i1
                        ? ($e(
                              "SyncEngine",
                              "Document no longer in limbo: " + r.key
                          ),
                          n.rc.removeReference(r.key, e),
                          n.rc.containsKey(r.key) || u1(n, r.key))
                        : ft();
            }
            function WB(n, e) {
                const t = e.key,
                    r = t.path.canonicalString();
                n.sc.get(t) ||
                    n.nc.has(r) ||
                    ($e("SyncEngine", "New document in limbo: " + t),
                    n.nc.add(r),
                    aM(n));
            }
            function aM(n) {
                for (
                    ;
                    n.nc.size > 0 &&
                    n.sc.size < n.maxConcurrentLimboResolutions;

                ) {
                    const e = n.nc.values().next().value;
                    n.nc.delete(e);
                    const t = new Xe(wn.fromString(e)),
                        r = n.cc.next();
                    n.ic.set(r, new FB(t)),
                        (n.sc = n.sc.insert(t, r)),
                        JD(n.remoteStore, new eh(Yo(N_(t.path)), r, 2, Bs.ot));
                }
            }
            function ec(n, e, t) {
                return uM.apply(this, arguments);
            }
            function uM() {
                return (
                    (uM = (0, y.Z)(function* (n, e, t) {
                        const r = rt(n),
                            i = [],
                            a = [],
                            l = [];
                        var h;
                        r.tc.isEmpty() ||
                            (r.tc.forEach((h, _) => {
                                l.push(
                                    r.hc(_, e, t).then((E) => {
                                        if (E) {
                                            r.isPrimaryClient &&
                                                r.sharedClientState.updateQueryState(
                                                    _.targetId,
                                                    E.fromCache
                                                        ? "not-current"
                                                        : "current"
                                                ),
                                                i.push(E);
                                            const D = pR.Vi(_.targetId, E);
                                            a.push(D);
                                        }
                                    })
                                );
                            }),
                            yield Promise.all(l),
                            r.Zu.Go(i),
                            yield ((h = (0, y.Z)(function* (_, E) {
                                const D = rt(_);
                                try {
                                    yield D.persistence.runTransaction(
                                        "notifyLocalViewChanges",
                                        "readwrite",
                                        (T) =>
                                            ue.forEach(E, (R) =>
                                                ue
                                                    .forEach(R.Pi, (F) =>
                                                        D.persistence.referenceDelegate.addReference(
                                                            T,
                                                            R.targetId,
                                                            F
                                                        )
                                                    )
                                                    .next(() =>
                                                        ue.forEach(R.vi, (F) =>
                                                            D.persistence.referenceDelegate.removeReference(
                                                                T,
                                                                R.targetId,
                                                                F
                                                            )
                                                        )
                                                    )
                                            )
                                    );
                                } catch (T) {
                                    if (!Kd(T)) throw T;
                                    $e(
                                        "LocalStore",
                                        "Failed to update sequence numbers: " +
                                            T
                                    );
                                }
                                for (const T of E) {
                                    const R = T.targetId;
                                    if (!T.fromCache) {
                                        const F = D.$i.get(R),
                                            Ie =
                                                F.withLastLimboFreeSnapshotVersion(
                                                    F.snapshotVersion
                                                );
                                        D.$i = D.$i.insert(R, Ie);
                                    }
                                }
                            })),
                            function (_, E) {
                                return h.apply(this, arguments);
                            })(r.localStore, a));
                    })),
                    uM.apply(this, arguments)
                );
            }
            function zB(n, e) {
                return lM.apply(this, arguments);
            }
            function lM() {
                return (
                    (lM = (0, y.Z)(function* (n, e) {
                        const t = rt(n);
                        if (!t.currentUser.isEqual(e)) {
                            $e(
                                "SyncEngine",
                                "User change. New user:",
                                e.toKey()
                            );
                            const r = yield FO(t.localStore, e);
                            (t.currentUser = e),
                                (i = t).uc.forEach((l) => {
                                    l.forEach((h) => {
                                        h.reject(
                                            new Ve(
                                                me.CANCELLED,
                                                "'waitForPendingWrites' promise is rejected due to a user change."
                                            )
                                        );
                                    });
                                }),
                                i.uc.clear(),
                                t.sharedClientState.handleUserChange(
                                    e,
                                    r.removedBatchIds,
                                    r.addedBatchIds
                                ),
                                yield ec(t, r.Ki);
                        }
                        var i;
                    })),
                    lM.apply(this, arguments)
                );
            }
            function qB(n, e) {
                const t = rt(n),
                    r = t.ic.get(e);
                if (r && r.Xu) return nn().add(r.key);
                {
                    let i = nn();
                    const a = t.ec.get(e);
                    if (!a) return i;
                    for (const l of a) {
                        const h = t.tc.get(l);
                        i = i.unionWith(h.view.qu);
                    }
                    return i;
                }
            }
            function KB(n, e) {
                return cM.apply(this, arguments);
            }
            function cM() {
                return (
                    (cM = (0, y.Z)(function* (n, e) {
                        const t = rt(n),
                            r = yield KD(t.localStore, e.query, !0),
                            i = e.view.Ju(r);
                        return t.isPrimaryClient && oM(t, e.targetId, i.zu), i;
                    })),
                    cM.apply(this, arguments)
                );
            }
            function ZB(n, e) {
                return dM.apply(this, arguments);
            }
            function dM() {
                return (
                    (dM = (0, y.Z)(function* (n, e) {
                        const t = rt(n);
                        return BO(t.localStore, e).then((r) => ec(t, r));
                    })),
                    dM.apply(this, arguments)
                );
            }
            function YB(n, e, t, r) {
                return hM.apply(this, arguments);
            }
            function hM() {
                return (
                    (hM = (0, y.Z)(function* (n, e, t, r) {
                        const i = rt(n),
                            a = yield (function (l, h) {
                                const _ = rt(l),
                                    E = rt(_.mutationQueue);
                                return _.persistence.runTransaction(
                                    "Lookup mutation documents",
                                    "readonly",
                                    (D) =>
                                        E.yn(D, h).next((T) =>
                                            T
                                                ? _.localDocuments.getDocuments(
                                                      D,
                                                      T
                                                  )
                                                : ue.resolve(null)
                                        )
                                );
                            })(i.localStore, e);
                        var h;
                        null !== a
                            ? ("pending" === t
                                  ? yield W_(i.remoteStore)
                                  : "acknowledged" === t || "rejected" === t
                                  ? (sM(i, e, r || null),
                                    iM(i, e),
                                    (h = e),
                                    rt(rt(i.localStore).mutationQueue).In(h))
                                  : ft(),
                              yield ec(i, a))
                            : $e(
                                  "SyncEngine",
                                  "Cannot apply mutation batch with id: " + e
                              );
                    })),
                    hM.apply(this, arguments)
                );
            }
            function fM() {
                return (
                    (fM = (0, y.Z)(function* (n, e) {
                        const t = rt(n);
                        if ((_M(t), yM(t), !0 === e && !0 !== t.ac)) {
                            const r =
                                    t.sharedClientState.getAllActiveQueryTargets(),
                                i = yield l1(t, r.toArray());
                            (t.ac = !0), yield UR(t.remoteStore, !0);
                            for (const a of i) JD(t.remoteStore, a);
                        } else if (!1 === e && !1 !== t.ac) {
                            const r = [];
                            let i = Promise.resolve();
                            t.ec.forEach((a, l) => {
                                t.sharedClientState.isLocalQueryTarget(l)
                                    ? r.push(l)
                                    : (i = i.then(
                                          () => (
                                              Y_(t, l), $_(t.localStore, l, !0)
                                          )
                                      )),
                                    wE(t.remoteStore, l);
                            }),
                                yield i,
                                yield l1(t, r),
                                (function (a) {
                                    const l = rt(a);
                                    l.ic.forEach((h, _) => {
                                        wE(l.remoteStore, _);
                                    }),
                                        l.rc.cs(),
                                        (l.ic = new Map()),
                                        (l.sc = new Nr(Xe.comparator));
                                })(t),
                                (t.ac = !1),
                                yield UR(t.remoteStore, !1);
                        }
                    })),
                    fM.apply(this, arguments)
                );
            }
            function l1(n, e, t) {
                return pM.apply(this, arguments);
            }
            function pM() {
                return (
                    (pM = (0, y.Z)(function* (n, e, t) {
                        const r = rt(n),
                            i = [],
                            a = [];
                        for (const l of e) {
                            let h;
                            const _ = r.ec.get(l);
                            if (_ && 0 !== _.length) {
                                h = yield H_(r.localStore, Yo(_[0]));
                                for (const E of _) {
                                    const D = r.tc.get(E),
                                        T = yield KB(r, D);
                                    T.snapshot && a.push(T.snapshot);
                                }
                            } else {
                                const E = yield UO(r.localStore, l);
                                (h = yield H_(r.localStore, E)),
                                    yield ZR(r, c1(E), l, !1);
                            }
                            i.push(h);
                        }
                        return r.Zu.Go(a), i;
                    })),
                    pM.apply(this, arguments)
                );
            }
            function c1(n) {
                return yk(
                    n.path,
                    n.collectionGroup,
                    n.orderBy,
                    n.filters,
                    n.limit,
                    "F",
                    n.startAt,
                    n.endAt
                );
            }
            function JB(n) {
                const e = rt(n);
                return rt(rt(e.localStore).persistence).Ri();
            }
            function XB(n, e, t, r) {
                return gM.apply(this, arguments);
            }
            function gM() {
                return (
                    (gM = (0, y.Z)(function* (n, e, t, r) {
                        const i = rt(n);
                        if (i.ac)
                            return void $e(
                                "SyncEngine",
                                "Ignoring unexpected query state notification."
                            );
                        const a = i.ec.get(e);
                        if (a && a.length > 0)
                            switch (t) {
                                case "current":
                                case "not-current": {
                                    const l = yield BO(i.localStore, Ek(a[0])),
                                        h =
                                            iE.createSynthesizedRemoteEventForCurrentChange(
                                                e,
                                                "current" === t
                                            );
                                    yield ec(i, l, h);
                                    break;
                                }
                                case "rejected":
                                    yield $_(i.localStore, e, !0), Y_(i, e, r);
                                    break;
                                default:
                                    ft();
                            }
                    })),
                    gM.apply(this, arguments)
                );
            }
            function e2(n, e, t) {
                return mM.apply(this, arguments);
            }
            function mM() {
                return (
                    (mM = (0, y.Z)(function* (n, e, t) {
                        const r = _M(n);
                        if (r.ac) {
                            for (const i of e) {
                                if (r.ec.has(i)) {
                                    $e(
                                        "SyncEngine",
                                        "Adding an already active target " + i
                                    );
                                    continue;
                                }
                                const a = yield UO(r.localStore, i),
                                    l = yield H_(r.localStore, a);
                                yield ZR(r, c1(a), l.targetId, !1),
                                    JD(r.remoteStore, l);
                            }
                            for (const i of t)
                                r.ec.has(i) &&
                                    (yield $_(r.localStore, i, !1)
                                        .then(() => {
                                            wE(r.remoteStore, i), Y_(r, i);
                                        })
                                        .catch(qd));
                        }
                    })),
                    mM.apply(this, arguments)
                );
            }
            function _M(n) {
                const e = rt(n);
                return (
                    (e.remoteStore.remoteSyncer.applyRemoteEvent = o1.bind(
                        null,
                        e
                    )),
                    (e.remoteStore.remoteSyncer.getRemoteKeysForTarget =
                        qB.bind(null, e)),
                    (e.remoteStore.remoteSyncer.rejectListen = jB.bind(
                        null,
                        e
                    )),
                    (e.Zu.Go = MB.bind(null, e.eventManager)),
                    (e.Zu.lc = NB.bind(null, e.eventManager)),
                    e
                );
            }
            function yM(n) {
                const e = rt(n);
                return (
                    (e.remoteStore.remoteSyncer.applySuccessfulWrite = HB.bind(
                        null,
                        e
                    )),
                    (e.remoteStore.remoteSyncer.rejectFailedWrite = $B.bind(
                        null,
                        e
                    )),
                    e
                );
            }
            class d1 {
                constructor() {
                    this.synchronizeTabs = !1;
                }
                initialize(e) {
                    var t = this;
                    return (0, y.Z)(function* () {
                        (t.wt = yE(e.databaseInfo.databaseId)),
                            (t.sharedClientState = t.dc(e)),
                            (t.persistence = t._c(e)),
                            yield t.persistence.start(),
                            (t.localStore = t.wc(e)),
                            (t.gcScheduler = t.mc(e, t.localStore)),
                            (t.indexBackfillerScheduler = t.gc(
                                e,
                                t.localStore
                            ));
                    })();
                }
                mc(e, t) {
                    return null;
                }
                gc(e, t) {
                    return null;
                }
                wc(e) {
                    return OO(
                        this.persistence,
                        new kO(),
                        e.initialUser,
                        this.wt
                    );
                }
                _c(e) {
                    return new NO(zD.Ms, this.wt);
                }
                dc(e) {
                    return new GO();
                }
                terminate() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        e.gcScheduler && e.gcScheduler.stop(),
                            yield e.sharedClientState.shutdown(),
                            yield e.persistence.shutdown();
                    })();
                }
            }
            class h1 extends d1 {
                constructor(e, t, r) {
                    super(),
                        (this.yc = e),
                        (this.cacheSizeBytes = t),
                        (this.forceOwnership = r),
                        (this.synchronizeTabs = !1);
                }
                initialize(e) {
                    var t = () => super.initialize,
                        r = this;
                    return (0, y.Z)(function* () {
                        yield t().call(r, e),
                            yield r.yc.initialize(r, e),
                            yield yM(r.yc.syncEngine),
                            yield W_(r.yc.remoteStore),
                            yield r.persistence.ci(
                                () => (
                                    r.gcScheduler &&
                                        !r.gcScheduler.started &&
                                        r.gcScheduler.start(),
                                    r.indexBackfillerScheduler &&
                                        !r.indexBackfillerScheduler.started &&
                                        r.indexBackfillerScheduler.start(),
                                    Promise.resolve()
                                )
                            );
                    })();
                }
                wc(e) {
                    return OO(
                        this.persistence,
                        new kO(),
                        e.initialUser,
                        this.wt
                    );
                }
                mc(e, t) {
                    return new WU(
                        this.persistence.referenceDelegate.garbageCollector,
                        e.asyncQueue,
                        t
                    );
                }
                gc(e, t) {
                    const r = new SV(t, this.persistence);
                    return new TV(e.asyncQueue, r);
                }
                _c(e) {
                    const t = fR(
                            e.databaseInfo.databaseId,
                            e.databaseInfo.persistenceKey
                        ),
                        r =
                            void 0 !== this.cacheSizeBytes
                                ? Hs.withCacheSize(this.cacheSizeBytes)
                                : Hs.DEFAULT;
                    return new hR(
                        this.synchronizeTabs,
                        t,
                        e.clientId,
                        r,
                        e.asyncQueue,
                        zO(),
                        QD(),
                        this.wt,
                        this.sharedClientState,
                        !!this.forceOwnership
                    );
                }
                dc(e) {
                    return new GO();
                }
            }
            class n2 extends h1 {
                constructor(e, t) {
                    super(e, t, !1),
                        (this.yc = e),
                        (this.cacheSizeBytes = t),
                        (this.synchronizeTabs = !0);
                }
                initialize(e) {
                    var t = () => super.initialize,
                        r = this;
                    return (0, y.Z)(function* () {
                        yield t().call(r, e);
                        const i = r.yc.syncEngine;
                        r.sharedClientState instanceof IR &&
                            ((r.sharedClientState.syncEngine = {
                                kr: YB.bind(null, i),
                                Or: XB.bind(null, i),
                                Mr: e2.bind(null, i),
                                Ri: JB.bind(null, i),
                                Nr: ZB.bind(null, i),
                            }),
                            yield r.sharedClientState.start()),
                            yield r.persistence.ci(
                                (function () {
                                    var a = (0, y.Z)(function* (l) {
                                        yield (function QB(n, e) {
                                            return fM.apply(this, arguments);
                                        })(r.yc.syncEngine, l),
                                            r.gcScheduler &&
                                                (l && !r.gcScheduler.started
                                                    ? r.gcScheduler.start()
                                                    : l ||
                                                      r.gcScheduler.stop()),
                                            r.indexBackfillerScheduler &&
                                                (l &&
                                                !r.indexBackfillerScheduler
                                                    .started
                                                    ? r.indexBackfillerScheduler.start()
                                                    : l ||
                                                      r.indexBackfillerScheduler.stop());
                                    });
                                    return function (l) {
                                        return a.apply(this, arguments);
                                    };
                                })()
                            );
                    })();
                }
                dc(e) {
                    const t = zO();
                    if (!IR.V(t))
                        throw new Ve(
                            me.UNIMPLEMENTED,
                            "IndexedDB persistence is only available on platforms that support LocalStorage."
                        );
                    const r = fR(
                        e.databaseInfo.databaseId,
                        e.databaseInfo.persistenceKey
                    );
                    return new IR(
                        t,
                        e.asyncQueue,
                        r,
                        e.clientId,
                        e.initialUser
                    );
                }
            }
            class vM {
                initialize(e, t) {
                    var r = this;
                    return (0, y.Z)(function* () {
                        r.localStore ||
                            ((r.localStore = e.localStore),
                            (r.sharedClientState = e.sharedClientState),
                            (r.datastore = r.createDatastore(t)),
                            (r.remoteStore = r.createRemoteStore(t)),
                            (r.eventManager = r.createEventManager(t)),
                            (r.syncEngine = r.createSyncEngine(
                                t,
                                !e.synchronizeTabs
                            )),
                            (r.sharedClientState.onlineStateHandler = (i) =>
                                a1(r.syncEngine, i, 1)),
                            (r.remoteStore.remoteSyncer.handleCredentialChange =
                                zB.bind(null, r.syncEngine)),
                            yield UR(
                                r.remoteStore,
                                r.syncEngine.isPrimaryClient
                            ));
                    })();
                }
                createEventManager(e) {
                    return new RB();
                }
                createDatastore(e) {
                    const t = yE(e.databaseInfo.databaseId),
                        r = new pB(e.databaseInfo);
                    return new _B(
                        e.authCredentials,
                        e.appCheckCredentials,
                        r,
                        t
                    );
                }
                createRemoteStore(e) {
                    return (
                        (t = this.localStore),
                        (r = this.datastore),
                        (i = e.asyncQueue),
                        (a = (h) => a1(this.syncEngine, h, 0)),
                        (l = WO.V() ? new WO() : new dB()),
                        new vB(t, r, i, a, l)
                    );
                    var t, r, i, a, l;
                }
                createSyncEngine(e, t) {
                    return (function (r, i, a, l, h, _, E) {
                        const D = new LB(r, i, a, l, h, _);
                        return E && (D.ac = !0), D;
                    })(
                        this.localStore,
                        this.remoteStore,
                        this.eventManager,
                        this.sharedClientState,
                        e.initialUser,
                        e.maxConcurrentLimboResolutions,
                        t
                    );
                }
                terminate() {
                    return ((e = (0, y.Z)(function* (t) {
                        const r = rt(t);
                        $e("RemoteStore", "RemoteStore shutting down."),
                            r.lu.add(5),
                            yield G_(r),
                            r.du.shutdown(),
                            r._u.set("Unknown");
                    })),
                    function (t) {
                        return e.apply(this, arguments);
                    })(this.remoteStore);
                    var e;
                }
            }
            function f1(n, e = 10240) {
                let t = 0;
                return {
                    read: () =>
                        (0, y.Z)(function* () {
                            if (t < n.byteLength) {
                                const r = {
                                    value: n.slice(t, t + e),
                                    done: !1,
                                };
                                return (t += e), r;
                            }
                            return { done: !0 };
                        })(),
                    cancel: () => (0, y.Z)(function* () {})(),
                    releaseLock() {},
                    closed: Promise.reject("unimplemented"),
                };
            }
            class eT {
                constructor(e) {
                    (this.observer = e), (this.muted = !1);
                }
                next(e) {
                    this.observer.next && this.Ic(this.observer.next, e);
                }
                error(e) {
                    this.observer.error
                        ? this.Ic(this.observer.error, e)
                        : console.error(
                              "Uncaught Error in snapshot listener:",
                              e
                          );
                }
                Tc() {
                    this.muted = !0;
                }
                Ic(e, t) {
                    this.muted ||
                        setTimeout(() => {
                            this.muted || e(t);
                        }, 0);
                }
            }
            class r2 {
                constructor(e, t) {
                    (this.Ec = e),
                        (this.wt = t),
                        (this.metadata = new vi()),
                        (this.buffer = new Uint8Array()),
                        (this.Ac = new TextDecoder("utf-8")),
                        this.Rc().then(
                            (r) => {
                                r && r.Cu()
                                    ? this.metadata.resolve(r.payload.metadata)
                                    : this.metadata.reject(
                                          new Error(
                                              `The first element of the bundle is not a metadata, it is\n             ${JSON.stringify(
                                                  r?.payload
                                              )}`
                                          )
                                      );
                            },
                            (r) => this.metadata.reject(r)
                        );
                }
                close() {
                    return this.Ec.cancel();
                }
                getMetadata() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        return e.metadata.promise;
                    })();
                }
                fc() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        return yield e.getMetadata(), e.Rc();
                    })();
                }
                Rc() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        const t = yield e.bc();
                        if (null === t) return null;
                        const r = e.Ac.decode(t),
                            i = Number(r);
                        isNaN(i) &&
                            e.Pc(`length string (${r}) is not valid number`);
                        const a = yield e.vc(i);
                        return new PB(JSON.parse(a), t.length + i);
                    })();
                }
                Vc() {
                    return this.buffer.findIndex(
                        (e) => e === "{".charCodeAt(0)
                    );
                }
                bc() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        for (; e.Vc() < 0 && !(yield e.Sc()); );
                        if (0 === e.buffer.length) return null;
                        const t = e.Vc();
                        t < 0 &&
                            e.Pc(
                                "Reached the end of bundle when a length string is expected."
                            );
                        const r = e.buffer.slice(0, t);
                        return (e.buffer = e.buffer.slice(t)), r;
                    })();
                }
                vc(e) {
                    var t = this;
                    return (0, y.Z)(function* () {
                        for (; t.buffer.length < e; )
                            (yield t.Sc()) &&
                                t.Pc(
                                    "Reached the end of bundle when more is expected."
                                );
                        const r = t.Ac.decode(t.buffer.slice(0, e));
                        return (t.buffer = t.buffer.slice(e)), r;
                    })();
                }
                Pc(e) {
                    throw (
                        (this.Ec.cancel(),
                        new Error(`Invalid bundle format: ${e}`))
                    );
                }
                Sc() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        const t = yield e.Ec.read();
                        if (!t.done) {
                            const r = new Uint8Array(
                                e.buffer.length + t.value.length
                            );
                            r.set(e.buffer),
                                r.set(t.value, e.buffer.length),
                                (e.buffer = r);
                        }
                        return t.done;
                    })();
                }
            }
            class i2 {
                constructor(e) {
                    (this.datastore = e),
                        (this.readVersions = new Map()),
                        (this.mutations = []),
                        (this.committed = !1),
                        (this.lastWriteError = null),
                        (this.writtenDocs = new Set());
                }
                lookup(e) {
                    var t = this;
                    return (0, y.Z)(function* () {
                        if ((t.ensureCommitNotCalled(), t.mutations.length > 0))
                            throw new Ve(
                                me.INVALID_ARGUMENT,
                                "Firestore transactions require all reads to be executed before all writes."
                            );
                        const r = yield ((i = (0, y.Z)(function* (a, l) {
                            const h = rt(a),
                                _ = uE(h.wt) + "/documents",
                                E = { documents: l.map((F) => aE(h.wt, F)) },
                                D = yield h.ao(
                                    "BatchGetDocuments",
                                    _,
                                    E,
                                    l.length
                                ),
                                T = new Map();
                            D.forEach((F) => {
                                const K = (function aU(n, e) {
                                    return "found" in e
                                        ? (function (t, r) {
                                              Vt(!!r.found);
                                              const i = Ou(t, r.found.name),
                                                  a = wi(r.found.updateTime),
                                                  l = new Vi({
                                                      mapValue: {
                                                          fields: r.found
                                                              .fields,
                                                      },
                                                  });
                                              return Zn.newFoundDocument(
                                                  i,
                                                  a,
                                                  l
                                              );
                                          })(n, e)
                                        : "missing" in e
                                        ? (function (t, r) {
                                              Vt(!!r.missing), Vt(!!r.readTime);
                                              const i = Ou(t, r.missing),
                                                  a = wi(r.readTime);
                                              return Zn.newNoDocument(i, a);
                                          })(n, e)
                                        : ft();
                                })(h.wt, F);
                                T.set(K.key.toString(), K);
                            });
                            const R = [];
                            return (
                                l.forEach((F) => {
                                    const K = T.get(F.toString());
                                    Vt(!!K), R.push(K);
                                }),
                                R
                            );
                        })),
                        function (a, l) {
                            return i.apply(this, arguments);
                        })(t.datastore, e);
                        var i;
                        return r.forEach((i) => t.recordVersion(i)), r;
                    })();
                }
                set(e, t) {
                    this.write(t.toMutation(e, this.precondition(e))),
                        this.writtenDocs.add(e.toString());
                }
                update(e, t) {
                    try {
                        this.write(
                            t.toMutation(e, this.preconditionForUpdate(e))
                        );
                    } catch (r) {
                        this.lastWriteError = r;
                    }
                    this.writtenDocs.add(e.toString());
                }
                delete(e) {
                    this.write(new L_(e, this.precondition(e))),
                        this.writtenDocs.add(e.toString());
                }
                commit() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        if ((e.ensureCommitNotCalled(), e.lastWriteError))
                            throw e.lastWriteError;
                        const t = e.readVersions;
                        var r;
                        e.mutations.forEach((r) => {
                            t.delete(r.key.toString());
                        }),
                            t.forEach((r, i) => {
                                const a = Xe.fromPath(i);
                                e.mutations.push(new Xx(a, e.precondition(a)));
                            }),
                            yield ((r = (0, y.Z)(function* (i, a) {
                                const l = rt(i),
                                    h = uE(l.wt) + "/documents",
                                    _ = { writes: a.map((E) => lE(l.wt, E)) };
                                yield l.ro("Commit", h, _);
                            })),
                            function (i, a) {
                                return r.apply(this, arguments);
                            })(e.datastore, e.mutations),
                            (e.committed = !0);
                    })();
                }
                recordVersion(e) {
                    let t;
                    if (e.isFoundDocument()) t = e.version;
                    else {
                        if (!e.isNoDocument()) throw ft();
                        t = Ft.min();
                    }
                    const r = this.readVersions.get(e.key.toString());
                    if (r) {
                        if (!t.isEqual(r))
                            throw new Ve(
                                me.ABORTED,
                                "Document version changed between two reads."
                            );
                    } else this.readVersions.set(e.key.toString(), t);
                }
                precondition(e) {
                    const t = this.readVersions.get(e.toString());
                    return !this.writtenDocs.has(e.toString()) && t
                        ? Er.updateTime(t)
                        : Er.none();
                }
                preconditionForUpdate(e) {
                    const t = this.readVersions.get(e.toString());
                    if (!this.writtenDocs.has(e.toString()) && t) {
                        if (t.isEqual(Ft.min()))
                            throw new Ve(
                                me.INVALID_ARGUMENT,
                                "Can't update a document that doesn't exist."
                            );
                        return Er.updateTime(t);
                    }
                    return Er.exists(!0);
                }
                write(e) {
                    this.ensureCommitNotCalled(), this.mutations.push(e);
                }
                ensureCommitNotCalled() {}
            }
            class s2 {
                constructor(e, t, r, i, a) {
                    (this.asyncQueue = e),
                        (this.datastore = t),
                        (this.options = r),
                        (this.updateFunction = i),
                        (this.deferred = a),
                        (this.Dc = r.maxAttempts),
                        (this.So = new CR(
                            this.asyncQueue,
                            "transaction_retry"
                        ));
                }
                run() {
                    (this.Dc -= 1), this.Cc();
                }
                Cc() {
                    var e = this;
                    this.So.Io(
                        (0, y.Z)(function* () {
                            const t = new i2(e.datastore),
                                r = e.xc(t);
                            r &&
                                r
                                    .then((i) => {
                                        e.asyncQueue.enqueueAndForget(() =>
                                            t
                                                .commit()
                                                .then(() => {
                                                    e.deferred.resolve(i);
                                                })
                                                .catch((a) => {
                                                    e.Nc(a);
                                                })
                                        );
                                    })
                                    .catch((i) => {
                                        e.Nc(i);
                                    });
                        })
                    );
                }
                xc(e) {
                    try {
                        const t = this.updateFunction(e);
                        return !q0(t) && t.catch && t.then
                            ? t
                            : (this.deferred.reject(
                                  Error(
                                      "Transaction callback must return a Promise"
                                  )
                              ),
                              null);
                    } catch (t) {
                        return this.deferred.reject(t), null;
                    }
                }
                Nc(e) {
                    this.Dc > 0 && this.kc(e)
                        ? ((this.Dc -= 1),
                          this.asyncQueue.enqueueAndForget(
                              () => (this.Cc(), Promise.resolve())
                          ))
                        : this.deferred.reject(e);
                }
                kc(e) {
                    if ("FirebaseError" === e.name) {
                        const t = e.code;
                        return (
                            "aborted" === t ||
                            "failed-precondition" === t ||
                            !Fk(t)
                        );
                    }
                    return !1;
                }
            }
            class o2 {
                constructor(e, t, r, i) {
                    var a = this;
                    (this.authCredentials = e),
                        (this.appCheckCredentials = t),
                        (this.asyncQueue = r),
                        (this.databaseInfo = i),
                        (this.user = yi.UNAUTHENTICATED),
                        (this.clientId = qP.I()),
                        (this.authCredentialListener = () => Promise.resolve()),
                        (this.appCheckCredentialListener = () =>
                            Promise.resolve()),
                        this.authCredentials.start(
                            r,
                            (function () {
                                var l = (0, y.Z)(function* (h) {
                                    $e(
                                        "FirestoreClient",
                                        "Received user=",
                                        h.uid
                                    ),
                                        yield a.authCredentialListener(h),
                                        (a.user = h);
                                });
                                return function (h) {
                                    return l.apply(this, arguments);
                                };
                            })()
                        ),
                        this.appCheckCredentials.start(
                            r,
                            (l) => (
                                $e(
                                    "FirestoreClient",
                                    "Received new app check token=",
                                    l
                                ),
                                this.appCheckCredentialListener(l, this.user)
                            )
                        );
                }
                getConfiguration() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        return {
                            asyncQueue: e.asyncQueue,
                            databaseInfo: e.databaseInfo,
                            clientId: e.clientId,
                            authCredentials: e.authCredentials,
                            appCheckCredentials: e.appCheckCredentials,
                            initialUser: e.user,
                            maxConcurrentLimboResolutions: 100,
                        };
                    })();
                }
                setCredentialChangeListener(e) {
                    this.authCredentialListener = e;
                }
                setAppCheckTokenChangeListener(e) {
                    this.appCheckCredentialListener = e;
                }
                verifyNotTerminated() {
                    if (this.asyncQueue.isShuttingDown)
                        throw new Ve(
                            me.FAILED_PRECONDITION,
                            "The client has already been terminated."
                        );
                }
                terminate() {
                    var e = this;
                    this.asyncQueue.enterRestrictedMode();
                    const t = new vi();
                    return (
                        this.asyncQueue.enqueueAndForgetEvenWhileRestricted(
                            (0, y.Z)(function* () {
                                try {
                                    e.onlineComponents &&
                                        (yield e.onlineComponents.terminate()),
                                        e.offlineComponents &&
                                            (yield e.offlineComponents.terminate()),
                                        e.authCredentials.shutdown(),
                                        e.appCheckCredentials.shutdown(),
                                        t.resolve();
                                } catch (r) {
                                    const i = q_(
                                        r,
                                        "Failed to shutdown persistence"
                                    );
                                    t.reject(i);
                                }
                            })
                        ),
                        t.promise
                    );
                }
            }
            function p1(n, e) {
                return wM.apply(this, arguments);
            }
            function wM() {
                return (
                    (wM = (0, y.Z)(function* (n, e) {
                        n.asyncQueue.verifyOperationInProgress(),
                            $e(
                                "FirestoreClient",
                                "Initializing OfflineComponentProvider"
                            );
                        const t = yield n.getConfiguration();
                        yield e.initialize(t);
                        let r = t.initialUser;
                        n.setCredentialChangeListener(
                            (function () {
                                var i = (0, y.Z)(function* (a) {
                                    r.isEqual(a) ||
                                        (yield FO(e.localStore, a), (r = a));
                                });
                                return function (a) {
                                    return i.apply(this, arguments);
                                };
                            })()
                        ),
                            e.persistence.setDatabaseDeletedListener(() =>
                                n.terminate()
                            ),
                            (n.offlineComponents = e);
                    })),
                    wM.apply(this, arguments)
                );
            }
            function g1(n, e) {
                return EM.apply(this, arguments);
            }
            function EM() {
                return (
                    (EM = (0, y.Z)(function* (n, e) {
                        n.asyncQueue.verifyOperationInProgress();
                        const t = yield IM(n);
                        $e(
                            "FirestoreClient",
                            "Initializing OnlineComponentProvider"
                        );
                        const r = yield n.getConfiguration();
                        yield e.initialize(t, r),
                            n.setCredentialChangeListener((i) =>
                                XO(e.remoteStore, i)
                            ),
                            n.setAppCheckTokenChangeListener((i, a) =>
                                XO(e.remoteStore, a)
                            ),
                            (n.onlineComponents = e);
                    })),
                    EM.apply(this, arguments)
                );
            }
            function IM(n) {
                return CM.apply(this, arguments);
            }
            function CM() {
                return (
                    (CM = (0, y.Z)(function* (n) {
                        return (
                            n.offlineComponents ||
                                ($e(
                                    "FirestoreClient",
                                    "Using default OfflineComponentProvider"
                                ),
                                yield p1(n, new d1())),
                            n.offlineComponents
                        );
                    })),
                    CM.apply(this, arguments)
                );
            }
            function tT(n) {
                return bM.apply(this, arguments);
            }
            function bM() {
                return (
                    (bM = (0, y.Z)(function* (n) {
                        return (
                            n.onlineComponents ||
                                ($e(
                                    "FirestoreClient",
                                    "Using default OnlineComponentProvider"
                                ),
                                yield g1(n, new vM())),
                            n.onlineComponents
                        );
                    })),
                    bM.apply(this, arguments)
                );
            }
            function m1(n) {
                return IM(n).then((e) => e.persistence);
            }
            function DM(n) {
                return IM(n).then((e) => e.localStore);
            }
            function _1(n) {
                return tT(n).then((e) => e.remoteStore);
            }
            function TM(n) {
                return tT(n).then((e) => e.syncEngine);
            }
            function Q_(n) {
                return SM.apply(this, arguments);
            }
            function SM() {
                return (
                    (SM = (0, y.Z)(function* (n) {
                        const e = yield tT(n),
                            t = e.eventManager;
                        return (
                            (t.onListen = VB.bind(null, e.syncEngine)),
                            (t.onUnlisten = UB.bind(null, e.syncEngine)),
                            t
                        );
                    })),
                    SM.apply(this, arguments)
                );
            }
            function y1(n, e, t = {}) {
                const r = new vi();
                return (
                    n.asyncQueue.enqueueAndForget(
                        (0, y.Z)(function* () {
                            return (function (i, a, l, h, _) {
                                const E = new eT({
                                        next: (T) => {
                                            a.enqueueAndForget(() => GR(i, D));
                                            const R = T.docs.has(l);
                                            !R && T.fromCache
                                                ? _.reject(
                                                      new Ve(
                                                          me.UNAVAILABLE,
                                                          "Failed to get document because the client is offline."
                                                      )
                                                  )
                                                : R &&
                                                  T.fromCache &&
                                                  h &&
                                                  "server" === h.source
                                                ? _.reject(
                                                      new Ve(
                                                          me.UNAVAILABLE,
                                                          'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to "server" to retrieve the cached document.)'
                                                      )
                                                  )
                                                : _.resolve(T);
                                        },
                                        error: (T) => _.reject(T),
                                    }),
                                    D = new qR(N_(l.path), E, {
                                        includeMetadataChanges: !0,
                                        Du: !0,
                                    });
                                return HR(i, D);
                            })(yield Q_(n), n.asyncQueue, e, t, r);
                        })
                    ),
                    r.promise
                );
            }
            function v1(n, e, t = {}) {
                const r = new vi();
                return (
                    n.asyncQueue.enqueueAndForget(
                        (0, y.Z)(function* () {
                            return (function (i, a, l, h, _) {
                                const E = new eT({
                                        next: (T) => {
                                            a.enqueueAndForget(() => GR(i, D)),
                                                T.fromCache &&
                                                "server" === h.source
                                                    ? _.reject(
                                                          new Ve(
                                                              me.UNAVAILABLE,
                                                              'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to "server" to retrieve the cached documents.)'
                                                          )
                                                      )
                                                    : _.resolve(T);
                                        },
                                        error: (T) => _.reject(T),
                                    }),
                                    D = new qR(l, E, {
                                        includeMetadataChanges: !0,
                                        Du: !0,
                                    });
                                return HR(i, D);
                            })(yield Q_(n), n.asyncQueue, e, t, r);
                        })
                    ),
                    r.promise
                );
            }
            const w1 = new Map();
            function AM(n, e, t) {
                if (!t)
                    throw new Ve(
                        me.INVALID_ARGUMENT,
                        `Function ${n}() cannot be called with an empty ${e}.`
                    );
            }
            function E1(n, e, t, r) {
                if (!0 === e && !0 === r)
                    throw new Ve(
                        me.INVALID_ARGUMENT,
                        `${n} and ${t} cannot be used together.`
                    );
            }
            function I1(n) {
                if (!Xe.isDocumentKey(n))
                    throw new Ve(
                        me.INVALID_ARGUMENT,
                        `Invalid document reference. Document references must have an even number of segments, but ${n} has ${n.length}.`
                    );
            }
            function C1(n) {
                if (Xe.isDocumentKey(n))
                    throw new Ve(
                        me.INVALID_ARGUMENT,
                        `Invalid collection reference. Collection references must have an odd number of segments, but ${n} has ${n.length}.`
                    );
            }
            function nT(n) {
                if (void 0 === n) return "undefined";
                if (null === n) return "null";
                if ("string" == typeof n)
                    return (
                        n.length > 20 && (n = `${n.substring(0, 20)}...`),
                        JSON.stringify(n)
                    );
                if ("number" == typeof n || "boolean" == typeof n)
                    return "" + n;
                if ("object" == typeof n) {
                    if (n instanceof Array) return "an array";
                    {
                        const e = (t = n).constructor
                            ? t.constructor.name
                            : null;
                        return e ? `a custom ${e} object` : "an object";
                    }
                }
                var t;
                return "function" == typeof n ? "a function" : ft();
            }
            function _n(n, e) {
                if (
                    ("_delegate" in n && (n = n._delegate), !(n instanceof e))
                ) {
                    if (e.name === n.constructor.name)
                        throw new Ve(
                            me.INVALID_ARGUMENT,
                            "Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?"
                        );
                    {
                        const t = nT(n);
                        throw new Ve(
                            me.INVALID_ARGUMENT,
                            `Expected type '${e.name}', but it was: ${t}`
                        );
                    }
                }
                return n;
            }
            function b1(n, e) {
                if (e <= 0)
                    throw new Ve(
                        me.INVALID_ARGUMENT,
                        `Function ${n}() requires a positive number, but it was: ${e}.`
                    );
            }
            class D1 {
                constructor(e) {
                    var t;
                    if (void 0 === e.host) {
                        if (void 0 !== e.ssl)
                            throw new Ve(
                                me.INVALID_ARGUMENT,
                                "Can't provide ssl option if host option is not set"
                            );
                        (this.host = "firestore.googleapis.com"),
                            (this.ssl = !0);
                    } else
                        (this.host = e.host),
                            (this.ssl =
                                null === (t = e.ssl) || void 0 === t || t);
                    if (
                        ((this.credentials = e.credentials),
                        (this.ignoreUndefinedProperties =
                            !!e.ignoreUndefinedProperties),
                        void 0 === e.cacheSizeBytes)
                    )
                        this.cacheSizeBytes = 41943040;
                    else {
                        if (
                            -1 !== e.cacheSizeBytes &&
                            e.cacheSizeBytes < 1048576
                        )
                            throw new Ve(
                                me.INVALID_ARGUMENT,
                                "cacheSizeBytes must be at least 1048576"
                            );
                        this.cacheSizeBytes = e.cacheSizeBytes;
                    }
                    (this.experimentalForceLongPolling =
                        !!e.experimentalForceLongPolling),
                        (this.experimentalAutoDetectLongPolling =
                            !!e.experimentalAutoDetectLongPolling),
                        (this.useFetchStreams = !!e.useFetchStreams),
                        E1(
                            "experimentalForceLongPolling",
                            e.experimentalForceLongPolling,
                            "experimentalAutoDetectLongPolling",
                            e.experimentalAutoDetectLongPolling
                        );
                }
                isEqual(e) {
                    return (
                        this.host === e.host &&
                        this.ssl === e.ssl &&
                        this.credentials === e.credentials &&
                        this.cacheSizeBytes === e.cacheSizeBytes &&
                        this.experimentalForceLongPolling ===
                            e.experimentalForceLongPolling &&
                        this.experimentalAutoDetectLongPolling ===
                            e.experimentalAutoDetectLongPolling &&
                        this.ignoreUndefinedProperties ===
                            e.ignoreUndefinedProperties &&
                        this.useFetchStreams === e.useFetchStreams
                    );
                }
            }
            class EE {
                constructor(e, t, r) {
                    (this._authCredentials = t),
                        (this._appCheckCredentials = r),
                        (this.type = "firestore-lite"),
                        (this._persistenceKey = "(lite)"),
                        (this._settings = new D1({})),
                        (this._settingsFrozen = !1),
                        e instanceof Ql
                            ? (this._databaseId = e)
                            : ((this._app = e),
                              (this._databaseId = (function (i) {
                                  if (
                                      !Object.prototype.hasOwnProperty.apply(
                                          i.options,
                                          ["projectId"]
                                      )
                                  )
                                      throw new Ve(
                                          me.INVALID_ARGUMENT,
                                          '"projectId" not provided in firebase.initializeApp.'
                                      );
                                  return new Ql(i.options.projectId);
                              })(e)));
                }
                get app() {
                    if (!this._app)
                        throw new Ve(
                            me.FAILED_PRECONDITION,
                            "Firestore was not initialized using the Firebase SDK. 'app' is not available"
                        );
                    return this._app;
                }
                get _initialized() {
                    return this._settingsFrozen;
                }
                get _terminated() {
                    return void 0 !== this._terminateTask;
                }
                _setSettings(e) {
                    if (this._settingsFrozen)
                        throw new Ve(
                            me.FAILED_PRECONDITION,
                            "Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object."
                        );
                    (this._settings = new D1(e)),
                        void 0 !== e.credentials &&
                            (this._authCredentials = (function (t) {
                                if (!t) return new mV();
                                switch (t.type) {
                                    case "gapi":
                                        const r = t.client;
                                        return (
                                            Vt(
                                                !(
                                                    "object" != typeof r ||
                                                    null === r ||
                                                    !r.auth ||
                                                    !r.auth
                                                        .getAuthHeaderValueForFirstParty
                                                )
                                            ),
                                            new wV(
                                                r,
                                                t.sessionIndex || "0",
                                                t.iamToken || null
                                            )
                                        );
                                    case "provider":
                                        return t.client;
                                    default:
                                        throw new Ve(
                                            me.INVALID_ARGUMENT,
                                            "makeAuthCredentialsProvider failed due to invalid credential type"
                                        );
                                }
                            })(e.credentials));
                }
                _getSettings() {
                    return this._settings;
                }
                _freezeSettings() {
                    return (this._settingsFrozen = !0), this._settings;
                }
                _delete() {
                    return (
                        this._terminateTask ||
                            (this._terminateTask = this._terminate()),
                        this._terminateTask
                    );
                }
                toJSON() {
                    return {
                        app: this._app,
                        databaseId: this._databaseId,
                        settings: this._settings,
                    };
                }
                _terminate() {
                    return (
                        (function (e) {
                            const t = w1.get(e);
                            t &&
                                ($e("ComponentProvider", "Removing Datastore"),
                                w1.delete(e),
                                t.terminate());
                        })(this),
                        Promise.resolve()
                    );
                }
            }
            class rr {
                constructor(e, t, r) {
                    (this.converter = t),
                        (this._key = r),
                        (this.type = "document"),
                        (this.firestore = e);
                }
                get _path() {
                    return this._key.path;
                }
                get id() {
                    return this._key.path.lastSegment();
                }
                get path() {
                    return this._key.path.canonicalString();
                }
                get parent() {
                    return new Lu(
                        this.firestore,
                        this.converter,
                        this._key.path.popLast()
                    );
                }
                withConverter(e) {
                    return new rr(this.firestore, e, this._key);
                }
            }
            class Yi {
                constructor(e, t, r) {
                    (this.converter = t),
                        (this._query = r),
                        (this.type = "query"),
                        (this.firestore = e);
                }
                withConverter(e) {
                    return new Yi(this.firestore, e, this._query);
                }
            }
            class Lu extends Yi {
                constructor(e, t, r) {
                    super(e, t, N_(r)),
                        (this._path = r),
                        (this.type = "collection");
                }
                get id() {
                    return this._query.path.lastSegment();
                }
                get path() {
                    return this._query.path.canonicalString();
                }
                get parent() {
                    const e = this._path.popLast();
                    return e.isEmpty()
                        ? null
                        : new rr(this.firestore, null, new Xe(e));
                }
                withConverter(e) {
                    return new Lu(this.firestore, e, this._path);
                }
            }
            function T1(n, e, ...t) {
                if (
                    ((n = (0, C.m9)(n)),
                    AM("collection", "path", e),
                    n instanceof EE)
                ) {
                    const r = wn.fromString(e, ...t);
                    return C1(r), new Lu(n, null, r);
                }
                {
                    if (!(n instanceof rr || n instanceof Lu))
                        throw new Ve(
                            me.INVALID_ARGUMENT,
                            "Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore"
                        );
                    const r = n._path.child(wn.fromString(e, ...t));
                    return C1(r), new Lu(n.firestore, null, r);
                }
            }
            function rT(n, e, ...t) {
                if (
                    ((n = (0, C.m9)(n)),
                    1 === arguments.length && (e = qP.I()),
                    AM("doc", "path", e),
                    n instanceof EE)
                ) {
                    const r = wn.fromString(e, ...t);
                    return I1(r), new rr(n, null, new Xe(r));
                }
                {
                    if (!(n instanceof rr || n instanceof Lu))
                        throw new Ve(
                            me.INVALID_ARGUMENT,
                            "Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore"
                        );
                    const r = n._path.child(wn.fromString(e, ...t));
                    return (
                        I1(r),
                        new rr(
                            n.firestore,
                            n instanceof Lu ? n.converter : null,
                            new Xe(r)
                        )
                    );
                }
            }
            function S1(n, e) {
                return (
                    (n = (0, C.m9)(n)),
                    (e = (0, C.m9)(e)),
                    (n instanceof rr || n instanceof Lu) &&
                        (e instanceof rr || e instanceof Lu) &&
                        n.firestore === e.firestore &&
                        n.path === e.path &&
                        n.converter === e.converter
                );
            }
            function A1(n, e) {
                return (
                    (n = (0, C.m9)(n)),
                    (e = (0, C.m9)(e)),
                    n instanceof Yi &&
                        e instanceof Yi &&
                        n.firestore === e.firestore &&
                        X0(n._query, e._query) &&
                        n.converter === e.converter
                );
            }
            class _2 {
                constructor() {
                    (this.Oc = Promise.resolve()),
                        (this.Mc = []),
                        (this.Fc = !1),
                        (this.$c = []),
                        (this.Bc = null),
                        (this.Lc = !1),
                        (this.Uc = !1),
                        (this.qc = []),
                        (this.So = new CR(this, "async_queue_retry")),
                        (this.Kc = () => {
                            const t = QD();
                            t &&
                                $e(
                                    "AsyncQueue",
                                    "Visibility state changed to " +
                                        t.visibilityState
                                ),
                                this.So.Eo();
                        });
                    const e = QD();
                    e &&
                        "function" == typeof e.addEventListener &&
                        e.addEventListener("visibilitychange", this.Kc);
                }
                get isShuttingDown() {
                    return this.Fc;
                }
                enqueueAndForget(e) {
                    this.enqueue(e);
                }
                enqueueAndForgetEvenWhileRestricted(e) {
                    this.Gc(), this.Qc(e);
                }
                enterRestrictedMode(e) {
                    if (!this.Fc) {
                        (this.Fc = !0), (this.Uc = e || !1);
                        const t = QD();
                        t &&
                            "function" == typeof t.removeEventListener &&
                            t.removeEventListener("visibilitychange", this.Kc);
                    }
                }
                enqueue(e) {
                    if ((this.Gc(), this.Fc)) return new Promise(() => {});
                    const t = new vi();
                    return this.Qc(() =>
                        this.Fc && this.Uc
                            ? Promise.resolve()
                            : (e().then(t.resolve, t.reject), t.promise)
                    ).then(() => t.promise);
                }
                enqueueRetryable(e) {
                    this.enqueueAndForget(() => (this.Mc.push(e), this.jc()));
                }
                jc() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        if (0 !== e.Mc.length) {
                            try {
                                yield e.Mc[0](), e.Mc.shift(), e.So.reset();
                            } catch (t) {
                                if (!Kd(t)) throw t;
                                $e(
                                    "AsyncQueue",
                                    "Operation failed with retryable error: " +
                                        t
                                );
                            }
                            e.Mc.length > 0 && e.So.Io(() => e.jc());
                        }
                    })();
                }
                Qc(e) {
                    const t = this.Oc.then(
                        () => (
                            (this.Lc = !0),
                            e()
                                .catch((r) => {
                                    throw (
                                        ((this.Bc = r),
                                        (this.Lc = !1),
                                        qr(
                                            "INTERNAL UNHANDLED ERROR: ",
                                            (function (a) {
                                                let l = a.message || "";
                                                return (
                                                    a.stack &&
                                                        (l = a.stack.includes(
                                                            a.message
                                                        )
                                                            ? a.stack
                                                            : a.message +
                                                              "\n" +
                                                              a.stack),
                                                    l
                                                );
                                            })(r)
                                        ),
                                        r)
                                    );
                                })
                                .then((r) => ((this.Lc = !1), r))
                        )
                    );
                    return (this.Oc = t), t;
                }
                enqueueAfterDelay(e, t, r) {
                    this.Gc(), this.qc.indexOf(e) > -1 && (t = 0);
                    const i = jR.createAndSchedule(this, e, t, r, (a) =>
                        this.Wc(a)
                    );
                    return this.$c.push(i), i;
                }
                Gc() {
                    this.Bc && ft();
                }
                verifyOperationInProgress() {}
                zc() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        let t;
                        do {
                            (t = e.Oc), yield t;
                        } while (t !== e.Oc);
                    })();
                }
                Hc(e) {
                    for (const t of this.$c) if (t.timerId === e) return !0;
                    return !1;
                }
                Jc(e) {
                    return this.zc().then(() => {
                        this.$c.sort((t, r) => t.targetTimeMs - r.targetTimeMs);
                        for (const t of this.$c)
                            if ((t.skipDelay(), "all" !== e && t.timerId === e))
                                break;
                        return this.zc();
                    });
                }
                Yc(e) {
                    this.qc.push(e);
                }
                Wc(e) {
                    const t = this.$c.indexOf(e);
                    this.$c.splice(t, 1);
                }
            }
            function xM(n) {
                return (function (e, t) {
                    if ("object" != typeof e || null === e) return !1;
                    const r = e;
                    for (const i of ["next", "error", "complete"])
                        if (i in r && "function" == typeof r[i]) return !0;
                    return !1;
                })(n);
            }
            class y2 {
                constructor() {
                    (this._progressObserver = {}),
                        (this._taskCompletionResolver = new vi()),
                        (this._lastProgress = {
                            taskState: "Running",
                            totalBytes: 0,
                            totalDocuments: 0,
                            bytesLoaded: 0,
                            documentsLoaded: 0,
                        });
                }
                onProgress(e, t, r) {
                    this._progressObserver = { next: e, error: t, complete: r };
                }
                catch(e) {
                    return this._taskCompletionResolver.promise.catch(e);
                }
                then(e, t) {
                    return this._taskCompletionResolver.promise.then(e, t);
                }
                _completeWith(e) {
                    this._updateProgress(e),
                        this._progressObserver.complete &&
                            this._progressObserver.complete(),
                        this._taskCompletionResolver.resolve(e);
                }
                _failWith(e) {
                    (this._lastProgress.taskState = "Error"),
                        this._progressObserver.next &&
                            this._progressObserver.next(this._lastProgress),
                        this._progressObserver.error &&
                            this._progressObserver.error(e),
                        this._taskCompletionResolver.reject(e);
                }
                _updateProgress(e) {
                    (this._lastProgress = e),
                        this._progressObserver.next &&
                            this._progressObserver.next(e);
                }
            }
            class _r extends EE {
                constructor(e, t, r) {
                    super(e, t, r),
                        (this.type = "firestore"),
                        (this._queue = new _2()),
                        (this._persistenceKey =
                            "name" in e ? e.name : "[DEFAULT]");
                }
                _terminate() {
                    return (
                        this._firestoreClient || x1(this),
                        this._firestoreClient.terminate()
                    );
                }
            }
            function Zr(n) {
                return (
                    n._firestoreClient || x1(n),
                    n._firestoreClient.verifyNotTerminated(),
                    n._firestoreClient
                );
            }
            function x1(n) {
                var e;
                const t = n._freezeSettings(),
                    r =
                        ((a =
                            (null === (e = n._app) || void 0 === e
                                ? void 0
                                : e.options.appId) || ""),
                        new RV(
                            n._databaseId,
                            a,
                            n._persistenceKey,
                            (h = t).host,
                            h.ssl,
                            h.experimentalForceLongPolling,
                            h.experimentalAutoDetectLongPolling,
                            h.useFetchStreams
                        ));
                var a, h;
                n._firestoreClient = new o2(
                    n._authCredentials,
                    n._appCheckCredentials,
                    n._queue,
                    r
                );
            }
            function R1(n, e, t) {
                const r = new vi();
                return n.asyncQueue
                    .enqueue(
                        (0, y.Z)(function* () {
                            try {
                                yield p1(n, t), yield g1(n, e), r.resolve();
                            } catch (i) {
                                const a = i;
                                if (
                                    !("FirebaseError" === (l = a).name
                                        ? l.code === me.FAILED_PRECONDITION ||
                                          l.code === me.UNIMPLEMENTED
                                        : !(
                                              typeof DOMException < "u" &&
                                              l instanceof DOMException
                                          ) ||
                                          22 === l.code ||
                                          20 === l.code ||
                                          11 === l.code)
                                )
                                    throw a;
                                console.warn(
                                    "Error enabling offline persistence. Falling back to persistence disabled: " +
                                        a
                                ),
                                    r.reject(a);
                            }
                            var l;
                        })
                    )
                    .then(() => r.promise);
            }
            function M1(n) {
                if (n._initialized || n._terminated)
                    throw new Ve(
                        me.FAILED_PRECONDITION,
                        "Firestore has already been started and persistence can no longer be enabled. You can only enable persistence before calling any other methods on a Firestore object."
                    );
            }
            class tc {
                constructor(...e) {
                    for (let t = 0; t < e.length; ++t)
                        if (0 === e[t].length)
                            throw new Ve(
                                me.INVALID_ARGUMENT,
                                "Invalid field name at argument $(i + 1). Field names must not be empty."
                            );
                    this._internalPath = new Br(e);
                }
                isEqual(e) {
                    return this._internalPath.isEqual(e._internalPath);
                }
            }
            class Vu {
                constructor(e) {
                    this._byteString = e;
                }
                static fromBase64String(e) {
                    try {
                        return new Vu(hi.fromBase64String(e));
                    } catch (t) {
                        throw new Ve(
                            me.INVALID_ARGUMENT,
                            "Failed to construct data from Base64 string: " + t
                        );
                    }
                }
                static fromUint8Array(e) {
                    return new Vu(hi.fromUint8Array(e));
                }
                toBase64() {
                    return this._byteString.toBase64();
                }
                toUint8Array() {
                    return this._byteString.toUint8Array();
                }
                toString() {
                    return "Bytes(base64: " + this.toBase64() + ")";
                }
                isEqual(e) {
                    return this._byteString.isEqual(e._byteString);
                }
            }
            class Dp {
                constructor(e) {
                    this._methodName = e;
                }
            }
            class iT {
                constructor(e, t) {
                    if (!isFinite(e) || e < -90 || e > 90)
                        throw new Ve(
                            me.INVALID_ARGUMENT,
                            "Latitude must be a number between -90 and 90, but was: " +
                                e
                        );
                    if (!isFinite(t) || t < -180 || t > 180)
                        throw new Ve(
                            me.INVALID_ARGUMENT,
                            "Longitude must be a number between -180 and 180, but was: " +
                                t
                        );
                    (this._lat = e), (this._long = t);
                }
                get latitude() {
                    return this._lat;
                }
                get longitude() {
                    return this._long;
                }
                isEqual(e) {
                    return this._lat === e._lat && this._long === e._long;
                }
                toJSON() {
                    return { latitude: this._lat, longitude: this._long };
                }
                _compareTo(e) {
                    return Qt(this._lat, e._lat) || Qt(this._long, e._long);
                }
            }
            const A2 = /^__.*__$/;
            class x2 {
                constructor(e, t, r) {
                    (this.data = e),
                        (this.fieldMask = t),
                        (this.fieldTransforms = r);
                }
                toMutation(e, t) {
                    return null !== this.fieldMask
                        ? new Xl(
                              e,
                              this.data,
                              this.fieldMask,
                              t,
                              this.fieldTransforms
                          )
                        : new F_(e, this.data, t, this.fieldTransforms);
                }
            }
            class N1 {
                constructor(e, t, r) {
                    (this.data = e),
                        (this.fieldMask = t),
                        (this.fieldTransforms = r);
                }
                toMutation(e, t) {
                    return new Xl(
                        e,
                        this.data,
                        this.fieldMask,
                        t,
                        this.fieldTransforms
                    );
                }
            }
            function P1(n) {
                switch (n) {
                    case 0:
                    case 2:
                    case 1:
                        return !0;
                    case 3:
                    case 4:
                        return !1;
                    default:
                        throw ft();
                }
            }
            class sT {
                constructor(e, t, r, i, a, l) {
                    (this.settings = e),
                        (this.databaseId = t),
                        (this.wt = r),
                        (this.ignoreUndefinedProperties = i),
                        void 0 === a && this.Xc(),
                        (this.fieldTransforms = a || []),
                        (this.fieldMask = l || []);
                }
                get path() {
                    return this.settings.path;
                }
                get Zc() {
                    return this.settings.Zc;
                }
                ta(e) {
                    return new sT(
                        Object.assign(Object.assign({}, this.settings), e),
                        this.databaseId,
                        this.wt,
                        this.ignoreUndefinedProperties,
                        this.fieldTransforms,
                        this.fieldMask
                    );
                }
                ea(e) {
                    var t;
                    const r =
                            null === (t = this.path) || void 0 === t
                                ? void 0
                                : t.child(e),
                        i = this.ta({ path: r, na: !1 });
                    return i.sa(e), i;
                }
                ia(e) {
                    var t;
                    const r =
                            null === (t = this.path) || void 0 === t
                                ? void 0
                                : t.child(e),
                        i = this.ta({ path: r, na: !1 });
                    return i.Xc(), i;
                }
                ra(e) {
                    return this.ta({ path: void 0, na: !0 });
                }
                oa(e) {
                    return uT(
                        e,
                        this.settings.methodName,
                        this.settings.ua || !1,
                        this.path,
                        this.settings.ca
                    );
                }
                contains(e) {
                    return (
                        void 0 !==
                            this.fieldMask.find((t) => e.isPrefixOf(t)) ||
                        void 0 !==
                            this.fieldTransforms.find((t) =>
                                e.isPrefixOf(t.field)
                            )
                    );
                }
                Xc() {
                    if (this.path)
                        for (let e = 0; e < this.path.length; e++)
                            this.sa(this.path.get(e));
                }
                sa(e) {
                    if (0 === e.length)
                        throw this.oa("Document fields must not be empty");
                    if (P1(this.Zc) && A2.test(e))
                        throw this.oa(
                            'Document fields cannot begin and end with "__"'
                        );
                }
            }
            class R2 {
                constructor(e, t, r) {
                    (this.databaseId = e),
                        (this.ignoreUndefinedProperties = t),
                        (this.wt = r || yE(e));
                }
                aa(e, t, r, i = !1) {
                    return new sT(
                        {
                            Zc: e,
                            methodName: t,
                            ca: r,
                            path: Br.emptyPath(),
                            na: !1,
                            ua: i,
                        },
                        this.databaseId,
                        this.wt,
                        this.ignoreUndefinedProperties
                    );
                }
            }
            function Tp(n) {
                const e = n._freezeSettings(),
                    t = yE(n._databaseId);
                return new R2(n._databaseId, !!e.ignoreUndefinedProperties, t);
            }
            function oT(n, e, t, r, i, a = {}) {
                const l = n.aa(a.merge || a.mergeFields ? 2 : 0, e, t, i);
                PM("Data must be an object, but it was:", l, r);
                const h = F1(r, l);
                let _, E;
                if (a.merge) (_ = new mo(l.fieldMask)), (E = l.fieldTransforms);
                else if (a.mergeFields) {
                    const D = [];
                    for (const T of a.mergeFields) {
                        const R = kM(e, T, t);
                        if (!l.contains(R))
                            throw new Ve(
                                me.INVALID_ARGUMENT,
                                `Field '${R}' is specified in your field mask but missing from your input data.`
                            );
                        V1(D, R) || D.push(R);
                    }
                    (_ = new mo(D)),
                        (E = l.fieldTransforms.filter((T) =>
                            _.covers(T.field)
                        ));
                } else (_ = null), (E = l.fieldTransforms);
                return new x2(new Vi(h), _, E);
            }
            class IE extends Dp {
                _toFieldTransform(e) {
                    if (2 !== e.Zc)
                        throw e.oa(
                            1 === e.Zc
                                ? `${this._methodName}() can only appear at the top level of your update data`
                                : `${this._methodName}() cannot be used with set() unless you pass {merge:true}`
                        );
                    return e.fieldMask.push(e.path), null;
                }
                isEqual(e) {
                    return e instanceof IE;
                }
            }
            function k1(n, e, t) {
                return new sT(
                    {
                        Zc: 3,
                        ca: e.settings.ca,
                        methodName: n._methodName,
                        na: t,
                    },
                    e.databaseId,
                    e.wt,
                    e.ignoreUndefinedProperties
                );
            }
            class RM extends Dp {
                _toFieldTransform(e) {
                    return new eE(e.path, new k_());
                }
                isEqual(e) {
                    return e instanceof RM;
                }
            }
            class M2 extends Dp {
                constructor(e, t) {
                    super(e), (this.ha = t);
                }
                _toFieldTransform(e) {
                    const t = k1(this, e, !0),
                        r = this.ha.map((a) => Sp(a, t)),
                        i = new gp(r);
                    return new eE(e.path, i);
                }
                isEqual(e) {
                    return this === e;
                }
            }
            class N2 extends Dp {
                constructor(e, t) {
                    super(e), (this.ha = t);
                }
                _toFieldTransform(e) {
                    const t = k1(this, e, !0),
                        r = this.ha.map((a) => Sp(a, t)),
                        i = new mp(r);
                    return new eE(e.path, i);
                }
                isEqual(e) {
                    return this === e;
                }
            }
            class P2 extends Dp {
                constructor(e, t) {
                    super(e), (this.la = t);
                }
                _toFieldTransform(e) {
                    const t = new O_(e.wt, Dk(e.wt, this.la));
                    return new eE(e.path, t);
                }
                isEqual(e) {
                    return this === e;
                }
            }
            function MM(n, e, t, r) {
                const i = n.aa(1, e, t);
                PM("Data must be an object, but it was:", i, r);
                const a = [],
                    l = Vi.empty();
                cp(r, (_, E) => {
                    const D = aT(e, _, t);
                    E = (0, C.m9)(E);
                    const T = i.ia(D);
                    if (E instanceof IE) a.push(D);
                    else {
                        const R = Sp(E, T);
                        null != R && (a.push(D), l.set(D, R));
                    }
                });
                const h = new mo(a);
                return new N1(l, h, i.fieldTransforms);
            }
            function NM(n, e, t, r, i, a) {
                const l = n.aa(1, e, t),
                    h = [kM(e, r, t)],
                    _ = [i];
                if (a.length % 2 != 0)
                    throw new Ve(
                        me.INVALID_ARGUMENT,
                        `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`
                    );
                for (let R = 0; R < a.length; R += 2)
                    h.push(kM(e, a[R])), _.push(a[R + 1]);
                const E = [],
                    D = Vi.empty();
                for (let R = h.length - 1; R >= 0; --R)
                    if (!V1(E, h[R])) {
                        const F = h[R];
                        let K = _[R];
                        K = (0, C.m9)(K);
                        const Ie = l.ia(F);
                        if (K instanceof IE) E.push(F);
                        else {
                            const Re = Sp(K, Ie);
                            null != Re && (E.push(F), D.set(F, Re));
                        }
                    }
                const T = new mo(E);
                return new N1(D, T, l.fieldTransforms);
            }
            function O1(n, e, t, r = !1) {
                return Sp(t, n.aa(r ? 4 : 3, e));
            }
            function Sp(n, e) {
                if (L1((n = (0, C.m9)(n))))
                    return PM("Unsupported field value:", e, n), F1(n, e);
                if (n instanceof Dp)
                    return (
                        (function (t, r) {
                            if (!P1(r.Zc))
                                throw r.oa(
                                    `${t._methodName}() can only be used with update() and set()`
                                );
                            if (!r.path)
                                throw r.oa(
                                    `${t._methodName}() is not currently supported inside arrays`
                                );
                            const i = t._toFieldTransform(r);
                            i && r.fieldTransforms.push(i);
                        })(n, e),
                        null
                    );
                if (void 0 === n && e.ignoreUndefinedProperties) return null;
                if ((e.path && e.fieldMask.push(e.path), n instanceof Array)) {
                    if (e.settings.na && 4 !== e.Zc)
                        throw e.oa("Nested arrays are not supported");
                    return (function (t, r) {
                        const i = [];
                        let a = 0;
                        for (const l of t) {
                            let h = Sp(l, r.ra(a));
                            null == h && (h = { nullValue: "NULL_VALUE" }),
                                i.push(h),
                                a++;
                        }
                        return { arrayValue: { values: i } };
                    })(n, e);
                }
                return (function (t, r) {
                    if (null === (t = (0, C.m9)(t)))
                        return { nullValue: "NULL_VALUE" };
                    if ("number" == typeof t) return Dk(r.wt, t);
                    if ("boolean" == typeof t) return { booleanValue: t };
                    if ("string" == typeof t) return { stringValue: t };
                    if (t instanceof Date) {
                        const i = mr.fromDate(t);
                        return { timestampValue: oE(r.wt, i) };
                    }
                    if (t instanceof mr) {
                        const i = new mr(
                            t.seconds,
                            1e3 * Math.floor(t.nanoseconds / 1e3)
                        );
                        return { timestampValue: oE(r.wt, i) };
                    }
                    if (t instanceof iT)
                        return {
                            geoPointValue: {
                                latitude: t.latitude,
                                longitude: t.longitude,
                            },
                        };
                    if (t instanceof Vu)
                        return { bytesValue: zk(r.wt, t._byteString) };
                    if (t instanceof rr) {
                        const i = r.databaseId,
                            a = t.firestore._databaseId;
                        if (!a.isEqual(i))
                            throw r.oa(
                                `Document reference is for database ${a.projectId}/${a.database} but should be for database ${i.projectId}/${i.database}`
                            );
                        return {
                            referenceValue: eR(
                                t.firestore._databaseId || r.databaseId,
                                t._key.path
                            ),
                        };
                    }
                    throw r.oa(`Unsupported field value: ${nT(t)}`);
                })(n, e);
            }
            function F1(n, e) {
                const t = {};
                return (
                    tk(n)
                        ? e.path &&
                          e.path.length > 0 &&
                          e.fieldMask.push(e.path)
                        : cp(n, (r, i) => {
                              const a = Sp(i, e.ea(r));
                              null != a && (t[r] = a);
                          }),
                    { mapValue: { fields: t } }
                );
            }
            function L1(n) {
                return !(
                    "object" != typeof n ||
                    null === n ||
                    n instanceof Array ||
                    n instanceof Date ||
                    n instanceof mr ||
                    n instanceof iT ||
                    n instanceof Vu ||
                    n instanceof rr ||
                    n instanceof Dp
                );
            }
            function PM(n, e, t) {
                if (
                    !L1(t) ||
                    "object" != typeof (r = t) ||
                    null === r ||
                    (Object.getPrototypeOf(r) !== Object.prototype &&
                        null !== Object.getPrototypeOf(r))
                ) {
                    const r = nT(t);
                    throw e.oa(
                        "an object" === r ? n + " a custom object" : n + " " + r
                    );
                }
                var r;
            }
            function kM(n, e, t) {
                if ((e = (0, C.m9)(e)) instanceof tc) return e._internalPath;
                if ("string" == typeof e) return aT(n, e);
                throw uT(
                    "Field path arguments must be of type string or ",
                    n,
                    !1,
                    void 0,
                    t
                );
            }
            const k2 = new RegExp("[~\\*/\\[\\]]");
            function aT(n, e, t) {
                if (e.search(k2) >= 0)
                    throw uT(
                        `Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`,
                        n,
                        !1,
                        void 0,
                        t
                    );
                try {
                    return new tc(...e.split("."))._internalPath;
                } catch {
                    throw uT(
                        `Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`,
                        n,
                        !1,
                        void 0,
                        t
                    );
                }
            }
            function uT(n, e, t, r, i) {
                const a = r && !r.isEmpty(),
                    l = void 0 !== i;
                let h = `Function ${e}() called with invalid data`;
                t && (h += " (via `toFirestore()`)"), (h += ". ");
                let _ = "";
                return (
                    (a || l) &&
                        ((_ += " (found"),
                        a && (_ += ` in field ${r}`),
                        l && (_ += ` in document ${i}`),
                        (_ += ")")),
                    new Ve(me.INVALID_ARGUMENT, h + n + _)
                );
            }
            function V1(n, e) {
                return n.some((t) => t.isEqual(e));
            }
            class CE {
                constructor(e, t, r, i, a) {
                    (this._firestore = e),
                        (this._userDataWriter = t),
                        (this._key = r),
                        (this._document = i),
                        (this._converter = a);
                }
                get id() {
                    return this._key.path.lastSegment();
                }
                get ref() {
                    return new rr(this._firestore, this._converter, this._key);
                }
                exists() {
                    return null !== this._document;
                }
                data() {
                    if (this._document) {
                        if (this._converter) {
                            const e = new O2(
                                this._firestore,
                                this._userDataWriter,
                                this._key,
                                this._document,
                                null
                            );
                            return this._converter.fromFirestore(e);
                        }
                        return this._userDataWriter.convertValue(
                            this._document.data.value
                        );
                    }
                }
                get(e) {
                    if (this._document) {
                        const t = this._document.data.field(
                            lT("DocumentSnapshot.get", e)
                        );
                        if (null !== t)
                            return this._userDataWriter.convertValue(t);
                    }
                }
            }
            class O2 extends CE {
                data() {
                    return super.data();
                }
            }
            function lT(n, e) {
                return "string" == typeof e
                    ? aT(n, e)
                    : e instanceof tc
                    ? e._internalPath
                    : e._delegate._internalPath;
            }
            class Ap {
                constructor(e, t) {
                    (this.hasPendingWrites = e), (this.fromCache = t);
                }
                isEqual(e) {
                    return (
                        this.hasPendingWrites === e.hasPendingWrites &&
                        this.fromCache === e.fromCache
                    );
                }
            }
            class nc extends CE {
                constructor(e, t, r, i, a, l) {
                    super(e, t, r, i, l),
                        (this._firestore = e),
                        (this._firestoreImpl = e),
                        (this.metadata = a);
                }
                exists() {
                    return super.exists();
                }
                data(e = {}) {
                    if (this._document) {
                        if (this._converter) {
                            const t = new bE(
                                this._firestore,
                                this._userDataWriter,
                                this._key,
                                this._document,
                                this.metadata,
                                null
                            );
                            return this._converter.fromFirestore(t, e);
                        }
                        return this._userDataWriter.convertValue(
                            this._document.data.value,
                            e.serverTimestamps
                        );
                    }
                }
                get(e, t = {}) {
                    if (this._document) {
                        const r = this._document.data.field(
                            lT("DocumentSnapshot.get", e)
                        );
                        if (null !== r)
                            return this._userDataWriter.convertValue(
                                r,
                                t.serverTimestamps
                            );
                    }
                }
            }
            class bE extends nc {
                data(e = {}) {
                    return super.data(e);
                }
            }
            class sh {
                constructor(e, t, r, i) {
                    (this._firestore = e),
                        (this._userDataWriter = t),
                        (this._snapshot = i),
                        (this.metadata = new Ap(
                            i.hasPendingWrites,
                            i.fromCache
                        )),
                        (this.query = r);
                }
                get docs() {
                    const e = [];
                    return this.forEach((t) => e.push(t)), e;
                }
                get size() {
                    return this._snapshot.docs.size;
                }
                get empty() {
                    return 0 === this.size;
                }
                forEach(e, t) {
                    this._snapshot.docs.forEach((r) => {
                        e.call(
                            t,
                            new bE(
                                this._firestore,
                                this._userDataWriter,
                                r.key,
                                r,
                                new Ap(
                                    this._snapshot.mutatedKeys.has(r.key),
                                    this._snapshot.fromCache
                                ),
                                this.query.converter
                            )
                        );
                    });
                }
                docChanges(e = {}) {
                    const t = !!e.includeMetadataChanges;
                    if (t && this._snapshot.excludesMetadataChanges)
                        throw new Ve(
                            me.INVALID_ARGUMENT,
                            "To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot()."
                        );
                    return (
                        (this._cachedChanges &&
                            this._cachedChangesIncludeMetadataChanges === t) ||
                            ((this._cachedChanges = (function (r, i) {
                                if (r._snapshot.oldDocs.isEmpty()) {
                                    let a = 0;
                                    return r._snapshot.docChanges.map((l) => ({
                                        type: "added",
                                        doc: new bE(
                                            r._firestore,
                                            r._userDataWriter,
                                            l.doc.key,
                                            l.doc,
                                            new Ap(
                                                r._snapshot.mutatedKeys.has(
                                                    l.doc.key
                                                ),
                                                r._snapshot.fromCache
                                            ),
                                            r.query.converter
                                        ),
                                        oldIndex: -1,
                                        newIndex: a++,
                                    }));
                                }
                                {
                                    let a = r._snapshot.oldDocs;
                                    return r._snapshot.docChanges
                                        .filter((l) => i || 3 !== l.type)
                                        .map((l) => {
                                            const h = new bE(
                                                r._firestore,
                                                r._userDataWriter,
                                                l.doc.key,
                                                l.doc,
                                                new Ap(
                                                    r._snapshot.mutatedKeys.has(
                                                        l.doc.key
                                                    ),
                                                    r._snapshot.fromCache
                                                ),
                                                r.query.converter
                                            );
                                            let _ = -1,
                                                E = -1;
                                            return (
                                                0 !== l.type &&
                                                    ((_ = a.indexOf(l.doc.key)),
                                                    (a = a.delete(l.doc.key))),
                                                1 !== l.type &&
                                                    ((a = a.add(l.doc)),
                                                    (E = a.indexOf(l.doc.key))),
                                                {
                                                    type: F2(l.type),
                                                    doc: h,
                                                    oldIndex: _,
                                                    newIndex: E,
                                                }
                                            );
                                        });
                                }
                            })(this, t)),
                            (this._cachedChangesIncludeMetadataChanges = t)),
                        this._cachedChanges
                    );
                }
            }
            function F2(n) {
                switch (n) {
                    case 0:
                        return "added";
                    case 2:
                    case 3:
                        return "modified";
                    case 1:
                        return "removed";
                    default:
                        return ft();
                }
            }
            function U1(n, e) {
                return n instanceof nc && e instanceof nc
                    ? n._firestore === e._firestore &&
                          n._key.isEqual(e._key) &&
                          (null === n._document
                              ? null === e._document
                              : n._document.isEqual(e._document)) &&
                          n._converter === e._converter
                    : n instanceof sh &&
                          e instanceof sh &&
                          n._firestore === e._firestore &&
                          A1(n.query, e.query) &&
                          n.metadata.isEqual(e.metadata) &&
                          n._snapshot.isEqual(e._snapshot);
            }
            function B1(n) {
                if ("L" === n.limitType && 0 === n.explicitOrderBy.length)
                    throw new Ve(
                        me.UNIMPLEMENTED,
                        "limitToLast() queries require specifying at least one orderBy() clause"
                    );
            }
            class DE {}
            function oh(n, ...e) {
                for (const t of e) n = t._apply(n);
                return n;
            }
            class L2 extends DE {
                constructor(e, t, r) {
                    super(),
                        (this.fa = e),
                        (this.da = t),
                        (this._a = r),
                        (this.type = "where");
                }
                _apply(e) {
                    const t = Tp(e.firestore),
                        r = (function (i, a, l, h, _, E, D) {
                            let T;
                            if (_.isKeyField()) {
                                if (
                                    "array-contains" === E ||
                                    "array-contains-any" === E
                                )
                                    throw new Ve(
                                        me.INVALID_ARGUMENT,
                                        `Invalid Query. You can't perform '${E}' queries on documentId().`
                                    );
                                if ("in" === E || "not-in" === E) {
                                    z1(D, E);
                                    const F = [];
                                    for (const K of D) F.push(W1(h, i, K));
                                    T = { arrayValue: { values: F } };
                                } else T = W1(h, i, D);
                            } else
                                ("in" !== E &&
                                    "not-in" !== E &&
                                    "array-contains-any" !== E) ||
                                    z1(D, E),
                                    (T = O1(
                                        l,
                                        "where",
                                        D,
                                        "in" === E || "not-in" === E
                                    ));
                            const R = Ui.create(_, E, T);
                            return (
                                (function (F, K) {
                                    if (K.ht()) {
                                        const Re = Zx(F);
                                        if (null !== Re && !Re.isEqual(K.field))
                                            throw new Ve(
                                                me.INVALID_ARGUMENT,
                                                `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${Re.toString()}' and '${K.field.toString()}'`
                                            );
                                        const mt = Kx(F);
                                        null !== mt && q1(0, K.field, mt);
                                    }
                                    const Ie = (function (Re, mt) {
                                        for (const _t of Re.filters)
                                            if (mt.indexOf(_t.op) >= 0)
                                                return _t.op;
                                        return null;
                                    })(
                                        F,
                                        (function (Re) {
                                            switch (Re) {
                                                case "!=":
                                                    return ["!=", "not-in"];
                                                case "array-contains":
                                                    return [
                                                        "array-contains",
                                                        "array-contains-any",
                                                        "not-in",
                                                    ];
                                                case "in":
                                                    return [
                                                        "array-contains-any",
                                                        "in",
                                                        "not-in",
                                                    ];
                                                case "array-contains-any":
                                                    return [
                                                        "array-contains",
                                                        "array-contains-any",
                                                        "in",
                                                        "not-in",
                                                    ];
                                                case "not-in":
                                                    return [
                                                        "array-contains",
                                                        "array-contains-any",
                                                        "in",
                                                        "not-in",
                                                        "!=",
                                                    ];
                                                default:
                                                    return [];
                                            }
                                        })(K.op)
                                    );
                                    if (null !== Ie)
                                        throw new Ve(
                                            me.INVALID_ARGUMENT,
                                            Ie === K.op
                                                ? `Invalid query. You cannot use more than one '${K.op.toString()}' filter.`
                                                : `Invalid query. You cannot use '${K.op.toString()}' filters with '${Ie.toString()}' filters.`
                                        );
                                })(i, R),
                                R
                            );
                        })(
                            e._query,
                            0,
                            t,
                            e.firestore._databaseId,
                            this.fa,
                            this.da,
                            this._a
                        );
                    return new Yi(
                        e.firestore,
                        e.converter,
                        (function (i, a) {
                            const l = i.filters.concat([a]);
                            return new Jl(
                                i.path,
                                i.collectionGroup,
                                i.explicitOrderBy.slice(),
                                l,
                                i.limit,
                                i.limitType,
                                i.startAt,
                                i.endAt
                            );
                        })(e._query, r)
                    );
                }
            }
            class U2 extends DE {
                constructor(e, t) {
                    super(),
                        (this.fa = e),
                        (this.wa = t),
                        (this.type = "orderBy");
                }
                _apply(e) {
                    const t = (function (r, i, a) {
                        if (null !== r.startAt)
                            throw new Ve(
                                me.INVALID_ARGUMENT,
                                "Invalid query. You must not call startAt() or startAfter() before calling orderBy()."
                            );
                        if (null !== r.endAt)
                            throw new Ve(
                                me.INVALID_ARGUMENT,
                                "Invalid query. You must not call endAt() or endBefore() before calling orderBy()."
                            );
                        const l = new M_(i, a);
                        return (
                            (function (h, _) {
                                if (null === Kx(h)) {
                                    const E = Zx(h);
                                    null !== E && q1(0, E, _.field);
                                }
                            })(r, l),
                            l
                        );
                    })(e._query, this.fa, this.wa);
                    return new Yi(
                        e.firestore,
                        e.converter,
                        (function (r, i) {
                            const a = r.explicitOrderBy.concat([i]);
                            return new Jl(
                                r.path,
                                r.collectionGroup,
                                a,
                                r.filters.slice(),
                                r.limit,
                                r.limitType,
                                r.startAt,
                                r.endAt
                            );
                        })(e._query, t)
                    );
                }
            }
            class j1 extends DE {
                constructor(e, t, r) {
                    super(), (this.type = e), (this.ma = t), (this.ga = r);
                }
                _apply(e) {
                    return new Yi(
                        e.firestore,
                        e.converter,
                        vk(e._query, this.ma, this.ga)
                    );
                }
            }
            class H1 extends DE {
                constructor(e, t, r) {
                    super(), (this.type = e), (this.ya = t), (this.pa = r);
                }
                _apply(e) {
                    const t = G1(e, this.type, this.ya, this.pa);
                    return new Yi(
                        e.firestore,
                        e.converter,
                        ((i = t),
                        new Jl(
                            (r = e._query).path,
                            r.collectionGroup,
                            r.explicitOrderBy.slice(),
                            r.filters.slice(),
                            r.limit,
                            r.limitType,
                            i,
                            r.endAt
                        ))
                    );
                    var r, i;
                }
            }
            class $1 extends DE {
                constructor(e, t, r) {
                    super(), (this.type = e), (this.ya = t), (this.pa = r);
                }
                _apply(e) {
                    const t = G1(e, this.type, this.ya, this.pa);
                    return new Yi(
                        e.firestore,
                        e.converter,
                        ((i = t),
                        new Jl(
                            (r = e._query).path,
                            r.collectionGroup,
                            r.explicitOrderBy.slice(),
                            r.filters.slice(),
                            r.limit,
                            r.limitType,
                            r.startAt,
                            i
                        ))
                    );
                    var r, i;
                }
            }
            function G1(n, e, t, r) {
                if (((t[0] = (0, C.m9)(t[0])), t[0] instanceof CE))
                    return (function (i, a, l, h, _) {
                        if (!h)
                            throw new Ve(
                                me.NOT_FOUND,
                                `Can't use a DocumentSnapshot that doesn't exist for ${l}().`
                            );
                        const E = [];
                        for (const D of P_(i))
                            if (D.field.isKeyField()) E.push(fp(a, h.key));
                            else {
                                const T = h.data.field(D.field);
                                if (Wx(T))
                                    throw new Ve(
                                        me.INVALID_ARGUMENT,
                                        'Invalid query. You are trying to start or end a query using a document for which the field "' +
                                            D.field +
                                            '" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)'
                                    );
                                if (null === T) {
                                    const R = D.field.canonicalString();
                                    throw new Ve(
                                        me.INVALID_ARGUMENT,
                                        `Invalid query. You are trying to start or end a query using a document for which the field '${R}' (used as the orderBy) does not exist.`
                                    );
                                }
                                E.push(T);
                            }
                        return new Jd(E, _);
                    })(n._query, n.firestore._databaseId, e, t[0]._document, r);
                {
                    const i = Tp(n.firestore);
                    return (function (a, l, h, _, E, D) {
                        const T = a.explicitOrderBy;
                        if (E.length > T.length)
                            throw new Ve(
                                me.INVALID_ARGUMENT,
                                `Too many arguments provided to ${_}(). The number of arguments must be less than or equal to the number of orderBy() clauses`
                            );
                        const R = [];
                        for (let F = 0; F < E.length; F++) {
                            const K = E[F];
                            if (T[F].field.isKeyField()) {
                                if ("string" != typeof K)
                                    throw new Ve(
                                        me.INVALID_ARGUMENT,
                                        `Invalid query. Expected a string for document ID in ${_}(), but got a ${typeof K}`
                                    );
                                if (!Yx(a) && -1 !== K.indexOf("/"))
                                    throw new Ve(
                                        me.INVALID_ARGUMENT,
                                        `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${_}() must be a plain document ID, but '${K}' contains a slash.`
                                    );
                                const Ie = a.path.child(wn.fromString(K));
                                if (!Xe.isDocumentKey(Ie))
                                    throw new Ve(
                                        me.INVALID_ARGUMENT,
                                        `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${_}() must result in a valid document path, but '${Ie}' is not because it contains an odd number of segments.`
                                    );
                                const Re = new Xe(Ie);
                                R.push(fp(l, Re));
                            } else {
                                const Ie = O1(h, _, K);
                                R.push(Ie);
                            }
                        }
                        return new Jd(R, D);
                    })(n._query, n.firestore._databaseId, i, e, t, r);
                }
            }
            function W1(n, e, t) {
                if ("string" == typeof (t = (0, C.m9)(t))) {
                    if ("" === t)
                        throw new Ve(
                            me.INVALID_ARGUMENT,
                            "Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string."
                        );
                    if (!Yx(e) && -1 !== t.indexOf("/"))
                        throw new Ve(
                            me.INVALID_ARGUMENT,
                            `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${t}' contains a '/' character.`
                        );
                    const r = e.path.child(wn.fromString(t));
                    if (!Xe.isDocumentKey(r))
                        throw new Ve(
                            me.INVALID_ARGUMENT,
                            `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`
                        );
                    return fp(n, new Xe(r));
                }
                if (t instanceof rr) return fp(n, t._key);
                throw new Ve(
                    me.INVALID_ARGUMENT,
                    `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${nT(
                        t
                    )}.`
                );
            }
            function z1(n, e) {
                if (!Array.isArray(n) || 0 === n.length)
                    throw new Ve(
                        me.INVALID_ARGUMENT,
                        `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`
                    );
                if (n.length > 10)
                    throw new Ve(
                        me.INVALID_ARGUMENT,
                        `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`
                    );
            }
            function q1(n, e, t) {
                if (!t.isEqual(e))
                    throw new Ve(
                        me.INVALID_ARGUMENT,
                        `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${t.toString()}' instead.`
                    );
            }
            const q2 = { maxAttempts: 5 };
            class OM {
                convertValue(e, t = "none") {
                    switch (hp(e)) {
                        case 0:
                            return null;
                        case 1:
                            return e.booleanValue;
                        case 2:
                            return Pr(e.integerValue || e.doubleValue);
                        case 3:
                            return this.convertTimestamp(e.timestampValue);
                        case 4:
                            return this.convertServerTimestamp(e, t);
                        case 5:
                            return e.stringValue;
                        case 6:
                            return this.convertBytes(dp(e.bytesValue));
                        case 7:
                            return this.convertReference(e.referenceValue);
                        case 8:
                            return this.convertGeoPoint(e.geoPointValue);
                        case 9:
                            return this.convertArray(e.arrayValue, t);
                        case 10:
                            return this.convertObject(e.mapValue, t);
                        default:
                            throw ft();
                    }
                }
                convertObject(e, t) {
                    const r = {};
                    return (
                        cp(e.fields, (i, a) => {
                            r[i] = this.convertValue(a, t);
                        }),
                        r
                    );
                }
                convertGeoPoint(e) {
                    return new iT(Pr(e.latitude), Pr(e.longitude));
                }
                convertArray(e, t) {
                    return (e.values || []).map((r) => this.convertValue(r, t));
                }
                convertServerTimestamp(e, t) {
                    switch (t) {
                        case "previous":
                            const r = rk(e);
                            return null == r ? null : this.convertValue(r, t);
                        case "estimate":
                            return this.convertTimestamp(z0(e));
                        default:
                            return null;
                    }
                }
                convertTimestamp(e) {
                    const t = Zd(e);
                    return new mr(t.seconds, t.nanos);
                }
                convertDocumentKey(e, t) {
                    const r = wn.fromString(e);
                    Vt(nO(r));
                    const i = new Ql(r.get(1), r.get(3)),
                        a = new Xe(r.popFirst(5));
                    return (
                        i.isEqual(t) ||
                            qr(
                                `Document ${a} contains a document reference within a different database (${i.projectId}/${i.database}) which is not supported. It will be treated as a reference in the current database (${t.projectId}/${t.database}) instead.`
                            ),
                        a
                    );
                }
            }
            function cT(n, e, t) {
                let r;
                return (
                    (r = n
                        ? t && (t.merge || t.mergeFields)
                            ? n.toFirestore(e, t)
                            : n.toFirestore(e)
                        : e),
                    r
                );
            }
            class K2 extends OM {
                constructor(e) {
                    super(), (this.firestore = e);
                }
                convertBytes(e) {
                    return new Vu(e);
                }
                convertReference(e) {
                    const t = this.convertDocumentKey(
                        e,
                        this.firestore._databaseId
                    );
                    return new rr(this.firestore, null, t);
                }
            }
            class K1 {
                constructor(e, t) {
                    (this._firestore = e),
                        (this._commitHandler = t),
                        (this._mutations = []),
                        (this._committed = !1),
                        (this._dataReader = Tp(e));
                }
                set(e, t, r) {
                    this._verifyNotCommitted();
                    const i = ah(e, this._firestore),
                        a = cT(i.converter, t, r),
                        l = oT(
                            this._dataReader,
                            "WriteBatch.set",
                            i._key,
                            a,
                            null !== i.converter,
                            r
                        );
                    return (
                        this._mutations.push(l.toMutation(i._key, Er.none())),
                        this
                    );
                }
                update(e, t, r, ...i) {
                    this._verifyNotCommitted();
                    const a = ah(e, this._firestore);
                    let l;
                    return (
                        (l =
                            "string" == typeof (t = (0, C.m9)(t)) ||
                            t instanceof tc
                                ? NM(
                                      this._dataReader,
                                      "WriteBatch.update",
                                      a._key,
                                      t,
                                      r,
                                      i
                                  )
                                : MM(
                                      this._dataReader,
                                      "WriteBatch.update",
                                      a._key,
                                      t
                                  )),
                        this._mutations.push(
                            l.toMutation(a._key, Er.exists(!0))
                        ),
                        this
                    );
                }
                delete(e) {
                    this._verifyNotCommitted();
                    const t = ah(e, this._firestore);
                    return (
                        (this._mutations = this._mutations.concat(
                            new L_(t._key, Er.none())
                        )),
                        this
                    );
                }
                commit() {
                    return (
                        this._verifyNotCommitted(),
                        (this._committed = !0),
                        this._mutations.length > 0
                            ? this._commitHandler(this._mutations)
                            : Promise.resolve()
                    );
                }
                _verifyNotCommitted() {
                    if (this._committed)
                        throw new Ve(
                            me.FAILED_PRECONDITION,
                            "A write batch can no longer be used after commit() has been called."
                        );
                }
            }
            function ah(n, e) {
                if ((n = (0, C.m9)(n)).firestore !== e)
                    throw new Ve(
                        me.INVALID_ARGUMENT,
                        "Provided document reference is from a different Firestore instance."
                    );
                return n;
            }
            class xp extends OM {
                constructor(e) {
                    super(), (this.firestore = e);
                }
                convertBytes(e) {
                    return new Vu(e);
                }
                convertReference(e) {
                    const t = this.convertDocumentKey(
                        e,
                        this.firestore._databaseId
                    );
                    return new rr(this.firestore, null, t);
                }
            }
            function Z1(n, e, t) {
                n = _n(n, rr);
                const r = _n(n.firestore, _r),
                    i = cT(n.converter, e, t);
                return J_(r, [
                    oT(
                        Tp(r),
                        "setDoc",
                        n._key,
                        i,
                        null !== n.converter,
                        t
                    ).toMutation(n._key, Er.none()),
                ]);
            }
            function Y1(n, e, t, ...r) {
                n = _n(n, rr);
                const i = _n(n.firestore, _r),
                    a = Tp(i);
                let l;
                return (
                    (l =
                        "string" == typeof (e = (0, C.m9)(e)) || e instanceof tc
                            ? NM(a, "updateDoc", n._key, e, t, r)
                            : MM(a, "updateDoc", n._key, e)),
                    J_(i, [l.toMutation(n._key, Er.exists(!0))])
                );
            }
            function Q1(n, ...e) {
                var t, r, i;
                n = (0, C.m9)(n);
                let a = { includeMetadataChanges: !1 },
                    l = 0;
                "object" != typeof e[l] || xM(e[l]) || ((a = e[l]), l++);
                const h = { includeMetadataChanges: a.includeMetadataChanges };
                if (xM(e[l])) {
                    const T = e[l];
                    (e[l] =
                        null === (t = T.next) || void 0 === t
                            ? void 0
                            : t.bind(T)),
                        (e[l + 1] =
                            null === (r = T.error) || void 0 === r
                                ? void 0
                                : r.bind(T)),
                        (e[l + 2] =
                            null === (i = T.complete) || void 0 === i
                                ? void 0
                                : i.bind(T));
                }
                let _, E, D;
                if (n instanceof rr)
                    (E = _n(n.firestore, _r)),
                        (D = N_(n._key.path)),
                        (_ = {
                            next: (T) => {
                                e[l] && e[l](FM(E, n, T));
                            },
                            error: e[l + 1],
                            complete: e[l + 2],
                        });
                else {
                    const T = _n(n, Yi);
                    (E = _n(T.firestore, _r)), (D = T._query);
                    const R = new xp(E);
                    (_ = {
                        next: (F) => {
                            e[l] && e[l](new sh(E, R, T, F));
                        },
                        error: e[l + 1],
                        complete: e[l + 2],
                    }),
                        B1(n._query);
                }
                return (function (T, R, F, K) {
                    const Ie = new eT(K),
                        Re = new qR(R, Ie, F);
                    return (
                        T.asyncQueue.enqueueAndForget(
                            (0, y.Z)(function* () {
                                return HR(yield Q_(T), Re);
                            })
                        ),
                        () => {
                            Ie.Tc(),
                                T.asyncQueue.enqueueAndForget(
                                    (0, y.Z)(function* () {
                                        return GR(yield Q_(T), Re);
                                    })
                                );
                        }
                    );
                })(Zr(E), D, h, _);
            }
            function J_(n, e) {
                return (function (t, r) {
                    const i = new vi();
                    return (
                        t.asyncQueue.enqueueAndForget(
                            (0, y.Z)(function* () {
                                return (function BB(n, e, t) {
                                    return JR.apply(this, arguments);
                                })(yield TM(t), r, i);
                            })
                        ),
                        i.promise
                    );
                })(Zr(n), e);
            }
            function FM(n, e, t) {
                const r = t.docs.get(e._key),
                    i = new xp(n);
                return new nc(
                    n,
                    i,
                    e._key,
                    r,
                    new Ap(t.hasPendingWrites, t.fromCache),
                    e.converter
                );
            }
            class ij extends class {
                constructor(e, t) {
                    (this._firestore = e),
                        (this._transaction = t),
                        (this._dataReader = Tp(e));
                }
                get(e) {
                    const t = ah(e, this._firestore),
                        r = new K2(this._firestore);
                    return this._transaction.lookup([t._key]).then((i) => {
                        if (!i || 1 !== i.length) return ft();
                        const a = i[0];
                        if (a.isFoundDocument())
                            return new CE(
                                this._firestore,
                                r,
                                a.key,
                                a,
                                t.converter
                            );
                        if (a.isNoDocument())
                            return new CE(
                                this._firestore,
                                r,
                                t._key,
                                null,
                                t.converter
                            );
                        throw ft();
                    });
                }
                set(e, t, r) {
                    const i = ah(e, this._firestore),
                        a = cT(i.converter, t, r),
                        l = oT(
                            this._dataReader,
                            "Transaction.set",
                            i._key,
                            a,
                            null !== i.converter,
                            r
                        );
                    return this._transaction.set(i._key, l), this;
                }
                update(e, t, r, ...i) {
                    const a = ah(e, this._firestore);
                    let l;
                    return (
                        (l =
                            "string" == typeof (t = (0, C.m9)(t)) ||
                            t instanceof tc
                                ? NM(
                                      this._dataReader,
                                      "Transaction.update",
                                      a._key,
                                      t,
                                      r,
                                      i
                                  )
                                : MM(
                                      this._dataReader,
                                      "Transaction.update",
                                      a._key,
                                      t
                                  )),
                        this._transaction.update(a._key, l),
                        this
                    );
                }
                delete(e) {
                    const t = ah(e, this._firestore);
                    return this._transaction.delete(t._key), this;
                }
            } {
                constructor(e, t) {
                    super(e, t), (this._firestore = e);
                }
                get(e) {
                    const t = ah(e, this._firestore),
                        r = new xp(this._firestore);
                    return super
                        .get(e)
                        .then(
                            (i) =>
                                new nc(
                                    this._firestore,
                                    r,
                                    t._key,
                                    i._document,
                                    new Ap(!1, !1),
                                    t.converter
                                )
                        );
                }
            }
            function LM(n, e) {
                if (void 0 === e) return { merge: !1 };
                if (void 0 !== e.mergeFields && void 0 !== e.merge)
                    throw new Ve(
                        "invalid-argument",
                        `Invalid options passed to function ${n}(): You cannot specify both "merge" and "mergeFields".`
                    );
                return e;
            }
            function X1() {
                if (typeof Uint8Array > "u")
                    throw new Ve(
                        "unimplemented",
                        "Uint8Arrays are not available in this environment."
                    );
            }
            function eF() {
                if (
                    !(function AV() {
                        return typeof atob < "u";
                    })()
                )
                    throw new Ve(
                        "unimplemented",
                        "Blobs are unavailable in Firestore in this environment."
                    );
            }
            !(function (n, e = !0) {
                (S_ = A.SDK_VERSION),
                    (0, A._registerComponent)(
                        new m.wA(
                            "firestore",
                            (t, { options: r }) => {
                                const i = t.getProvider("app").getImmediate(),
                                    a = new _r(
                                        i,
                                        new yV(t.getProvider("auth-internal")),
                                        new EV(
                                            t.getProvider("app-check-internal")
                                        )
                                    );
                                return (
                                    (r = Object.assign(
                                        { useFetchStreams: e },
                                        r
                                    )),
                                    a._setSettings(r),
                                    a
                                );
                            },
                            "PUBLIC"
                        )
                    ),
                    (0, A.registerVersion)(GP, "3.4.13", n),
                    (0, A.registerVersion)(GP, "3.4.13", "esm2017");
            })();
            class TE {
                constructor(e) {
                    this._delegate = e;
                }
                static fromBase64String(e) {
                    return eF(), new TE(Vu.fromBase64String(e));
                }
                static fromUint8Array(e) {
                    return X1(), new TE(Vu.fromUint8Array(e));
                }
                toBase64() {
                    return eF(), this._delegate.toBase64();
                }
                toUint8Array() {
                    return X1(), this._delegate.toUint8Array();
                }
                isEqual(e) {
                    return this._delegate.isEqual(e._delegate);
                }
                toString() {
                    return "Blob(base64: " + this.toBase64() + ")";
                }
            }
            function VM(n) {
                return (function fj(n, e) {
                    if ("object" != typeof n || null === n) return !1;
                    const t = n;
                    for (const r of e)
                        if (r in t && "function" == typeof t[r]) return !0;
                    return !1;
                })(n, ["next", "error", "complete"]);
            }
            class pj {
                enableIndexedDbPersistence(e, t) {
                    return (function w2(n, e) {
                        M1((n = _n(n, _r)));
                        const t = Zr(n),
                            r = n._freezeSettings(),
                            i = new vM();
                        return R1(
                            t,
                            i,
                            new h1(i, r.cacheSizeBytes, e?.forceOwnership)
                        );
                    })(e._delegate, { forceOwnership: t });
                }
                enableMultiTabIndexedDbPersistence(e) {
                    return (function E2(n) {
                        M1((n = _n(n, _r)));
                        const e = Zr(n),
                            t = n._freezeSettings(),
                            r = new vM();
                        return R1(e, r, new n2(r, t.cacheSizeBytes));
                    })(e._delegate);
                }
                clearIndexedDbPersistence(e) {
                    return (function I2(n) {
                        if (n._initialized && !n._terminated)
                            throw new Ve(
                                me.FAILED_PRECONDITION,
                                "Persistence can only be cleared before a Firestore instance is initialized or after it is terminated."
                            );
                        const e = new vi();
                        return (
                            n._queue.enqueueAndForgetEvenWhileRestricted(
                                (0, y.Z)(function* () {
                                    try {
                                        yield ((t = (0, y.Z)(function* (r) {
                                            if (!Pa.V())
                                                return Promise.resolve();
                                            const i = r + "main";
                                            yield Pa.delete(i);
                                        })),
                                        function (r) {
                                            return t.apply(this, arguments);
                                        })(
                                            fR(n._databaseId, n._persistenceKey)
                                        ),
                                            e.resolve();
                                    } catch (t) {
                                        e.reject(t);
                                    }
                                    var t;
                                })
                            ),
                            e.promise
                        );
                    })(e._delegate);
                }
            }
            class tF {
                constructor(e, t, r) {
                    (this._delegate = t),
                        (this._persistenceProvider = r),
                        (this.INTERNAL = { delete: () => this.terminate() }),
                        e instanceof Ql || (this._appCompat = e);
                }
                get _databaseId() {
                    return this._delegate._databaseId;
                }
                settings(e) {
                    const t = this._delegate._getSettings();
                    !e.merge &&
                        t.host !== e.host &&
                        H0(
                            "You are overriding the original host. If you did not intend to override your settings, use {merge: true}."
                        ),
                        e.merge &&
                            delete (e = Object.assign(Object.assign({}, t), e))
                                .merge,
                        this._delegate._setSettings(e);
                }
                useEmulator(e, t, r = {}) {
                    !(function g2(n, e, t, r = {}) {
                        var i;
                        const a = (n = _n(n, EE))._getSettings();
                        if (
                            ("firestore.googleapis.com" !== a.host &&
                                a.host !== e &&
                                H0(
                                    "Host has been set in both settings() and useEmulator(), emulator host will be used"
                                ),
                            n._setSettings(
                                Object.assign(Object.assign({}, a), {
                                    host: `${e}:${t}`,
                                    ssl: !1,
                                })
                            ),
                            r.mockUserToken)
                        ) {
                            let l, h;
                            if ("string" == typeof r.mockUserToken)
                                (l = r.mockUserToken), (h = yi.MOCK_USER);
                            else {
                                l = (0, C.Sg)(
                                    r.mockUserToken,
                                    null === (i = n._app) || void 0 === i
                                        ? void 0
                                        : i.options.projectId
                                );
                                const _ =
                                    r.mockUserToken.sub ||
                                    r.mockUserToken.user_id;
                                if (!_)
                                    throw new Ve(
                                        me.INVALID_ARGUMENT,
                                        "mockUserToken must contain 'sub' or 'user_id' field!"
                                    );
                                h = new yi(_);
                            }
                            n._authCredentials = new _V(new WP(l, h));
                        }
                    })(this._delegate, e, t, r);
                }
                enableNetwork() {
                    return (function b2(n) {
                        return (function a2(n) {
                            return n.asyncQueue.enqueue(
                                (0, y.Z)(function* () {
                                    const e = yield m1(n),
                                        t = yield _1(n);
                                    return (
                                        e.setNetworkEnabled(!0),
                                        (function (r) {
                                            const i = rt(r);
                                            return i.lu.delete(0), vE(i);
                                        })(t)
                                    );
                                })
                            );
                        })(Zr((n = _n(n, _r))));
                    })(this._delegate);
                }
                disableNetwork() {
                    return (function D2(n) {
                        return (function u2(n) {
                            return n.asyncQueue.enqueue(
                                (0, y.Z)(function* () {
                                    const e = yield m1(n),
                                        t = yield _1(n);
                                    return (
                                        e.setNetworkEnabled(!1),
                                        ((r = (0, y.Z)(function* (i) {
                                            const a = rt(i);
                                            a.lu.add(0),
                                                yield G_(a),
                                                a._u.set("Offline");
                                        })),
                                        function (i) {
                                            return r.apply(this, arguments);
                                        })(t)
                                    );
                                    var r;
                                })
                            );
                        })(Zr((n = _n(n, _r))));
                    })(this._delegate);
                }
                enablePersistence(e) {
                    let t = !1,
                        r = !1;
                    return (
                        e &&
                            ((t = !!e.synchronizeTabs),
                            (r = !!e.experimentalForceOwningTab),
                            E1(
                                "synchronizeTabs",
                                t,
                                "experimentalForceOwningTab",
                                r
                            )),
                        t
                            ? this._persistenceProvider.enableMultiTabIndexedDbPersistence(
                                  this
                              )
                            : this._persistenceProvider.enableIndexedDbPersistence(
                                  this,
                                  r
                              )
                    );
                }
                clearPersistence() {
                    return this._persistenceProvider.clearIndexedDbPersistence(
                        this
                    );
                }
                terminate() {
                    return (
                        this._appCompat &&
                            (this._appCompat._removeServiceInstance(
                                "firestore-compat"
                            ),
                            this._appCompat._removeServiceInstance(
                                "firestore"
                            )),
                        this._delegate._delete()
                    );
                }
                waitForPendingWrites() {
                    return (function C2(n) {
                        return (function (e) {
                            const t = new vi();
                            return (
                                e.asyncQueue.enqueueAndForget(
                                    (0, y.Z)(function* () {
                                        return (function GB(n, e) {
                                            return rM.apply(this, arguments);
                                        })(yield TM(e), t);
                                    })
                                ),
                                t.promise
                            );
                        })(Zr((n = _n(n, _r))));
                    })(this._delegate);
                }
                onSnapshotsInSync(e) {
                    return (function rj(n, e) {
                        return (function d2(n, e) {
                            const t = new eT(e);
                            return (
                                n.asyncQueue.enqueueAndForget(
                                    (0, y.Z)(function* () {
                                        return (
                                            (r = yield Q_(n)),
                                            (i = t),
                                            rt(r).Tu.add(i),
                                            void i.next()
                                        );
                                        var r, i;
                                    })
                                ),
                                () => {
                                    t.Tc(),
                                        n.asyncQueue.enqueueAndForget(
                                            (0, y.Z)(function* () {
                                                return (
                                                    (r = yield Q_(n)),
                                                    (i = t),
                                                    void rt(r).Tu.delete(i)
                                                );
                                                var r, i;
                                            })
                                        );
                                }
                            );
                        })(Zr((n = _n(n, _r))), xM(e) ? e : { next: e });
                    })(this._delegate, e);
                }
                get app() {
                    if (!this._appCompat)
                        throw new Ve(
                            "failed-precondition",
                            "Firestore was not initialized using the Firebase SDK. 'app' is not available"
                        );
                    return this._appCompat;
                }
                collection(e) {
                    try {
                        return new X_(this, T1(this._delegate, e));
                    } catch (t) {
                        throw vs(t, "collection()", "Firestore.collection()");
                    }
                }
                doc(e) {
                    try {
                        return new Qo(this, rT(this._delegate, e));
                    } catch (t) {
                        throw vs(t, "doc()", "Firestore.doc()");
                    }
                }
                collectionGroup(e) {
                    try {
                        return new ws(
                            this,
                            (function m2(n, e) {
                                if (
                                    ((n = _n(n, EE)),
                                    AM("collectionGroup", "collection id", e),
                                    e.indexOf("/") >= 0)
                                )
                                    throw new Ve(
                                        me.INVALID_ARGUMENT,
                                        `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`
                                    );
                                return new Yi(
                                    n,
                                    null,
                                    ((t = e), new Jl(wn.emptyPath(), t))
                                );
                                var t;
                            })(this._delegate, e)
                        );
                    } catch (t) {
                        throw vs(
                            t,
                            "collectionGroup()",
                            "Firestore.collectionGroup()"
                        );
                    }
                }
                runTransaction(e) {
                    return (function sj(n, e, t) {
                        n = _n(n, _r);
                        const r = Object.assign(Object.assign({}, q2), t);
                        return (
                            (function (i) {
                                if (i.maxAttempts < 1)
                                    throw new Ve(
                                        me.INVALID_ARGUMENT,
                                        "Max attempts must be at least 1"
                                    );
                            })(r),
                            (function h2(n, e, t) {
                                const r = new vi();
                                return (
                                    n.asyncQueue.enqueueAndForget(
                                        (0, y.Z)(function* () {
                                            const i = yield ((a = n),
                                            tT(a).then((l) => l.datastore));
                                            var a;
                                            new s2(
                                                n.asyncQueue,
                                                i,
                                                t,
                                                e,
                                                r
                                            ).run();
                                        })
                                    ),
                                    r.promise
                                );
                            })(Zr(n), (i) => e(new ij(n, i)), r)
                        );
                    })(this._delegate, (t) => e(new nF(this, t)));
                }
                batch() {
                    return (
                        Zr(this._delegate),
                        new rF(
                            new K1(this._delegate, (e) => J_(this._delegate, e))
                        )
                    );
                }
                loadBundle(e) {
                    return (function T2(n, e) {
                        const t = Zr((n = _n(n, _r))),
                            r = new y2();
                        return (
                            (function f2(n, e, t, r) {
                                const i = (function (a, l) {
                                    let h;
                                    return (
                                        (h =
                                            "string" == typeof a
                                                ? new TextEncoder().encode(a)
                                                : a),
                                        (_ = (function (_, E) {
                                            if (_ instanceof Uint8Array)
                                                return f1(_, E);
                                            if (_ instanceof ArrayBuffer)
                                                return f1(new Uint8Array(_), E);
                                            if (_ instanceof ReadableStream)
                                                return _.getReader();
                                            throw new Error(
                                                "Source of `toByteStreamReader` has to be a ArrayBuffer or ReadableStream"
                                            );
                                        })(h)),
                                        new r2(_, l)
                                    );
                                    var _;
                                })(t, yE(e));
                                n.asyncQueue.enqueueAndForget(
                                    (0, y.Z)(function* () {
                                        !(function t2(n, e, t) {
                                            const r = rt(n);
                                            var i;
                                            ((i = (0, y.Z)(function* (a, l, h) {
                                                try {
                                                    const _ =
                                                        yield l.getMetadata();
                                                    if (
                                                        yield (function (R, F) {
                                                            const K = rt(R),
                                                                Ie = wi(
                                                                    F.createTime
                                                                );
                                                            return K.persistence
                                                                .runTransaction(
                                                                    "hasNewerBundle",
                                                                    "readonly",
                                                                    (Re) =>
                                                                        K.Ds.getBundleMetadata(
                                                                            Re,
                                                                            F.id
                                                                        )
                                                                )
                                                                .then(
                                                                    (Re) =>
                                                                        !!Re &&
                                                                        Re.createTime.compareTo(
                                                                            Ie
                                                                        ) >= 0
                                                                );
                                                        })(a.localStore, _)
                                                    )
                                                        return (
                                                            yield l.close(),
                                                            h._completeWith({
                                                                taskState:
                                                                    "Success",
                                                                documentsLoaded:
                                                                    (R = _)
                                                                        .totalDocuments,
                                                                bytesLoaded:
                                                                    R.totalBytes,
                                                                totalDocuments:
                                                                    R.totalDocuments,
                                                                totalBytes:
                                                                    R.totalBytes,
                                                            }),
                                                            Promise.resolve(
                                                                new Set()
                                                            )
                                                        );
                                                    h._updateProgress(n1(_));
                                                    const E = new kB(
                                                        _,
                                                        a.localStore,
                                                        l.wt
                                                    );
                                                    let D = yield l.fc();
                                                    for (; D; ) {
                                                        const R = yield E.Nu(D);
                                                        R &&
                                                            h._updateProgress(
                                                                R
                                                            ),
                                                            (D = yield l.fc());
                                                    }
                                                    const T =
                                                        yield E.complete();
                                                    return (
                                                        yield ec(
                                                            a,
                                                            T.Mu,
                                                            void 0
                                                        ),
                                                        yield (function (R, F) {
                                                            const K = rt(R);
                                                            return K.persistence.runTransaction(
                                                                "Save bundle",
                                                                "readwrite",
                                                                (Ie) =>
                                                                    K.Ds.saveBundleMetadata(
                                                                        Ie,
                                                                        F
                                                                    )
                                                            );
                                                        })(a.localStore, _),
                                                        h._completeWith(
                                                            T.progress
                                                        ),
                                                        Promise.resolve(T.Ou)
                                                    );
                                                } catch (_) {
                                                    return (
                                                        H0(
                                                            "SyncEngine",
                                                            `Loading bundle failed with ${_}`
                                                        ),
                                                        h._failWith(_),
                                                        Promise.resolve(
                                                            new Set()
                                                        )
                                                    );
                                                }
                                                var R;
                                            })),
                                            function (a, l, h) {
                                                return i.apply(this, arguments);
                                            })(r, e, t).then((i) => {
                                                r.sharedClientState.notifyBundleLoaded(
                                                    i
                                                );
                                            });
                                        })(yield TM(n), i, r);
                                    })
                                );
                            })(t, n._databaseId, e, r),
                            r
                        );
                    })(this._delegate, e);
                }
                namedQuery(e) {
                    return (function S2(n, e) {
                        return (function p2(n, e) {
                            return n.asyncQueue.enqueue(
                                (0, y.Z)(function* () {
                                    return (function (t, r) {
                                        const i = rt(t);
                                        return i.persistence.runTransaction(
                                            "Get named query",
                                            "readonly",
                                            (a) => i.Ds.getNamedQuery(a, r)
                                        );
                                    })(yield DM(n), e);
                                })
                            );
                        })(Zr((n = _n(n, _r))), e).then((t) =>
                            t ? new Yi(n, null, t.query) : null
                        );
                    })(this._delegate, e).then((t) =>
                        t ? new ws(this, t) : null
                    );
                }
            }
            class dT extends OM {
                constructor(e) {
                    super(), (this.firestore = e);
                }
                convertBytes(e) {
                    return new TE(new Vu(e));
                }
                convertReference(e) {
                    const t = this.convertDocumentKey(
                        e,
                        this.firestore._databaseId
                    );
                    return Qo.forKey(t, this.firestore, null);
                }
            }
            class nF {
                constructor(e, t) {
                    (this._firestore = e),
                        (this._delegate = t),
                        (this._userDataWriter = new dT(e));
                }
                get(e) {
                    const t = Mp(e);
                    return this._delegate
                        .get(t)
                        .then(
                            (r) =>
                                new SE(
                                    this._firestore,
                                    new nc(
                                        this._firestore._delegate,
                                        this._userDataWriter,
                                        r._key,
                                        r._document,
                                        r.metadata,
                                        t.converter
                                    )
                                )
                        );
                }
                set(e, t, r) {
                    const i = Mp(e);
                    return (
                        r
                            ? (LM("Transaction.set", r),
                              this._delegate.set(i, t, r))
                            : this._delegate.set(i, t),
                        this
                    );
                }
                update(e, t, r, ...i) {
                    const a = Mp(e);
                    return (
                        2 === arguments.length
                            ? this._delegate.update(a, t)
                            : this._delegate.update(a, t, r, ...i),
                        this
                    );
                }
                delete(e) {
                    const t = Mp(e);
                    return this._delegate.delete(t), this;
                }
            }
            class rF {
                constructor(e) {
                    this._delegate = e;
                }
                set(e, t, r) {
                    const i = Mp(e);
                    return (
                        r
                            ? (LM("WriteBatch.set", r),
                              this._delegate.set(i, t, r))
                            : this._delegate.set(i, t),
                        this
                    );
                }
                update(e, t, r, ...i) {
                    const a = Mp(e);
                    return (
                        2 === arguments.length
                            ? this._delegate.update(a, t)
                            : this._delegate.update(a, t, r, ...i),
                        this
                    );
                }
                delete(e) {
                    const t = Mp(e);
                    return this._delegate.delete(t), this;
                }
                commit() {
                    return this._delegate.commit();
                }
            }
            class Rp {
                constructor(e, t, r) {
                    (this._firestore = e),
                        (this._userDataWriter = t),
                        (this._delegate = r);
                }
                fromFirestore(e, t) {
                    const r = new bE(
                        this._firestore._delegate,
                        this._userDataWriter,
                        e._key,
                        e._document,
                        e.metadata,
                        null
                    );
                    return this._delegate.fromFirestore(
                        new AE(this._firestore, r),
                        t ?? {}
                    );
                }
                toFirestore(e, t) {
                    return t
                        ? this._delegate.toFirestore(e, t)
                        : this._delegate.toFirestore(e);
                }
                static getInstance(e, t) {
                    const r = Rp.INSTANCES;
                    let i = r.get(e);
                    i || ((i = new WeakMap()), r.set(e, i));
                    let a = i.get(t);
                    return a || ((a = new Rp(e, new dT(e), t)), i.set(t, a)), a;
                }
            }
            Rp.INSTANCES = new WeakMap();
            class Qo {
                constructor(e, t) {
                    (this.firestore = e),
                        (this._delegate = t),
                        (this._userDataWriter = new dT(e));
                }
                static forPath(e, t, r) {
                    if (e.length % 2 != 0)
                        throw new Ve(
                            "invalid-argument",
                            `Invalid document reference. Document references must have an even number of segments, but ${e.canonicalString()} has ${
                                e.length
                            }`
                        );
                    return new Qo(t, new rr(t._delegate, r, new Xe(e)));
                }
                static forKey(e, t, r) {
                    return new Qo(t, new rr(t._delegate, r, e));
                }
                get id() {
                    return this._delegate.id;
                }
                get parent() {
                    return new X_(this.firestore, this._delegate.parent);
                }
                get path() {
                    return this._delegate.path;
                }
                collection(e) {
                    try {
                        return new X_(this.firestore, T1(this._delegate, e));
                    } catch (t) {
                        throw vs(
                            t,
                            "collection()",
                            "DocumentReference.collection()"
                        );
                    }
                }
                isEqual(e) {
                    return (
                        (e = (0, C.m9)(e)) instanceof rr &&
                        S1(this._delegate, e)
                    );
                }
                set(e, t) {
                    t = LM("DocumentReference.set", t);
                    try {
                        return t
                            ? Z1(this._delegate, e, t)
                            : Z1(this._delegate, e);
                    } catch (r) {
                        throw vs(r, "setDoc()", "DocumentReference.set()");
                    }
                }
                update(e, t, ...r) {
                    try {
                        return 1 === arguments.length
                            ? Y1(this._delegate, e)
                            : Y1(this._delegate, e, t, ...r);
                    } catch (i) {
                        throw vs(
                            i,
                            "updateDoc()",
                            "DocumentReference.update()"
                        );
                    }
                }
                delete() {
                    return (function tj(n) {
                        return J_(_n(n.firestore, _r), [
                            new L_(n._key, Er.none()),
                        ]);
                    })(this._delegate);
                }
                onSnapshot(...e) {
                    const t = iF(e),
                        r = sF(
                            e,
                            (i) =>
                                new SE(
                                    this.firestore,
                                    new nc(
                                        this.firestore._delegate,
                                        this._userDataWriter,
                                        i._key,
                                        i._document,
                                        i.metadata,
                                        this._delegate.converter
                                    )
                                )
                        );
                    return Q1(this._delegate, t, r);
                }
                get(e) {
                    let t;
                    return (
                        (t =
                            "cache" === e?.source
                                ? (function Y2(n) {
                                      n = _n(n, rr);
                                      const e = _n(n.firestore, _r),
                                          t = Zr(e),
                                          r = new xp(e);
                                      return (function l2(n, e) {
                                          const t = new vi();
                                          return (
                                              n.asyncQueue.enqueueAndForget(
                                                  (0, y.Z)(function* () {
                                                      return ((r = (0, y.Z)(
                                                          function* (i, a, l) {
                                                              try {
                                                                  const h =
                                                                      yield (function (
                                                                          _,
                                                                          E
                                                                      ) {
                                                                          const D =
                                                                              rt(
                                                                                  _
                                                                              );
                                                                          return D.persistence.runTransaction(
                                                                              "read document",
                                                                              "readonly",
                                                                              (
                                                                                  T
                                                                              ) =>
                                                                                  D.localDocuments.getDocument(
                                                                                      T,
                                                                                      E
                                                                                  )
                                                                          );
                                                                      })(i, a);
                                                                  h.isFoundDocument()
                                                                      ? l.resolve(
                                                                            h
                                                                        )
                                                                      : h.isNoDocument()
                                                                      ? l.resolve(
                                                                            null
                                                                        )
                                                                      : l.reject(
                                                                            new Ve(
                                                                                me.UNAVAILABLE,
                                                                                "Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)"
                                                                            )
                                                                        );
                                                              } catch (h) {
                                                                  const _ = q_(
                                                                      h,
                                                                      `Failed to get document '${a} from cache`
                                                                  );
                                                                  l.reject(_);
                                                              }
                                                          }
                                                      )),
                                                      function (i, a, l) {
                                                          return r.apply(
                                                              this,
                                                              arguments
                                                          );
                                                      })(yield DM(n), e, t);
                                                      var r;
                                                  })
                                              ),
                                              t.promise
                                          );
                                      })(t, n._key).then(
                                          (i) =>
                                              new nc(
                                                  e,
                                                  r,
                                                  n._key,
                                                  i,
                                                  new Ap(
                                                      null !== i &&
                                                          i.hasLocalMutations,
                                                      !0
                                                  ),
                                                  n.converter
                                              )
                                      );
                                  })(this._delegate)
                                : "server" === e?.source
                                ? (function Q2(n) {
                                      n = _n(n, rr);
                                      const e = _n(n.firestore, _r);
                                      return y1(Zr(e), n._key, {
                                          source: "server",
                                      }).then((t) => FM(e, n, t));
                                  })(this._delegate)
                                : (function Z2(n) {
                                      n = _n(n, rr);
                                      const e = _n(n.firestore, _r);
                                      return y1(Zr(e), n._key).then((t) =>
                                          FM(e, n, t)
                                      );
                                  })(this._delegate)),
                        t.then(
                            (r) =>
                                new SE(
                                    this.firestore,
                                    new nc(
                                        this.firestore._delegate,
                                        this._userDataWriter,
                                        r._key,
                                        r._document,
                                        r.metadata,
                                        this._delegate.converter
                                    )
                                )
                        )
                    );
                }
                withConverter(e) {
                    return new Qo(
                        this.firestore,
                        this._delegate.withConverter(
                            e ? Rp.getInstance(this.firestore, e) : null
                        )
                    );
                }
            }
            function vs(n, e, t) {
                return (n.message = n.message.replace(e, t)), n;
            }
            function iF(n) {
                for (const e of n) if ("object" == typeof e && !VM(e)) return e;
                return {};
            }
            function sF(n, e) {
                var t, r;
                let i;
                return (
                    (i = VM(n[0])
                        ? n[0]
                        : VM(n[1])
                        ? n[1]
                        : "function" == typeof n[0]
                        ? { next: n[0], error: n[1], complete: n[2] }
                        : { next: n[1], error: n[2], complete: n[3] }),
                    {
                        next: (a) => {
                            i.next && i.next(e(a));
                        },
                        error:
                            null === (t = i.error) || void 0 === t
                                ? void 0
                                : t.bind(i),
                        complete:
                            null === (r = i.complete) || void 0 === r
                                ? void 0
                                : r.bind(i),
                    }
                );
            }
            class SE {
                constructor(e, t) {
                    (this._firestore = e), (this._delegate = t);
                }
                get ref() {
                    return new Qo(this._firestore, this._delegate.ref);
                }
                get id() {
                    return this._delegate.id;
                }
                get metadata() {
                    return this._delegate.metadata;
                }
                get exists() {
                    return this._delegate.exists();
                }
                data(e) {
                    return this._delegate.data(e);
                }
                get(e, t) {
                    return this._delegate.get(e, t);
                }
                isEqual(e) {
                    return U1(this._delegate, e._delegate);
                }
            }
            class AE extends SE {
                data(e) {
                    const t = this._delegate.data(e);
                    return (
                        (function gV(n, e) {
                            n || ft();
                        })(void 0 !== t),
                        t
                    );
                }
            }
            class ws {
                constructor(e, t) {
                    (this.firestore = e),
                        (this._delegate = t),
                        (this._userDataWriter = new dT(e));
                }
                where(e, t, r) {
                    try {
                        return new ws(
                            this.firestore,
                            oh(
                                this._delegate,
                                (function V2(n, e, t) {
                                    const r = e,
                                        i = lT("where", n);
                                    return new L2(i, r, t);
                                })(e, t, r)
                            )
                        );
                    } catch (i) {
                        throw vs(i, /(orderBy|where)\(\)/, "Query.$1()");
                    }
                }
                orderBy(e, t) {
                    try {
                        return new ws(
                            this.firestore,
                            oh(
                                this._delegate,
                                (function B2(n, e = "asc") {
                                    const t = e,
                                        r = lT("orderBy", n);
                                    return new U2(r, t);
                                })(e, t)
                            )
                        );
                    } catch (r) {
                        throw vs(r, /(orderBy|where)\(\)/, "Query.$1()");
                    }
                }
                limit(e) {
                    try {
                        return new ws(
                            this.firestore,
                            oh(
                                this._delegate,
                                (function j2(n) {
                                    return (
                                        b1("limit", n), new j1("limit", n, "F")
                                    );
                                })(e)
                            )
                        );
                    } catch (t) {
                        throw vs(t, "limit()", "Query.limit()");
                    }
                }
                limitToLast(e) {
                    try {
                        return new ws(
                            this.firestore,
                            oh(
                                this._delegate,
                                (function H2(n) {
                                    return (
                                        b1("limitToLast", n),
                                        new j1("limitToLast", n, "L")
                                    );
                                })(e)
                            )
                        );
                    } catch (t) {
                        throw vs(t, "limitToLast()", "Query.limitToLast()");
                    }
                }
                startAt(...e) {
                    try {
                        return new ws(
                            this.firestore,
                            oh(
                                this._delegate,
                                (function $2(...n) {
                                    return new H1("startAt", n, !0);
                                })(...e)
                            )
                        );
                    } catch (t) {
                        throw vs(t, "startAt()", "Query.startAt()");
                    }
                }
                startAfter(...e) {
                    try {
                        return new ws(
                            this.firestore,
                            oh(
                                this._delegate,
                                (function G2(...n) {
                                    return new H1("startAfter", n, !1);
                                })(...e)
                            )
                        );
                    } catch (t) {
                        throw vs(t, "startAfter()", "Query.startAfter()");
                    }
                }
                endBefore(...e) {
                    try {
                        return new ws(
                            this.firestore,
                            oh(
                                this._delegate,
                                (function W2(...n) {
                                    return new $1("endBefore", n, !1);
                                })(...e)
                            )
                        );
                    } catch (t) {
                        throw vs(t, "endBefore()", "Query.endBefore()");
                    }
                }
                endAt(...e) {
                    try {
                        return new ws(
                            this.firestore,
                            oh(
                                this._delegate,
                                (function z2(...n) {
                                    return new $1("endAt", n, !0);
                                })(...e)
                            )
                        );
                    } catch (t) {
                        throw vs(t, "endAt()", "Query.endAt()");
                    }
                }
                isEqual(e) {
                    return A1(this._delegate, e._delegate);
                }
                get(e) {
                    let t;
                    return (
                        (t =
                            "cache" === e?.source
                                ? (function X2(n) {
                                      n = _n(n, Yi);
                                      const e = _n(n.firestore, _r),
                                          t = Zr(e),
                                          r = new xp(e);
                                      return (function c2(n, e) {
                                          const t = new vi();
                                          return (
                                              n.asyncQueue.enqueueAndForget(
                                                  (0, y.Z)(function* () {
                                                      return ((r = (0, y.Z)(
                                                          function* (i, a, l) {
                                                              try {
                                                                  const h =
                                                                          yield KD(
                                                                              i,
                                                                              a,
                                                                              !0
                                                                          ),
                                                                      _ =
                                                                          new s1(
                                                                              a,
                                                                              h.ji
                                                                          ),
                                                                      E = _.Ku(
                                                                          h.documents
                                                                      ),
                                                                      D =
                                                                          _.applyChanges(
                                                                              E,
                                                                              !1
                                                                          );
                                                                  l.resolve(
                                                                      D.snapshot
                                                                  );
                                                              } catch (h) {
                                                                  const _ = q_(
                                                                      h,
                                                                      `Failed to execute query '${a} against cache`
                                                                  );
                                                                  l.reject(_);
                                                              }
                                                          }
                                                      )),
                                                      function (i, a, l) {
                                                          return r.apply(
                                                              this,
                                                              arguments
                                                          );
                                                      })(yield DM(n), e, t);
                                                      var r;
                                                  })
                                              ),
                                              t.promise
                                          );
                                      })(t, n._query).then(
                                          (i) => new sh(e, r, n, i)
                                      );
                                  })(this._delegate)
                                : "server" === e?.source
                                ? (function ej(n) {
                                      n = _n(n, Yi);
                                      const e = _n(n.firestore, _r),
                                          t = Zr(e),
                                          r = new xp(e);
                                      return v1(t, n._query, {
                                          source: "server",
                                      }).then((i) => new sh(e, r, n, i));
                                  })(this._delegate)
                                : (function J2(n) {
                                      n = _n(n, Yi);
                                      const e = _n(n.firestore, _r),
                                          t = Zr(e),
                                          r = new xp(e);
                                      return (
                                          B1(n._query),
                                          v1(t, n._query).then(
                                              (i) => new sh(e, r, n, i)
                                          )
                                      );
                                  })(this._delegate)),
                        t.then(
                            (r) =>
                                new UM(
                                    this.firestore,
                                    new sh(
                                        this.firestore._delegate,
                                        this._userDataWriter,
                                        this._delegate,
                                        r._snapshot
                                    )
                                )
                        )
                    );
                }
                onSnapshot(...e) {
                    const t = iF(e),
                        r = sF(
                            e,
                            (i) =>
                                new UM(
                                    this.firestore,
                                    new sh(
                                        this.firestore._delegate,
                                        this._userDataWriter,
                                        this._delegate,
                                        i._snapshot
                                    )
                                )
                        );
                    return Q1(this._delegate, t, r);
                }
                withConverter(e) {
                    return new ws(
                        this.firestore,
                        this._delegate.withConverter(
                            e ? Rp.getInstance(this.firestore, e) : null
                        )
                    );
                }
            }
            class mj {
                constructor(e, t) {
                    (this._firestore = e), (this._delegate = t);
                }
                get type() {
                    return this._delegate.type;
                }
                get doc() {
                    return new AE(this._firestore, this._delegate.doc);
                }
                get oldIndex() {
                    return this._delegate.oldIndex;
                }
                get newIndex() {
                    return this._delegate.newIndex;
                }
            }
            class UM {
                constructor(e, t) {
                    (this._firestore = e), (this._delegate = t);
                }
                get query() {
                    return new ws(this._firestore, this._delegate.query);
                }
                get metadata() {
                    return this._delegate.metadata;
                }
                get size() {
                    return this._delegate.size;
                }
                get empty() {
                    return this._delegate.empty;
                }
                get docs() {
                    return this._delegate.docs.map(
                        (e) => new AE(this._firestore, e)
                    );
                }
                docChanges(e) {
                    return this._delegate
                        .docChanges(e)
                        .map((t) => new mj(this._firestore, t));
                }
                forEach(e, t) {
                    this._delegate.forEach((r) => {
                        e.call(t, new AE(this._firestore, r));
                    });
                }
                isEqual(e) {
                    return U1(this._delegate, e._delegate);
                }
            }
            class X_ extends ws {
                constructor(e, t) {
                    super(e, t), (this.firestore = e), (this._delegate = t);
                }
                get id() {
                    return this._delegate.id;
                }
                get path() {
                    return this._delegate.path;
                }
                get parent() {
                    const e = this._delegate.parent;
                    return e ? new Qo(this.firestore, e) : null;
                }
                doc(e) {
                    try {
                        return new Qo(
                            this.firestore,
                            void 0 === e
                                ? rT(this._delegate)
                                : rT(this._delegate, e)
                        );
                    } catch (t) {
                        throw vs(t, "doc()", "CollectionReference.doc()");
                    }
                }
                add(e) {
                    return (function nj(n, e) {
                        const t = _n(n.firestore, _r),
                            r = rT(n),
                            i = cT(n.converter, e);
                        return J_(t, [
                            oT(
                                Tp(n.firestore),
                                "addDoc",
                                r._key,
                                i,
                                null !== n.converter,
                                {}
                            ).toMutation(r._key, Er.exists(!1)),
                        ]).then(() => r);
                    })(this._delegate, e).then(
                        (t) => new Qo(this.firestore, t)
                    );
                }
                isEqual(e) {
                    return S1(this._delegate, e._delegate);
                }
                withConverter(e) {
                    return new X_(
                        this.firestore,
                        this._delegate.withConverter(
                            e ? Rp.getInstance(this.firestore, e) : null
                        )
                    );
                }
            }
            function Mp(n) {
                return _n(n, rr);
            }
            class BM {
                constructor(...e) {
                    this._delegate = new tc(...e);
                }
                static documentId() {
                    return new BM(Br.keyField().canonicalString());
                }
                isEqual(e) {
                    return (
                        (e = (0, C.m9)(e)) instanceof tc &&
                        this._delegate._internalPath.isEqual(e._internalPath)
                    );
                }
            }
            class Np {
                constructor(e) {
                    this._delegate = e;
                }
                static serverTimestamp() {
                    const e = (function aj() {
                        return new RM("serverTimestamp");
                    })();
                    return (
                        (e._methodName = "FieldValue.serverTimestamp"),
                        new Np(e)
                    );
                }
                static delete() {
                    const e = (function oj() {
                        return new IE("deleteField");
                    })();
                    return (e._methodName = "FieldValue.delete"), new Np(e);
                }
                static arrayUnion(...e) {
                    const t = (function uj(...n) {
                        return new M2("arrayUnion", n);
                    })(...e);
                    return (t._methodName = "FieldValue.arrayUnion"), new Np(t);
                }
                static arrayRemove(...e) {
                    const t = (function lj(...n) {
                        return new N2("arrayRemove", n);
                    })(...e);
                    return (
                        (t._methodName = "FieldValue.arrayRemove"), new Np(t)
                    );
                }
                static increment(e) {
                    const t = (function cj(n) {
                        return new P2("increment", n);
                    })(e);
                    return (t._methodName = "FieldValue.increment"), new Np(t);
                }
                isEqual(e) {
                    return this._delegate.isEqual(e._delegate);
                }
            }
            const _j = {
                Firestore: tF,
                GeoPoint: iT,
                Timestamp: mr,
                Blob: TE,
                Transaction: nF,
                WriteBatch: rF,
                DocumentReference: Qo,
                DocumentSnapshot: SE,
                Query: ws,
                QueryDocumentSnapshot: AE,
                QuerySnapshot: UM,
                CollectionReference: X_,
                FieldPath: BM,
                FieldValue: Np,
                setLogLevel: function gj(n) {
                    !(function pV(n) {
                        zd.setLogLevel(n);
                    })(n);
                },
                CACHE_SIZE_UNLIMITED: -1,
            };
            function oF(n, e) {
                return (function wj(n, e = zh.z) {
                    return new rs.y((t) => {
                        let r;
                        return (
                            null != e
                                ? e.schedule(() => {
                                      r = n.onSnapshot(
                                          { includeMetadataChanges: !0 },
                                          t
                                      );
                                  })
                                : (r = n.onSnapshot(
                                      { includeMetadataChanges: !0 },
                                      t
                                  )),
                            () => {
                                r?.();
                            }
                        );
                    });
                })(n, e);
            }
            function jM(n, e) {
                return oF(n, e).pipe(
                    (0, Mt.U)((t) => ({ payload: t, type: "query" }))
                );
            }
            function hT(n, e) {
                return jM(n, e).pipe(
                    xa(void 0),
                    e0(),
                    (0, Mt.U)(([t, r]) => {
                        const i = r.payload.docChanges(),
                            a = i.map((l) => ({ type: l.type, payload: l }));
                        return (
                            t &&
                                JSON.stringify(t.payload.metadata) !==
                                    JSON.stringify(r.payload.metadata) &&
                                r.payload.docs.forEach((l, h) => {
                                    const _ = i.find((D) =>
                                            D.doc.ref.isEqual(l.ref)
                                        ),
                                        E = t?.payload.docs.find((D) =>
                                            D.ref.isEqual(l.ref)
                                        );
                                    (_ &&
                                        JSON.stringify(_.doc.metadata) ===
                                            JSON.stringify(l.metadata)) ||
                                        (!_ &&
                                            E &&
                                            JSON.stringify(E.metadata) ===
                                                JSON.stringify(l.metadata)) ||
                                        a.push({
                                            type: "modified",
                                            payload: {
                                                oldIndex: h,
                                                newIndex: h,
                                                type: "modified",
                                                doc: l,
                                            },
                                        });
                                }),
                            a
                        );
                    })
                );
            }
            function aF(n, e, t) {
                return hT(n, t).pipe(
                    ni(
                        (r, i) =>
                            (function Ij(n, e, t) {
                                return (
                                    e.forEach((r) => {
                                        t.indexOf(r.type) > -1 &&
                                            (n = (function Cj(n, e) {
                                                switch (e.type) {
                                                    case "added":
                                                        if (
                                                            !n[e.newIndex] ||
                                                            !n[
                                                                e.newIndex
                                                            ].doc.ref.isEqual(
                                                                e.doc.ref
                                                            )
                                                        )
                                                            return HM(
                                                                n,
                                                                e.newIndex,
                                                                0,
                                                                e
                                                            );
                                                        break;
                                                    case "modified":
                                                        if (
                                                            null ==
                                                                n[e.oldIndex] ||
                                                            n[
                                                                e.oldIndex
                                                            ].doc.ref.isEqual(
                                                                e.doc.ref
                                                            )
                                                        ) {
                                                            if (
                                                                e.oldIndex !==
                                                                e.newIndex
                                                            ) {
                                                                const t =
                                                                    n.slice();
                                                                return (
                                                                    t.splice(
                                                                        e.oldIndex,
                                                                        1
                                                                    ),
                                                                    t.splice(
                                                                        e.newIndex,
                                                                        0,
                                                                        e
                                                                    ),
                                                                    t
                                                                );
                                                            }
                                                            return HM(
                                                                n,
                                                                e.newIndex,
                                                                1,
                                                                e
                                                            );
                                                        }
                                                        break;
                                                    case "removed":
                                                        if (
                                                            n[e.oldIndex] &&
                                                            n[
                                                                e.oldIndex
                                                            ].doc.ref.isEqual(
                                                                e.doc.ref
                                                            )
                                                        )
                                                            return HM(
                                                                n,
                                                                e.oldIndex,
                                                                1
                                                            );
                                                }
                                                return n;
                                            })(n, r));
                                    }),
                                    n
                                );
                            })(
                                r,
                                i.map((a) => a.payload),
                                e
                            ),
                        []
                    ),
                    qh(),
                    (0, Mt.U)((r) =>
                        r.map((i) => ({ type: i.type, payload: i }))
                    )
                );
            }
            function HM(n, e, t, ...r) {
                const i = n.slice();
                return i.splice(e, t, ...r), i;
            }
            function uF(n) {
                return (
                    (!n || 0 === n.length) &&
                        (n = ["added", "removed", "modified"]),
                    n
                );
            }
            !(function vj(n) {
                (function yj(n, e) {
                    n.INTERNAL.registerComponent(
                        new m.wA(
                            "firestore-compat",
                            (t) => {
                                const r = t
                                        .getProvider("app-compat")
                                        .getImmediate(),
                                    i = t
                                        .getProvider("firestore")
                                        .getImmediate();
                                return e(r, i);
                            },
                            "PUBLIC"
                        ).setServiceProps(Object.assign({}, _j))
                    );
                })(n, (e, t) => new tF(e, t, new pj())),
                    n.registerVersion("@firebase/firestore-compat", "0.1.22");
            })(f.Z);
            class lF {
                constructor(e, t, r) {
                    (this.ref = e), (this.query = t), (this.afs = r);
                }
                stateChanges(e) {
                    let t = hT(this.query, this.afs.schedulers.outsideAngular);
                    return (
                        e &&
                            e.length > 0 &&
                            (t = t.pipe(
                                (0, Mt.U)((r) =>
                                    r.filter((i) => e.indexOf(i.type) > -1)
                                )
                            )),
                        t.pipe(
                            xa(void 0),
                            e0(),
                            Ni(([r, i]) => i.length > 0 || !r),
                            (0, Mt.U)(([r, i]) => i),
                            hn.iC
                        )
                    );
                }
                auditTrail(e) {
                    return this.stateChanges(e).pipe(
                        ni((t, r) => [...t, ...r], [])
                    );
                }
                snapshotChanges(e) {
                    const t = uF(e);
                    return aF(
                        this.query,
                        t,
                        this.afs.schedulers.outsideAngular
                    ).pipe(hn.iC);
                }
                valueChanges(e = {}) {
                    return jM(
                        this.query,
                        this.afs.schedulers.outsideAngular
                    ).pipe(
                        (0, Mt.U)((t) =>
                            t.payload.docs.map((r) =>
                                e.idField
                                    ? Object.assign(
                                          Object.assign({}, r.data()),
                                          { [e.idField]: r.id }
                                      )
                                    : r.data()
                            )
                        ),
                        hn.iC
                    );
                }
                get(e) {
                    return (0, dn.D)(this.query.get(e)).pipe(hn.iC);
                }
                add(e) {
                    return this.ref.add(e);
                }
                doc(e) {
                    return new cF(this.ref.doc(e), this.afs);
                }
            }
            class cF {
                constructor(e, t) {
                    (this.ref = e), (this.afs = t);
                }
                set(e, t) {
                    return this.ref.set(e, t);
                }
                update(e) {
                    return this.ref.update(e);
                }
                delete() {
                    return this.ref.delete();
                }
                collection(e, t) {
                    const r = this.ref.collection(e),
                        { ref: i, query: a } = fF(r, t);
                    return new lF(i, a, this.afs);
                }
                snapshotChanges() {
                    return (function Ej(n, e) {
                        return oF(n, e).pipe(
                            xa(void 0),
                            e0(),
                            (0, Mt.U)(([t, r]) =>
                                r.exists
                                    ? t?.exists
                                        ? { payload: r, type: "modified" }
                                        : { payload: r, type: "added" }
                                    : { payload: r, type: "removed" }
                            )
                        );
                    })(this.ref, this.afs.schedulers.outsideAngular).pipe(
                        hn.iC
                    );
                }
                valueChanges(e = {}) {
                    return this.snapshotChanges().pipe(
                        (0, Mt.U)(({ payload: t }) =>
                            e.idField
                                ? Object.assign(Object.assign({}, t.data()), {
                                      [e.idField]: t.id,
                                  })
                                : t.data()
                        )
                    );
                }
                get(e) {
                    return (0, dn.D)(this.ref.get(e)).pipe(hn.iC);
                }
            }
            class bj {
                constructor(e, t) {
                    (this.query = e), (this.afs = t);
                }
                stateChanges(e) {
                    return e && 0 !== e.length
                        ? hT(
                              this.query,
                              this.afs.schedulers.outsideAngular
                          ).pipe(
                              (0, Mt.U)((t) =>
                                  t.filter((r) => e.indexOf(r.type) > -1)
                              ),
                              Ni((t) => t.length > 0),
                              hn.iC
                          )
                        : hT(
                              this.query,
                              this.afs.schedulers.outsideAngular
                          ).pipe(hn.iC);
                }
                auditTrail(e) {
                    return this.stateChanges(e).pipe(
                        ni((t, r) => [...t, ...r], [])
                    );
                }
                snapshotChanges(e) {
                    const t = uF(e);
                    return aF(
                        this.query,
                        t,
                        this.afs.schedulers.outsideAngular
                    ).pipe(hn.iC);
                }
                valueChanges(e = {}) {
                    return jM(
                        this.query,
                        this.afs.schedulers.outsideAngular
                    ).pipe(
                        (0, Mt.U)((r) =>
                            r.payload.docs.map((i) =>
                                e.idField
                                    ? Object.assign(
                                          { [e.idField]: i.id },
                                          i.data()
                                      )
                                    : i.data()
                            )
                        ),
                        hn.iC
                    );
                }
                get(e) {
                    return (0, dn.D)(this.query.get(e)).pipe(hn.iC);
                }
            }
            const dF = new p.OlP("angularfire2.enableFirestorePersistence"),
                hF = new p.OlP("angularfire2.firestore.persistenceSettings"),
                Dj = new p.OlP("angularfire2.firestore.settings"),
                Tj = new p.OlP("angularfire2.firestore.use-emulator");
            function fF(n, e = (t) => t) {
                return { query: e(n), ref: n };
            }
            let $M = (() => {
                    class n {
                        constructor(
                            t,
                            r,
                            i,
                            a,
                            l,
                            h,
                            _,
                            E,
                            D,
                            T,
                            R,
                            F,
                            K,
                            Ie,
                            Re,
                            mt,
                            _t
                        ) {
                            this.schedulers = _;
                            const yt = (0, pr.on)(t, h, r),
                                gt = D;
                            T && Nd(yt, h, R, K, Ie, Re, F, mt),
                                ([this.firestore, this.persistenceEnabled$] =
                                    (0, pr.cc)(
                                        `${yt.name}.firestore`,
                                        "AngularFirestore",
                                        yt.name,
                                        () => {
                                            const $t = h.runOutsideAngular(() =>
                                                yt.firestore()
                                            );
                                            if (
                                                (a && $t.settings(a),
                                                gt && $t.useEmulator(...gt),
                                                i && !hh(l))
                                            ) {
                                                const un = () => {
                                                    try {
                                                        return (0, dn.D)(
                                                            $t
                                                                .enablePersistence(
                                                                    E || void 0
                                                                )
                                                                .then(
                                                                    () => !0,
                                                                    () => !1
                                                                )
                                                        );
                                                    } catch (Yr) {
                                                        return (
                                                            typeof console <
                                                                "u" &&
                                                                console.warn(
                                                                    Yr
                                                                ),
                                                            bt(!1)
                                                        );
                                                    }
                                                };
                                                return [
                                                    $t,
                                                    h.runOutsideAngular(un),
                                                ];
                                            }
                                            return [$t, bt(!1)];
                                        },
                                        [a, gt, i]
                                    ));
                        }
                        collection(t, r) {
                            let i;
                            i =
                                "string" == typeof t
                                    ? this.firestore.collection(t)
                                    : t;
                            const { ref: a, query: l } = fF(i, r),
                                h = this.schedulers.ngZone.run(() => a);
                            return new lF(h, l, this);
                        }
                        collectionGroup(t, r) {
                            const i = r || ((l) => l),
                                a = this.firestore.collectionGroup(t);
                            return new bj(i(a), this);
                        }
                        doc(t) {
                            let r;
                            r =
                                "string" == typeof t
                                    ? this.firestore.doc(t)
                                    : t;
                            const i = this.schedulers.ngZone.run(() => r);
                            return new cF(i, this);
                        }
                        createId() {
                            return this.firestore.collection("_").doc().id;
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(
                                p.LFG(pr.Dh),
                                p.LFG(pr.xv, 8),
                                p.LFG(dF, 8),
                                p.LFG(Dj, 8),
                                p.LFG(p.Lbi),
                                p.LFG(p.R0b),
                                p.LFG(hn.HU),
                                p.LFG(hF, 8),
                                p.LFG(Tj, 8),
                                p.LFG(Pd, 8),
                                p.LFG(qf, 8),
                                p.LFG($l, 8),
                                p.LFG(qw, 8),
                                p.LFG(Kw, 8),
                                p.LFG(Zw, 8),
                                p.LFG(Md, 8),
                                p.LFG(Rd, 8)
                            );
                        }),
                        (n.ɵprov = p.Yz7({
                            token: n,
                            factory: n.ɵfac,
                            providedIn: "any",
                        })),
                        n
                    );
                })(),
                Sj = (() => {
                    class n {
                        constructor() {
                            ms.Z.registerVersion(
                                "angularfire",
                                hn.q4.full,
                                "fst-compat"
                            );
                        }
                        static enablePersistence(t) {
                            return {
                                ngModule: n,
                                providers: [
                                    { provide: dF, useValue: !0 },
                                    { provide: hF, useValue: t },
                                ],
                            };
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)();
                        }),
                        (n.ɵmod = p.oAB({ type: n })),
                        (n.ɵinj = p.cJS({ providers: [$M] })),
                        n
                    );
                })();
            class ka extends Cu.x {
                constructor(e) {
                    super(), (this._value = e);
                }
                get value() {
                    return this.getValue();
                }
                _subscribe(e) {
                    const t = super._subscribe(e);
                    return !t.closed && e.next(this._value), t;
                }
                getValue() {
                    const { hasError: e, thrownError: t, _value: r } = this;
                    if (e) throw t;
                    return this._throwIfClosed(), r;
                }
                next(e) {
                    super.next((this._value = e));
                }
            }
            var Aj = P(9672);
            function pF(...n) {
                const e = (0, Ao.yG)(n),
                    t = (0, Ao.jO)(n),
                    { args: r, keys: i } = (function Ga(n) {
                        if (1 === n.length) {
                            const e = n[0];
                            if (An(e)) return { args: e, keys: null };
                            if (
                                (function Tc(n) {
                                    return (
                                        n &&
                                        "object" == typeof n &&
                                        Dy(n) === da
                                    );
                                })(e)
                            ) {
                                const t = vh(e);
                                return { args: t.map((r) => e[r]), keys: t };
                            }
                        }
                        return { args: n, keys: null };
                    })(n);
                if (0 === r.length) return (0, dn.D)([], e);
                const a = new rs.y(
                    (function xj(n, e, t = ro.y) {
                        return (r) => {
                            gF(
                                e,
                                () => {
                                    const { length: i } = n,
                                        a = new Array(i);
                                    let l = i,
                                        h = i;
                                    for (let _ = 0; _ < i; _++)
                                        gF(
                                            e,
                                            () => {
                                                const E = (0, dn.D)(n[_], e);
                                                let D = !1;
                                                E.subscribe(
                                                    (0, dr.x)(
                                                        r,
                                                        (T) => {
                                                            (a[_] = T),
                                                                D ||
                                                                    ((D = !0),
                                                                    h--),
                                                                h ||
                                                                    r.next(
                                                                        t(
                                                                            a.slice()
                                                                        )
                                                                    );
                                                        },
                                                        () => {
                                                            --l || r.complete();
                                                        }
                                                    )
                                                );
                                            },
                                            r
                                        );
                                },
                                r
                            );
                        };
                    })(
                        r,
                        e,
                        i
                            ? (l) =>
                                  (function nl(n, e) {
                                      return n.reduce(
                                          (t, r, i) => ((t[r] = e[i]), t),
                                          {}
                                      );
                                  })(i, l)
                            : ro.y
                    )
                );
                return t
                    ? a.pipe(
                          (function tl(n) {
                              return (0, Mt.U)((e) =>
                                  (function Wa(n, e) {
                                      return wh(e) ? n(...e) : n(e);
                                  })(n, e)
                              );
                          })(t)
                      )
                    : a;
            }
            function gF(n, e, t) {
                n ? (0, Aj.f)(t, n, e) : e();
            }
            function xE(n, e) {
                const t = (0, Rw.m)(n) ? n : () => n,
                    r = (i) => i.error(t());
                return new rs.y(e ? (i) => e.schedule(r, 0, i) : r);
            }
            function mF(n) {
                return new rs.y((e) => {
                    (0, So.Xf)(n()).subscribe(e);
                });
            }
            var _F = P(727);
            function GM() {
                return (0, hr.e)((n, e) => {
                    let t = null;
                    n._refCount++;
                    const r = (0, dr.x)(e, void 0, void 0, void 0, () => {
                        if (!n || n._refCount <= 0 || 0 < --n._refCount)
                            return void (t = null);
                        const i = n._connection,
                            a = t;
                        (t = null),
                            i && (!a || i === a) && i.unsubscribe(),
                            e.unsubscribe();
                    });
                    n.subscribe(r), r.closed || (t = n.connect());
                });
            }
            class yF extends rs.y {
                constructor(e, t) {
                    super(),
                        (this.source = e),
                        (this.subjectFactory = t),
                        (this._subject = null),
                        (this._refCount = 0),
                        (this._connection = null),
                        (0, hr.A)(e) && (this.lift = e.lift);
                }
                _subscribe(e) {
                    return this.getSubject().subscribe(e);
                }
                getSubject() {
                    const e = this._subject;
                    return (
                        (!e || e.isStopped) &&
                            (this._subject = this.subjectFactory()),
                        this._subject
                    );
                }
                _teardown() {
                    this._refCount = 0;
                    const { _connection: e } = this;
                    (this._subject = this._connection = null), e?.unsubscribe();
                }
                connect() {
                    let e = this._connection;
                    if (!e) {
                        e = this._connection = new _F.w0();
                        const t = this.getSubject();
                        e.add(
                            this.source.subscribe(
                                (0, dr.x)(
                                    t,
                                    void 0,
                                    () => {
                                        this._teardown(), t.complete();
                                    },
                                    (r) => {
                                        this._teardown(), t.error(r);
                                    },
                                    () => this._teardown()
                                )
                            )
                        ),
                            e.closed &&
                                ((this._connection = null), (e = _F.w0.EMPTY));
                    }
                    return e;
                }
                refCount() {
                    return GM()(this);
                }
            }
            function Pp(n) {
                return (0, hr.e)((e, t) => {
                    let a,
                        r = null,
                        i = !1;
                    (r = e.subscribe(
                        (0, dr.x)(t, void 0, void 0, (l) => {
                            (a = (0, So.Xf)(n(l, Pp(n)(e)))),
                                r
                                    ? (r.unsubscribe(),
                                      (r = null),
                                      a.subscribe(t))
                                    : (i = !0);
                        })
                    )),
                        i && (r.unsubscribe(), (r = null), a.subscribe(t));
                });
            }
            var Es = P(5577);
            function RE(n, e) {
                return (0, Rw.m)(e) ? (0, Es.z)(n, e, 1) : (0, Es.z)(n, 1);
            }
            function WM(n) {
                return n <= 0
                    ? () => Ul.E
                    : (0, hr.e)((e, t) => {
                          let r = [];
                          e.subscribe(
                              (0, dr.x)(
                                  t,
                                  (i) => {
                                      r.push(i), n < r.length && r.shift();
                                  },
                                  () => {
                                      for (const i of r) t.next(i);
                                      t.complete();
                                  },
                                  void 0,
                                  () => {
                                      r = null;
                                  }
                              )
                          );
                      });
            }
            var Qi = P(8505);
            function zM(n) {
                return (0, hr.e)((e, t) => {
                    try {
                        e.subscribe(t);
                    } finally {
                        t.add(n);
                    }
                });
            }
            class rc {
                constructor(e, t) {
                    (this.id = e), (this.url = t);
                }
            }
            class qM extends rc {
                constructor(e, t, r = "imperative", i = null) {
                    super(e, t),
                        (this.type = 0),
                        (this.navigationTrigger = r),
                        (this.restoredState = i);
                }
                toString() {
                    return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
                }
            }
            class kp extends rc {
                constructor(e, t, r) {
                    super(e, t), (this.urlAfterRedirects = r), (this.type = 1);
                }
                toString() {
                    return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
                }
            }
            class fT extends rc {
                constructor(e, t, r) {
                    super(e, t), (this.reason = r), (this.type = 2);
                }
                toString() {
                    return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
                }
            }
            class vF extends rc {
                constructor(e, t, r) {
                    super(e, t), (this.error = r), (this.type = 3);
                }
                toString() {
                    return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
                }
            }
            class Nj extends rc {
                constructor(e, t, r, i) {
                    super(e, t),
                        (this.urlAfterRedirects = r),
                        (this.state = i),
                        (this.type = 4);
                }
                toString() {
                    return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class Pj extends rc {
                constructor(e, t, r, i) {
                    super(e, t),
                        (this.urlAfterRedirects = r),
                        (this.state = i),
                        (this.type = 7);
                }
                toString() {
                    return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class kj extends rc {
                constructor(e, t, r, i, a) {
                    super(e, t),
                        (this.urlAfterRedirects = r),
                        (this.state = i),
                        (this.shouldActivate = a),
                        (this.type = 8);
                }
                toString() {
                    return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
                }
            }
            class Oj extends rc {
                constructor(e, t, r, i) {
                    super(e, t),
                        (this.urlAfterRedirects = r),
                        (this.state = i),
                        (this.type = 5);
                }
                toString() {
                    return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class Fj extends rc {
                constructor(e, t, r, i) {
                    super(e, t),
                        (this.urlAfterRedirects = r),
                        (this.state = i),
                        (this.type = 6);
                }
                toString() {
                    return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class Lj {
                constructor(e) {
                    (this.route = e), (this.type = 9);
                }
                toString() {
                    return `RouteConfigLoadStart(path: ${this.route.path})`;
                }
            }
            class Vj {
                constructor(e) {
                    (this.route = e), (this.type = 10);
                }
                toString() {
                    return `RouteConfigLoadEnd(path: ${this.route.path})`;
                }
            }
            class Uj {
                constructor(e) {
                    (this.snapshot = e), (this.type = 11);
                }
                toString() {
                    return `ChildActivationStart(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ""
                    }')`;
                }
            }
            class Bj {
                constructor(e) {
                    (this.snapshot = e), (this.type = 12);
                }
                toString() {
                    return `ChildActivationEnd(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ""
                    }')`;
                }
            }
            class jj {
                constructor(e) {
                    (this.snapshot = e), (this.type = 13);
                }
                toString() {
                    return `ActivationStart(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ""
                    }')`;
                }
            }
            class Hj {
                constructor(e) {
                    (this.snapshot = e), (this.type = 14);
                }
                toString() {
                    return `ActivationEnd(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ""
                    }')`;
                }
            }
            class wF {
                constructor(e, t, r) {
                    (this.routerEvent = e),
                        (this.position = t),
                        (this.anchor = r),
                        (this.type = 15);
                }
                toString() {
                    return `Scroll(anchor: '${this.anchor}', position: '${
                        this.position
                            ? `${this.position[0]}, ${this.position[1]}`
                            : null
                    }')`;
                }
            }
            const on = "primary";
            class Gj {
                constructor(e) {
                    this.params = e || {};
                }
                has(e) {
                    return Object.prototype.hasOwnProperty.call(this.params, e);
                }
                get(e) {
                    if (this.has(e)) {
                        const t = this.params[e];
                        return Array.isArray(t) ? t[0] : t;
                    }
                    return null;
                }
                getAll(e) {
                    if (this.has(e)) {
                        const t = this.params[e];
                        return Array.isArray(t) ? t : [t];
                    }
                    return [];
                }
                get keys() {
                    return Object.keys(this.params);
                }
            }
            function ey(n) {
                return new Gj(n);
            }
            const KM = "Redirecting to ",
                EF = "ngNavigationCancelingError";
            function ZM(n) {
                const e = Error("NavigationCancelingError: " + (n || ""));
                return (e[EF] = !0), e;
            }
            function zj(n, e, t) {
                const r = t.path.split("/");
                if (
                    r.length > n.length ||
                    ("full" === t.pathMatch &&
                        (e.hasChildren() || r.length < n.length))
                )
                    return null;
                const i = {};
                for (let a = 0; a < r.length; a++) {
                    const l = r[a],
                        h = n[a];
                    if (l.startsWith(":")) i[l.substring(1)] = h;
                    else if (l !== h.path) return null;
                }
                return { consumed: n.slice(0, r.length), posParams: i };
            }
            function Uu(n, e) {
                const t = n ? Object.keys(n) : void 0,
                    r = e ? Object.keys(e) : void 0;
                if (!t || !r || t.length != r.length) return !1;
                let i;
                for (let a = 0; a < t.length; a++)
                    if (((i = t[a]), !IF(n[i], e[i]))) return !1;
                return !0;
            }
            function IF(n, e) {
                if (Array.isArray(n) && Array.isArray(e)) {
                    if (n.length !== e.length) return !1;
                    const t = [...n].sort(),
                        r = [...e].sort();
                    return t.every((i, a) => r[a] === i);
                }
                return n === e;
            }
            function CF(n) {
                return Array.prototype.concat.apply([], n);
            }
            function bF(n) {
                return n.length > 0 ? n[n.length - 1] : null;
            }
            function Bi(n, e) {
                for (const t in n) n.hasOwnProperty(t) && e(n[t], t);
            }
            function uh(n) {
                return (0, p.CqO)(n)
                    ? n
                    : (0, p.QGY)(n)
                    ? (0, dn.D)(Promise.resolve(n))
                    : bt(n);
            }
            const Zj = {
                    exact: function SF(n, e, t) {
                        if (
                            !Fp(n.segments, e.segments) ||
                            !pT(n.segments, e.segments, t) ||
                            n.numberOfChildren !== e.numberOfChildren
                        )
                            return !1;
                        for (const r in e.children)
                            if (
                                !n.children[r] ||
                                !SF(n.children[r], e.children[r], t)
                            )
                                return !1;
                        return !0;
                    },
                    subset: AF,
                },
                DF = {
                    exact: function Yj(n, e) {
                        return Uu(n, e);
                    },
                    subset: function Qj(n, e) {
                        return (
                            Object.keys(e).length <= Object.keys(n).length &&
                            Object.keys(e).every((t) => IF(n[t], e[t]))
                        );
                    },
                    ignored: () => !0,
                };
            function TF(n, e, t) {
                return (
                    Zj[t.paths](n.root, e.root, t.matrixParams) &&
                    DF[t.queryParams](n.queryParams, e.queryParams) &&
                    !("exact" === t.fragment && n.fragment !== e.fragment)
                );
            }
            function AF(n, e, t) {
                return xF(n, e, e.segments, t);
            }
            function xF(n, e, t, r) {
                if (n.segments.length > t.length) {
                    const i = n.segments.slice(0, t.length);
                    return !(!Fp(i, t) || e.hasChildren() || !pT(i, t, r));
                }
                if (n.segments.length === t.length) {
                    if (!Fp(n.segments, t) || !pT(n.segments, t, r)) return !1;
                    for (const i in e.children)
                        if (
                            !n.children[i] ||
                            !AF(n.children[i], e.children[i], r)
                        )
                            return !1;
                    return !0;
                }
                {
                    const i = t.slice(0, n.segments.length),
                        a = t.slice(n.segments.length);
                    return (
                        !!(
                            Fp(n.segments, i) &&
                            pT(n.segments, i, r) &&
                            n.children[on]
                        ) && xF(n.children[on], e, a, r)
                    );
                }
            }
            function pT(n, e, t) {
                return e.every((r, i) => DF[t](n[i].parameters, r.parameters));
            }
            class Op {
                constructor(e, t, r) {
                    (this.root = e),
                        (this.queryParams = t),
                        (this.fragment = r);
                }
                get queryParamMap() {
                    return (
                        this._queryParamMap ||
                            (this._queryParamMap = ey(this.queryParams)),
                        this._queryParamMap
                    );
                }
                toString() {
                    return eH.serialize(this);
                }
            }
            class pn {
                constructor(e, t) {
                    (this.segments = e),
                        (this.children = t),
                        (this.parent = null),
                        Bi(t, (r, i) => (r.parent = this));
                }
                hasChildren() {
                    return this.numberOfChildren > 0;
                }
                get numberOfChildren() {
                    return Object.keys(this.children).length;
                }
                toString() {
                    return gT(this);
                }
            }
            class ME {
                constructor(e, t) {
                    (this.path = e), (this.parameters = t);
                }
                get parameterMap() {
                    return (
                        this._parameterMap ||
                            (this._parameterMap = ey(this.parameters)),
                        this._parameterMap
                    );
                }
                toString() {
                    return kF(this);
                }
            }
            function Fp(n, e) {
                return (
                    n.length === e.length &&
                    n.every((t, r) => t.path === e[r].path)
                );
            }
            class RF {}
            class MF {
                parse(e) {
                    const t = new lH(e);
                    return new Op(
                        t.parseRootSegment(),
                        t.parseQueryParams(),
                        t.parseFragment()
                    );
                }
                serialize(e) {
                    const t = `/${NE(e.root, !0)}`,
                        r = (function rH(n) {
                            const e = Object.keys(n)
                                .map((t) => {
                                    const r = n[t];
                                    return Array.isArray(r)
                                        ? r
                                              .map((i) => `${mT(t)}=${mT(i)}`)
                                              .join("&")
                                        : `${mT(t)}=${mT(r)}`;
                                })
                                .filter((t) => !!t);
                            return e.length ? `?${e.join("&")}` : "";
                        })(e.queryParams),
                        i =
                            "string" == typeof e.fragment
                                ? `#${(function tH(n) {
                                      return encodeURI(n);
                                  })(e.fragment)}`
                                : "";
                    return `${t}${r}${i}`;
                }
            }
            const eH = new MF();
            function gT(n) {
                return n.segments.map((e) => kF(e)).join("/");
            }
            function NE(n, e) {
                if (!n.hasChildren()) return gT(n);
                if (e) {
                    const t = n.children[on] ? NE(n.children[on], !1) : "",
                        r = [];
                    return (
                        Bi(n.children, (i, a) => {
                            a !== on && r.push(`${a}:${NE(i, !1)}`);
                        }),
                        r.length > 0 ? `${t}(${r.join("//")})` : t
                    );
                }
                {
                    const t = (function Xj(n, e) {
                        let t = [];
                        return (
                            Bi(n.children, (r, i) => {
                                i === on && (t = t.concat(e(r, i)));
                            }),
                            Bi(n.children, (r, i) => {
                                i !== on && (t = t.concat(e(r, i)));
                            }),
                            t
                        );
                    })(n, (r, i) =>
                        i === on
                            ? [NE(n.children[on], !1)]
                            : [`${i}:${NE(r, !1)}`]
                    );
                    return 1 === Object.keys(n.children).length &&
                        null != n.children[on]
                        ? `${gT(n)}/${t[0]}`
                        : `${gT(n)}/(${t.join("//")})`;
                }
            }
            function NF(n) {
                return encodeURIComponent(n)
                    .replace(/%40/g, "@")
                    .replace(/%3A/gi, ":")
                    .replace(/%24/g, "$")
                    .replace(/%2C/gi, ",");
            }
            function mT(n) {
                return NF(n).replace(/%3B/gi, ";");
            }
            function QM(n) {
                return NF(n)
                    .replace(/\(/g, "%28")
                    .replace(/\)/g, "%29")
                    .replace(/%26/gi, "&");
            }
            function _T(n) {
                return decodeURIComponent(n);
            }
            function PF(n) {
                return _T(n.replace(/\+/g, "%20"));
            }
            function kF(n) {
                return `${QM(n.path)}${(function nH(n) {
                    return Object.keys(n)
                        .map((e) => `;${QM(e)}=${QM(n[e])}`)
                        .join("");
                })(n.parameters)}`;
            }
            const iH = /^[^\/()?;=#]+/;
            function yT(n) {
                const e = n.match(iH);
                return e ? e[0] : "";
            }
            const sH = /^[^=?&#]+/,
                aH = /^[^&#]+/;
            class lH {
                constructor(e) {
                    (this.url = e), (this.remaining = e);
                }
                parseRootSegment() {
                    return (
                        this.consumeOptional("/"),
                        "" === this.remaining ||
                        this.peekStartsWith("?") ||
                        this.peekStartsWith("#")
                            ? new pn([], {})
                            : new pn([], this.parseChildren())
                    );
                }
                parseQueryParams() {
                    const e = {};
                    if (this.consumeOptional("?"))
                        do {
                            this.parseQueryParam(e);
                        } while (this.consumeOptional("&"));
                    return e;
                }
                parseFragment() {
                    return this.consumeOptional("#")
                        ? decodeURIComponent(this.remaining)
                        : null;
                }
                parseChildren() {
                    if ("" === this.remaining) return {};
                    this.consumeOptional("/");
                    const e = [];
                    for (
                        this.peekStartsWith("(") || e.push(this.parseSegment());
                        this.peekStartsWith("/") &&
                        !this.peekStartsWith("//") &&
                        !this.peekStartsWith("/(");

                    )
                        this.capture("/"), e.push(this.parseSegment());
                    let t = {};
                    this.peekStartsWith("/(") &&
                        (this.capture("/"), (t = this.parseParens(!0)));
                    let r = {};
                    return (
                        this.peekStartsWith("(") && (r = this.parseParens(!1)),
                        (e.length > 0 || Object.keys(t).length > 0) &&
                            (r[on] = new pn(e, t)),
                        r
                    );
                }
                parseSegment() {
                    const e = yT(this.remaining);
                    if ("" === e && this.peekStartsWith(";"))
                        throw new p.vHH(4009, !1);
                    return (
                        this.capture(e), new ME(_T(e), this.parseMatrixParams())
                    );
                }
                parseMatrixParams() {
                    const e = {};
                    for (; this.consumeOptional(";"); ) this.parseParam(e);
                    return e;
                }
                parseParam(e) {
                    const t = yT(this.remaining);
                    if (!t) return;
                    this.capture(t);
                    let r = "";
                    if (this.consumeOptional("=")) {
                        const i = yT(this.remaining);
                        i && ((r = i), this.capture(r));
                    }
                    e[_T(t)] = _T(r);
                }
                parseQueryParam(e) {
                    const t = (function oH(n) {
                        const e = n.match(sH);
                        return e ? e[0] : "";
                    })(this.remaining);
                    if (!t) return;
                    this.capture(t);
                    let r = "";
                    if (this.consumeOptional("=")) {
                        const l = (function uH(n) {
                            const e = n.match(aH);
                            return e ? e[0] : "";
                        })(this.remaining);
                        l && ((r = l), this.capture(r));
                    }
                    const i = PF(t),
                        a = PF(r);
                    if (e.hasOwnProperty(i)) {
                        let l = e[i];
                        Array.isArray(l) || ((l = [l]), (e[i] = l)), l.push(a);
                    } else e[i] = a;
                }
                parseParens(e) {
                    const t = {};
                    for (
                        this.capture("(");
                        !this.consumeOptional(")") && this.remaining.length > 0;

                    ) {
                        const r = yT(this.remaining),
                            i = this.remaining[r.length];
                        if ("/" !== i && ")" !== i && ";" !== i)
                            throw new p.vHH(4010, !1);
                        let a;
                        r.indexOf(":") > -1
                            ? ((a = r.slice(0, r.indexOf(":"))),
                              this.capture(a),
                              this.capture(":"))
                            : e && (a = on);
                        const l = this.parseChildren();
                        (t[a] =
                            1 === Object.keys(l).length
                                ? l[on]
                                : new pn([], l)),
                            this.consumeOptional("//");
                    }
                    return t;
                }
                peekStartsWith(e) {
                    return this.remaining.startsWith(e);
                }
                consumeOptional(e) {
                    return (
                        !!this.peekStartsWith(e) &&
                        ((this.remaining = this.remaining.substring(e.length)),
                        !0)
                    );
                }
                capture(e) {
                    if (!this.consumeOptional(e)) throw new p.vHH(4011, !1);
                }
            }
            class OF {
                constructor(e) {
                    this._root = e;
                }
                get root() {
                    return this._root.value;
                }
                parent(e) {
                    const t = this.pathFromRoot(e);
                    return t.length > 1 ? t[t.length - 2] : null;
                }
                children(e) {
                    const t = JM(e, this._root);
                    return t ? t.children.map((r) => r.value) : [];
                }
                firstChild(e) {
                    const t = JM(e, this._root);
                    return t && t.children.length > 0
                        ? t.children[0].value
                        : null;
                }
                siblings(e) {
                    const t = XM(e, this._root);
                    return t.length < 2
                        ? []
                        : t[t.length - 2].children
                              .map((i) => i.value)
                              .filter((i) => i !== e);
                }
                pathFromRoot(e) {
                    return XM(e, this._root).map((t) => t.value);
                }
            }
            function JM(n, e) {
                if (n === e.value) return e;
                for (const t of e.children) {
                    const r = JM(n, t);
                    if (r) return r;
                }
                return null;
            }
            function XM(n, e) {
                if (n === e.value) return [e];
                for (const t of e.children) {
                    const r = XM(n, t);
                    if (r.length) return r.unshift(e), r;
                }
                return [];
            }
            class ic {
                constructor(e, t) {
                    (this.value = e), (this.children = t);
                }
                toString() {
                    return `TreeNode(${this.value})`;
                }
            }
            function ty(n) {
                const e = {};
                return (
                    n && n.children.forEach((t) => (e[t.value.outlet] = t)), e
                );
            }
            class FF extends OF {
                constructor(e, t) {
                    super(e), (this.snapshot = t), eN(this, e);
                }
                toString() {
                    return this.snapshot.toString();
                }
            }
            function LF(n, e) {
                const t = (function cH(n, e) {
                        const l = new vT(
                            [],
                            {},
                            {},
                            "",
                            {},
                            on,
                            e,
                            null,
                            n.root,
                            -1,
                            {}
                        );
                        return new UF("", new ic(l, []));
                    })(n, e),
                    r = new ka([new ME("", {})]),
                    i = new ka({}),
                    a = new ka({}),
                    l = new ka({}),
                    h = new ka(""),
                    _ = new ny(r, i, l, h, a, on, e, t.root);
                return (_.snapshot = t.root), new FF(new ic(_, []), t);
            }
            class ny {
                constructor(e, t, r, i, a, l, h, _) {
                    (this.url = e),
                        (this.params = t),
                        (this.queryParams = r),
                        (this.fragment = i),
                        (this.data = a),
                        (this.outlet = l),
                        (this.component = h),
                        (this._futureSnapshot = _);
                }
                get routeConfig() {
                    return this._futureSnapshot.routeConfig;
                }
                get root() {
                    return this._routerState.root;
                }
                get parent() {
                    return this._routerState.parent(this);
                }
                get firstChild() {
                    return this._routerState.firstChild(this);
                }
                get children() {
                    return this._routerState.children(this);
                }
                get pathFromRoot() {
                    return this._routerState.pathFromRoot(this);
                }
                get paramMap() {
                    return (
                        this._paramMap ||
                            (this._paramMap = this.params.pipe(
                                (0, Mt.U)((e) => ey(e))
                            )),
                        this._paramMap
                    );
                }
                get queryParamMap() {
                    return (
                        this._queryParamMap ||
                            (this._queryParamMap = this.queryParams.pipe(
                                (0, Mt.U)((e) => ey(e))
                            )),
                        this._queryParamMap
                    );
                }
                toString() {
                    return this.snapshot
                        ? this.snapshot.toString()
                        : `Future(${this._futureSnapshot})`;
                }
            }
            function VF(n, e = "emptyOnly") {
                const t = n.pathFromRoot;
                let r = 0;
                if ("always" !== e)
                    for (r = t.length - 1; r >= 1; ) {
                        const i = t[r],
                            a = t[r - 1];
                        if (i.routeConfig && "" === i.routeConfig.path) r--;
                        else {
                            if (a.component) break;
                            r--;
                        }
                    }
                return (function dH(n) {
                    return n.reduce(
                        (e, t) => ({
                            params: { ...e.params, ...t.params },
                            data: { ...e.data, ...t.data },
                            resolve: {
                                ...t.data,
                                ...e.resolve,
                                ...t.routeConfig?.data,
                                ...t._resolvedData,
                            },
                        }),
                        { params: {}, data: {}, resolve: {} }
                    );
                })(t.slice(r));
            }
            class vT {
                constructor(e, t, r, i, a, l, h, _, E, D, T, R) {
                    (this.url = e),
                        (this.params = t),
                        (this.queryParams = r),
                        (this.fragment = i),
                        (this.data = a),
                        (this.outlet = l),
                        (this.component = h),
                        (this.routeConfig = _),
                        (this._urlSegment = E),
                        (this._lastPathIndex = D),
                        (this._correctedLastPathIndex = R ?? D),
                        (this._resolve = T);
                }
                get root() {
                    return this._routerState.root;
                }
                get parent() {
                    return this._routerState.parent(this);
                }
                get firstChild() {
                    return this._routerState.firstChild(this);
                }
                get children() {
                    return this._routerState.children(this);
                }
                get pathFromRoot() {
                    return this._routerState.pathFromRoot(this);
                }
                get paramMap() {
                    return (
                        this._paramMap || (this._paramMap = ey(this.params)),
                        this._paramMap
                    );
                }
                get queryParamMap() {
                    return (
                        this._queryParamMap ||
                            (this._queryParamMap = ey(this.queryParams)),
                        this._queryParamMap
                    );
                }
                toString() {
                    return `Route(url:'${this.url
                        .map((r) => r.toString())
                        .join("/")}', path:'${
                        this.routeConfig ? this.routeConfig.path : ""
                    }')`;
                }
            }
            class UF extends OF {
                constructor(e, t) {
                    super(t), (this.url = e), eN(this, t);
                }
                toString() {
                    return BF(this._root);
                }
            }
            function eN(n, e) {
                (e.value._routerState = n), e.children.forEach((t) => eN(n, t));
            }
            function BF(n) {
                const e =
                    n.children.length > 0
                        ? ` { ${n.children.map(BF).join(", ")} } `
                        : "";
                return `${n.value}${e}`;
            }
            function tN(n) {
                if (n.snapshot) {
                    const e = n.snapshot,
                        t = n._futureSnapshot;
                    (n.snapshot = t),
                        Uu(e.queryParams, t.queryParams) ||
                            n.queryParams.next(t.queryParams),
                        e.fragment !== t.fragment &&
                            n.fragment.next(t.fragment),
                        Uu(e.params, t.params) || n.params.next(t.params),
                        (function qj(n, e) {
                            if (n.length !== e.length) return !1;
                            for (let t = 0; t < n.length; ++t)
                                if (!Uu(n[t], e[t])) return !1;
                            return !0;
                        })(e.url, t.url) || n.url.next(t.url),
                        Uu(e.data, t.data) || n.data.next(t.data);
                } else
                    (n.snapshot = n._futureSnapshot),
                        n.data.next(n._futureSnapshot.data);
            }
            function nN(n, e) {
                const t =
                    Uu(n.params, e.params) &&
                    (function Jj(n, e) {
                        return (
                            Fp(n, e) &&
                            n.every((t, r) => Uu(t.parameters, e[r].parameters))
                        );
                    })(n.url, e.url);
                return (
                    t &&
                    !(!n.parent != !e.parent) &&
                    (!n.parent || nN(n.parent, e.parent))
                );
            }
            function PE(n, e, t) {
                if (t && n.shouldReuseRoute(e.value, t.value.snapshot)) {
                    const r = t.value;
                    r._futureSnapshot = e.value;
                    const i = (function fH(n, e, t) {
                        return e.children.map((r) => {
                            for (const i of t.children)
                                if (
                                    n.shouldReuseRoute(
                                        r.value,
                                        i.value.snapshot
                                    )
                                )
                                    return PE(n, r, i);
                            return PE(n, r);
                        });
                    })(n, e, t);
                    return new ic(r, i);
                }
                {
                    if (n.shouldAttach(e.value)) {
                        const a = n.retrieve(e.value);
                        if (null !== a) {
                            const l = a.route;
                            return (
                                (l.value._futureSnapshot = e.value),
                                (l.children = e.children.map((h) => PE(n, h))),
                                l
                            );
                        }
                    }
                    const r = (function pH(n) {
                            return new ny(
                                new ka(n.url),
                                new ka(n.params),
                                new ka(n.queryParams),
                                new ka(n.fragment),
                                new ka(n.data),
                                n.outlet,
                                n.component,
                                n
                            );
                        })(e.value),
                        i = e.children.map((a) => PE(n, a));
                    return new ic(r, i);
                }
            }
            function wT(n) {
                return (
                    "object" == typeof n &&
                    null != n &&
                    !n.outlets &&
                    !n.segmentPath
                );
            }
            function kE(n) {
                return "object" == typeof n && null != n && n.outlets;
            }
            function iN(n, e, t, r, i) {
                let a = {};
                if (
                    (r &&
                        Bi(r, (h, _) => {
                            a[_] = Array.isArray(h)
                                ? h.map((E) => `${E}`)
                                : `${h}`;
                        }),
                    n === e)
                )
                    return new Op(t, a, i);
                const l = jF(n, e, t);
                return new Op(l, a, i);
            }
            function jF(n, e, t) {
                const r = {};
                return (
                    Bi(n.children, (i, a) => {
                        r[a] = i === e ? t : jF(i, e, t);
                    }),
                    new pn(n.segments, r)
                );
            }
            class HF {
                constructor(e, t, r) {
                    if (
                        ((this.isAbsolute = e),
                        (this.numberOfDoubleDots = t),
                        (this.commands = r),
                        e && r.length > 0 && wT(r[0]))
                    )
                        throw new p.vHH(4003, false);
                    const i = r.find(kE);
                    if (i && i !== bF(r)) throw new p.vHH(4004, false);
                }
                toRoot() {
                    return (
                        this.isAbsolute &&
                        1 === this.commands.length &&
                        "/" == this.commands[0]
                    );
                }
            }
            class sN {
                constructor(e, t, r) {
                    (this.segmentGroup = e),
                        (this.processChildren = t),
                        (this.index = r);
                }
            }
            function $F(n, e, t) {
                if (
                    (n || (n = new pn([], {})),
                    0 === n.segments.length && n.hasChildren())
                )
                    return ET(n, e, t);
                const r = (function wH(n, e, t) {
                        let r = 0,
                            i = e;
                        const a = { match: !1, pathIndex: 0, commandIndex: 0 };
                        for (; i < n.segments.length; ) {
                            if (r >= t.length) return a;
                            const l = n.segments[i],
                                h = t[r];
                            if (kE(h)) break;
                            const _ = `${h}`,
                                E = r < t.length - 1 ? t[r + 1] : null;
                            if (i > 0 && void 0 === _) break;
                            if (
                                _ &&
                                E &&
                                "object" == typeof E &&
                                void 0 === E.outlets
                            ) {
                                if (!WF(_, E, l)) return a;
                                r += 2;
                            } else {
                                if (!WF(_, {}, l)) return a;
                                r++;
                            }
                            i++;
                        }
                        return { match: !0, pathIndex: i, commandIndex: r };
                    })(n, e, t),
                    i = t.slice(r.commandIndex);
                if (r.match && r.pathIndex < n.segments.length) {
                    const a = new pn(n.segments.slice(0, r.pathIndex), {});
                    return (
                        (a.children[on] = new pn(
                            n.segments.slice(r.pathIndex),
                            n.children
                        )),
                        ET(a, 0, i)
                    );
                }
                return r.match && 0 === i.length
                    ? new pn(n.segments, {})
                    : r.match && !n.hasChildren()
                    ? oN(n, e, t)
                    : r.match
                    ? ET(n, 0, i)
                    : oN(n, e, t);
            }
            function ET(n, e, t) {
                if (0 === t.length) return new pn(n.segments, {});
                {
                    const r = (function vH(n) {
                            return kE(n[0]) ? n[0].outlets : { [on]: n };
                        })(t),
                        i = {};
                    return (
                        Bi(r, (a, l) => {
                            "string" == typeof a && (a = [a]),
                                null !== a && (i[l] = $F(n.children[l], e, a));
                        }),
                        Bi(n.children, (a, l) => {
                            void 0 === r[l] && (i[l] = a);
                        }),
                        new pn(n.segments, i)
                    );
                }
            }
            function oN(n, e, t) {
                const r = n.segments.slice(0, e);
                let i = 0;
                for (; i < t.length; ) {
                    const a = t[i];
                    if (kE(a)) {
                        const _ = EH(a.outlets);
                        return new pn(r, _);
                    }
                    if (0 === i && wT(t[0])) {
                        r.push(new ME(n.segments[e].path, GF(t[0]))), i++;
                        continue;
                    }
                    const l = kE(a) ? a.outlets[on] : `${a}`,
                        h = i < t.length - 1 ? t[i + 1] : null;
                    l && h && wT(h)
                        ? (r.push(new ME(l, GF(h))), (i += 2))
                        : (r.push(new ME(l, {})), i++);
                }
                return new pn(r, {});
            }
            function EH(n) {
                const e = {};
                return (
                    Bi(n, (t, r) => {
                        "string" == typeof t && (t = [t]),
                            null !== t && (e[r] = oN(new pn([], {}), 0, t));
                    }),
                    e
                );
            }
            function GF(n) {
                const e = {};
                return Bi(n, (t, r) => (e[r] = `${t}`)), e;
            }
            function WF(n, e, t) {
                return n == t.path && Uu(e, t.parameters);
            }
            class IH {
                constructor() {
                    (this.outlet = null),
                        (this.route = null),
                        (this.resolver = null),
                        (this.injector = null),
                        (this.children = new OE()),
                        (this.attachRef = null);
                }
            }
            class OE {
                constructor() {
                    this.contexts = new Map();
                }
                onChildOutletCreated(e, t) {
                    const r = this.getOrCreateContext(e);
                    (r.outlet = t), this.contexts.set(e, r);
                }
                onChildOutletDestroyed(e) {
                    const t = this.getContext(e);
                    t && ((t.outlet = null), (t.attachRef = null));
                }
                onOutletDeactivated() {
                    const e = this.contexts;
                    return (this.contexts = new Map()), e;
                }
                onOutletReAttached(e) {
                    this.contexts = e;
                }
                getOrCreateContext(e) {
                    let t = this.getContext(e);
                    return t || ((t = new IH()), this.contexts.set(e, t)), t;
                }
                getContext(e) {
                    return this.contexts.get(e) || null;
                }
            }
            const IT = !1;
            let aN = (() => {
                class n {
                    constructor(t, r, i, a, l) {
                        (this.parentContexts = t),
                            (this.location = r),
                            (this.changeDetector = a),
                            (this.environmentInjector = l),
                            (this.activated = null),
                            (this._activatedRoute = null),
                            (this.activateEvents = new p.vpe()),
                            (this.deactivateEvents = new p.vpe()),
                            (this.attachEvents = new p.vpe()),
                            (this.detachEvents = new p.vpe()),
                            (this.name = i || on),
                            t.onChildOutletCreated(this.name, this);
                    }
                    ngOnDestroy() {
                        this.parentContexts.getContext(this.name)?.outlet ===
                            this &&
                            this.parentContexts.onChildOutletDestroyed(
                                this.name
                            );
                    }
                    ngOnInit() {
                        if (!this.activated) {
                            const t = this.parentContexts.getContext(this.name);
                            t &&
                                t.route &&
                                (t.attachRef
                                    ? this.attach(t.attachRef, t.route)
                                    : this.activateWith(t.route, t.injector));
                        }
                    }
                    get isActivated() {
                        return !!this.activated;
                    }
                    get component() {
                        if (!this.activated) throw new p.vHH(4012, IT);
                        return this.activated.instance;
                    }
                    get activatedRoute() {
                        if (!this.activated) throw new p.vHH(4012, IT);
                        return this._activatedRoute;
                    }
                    get activatedRouteData() {
                        return this._activatedRoute
                            ? this._activatedRoute.snapshot.data
                            : {};
                    }
                    detach() {
                        if (!this.activated) throw new p.vHH(4012, IT);
                        this.location.detach();
                        const t = this.activated;
                        return (
                            (this.activated = null),
                            (this._activatedRoute = null),
                            this.detachEvents.emit(t.instance),
                            t
                        );
                    }
                    attach(t, r) {
                        (this.activated = t),
                            (this._activatedRoute = r),
                            this.location.insert(t.hostView),
                            this.attachEvents.emit(t.instance);
                    }
                    deactivate() {
                        if (this.activated) {
                            const t = this.component;
                            this.activated.destroy(),
                                (this.activated = null),
                                (this._activatedRoute = null),
                                this.deactivateEvents.emit(t);
                        }
                    }
                    activateWith(t, r) {
                        if (this.isActivated) throw new p.vHH(4013, IT);
                        this._activatedRoute = t;
                        const i = this.location,
                            l = t._futureSnapshot.component,
                            h = this.parentContexts.getOrCreateContext(
                                this.name
                            ).children,
                            _ = new CH(t, h, i.injector);
                        if (
                            r &&
                            (function bH(n) {
                                return !!n.resolveComponentFactory;
                            })(r)
                        ) {
                            const E = r.resolveComponentFactory(l);
                            this.activated = i.createComponent(E, i.length, _);
                        } else
                            this.activated = i.createComponent(l, {
                                index: i.length,
                                injector: _,
                                environmentInjector:
                                    r ?? this.environmentInjector,
                            });
                        this.changeDetector.markForCheck(),
                            this.activateEvents.emit(this.activated.instance);
                    }
                }
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)(
                            p.Y36(OE),
                            p.Y36(p.s_b),
                            p.$8M("name"),
                            p.Y36(p.sBO),
                            p.Y36(p.lqb)
                        );
                    }),
                    (n.ɵdir = p.lG2({
                        type: n,
                        selectors: [["router-outlet"]],
                        outputs: {
                            activateEvents: "activate",
                            deactivateEvents: "deactivate",
                            attachEvents: "attach",
                            detachEvents: "detach",
                        },
                        exportAs: ["outlet"],
                    })),
                    n
                );
            })();
            class CH {
                constructor(e, t, r) {
                    (this.route = e),
                        (this.childContexts = t),
                        (this.parent = r);
                }
                get(e, t) {
                    return e === ny
                        ? this.route
                        : e === OE
                        ? this.childContexts
                        : this.parent.get(e, t);
                }
            }
            let zF = (() => {
                class n {}
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)();
                    }),
                    (n.ɵcmp = p.Xpm({
                        type: n,
                        selectors: [["ng-component"]],
                        decls: 1,
                        vars: 0,
                        template: function (t, r) {
                            1 & t && p._UZ(0, "router-outlet");
                        },
                        dependencies: [aN],
                        encapsulation: 2,
                    })),
                    n
                );
            })();
            function qF(n, e) {
                return (
                    n.providers &&
                        !n._injector &&
                        (n._injector = (0, p.MMx)(
                            n.providers,
                            e,
                            `Route: ${n.path}`
                        )),
                    n._injector ?? e
                );
            }
            function lN(n) {
                const e = n.children && n.children.map(lN),
                    t = e ? { ...n, children: e } : { ...n };
                return (
                    !t.component &&
                        !t.loadComponent &&
                        (e || t.loadChildren) &&
                        t.outlet &&
                        t.outlet !== on &&
                        (t.component = zF),
                    t
                );
            }
            function Jo(n) {
                return n.outlet || on;
            }
            function KF(n, e) {
                const t = n.filter((r) => Jo(r) === e);
                return t.push(...n.filter((r) => Jo(r) !== e)), t;
            }
            function ZF(n) {
                if (!n) return null;
                if (n.routeConfig?._injector) return n.routeConfig._injector;
                for (let e = n.parent; e; e = e.parent) {
                    const t = e.routeConfig;
                    if (t?._loadedInjector) return t._loadedInjector;
                    if (t?._injector) return t._injector;
                }
                return null;
            }
            class xH {
                constructor(e, t, r, i) {
                    (this.routeReuseStrategy = e),
                        (this.futureState = t),
                        (this.currState = r),
                        (this.forwardEvent = i);
                }
                activate(e) {
                    const t = this.futureState._root,
                        r = this.currState ? this.currState._root : null;
                    this.deactivateChildRoutes(t, r, e),
                        tN(this.futureState.root),
                        this.activateChildRoutes(t, r, e);
                }
                deactivateChildRoutes(e, t, r) {
                    const i = ty(t);
                    e.children.forEach((a) => {
                        const l = a.value.outlet;
                        this.deactivateRoutes(a, i[l], r), delete i[l];
                    }),
                        Bi(i, (a, l) => {
                            this.deactivateRouteAndItsChildren(a, r);
                        });
                }
                deactivateRoutes(e, t, r) {
                    const i = e.value,
                        a = t ? t.value : null;
                    if (i === a)
                        if (i.component) {
                            const l = r.getContext(i.outlet);
                            l && this.deactivateChildRoutes(e, t, l.children);
                        } else this.deactivateChildRoutes(e, t, r);
                    else a && this.deactivateRouteAndItsChildren(t, r);
                }
                deactivateRouteAndItsChildren(e, t) {
                    e.value.component &&
                    this.routeReuseStrategy.shouldDetach(e.value.snapshot)
                        ? this.detachAndStoreRouteSubtree(e, t)
                        : this.deactivateRouteAndOutlet(e, t);
                }
                detachAndStoreRouteSubtree(e, t) {
                    const r = t.getContext(e.value.outlet),
                        i = r && e.value.component ? r.children : t,
                        a = ty(e);
                    for (const l of Object.keys(a))
                        this.deactivateRouteAndItsChildren(a[l], i);
                    if (r && r.outlet) {
                        const l = r.outlet.detach(),
                            h = r.children.onOutletDeactivated();
                        this.routeReuseStrategy.store(e.value.snapshot, {
                            componentRef: l,
                            route: e,
                            contexts: h,
                        });
                    }
                }
                deactivateRouteAndOutlet(e, t) {
                    const r = t.getContext(e.value.outlet),
                        i = r && e.value.component ? r.children : t,
                        a = ty(e);
                    for (const l of Object.keys(a))
                        this.deactivateRouteAndItsChildren(a[l], i);
                    r &&
                        r.outlet &&
                        (r.outlet.deactivate(),
                        r.children.onOutletDeactivated(),
                        (r.attachRef = null),
                        (r.resolver = null),
                        (r.route = null));
                }
                activateChildRoutes(e, t, r) {
                    const i = ty(t);
                    e.children.forEach((a) => {
                        this.activateRoutes(a, i[a.value.outlet], r),
                            this.forwardEvent(new Hj(a.value.snapshot));
                    }),
                        e.children.length &&
                            this.forwardEvent(new Bj(e.value.snapshot));
                }
                activateRoutes(e, t, r) {
                    const i = e.value,
                        a = t ? t.value : null;
                    if ((tN(i), i === a))
                        if (i.component) {
                            const l = r.getOrCreateContext(i.outlet);
                            this.activateChildRoutes(e, t, l.children);
                        } else this.activateChildRoutes(e, t, r);
                    else if (i.component) {
                        const l = r.getOrCreateContext(i.outlet);
                        if (this.routeReuseStrategy.shouldAttach(i.snapshot)) {
                            const h = this.routeReuseStrategy.retrieve(
                                i.snapshot
                            );
                            this.routeReuseStrategy.store(i.snapshot, null),
                                l.children.onOutletReAttached(h.contexts),
                                (l.attachRef = h.componentRef),
                                (l.route = h.route.value),
                                l.outlet &&
                                    l.outlet.attach(
                                        h.componentRef,
                                        h.route.value
                                    ),
                                tN(h.route.value),
                                this.activateChildRoutes(e, null, l.children);
                        } else {
                            const h = ZF(i.snapshot),
                                _ = h?.get(p._Vd) ?? null;
                            (l.attachRef = null),
                                (l.route = i),
                                (l.resolver = _),
                                (l.injector = h),
                                l.outlet &&
                                    l.outlet.activateWith(i, l.injector),
                                this.activateChildRoutes(e, null, l.children);
                        }
                    } else this.activateChildRoutes(e, null, r);
                }
            }
            function CT(n) {
                return "function" == typeof n;
            }
            function Lp(n) {
                return n instanceof Op;
            }
            const FE = Symbol("INITIAL_VALUE");
            function LE() {
                return fr((n) =>
                    pF(n.map((e) => e.pipe(Hf(1), xa(FE)))).pipe(
                        ni((e, t) => {
                            let r = !1;
                            return t.reduce(
                                (i, a, l) =>
                                    i !== FE
                                        ? i
                                        : (a === FE && (r = !0),
                                          r ||
                                          (!1 !== a &&
                                              l !== t.length - 1 &&
                                              !Lp(a))
                                              ? i
                                              : a),
                                e
                            );
                        }, FE),
                        Ni((e) => e !== FE),
                        (0, Mt.U)((e) => (Lp(e) ? e : !0 === e)),
                        Hf(1)
                    )
                );
            }
            const YF = {
                matched: !1,
                consumedSegments: [],
                remainingSegments: [],
                parameters: {},
                positionalParamSegments: {},
            };
            function bT(n, e, t) {
                if ("" === e.path)
                    return "full" === e.pathMatch &&
                        (n.hasChildren() || t.length > 0)
                        ? { ...YF }
                        : {
                              matched: !0,
                              consumedSegments: [],
                              remainingSegments: t,
                              parameters: {},
                              positionalParamSegments: {},
                          };
                const i = (e.matcher || zj)(t, n, e);
                if (!i) return { ...YF };
                const a = {};
                Bi(i.posParams, (h, _) => {
                    a[_] = h.path;
                });
                const l =
                    i.consumed.length > 0
                        ? {
                              ...a,
                              ...i.consumed[i.consumed.length - 1].parameters,
                          }
                        : a;
                return {
                    matched: !0,
                    consumedSegments: i.consumed,
                    remainingSegments: t.slice(i.consumed.length),
                    parameters: l,
                    positionalParamSegments: i.posParams ?? {},
                };
            }
            function DT(n, e, t, r, i = "corrected") {
                if (
                    t.length > 0 &&
                    (function LH(n, e, t) {
                        return t.some((r) => TT(n, e, r) && Jo(r) !== on);
                    })(n, t, r)
                ) {
                    const l = new pn(
                        e,
                        (function FH(n, e, t, r) {
                            const i = {};
                            (i[on] = r),
                                (r._sourceSegment = n),
                                (r._segmentIndexShift = e.length);
                            for (const a of t)
                                if ("" === a.path && Jo(a) !== on) {
                                    const l = new pn([], {});
                                    (l._sourceSegment = n),
                                        (l._segmentIndexShift = e.length),
                                        (i[Jo(a)] = l);
                                }
                            return i;
                        })(n, e, r, new pn(t, n.children))
                    );
                    return (
                        (l._sourceSegment = n),
                        (l._segmentIndexShift = e.length),
                        { segmentGroup: l, slicedSegments: [] }
                    );
                }
                if (
                    0 === t.length &&
                    (function VH(n, e, t) {
                        return t.some((r) => TT(n, e, r));
                    })(n, t, r)
                ) {
                    const l = new pn(
                        n.segments,
                        (function OH(n, e, t, r, i, a) {
                            const l = {};
                            for (const h of r)
                                if (TT(n, t, h) && !i[Jo(h)]) {
                                    const _ = new pn([], {});
                                    (_._sourceSegment = n),
                                        (_._segmentIndexShift =
                                            "legacy" === a
                                                ? n.segments.length
                                                : e.length),
                                        (l[Jo(h)] = _);
                                }
                            return { ...i, ...l };
                        })(n, e, t, r, n.children, i)
                    );
                    return (
                        (l._sourceSegment = n),
                        (l._segmentIndexShift = e.length),
                        { segmentGroup: l, slicedSegments: t }
                    );
                }
                const a = new pn(n.segments, n.children);
                return (
                    (a._sourceSegment = n),
                    (a._segmentIndexShift = e.length),
                    { segmentGroup: a, slicedSegments: t }
                );
            }
            function TT(n, e, t) {
                return (
                    (!(n.hasChildren() || e.length > 0) ||
                        "full" !== t.pathMatch) &&
                    "" === t.path
                );
            }
            function QF(n, e, t, r) {
                return (
                    !!(Jo(n) === r || (r !== on && TT(e, t, n))) &&
                    ("**" === n.path || bT(e, n, t).matched)
                );
            }
            function JF(n, e, t) {
                return 0 === e.length && !n.children[t];
            }
            const ST = !1;
            class AT {
                constructor(e) {
                    this.segmentGroup = e || null;
                }
            }
            class XF {
                constructor(e) {
                    this.urlTree = e;
                }
            }
            function VE(n) {
                return xE(new AT(n));
            }
            function eL(n) {
                return xE(new XF(n));
            }
            class HH {
                constructor(e, t, r, i, a) {
                    (this.injector = e),
                        (this.configLoader = t),
                        (this.urlSerializer = r),
                        (this.urlTree = i),
                        (this.config = a),
                        (this.allowRedirects = !0);
                }
                apply() {
                    const e = DT(
                            this.urlTree.root,
                            [],
                            [],
                            this.config
                        ).segmentGroup,
                        t = new pn(e.segments, e.children);
                    return this.expandSegmentGroup(
                        this.injector,
                        this.config,
                        t,
                        on
                    )
                        .pipe(
                            (0, Mt.U)((a) =>
                                this.createUrlTree(
                                    cN(a),
                                    this.urlTree.queryParams,
                                    this.urlTree.fragment
                                )
                            )
                        )
                        .pipe(
                            Pp((a) => {
                                if (a instanceof XF)
                                    return (
                                        (this.allowRedirects = !1),
                                        this.match(a.urlTree)
                                    );
                                throw a instanceof AT
                                    ? this.noMatchError(a)
                                    : a;
                            })
                        );
                }
                match(e) {
                    return this.expandSegmentGroup(
                        this.injector,
                        this.config,
                        e.root,
                        on
                    )
                        .pipe(
                            (0, Mt.U)((i) =>
                                this.createUrlTree(
                                    cN(i),
                                    e.queryParams,
                                    e.fragment
                                )
                            )
                        )
                        .pipe(
                            Pp((i) => {
                                throw i instanceof AT
                                    ? this.noMatchError(i)
                                    : i;
                            })
                        );
                }
                noMatchError(e) {
                    return new p.vHH(4002, ST);
                }
                createUrlTree(e, t, r) {
                    const i =
                        e.segments.length > 0 ? new pn([], { [on]: e }) : e;
                    return new Op(i, t, r);
                }
                expandSegmentGroup(e, t, r, i) {
                    return 0 === r.segments.length && r.hasChildren()
                        ? this.expandChildren(e, t, r).pipe(
                              (0, Mt.U)((a) => new pn([], a))
                          )
                        : this.expandSegment(e, r, t, r.segments, i, !0);
                }
                expandChildren(e, t, r) {
                    const i = [];
                    for (const a of Object.keys(r.children))
                        "primary" === a ? i.unshift(a) : i.push(a);
                    return (0, dn.D)(i).pipe(
                        RE((a) => {
                            const l = r.children[a],
                                h = KF(t, a);
                            return this.expandSegmentGroup(e, h, l, a).pipe(
                                (0, Mt.U)((_) => ({ segment: _, outlet: a }))
                            );
                        }),
                        ni((a, l) => ((a[l.outlet] = l.segment), a), {}),
                        (function Rj(n, e) {
                            const t = arguments.length >= 2;
                            return (r) =>
                                r.pipe(
                                    n ? Ni((i, a) => n(i, a, r)) : ro.y,
                                    WM(1),
                                    t ? xw(e) : ZC(() => new Dd())
                                );
                        })()
                    );
                }
                expandSegment(e, t, r, i, a, l) {
                    return (0, dn.D)(r).pipe(
                        RE((h) =>
                            this.expandSegmentAgainstRoute(
                                e,
                                t,
                                r,
                                h,
                                i,
                                a,
                                l
                            ).pipe(
                                Pp((E) => {
                                    if (E instanceof AT) return bt(null);
                                    throw E;
                                })
                            )
                        ),
                        Aa((h) => !!h),
                        Pp((h, _) => {
                            if (h instanceof Dd || "EmptyError" === h.name)
                                return JF(t, i, a) ? bt(new pn([], {})) : VE(t);
                            throw h;
                        })
                    );
                }
                expandSegmentAgainstRoute(e, t, r, i, a, l, h) {
                    return QF(i, t, a, l)
                        ? void 0 === i.redirectTo
                            ? this.matchSegmentAgainstRoute(e, t, i, a, l)
                            : h && this.allowRedirects
                            ? this.expandSegmentAgainstRouteUsingRedirect(
                                  e,
                                  t,
                                  r,
                                  i,
                                  a,
                                  l
                              )
                            : VE(t)
                        : VE(t);
                }
                expandSegmentAgainstRouteUsingRedirect(e, t, r, i, a, l) {
                    return "**" === i.path
                        ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(
                              e,
                              r,
                              i,
                              l
                          )
                        : this.expandRegularSegmentAgainstRouteUsingRedirect(
                              e,
                              t,
                              r,
                              i,
                              a,
                              l
                          );
                }
                expandWildCardWithParamsAgainstRouteUsingRedirect(e, t, r, i) {
                    const a = this.applyRedirectCommands([], r.redirectTo, {});
                    return r.redirectTo.startsWith("/")
                        ? eL(a)
                        : this.lineralizeSegments(r, a).pipe(
                              (0, Es.z)((l) => {
                                  const h = new pn(l, {});
                                  return this.expandSegment(e, h, t, l, i, !1);
                              })
                          );
                }
                expandRegularSegmentAgainstRouteUsingRedirect(
                    e,
                    t,
                    r,
                    i,
                    a,
                    l
                ) {
                    const {
                        matched: h,
                        consumedSegments: _,
                        remainingSegments: E,
                        positionalParamSegments: D,
                    } = bT(t, i, a);
                    if (!h) return VE(t);
                    const T = this.applyRedirectCommands(_, i.redirectTo, D);
                    return i.redirectTo.startsWith("/")
                        ? eL(T)
                        : this.lineralizeSegments(i, T).pipe(
                              (0, Es.z)((R) =>
                                  this.expandSegment(
                                      e,
                                      t,
                                      r,
                                      R.concat(E),
                                      l,
                                      !1
                                  )
                              )
                          );
                }
                matchSegmentAgainstRoute(e, t, r, i, a) {
                    if ("**" === r.path)
                        return (
                            (e = qF(r, e)),
                            r.loadChildren
                                ? (r._loadedRoutes
                                      ? bt({
                                            routes: r._loadedRoutes,
                                            injector: r._loadedInjector,
                                        })
                                      : this.configLoader.loadChildren(e, r)
                                  ).pipe(
                                      (0, Mt.U)(
                                          (T) => (
                                              (r._loadedRoutes = T.routes),
                                              (r._loadedInjector = T.injector),
                                              new pn(i, {})
                                          )
                                      )
                                  )
                                : bt(new pn(i, {}))
                        );
                    const {
                        matched: l,
                        consumedSegments: h,
                        remainingSegments: _,
                    } = bT(t, r, i);
                    return l
                        ? ((e = qF(r, e)),
                          this.getChildConfig(e, r, i).pipe(
                              (0, Es.z)((D) => {
                                  const T = D.injector ?? e,
                                      R = D.routes,
                                      { segmentGroup: F, slicedSegments: K } =
                                          DT(t, h, _, R),
                                      Ie = new pn(F.segments, F.children);
                                  if (0 === K.length && Ie.hasChildren())
                                      return this.expandChildren(T, R, Ie).pipe(
                                          (0, Mt.U)((yt) => new pn(h, yt))
                                      );
                                  if (0 === R.length && 0 === K.length)
                                      return bt(new pn(h, {}));
                                  const Re = Jo(r) === a;
                                  return this.expandSegment(
                                      T,
                                      Ie,
                                      R,
                                      K,
                                      Re ? on : a,
                                      !0
                                  ).pipe(
                                      (0, Mt.U)(
                                          (_t) =>
                                              new pn(
                                                  h.concat(_t.segments),
                                                  _t.children
                                              )
                                      )
                                  );
                              })
                          ))
                        : VE(t);
                }
                getChildConfig(e, t, r) {
                    return t.children
                        ? bt({ routes: t.children, injector: e })
                        : t.loadChildren
                        ? void 0 !== t._loadedRoutes
                            ? bt({
                                  routes: t._loadedRoutes,
                                  injector: t._loadedInjector,
                              })
                            : this.runCanLoadGuards(e, t, r).pipe(
                                  (0, Es.z)((i) =>
                                      i
                                          ? this.configLoader
                                                .loadChildren(e, t)
                                                .pipe(
                                                    (0, Qi.b)((a) => {
                                                        (t._loadedRoutes =
                                                            a.routes),
                                                            (t._loadedInjector =
                                                                a.injector);
                                                    })
                                                )
                                          : (function BH(n) {
                                                return xE(ZM(ST));
                                            })()
                                  )
                              )
                        : bt({ routes: [], injector: e });
                }
                runCanLoadGuards(e, t, r) {
                    const i = t.canLoad;
                    if (!i || 0 === i.length) return bt(!0);
                    const a = i.map((l) => {
                        const h = e.get(l),
                            _ = (function MH(n) {
                                return n && CT(n.canLoad);
                            })(h)
                                ? h.canLoad(t, r)
                                : h(t, r);
                        return uh(_);
                    });
                    return bt(a).pipe(
                        LE(),
                        (0, Qi.b)((l) => {
                            if (!Lp(l)) return;
                            const h = ZM(KM + this.urlSerializer.serialize(l));
                            throw ((h.url = l), h);
                        }),
                        (0, Mt.U)((l) => !0 === l)
                    );
                }
                lineralizeSegments(e, t) {
                    let r = [],
                        i = t.root;
                    for (;;) {
                        if (
                            ((r = r.concat(i.segments)),
                            0 === i.numberOfChildren)
                        )
                            return bt(r);
                        if (i.numberOfChildren > 1 || !i.children[on])
                            return xE(new p.vHH(4e3, ST));
                        i = i.children[on];
                    }
                }
                applyRedirectCommands(e, t, r) {
                    return this.applyRedirectCreatreUrlTree(
                        t,
                        this.urlSerializer.parse(t),
                        e,
                        r
                    );
                }
                applyRedirectCreatreUrlTree(e, t, r, i) {
                    const a = this.createSegmentGroup(e, t.root, r, i);
                    return new Op(
                        a,
                        this.createQueryParams(
                            t.queryParams,
                            this.urlTree.queryParams
                        ),
                        t.fragment
                    );
                }
                createQueryParams(e, t) {
                    const r = {};
                    return (
                        Bi(e, (i, a) => {
                            if ("string" == typeof i && i.startsWith(":")) {
                                const h = i.substring(1);
                                r[a] = t[h];
                            } else r[a] = i;
                        }),
                        r
                    );
                }
                createSegmentGroup(e, t, r, i) {
                    const a = this.createSegments(e, t.segments, r, i);
                    let l = {};
                    return (
                        Bi(t.children, (h, _) => {
                            l[_] = this.createSegmentGroup(e, h, r, i);
                        }),
                        new pn(a, l)
                    );
                }
                createSegments(e, t, r, i) {
                    return t.map((a) =>
                        a.path.startsWith(":")
                            ? this.findPosParam(e, a, i)
                            : this.findOrReturn(a, r)
                    );
                }
                findPosParam(e, t, r) {
                    const i = r[t.path.substring(1)];
                    if (!i) throw new p.vHH(4001, ST);
                    return i;
                }
                findOrReturn(e, t) {
                    let r = 0;
                    for (const i of t) {
                        if (i.path === e.path) return t.splice(r), i;
                        r++;
                    }
                    return e;
                }
            }
            function cN(n) {
                const e = {};
                for (const r of Object.keys(n.children)) {
                    const a = cN(n.children[r]);
                    (a.segments.length > 0 || a.hasChildren()) && (e[r] = a);
                }
                return (function $H(n) {
                    if (1 === n.numberOfChildren && n.children[on]) {
                        const e = n.children[on];
                        return new pn(
                            n.segments.concat(e.segments),
                            e.children
                        );
                    }
                    return n;
                })(new pn(n.segments, e));
            }
            class tL {
                constructor(e) {
                    (this.path = e),
                        (this.route = this.path[this.path.length - 1]);
                }
            }
            class xT {
                constructor(e, t) {
                    (this.component = e), (this.route = t);
                }
            }
            function WH(n, e, t) {
                const r = n._root;
                return UE(r, e ? e._root : null, t, [r.value]);
            }
            function RT(n, e, t) {
                return (ZF(e) ?? t).get(n);
            }
            function UE(
                n,
                e,
                t,
                r,
                i = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
                const a = ty(e);
                return (
                    n.children.forEach((l) => {
                        (function qH(
                            n,
                            e,
                            t,
                            r,
                            i = {
                                canDeactivateChecks: [],
                                canActivateChecks: [],
                            }
                        ) {
                            const a = n.value,
                                l = e ? e.value : null,
                                h = t ? t.getContext(n.value.outlet) : null;
                            if (l && a.routeConfig === l.routeConfig) {
                                const _ = (function KH(n, e, t) {
                                    if ("function" == typeof t) return t(n, e);
                                    switch (t) {
                                        case "pathParamsChange":
                                            return !Fp(n.url, e.url);
                                        case "pathParamsOrQueryParamsChange":
                                            return (
                                                !Fp(n.url, e.url) ||
                                                !Uu(
                                                    n.queryParams,
                                                    e.queryParams
                                                )
                                            );
                                        case "always":
                                            return !0;
                                        case "paramsOrQueryParamsChange":
                                            return (
                                                !nN(n, e) ||
                                                !Uu(
                                                    n.queryParams,
                                                    e.queryParams
                                                )
                                            );
                                        default:
                                            return !nN(n, e);
                                    }
                                })(l, a, a.routeConfig.runGuardsAndResolvers);
                                _
                                    ? i.canActivateChecks.push(new tL(r))
                                    : ((a.data = l.data),
                                      (a._resolvedData = l._resolvedData)),
                                    UE(
                                        n,
                                        e,
                                        a.component
                                            ? h
                                                ? h.children
                                                : null
                                            : t,
                                        r,
                                        i
                                    ),
                                    _ &&
                                        h &&
                                        h.outlet &&
                                        h.outlet.isActivated &&
                                        i.canDeactivateChecks.push(
                                            new xT(h.outlet.component, l)
                                        );
                            } else
                                l && BE(e, h, i),
                                    i.canActivateChecks.push(new tL(r)),
                                    UE(
                                        n,
                                        null,
                                        a.component
                                            ? h
                                                ? h.children
                                                : null
                                            : t,
                                        r,
                                        i
                                    );
                        })(l, a[l.value.outlet], t, r.concat([l.value]), i),
                            delete a[l.value.outlet];
                    }),
                    Bi(a, (l, h) => BE(l, t.getContext(h), i)),
                    i
                );
            }
            function BE(n, e, t) {
                const r = ty(n),
                    i = n.value;
                Bi(r, (a, l) => {
                    BE(
                        a,
                        i.component ? (e ? e.children.getContext(l) : null) : e,
                        t
                    );
                }),
                    t.canDeactivateChecks.push(
                        new xT(
                            i.component && e && e.outlet && e.outlet.isActivated
                                ? e.outlet.component
                                : null,
                            i
                        )
                    );
            }
            class r$ {}
            function nL(n) {
                return new rs.y((e) => e.error(n));
            }
            class s$ {
                constructor(e, t, r, i, a, l) {
                    (this.rootComponentType = e),
                        (this.config = t),
                        (this.urlTree = r),
                        (this.url = i),
                        (this.paramsInheritanceStrategy = a),
                        (this.relativeLinkResolution = l);
                }
                recognize() {
                    const e = DT(
                            this.urlTree.root,
                            [],
                            [],
                            this.config.filter((l) => void 0 === l.redirectTo),
                            this.relativeLinkResolution
                        ).segmentGroup,
                        t = this.processSegmentGroup(this.config, e, on);
                    if (null === t) return null;
                    const r = new vT(
                            [],
                            Object.freeze({}),
                            Object.freeze({ ...this.urlTree.queryParams }),
                            this.urlTree.fragment,
                            {},
                            on,
                            this.rootComponentType,
                            null,
                            this.urlTree.root,
                            -1,
                            {}
                        ),
                        i = new ic(r, t),
                        a = new UF(this.url, i);
                    return this.inheritParamsAndData(a._root), a;
                }
                inheritParamsAndData(e) {
                    const t = e.value,
                        r = VF(t, this.paramsInheritanceStrategy);
                    (t.params = Object.freeze(r.params)),
                        (t.data = Object.freeze(r.data)),
                        e.children.forEach((i) => this.inheritParamsAndData(i));
                }
                processSegmentGroup(e, t, r) {
                    return 0 === t.segments.length && t.hasChildren()
                        ? this.processChildren(e, t)
                        : this.processSegment(e, t, t.segments, r);
                }
                processChildren(e, t) {
                    const r = [];
                    for (const a of Object.keys(t.children)) {
                        const l = t.children[a],
                            h = KF(e, a),
                            _ = this.processSegmentGroup(h, l, a);
                        if (null === _) return null;
                        r.push(..._);
                    }
                    const i = rL(r);
                    return (
                        (function o$(n) {
                            n.sort((e, t) =>
                                e.value.outlet === on
                                    ? -1
                                    : t.value.outlet === on
                                    ? 1
                                    : e.value.outlet.localeCompare(
                                          t.value.outlet
                                      )
                            );
                        })(i),
                        i
                    );
                }
                processSegment(e, t, r, i) {
                    for (const a of e) {
                        const l = this.processSegmentAgainstRoute(a, t, r, i);
                        if (null !== l) return l;
                    }
                    return JF(t, r, i) ? [] : null;
                }
                processSegmentAgainstRoute(e, t, r, i) {
                    if (e.redirectTo || !QF(e, t, r, i)) return null;
                    let a,
                        l = [],
                        h = [];
                    if ("**" === e.path) {
                        const F = r.length > 0 ? bF(r).parameters : {},
                            K = sL(t) + r.length;
                        a = new vT(
                            r,
                            F,
                            Object.freeze({ ...this.urlTree.queryParams }),
                            this.urlTree.fragment,
                            aL(e),
                            Jo(e),
                            e.component ?? e._loadedComponent ?? null,
                            e,
                            iL(t),
                            K,
                            uL(e),
                            K
                        );
                    } else {
                        const F = bT(t, e, r);
                        if (!F.matched) return null;
                        (l = F.consumedSegments), (h = F.remainingSegments);
                        const K = sL(t) + l.length;
                        a = new vT(
                            l,
                            F.parameters,
                            Object.freeze({ ...this.urlTree.queryParams }),
                            this.urlTree.fragment,
                            aL(e),
                            Jo(e),
                            e.component ?? e._loadedComponent ?? null,
                            e,
                            iL(t),
                            K,
                            uL(e),
                            K
                        );
                    }
                    const _ = (function a$(n) {
                            return n.children
                                ? n.children
                                : n.loadChildren
                                ? n._loadedRoutes
                                : [];
                        })(e),
                        { segmentGroup: E, slicedSegments: D } = DT(
                            t,
                            l,
                            h,
                            _.filter((F) => void 0 === F.redirectTo),
                            this.relativeLinkResolution
                        );
                    if (0 === D.length && E.hasChildren()) {
                        const F = this.processChildren(_, E);
                        return null === F ? null : [new ic(a, F)];
                    }
                    if (0 === _.length && 0 === D.length)
                        return [new ic(a, [])];
                    const T = Jo(e) === i,
                        R = this.processSegment(_, E, D, T ? on : i);
                    return null === R ? null : [new ic(a, R)];
                }
            }
            function u$(n) {
                const e = n.value.routeConfig;
                return e && "" === e.path && void 0 === e.redirectTo;
            }
            function rL(n) {
                const e = [],
                    t = new Set();
                for (const r of n) {
                    if (!u$(r)) {
                        e.push(r);
                        continue;
                    }
                    const i = e.find(
                        (a) => r.value.routeConfig === a.value.routeConfig
                    );
                    void 0 !== i
                        ? (i.children.push(...r.children), t.add(i))
                        : e.push(r);
                }
                for (const r of t) {
                    const i = rL(r.children);
                    e.push(new ic(r.value, i));
                }
                return e.filter((r) => !t.has(r));
            }
            function iL(n) {
                let e = n;
                for (; e._sourceSegment; ) e = e._sourceSegment;
                return e;
            }
            function sL(n) {
                let e = n,
                    t = e._segmentIndexShift ?? 0;
                for (; e._sourceSegment; )
                    (e = e._sourceSegment), (t += e._segmentIndexShift ?? 0);
                return t - 1;
            }
            function aL(n) {
                return n.data || {};
            }
            function uL(n) {
                return n.resolve || {};
            }
            const hN = Symbol("RouteTitle");
            function lL(n) {
                return "string" == typeof n.title || null === n.title;
            }
            function fN(n) {
                return fr((e) => {
                    const t = n(e);
                    return t ? (0, dn.D)(t).pipe((0, Mt.U)(() => e)) : bt(e);
                });
            }
            class _$ extends class m$ {
                shouldDetach(e) {
                    return !1;
                }
                store(e, t) {}
                shouldAttach(e) {
                    return !1;
                }
                retrieve(e) {
                    return null;
                }
                shouldReuseRoute(e, t) {
                    return e.routeConfig === t.routeConfig;
                }
            } {}
            const pN = new p.OlP("ROUTES");
            let gN = (() => {
                class n {
                    constructor(t, r) {
                        (this.injector = t),
                            (this.compiler = r),
                            (this.componentLoaders = new WeakMap()),
                            (this.childrenLoaders = new WeakMap());
                    }
                    loadComponent(t) {
                        if (this.componentLoaders.get(t))
                            return this.componentLoaders.get(t);
                        if (t._loadedComponent) return bt(t._loadedComponent);
                        this.onLoadStartListener && this.onLoadStartListener(t);
                        const r = uh(t.loadComponent()).pipe(
                                (0, Qi.b)((a) => {
                                    this.onLoadEndListener &&
                                        this.onLoadEndListener(t),
                                        (t._loadedComponent = a);
                                }),
                                zM(() => {
                                    this.componentLoaders.delete(t);
                                })
                            ),
                            i = new yF(r, () => new Cu.x()).pipe(GM());
                        return this.componentLoaders.set(t, i), i;
                    }
                    loadChildren(t, r) {
                        if (this.childrenLoaders.get(r))
                            return this.childrenLoaders.get(r);
                        if (r._loadedRoutes)
                            return bt({
                                routes: r._loadedRoutes,
                                injector: r._loadedInjector,
                            });
                        this.onLoadStartListener && this.onLoadStartListener(r);
                        const a = this.loadModuleFactoryOrRoutes(
                                r.loadChildren
                            ).pipe(
                                (0, Mt.U)((h) => {
                                    this.onLoadEndListener &&
                                        this.onLoadEndListener(r);
                                    let _,
                                        E,
                                        D = !1;
                                    Array.isArray(h)
                                        ? (E = h)
                                        : ((_ = h.create(t).injector),
                                          (E = CF(
                                              _.get(
                                                  pN,
                                                  [],
                                                  p.XFs.Self | p.XFs.Optional
                                              )
                                          )));
                                    return { routes: E.map(lN), injector: _ };
                                }),
                                zM(() => {
                                    this.childrenLoaders.delete(r);
                                })
                            ),
                            l = new yF(a, () => new Cu.x()).pipe(GM());
                        return this.childrenLoaders.set(r, l), l;
                    }
                    loadModuleFactoryOrRoutes(t) {
                        return uh(t()).pipe(
                            (0, Es.z)((r) =>
                                r instanceof p.YKP || Array.isArray(r)
                                    ? bt(r)
                                    : (0, dn.D)(
                                          this.compiler.compileModuleAsync(r)
                                      )
                            )
                        );
                    }
                }
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)(p.LFG(p.zs3), p.LFG(p.Sil));
                    }),
                    (n.ɵprov = p.Yz7({ token: n, factory: n.ɵfac })),
                    n
                );
            })();
            class v$ {
                shouldProcessUrl(e) {
                    return !0;
                }
                extract(e) {
                    return e;
                }
                merge(e, t) {
                    return e;
                }
            }
            function w$(n) {
                throw n;
            }
            function E$(n, e, t) {
                return e.parse("/");
            }
            const I$ = {
                    paths: "exact",
                    fragment: "ignored",
                    matrixParams: "ignored",
                    queryParams: "exact",
                },
                C$ = {
                    paths: "subset",
                    fragment: "ignored",
                    matrixParams: "ignored",
                    queryParams: "subset",
                };
            let ji = (() => {
                class n {
                    constructor(t, r, i, a, l, h, _) {
                        (this.rootComponentType = t),
                            (this.urlSerializer = r),
                            (this.rootContexts = i),
                            (this.location = a),
                            (this.config = _),
                            (this.lastSuccessfulNavigation = null),
                            (this.currentNavigation = null),
                            (this.disposed = !1),
                            (this.navigationId = 0),
                            (this.currentPageId = 0),
                            (this.isNgZoneEnabled = !1),
                            (this.events = new Cu.x()),
                            (this.errorHandler = w$),
                            (this.malformedUriErrorHandler = E$),
                            (this.navigated = !1),
                            (this.lastSuccessfulId = -1),
                            (this.afterPreactivation = () => bt(void 0)),
                            (this.urlHandlingStrategy = new v$()),
                            (this.routeReuseStrategy = new _$()),
                            (this.onSameUrlNavigation = "ignore"),
                            (this.paramsInheritanceStrategy = "emptyOnly"),
                            (this.urlUpdateStrategy = "deferred"),
                            (this.relativeLinkResolution = "corrected"),
                            (this.canceledNavigationResolution = "replace"),
                            (this.configLoader = l.get(gN)),
                            (this.configLoader.onLoadEndListener = (R) =>
                                this.triggerEvent(new Vj(R))),
                            (this.configLoader.onLoadStartListener = (R) =>
                                this.triggerEvent(new Lj(R))),
                            (this.ngModule = l.get(p.h0i)),
                            (this.console = l.get(p.c2e));
                        const T = l.get(p.R0b);
                        (this.isNgZoneEnabled =
                            T instanceof p.R0b && p.R0b.isInAngularZone()),
                            this.resetConfig(_),
                            (this.currentUrlTree = (function Kj() {
                                return new Op(new pn([], {}), {}, null);
                            })()),
                            (this.rawUrlTree = this.currentUrlTree),
                            (this.browserUrlTree = this.currentUrlTree),
                            (this.routerState = LF(
                                this.currentUrlTree,
                                this.rootComponentType
                            )),
                            (this.transitions = new ka({
                                id: 0,
                                targetPageId: 0,
                                currentUrlTree: this.currentUrlTree,
                                currentRawUrl: this.currentUrlTree,
                                extractedUrl: this.urlHandlingStrategy.extract(
                                    this.currentUrlTree
                                ),
                                urlAfterRedirects:
                                    this.urlHandlingStrategy.extract(
                                        this.currentUrlTree
                                    ),
                                rawUrl: this.currentUrlTree,
                                extras: {},
                                resolve: null,
                                reject: null,
                                promise: Promise.resolve(!0),
                                source: "imperative",
                                restoredState: null,
                                currentSnapshot: this.routerState.snapshot,
                                targetSnapshot: null,
                                currentRouterState: this.routerState,
                                targetRouterState: null,
                                guards: {
                                    canActivateChecks: [],
                                    canDeactivateChecks: [],
                                },
                                guardsResult: null,
                            })),
                            (this.navigations = this.setupNavigations(
                                this.transitions
                            )),
                            this.processNavigations();
                    }
                    get browserPageId() {
                        return this.location.getState()?.ɵrouterPageId;
                    }
                    setupNavigations(t) {
                        const r = this.events;
                        return t.pipe(
                            Ni((i) => 0 !== i.id),
                            (0, Mt.U)((i) => ({
                                ...i,
                                extractedUrl: this.urlHandlingStrategy.extract(
                                    i.rawUrl
                                ),
                            })),
                            fr((i) => {
                                let a = !1,
                                    l = !1;
                                return bt(i).pipe(
                                    (0, Qi.b)((h) => {
                                        this.currentNavigation = {
                                            id: h.id,
                                            initialUrl: h.rawUrl,
                                            extractedUrl: h.extractedUrl,
                                            trigger: h.source,
                                            extras: h.extras,
                                            previousNavigation: this
                                                .lastSuccessfulNavigation
                                                ? {
                                                      ...this
                                                          .lastSuccessfulNavigation,
                                                      previousNavigation: null,
                                                  }
                                                : null,
                                        };
                                    }),
                                    fr((h) => {
                                        const _ =
                                                this.browserUrlTree.toString(),
                                            E =
                                                !this.navigated ||
                                                h.extractedUrl.toString() !==
                                                    _ ||
                                                _ !==
                                                    this.currentUrlTree.toString();
                                        if (
                                            ("reload" ===
                                                this.onSameUrlNavigation ||
                                                E) &&
                                            this.urlHandlingStrategy.shouldProcessUrl(
                                                h.rawUrl
                                            )
                                        )
                                            return (
                                                hL(h.source) &&
                                                    (this.browserUrlTree =
                                                        h.extractedUrl),
                                                bt(h).pipe(
                                                    fr((T) => {
                                                        const R =
                                                            this.transitions.getValue();
                                                        return (
                                                            r.next(
                                                                new qM(
                                                                    T.id,
                                                                    this.serializeUrl(
                                                                        T.extractedUrl
                                                                    ),
                                                                    T.source,
                                                                    T.restoredState
                                                                )
                                                            ),
                                                            R !==
                                                            this.transitions.getValue()
                                                                ? Ul.E
                                                                : Promise.resolve(
                                                                      T
                                                                  )
                                                        );
                                                    }),
                                                    (function GH(n, e, t, r) {
                                                        return fr((i) =>
                                                            (function jH(
                                                                n,
                                                                e,
                                                                t,
                                                                r,
                                                                i
                                                            ) {
                                                                return new HH(
                                                                    n,
                                                                    e,
                                                                    t,
                                                                    r,
                                                                    i
                                                                ).apply();
                                                            })(
                                                                n,
                                                                e,
                                                                t,
                                                                i.extractedUrl,
                                                                r
                                                            ).pipe(
                                                                (0, Mt.U)(
                                                                    (a) => ({
                                                                        ...i,
                                                                        urlAfterRedirects:
                                                                            a,
                                                                    })
                                                                )
                                                            )
                                                        );
                                                    })(
                                                        this.ngModule.injector,
                                                        this.configLoader,
                                                        this.urlSerializer,
                                                        this.config
                                                    ),
                                                    (0, Qi.b)((T) => {
                                                        this.currentNavigation =
                                                            {
                                                                ...this
                                                                    .currentNavigation,
                                                                finalUrl:
                                                                    T.urlAfterRedirects,
                                                            };
                                                    }),
                                                    (function l$(
                                                        n,
                                                        e,
                                                        t,
                                                        r,
                                                        i
                                                    ) {
                                                        return (0, Es.z)((a) =>
                                                            (function i$(
                                                                n,
                                                                e,
                                                                t,
                                                                r,
                                                                i = "emptyOnly",
                                                                a = "legacy"
                                                            ) {
                                                                try {
                                                                    const l =
                                                                        new s$(
                                                                            n,
                                                                            e,
                                                                            t,
                                                                            r,
                                                                            i,
                                                                            a
                                                                        ).recognize();
                                                                    return null ===
                                                                        l
                                                                        ? nL(
                                                                              new r$()
                                                                          )
                                                                        : bt(l);
                                                                } catch (l) {
                                                                    return nL(
                                                                        l
                                                                    );
                                                                }
                                                            })(
                                                                n,
                                                                e,
                                                                a.urlAfterRedirects,
                                                                t(
                                                                    a.urlAfterRedirects
                                                                ),
                                                                r,
                                                                i
                                                            ).pipe(
                                                                (0, Mt.U)(
                                                                    (l) => ({
                                                                        ...a,
                                                                        targetSnapshot:
                                                                            l,
                                                                    })
                                                                )
                                                            )
                                                        );
                                                    })(
                                                        this.rootComponentType,
                                                        this.config,
                                                        (T) =>
                                                            this.serializeUrl(
                                                                T
                                                            ),
                                                        this
                                                            .paramsInheritanceStrategy,
                                                        this
                                                            .relativeLinkResolution
                                                    ),
                                                    (0, Qi.b)((T) => {
                                                        if (
                                                            "eager" ===
                                                            this
                                                                .urlUpdateStrategy
                                                        ) {
                                                            if (
                                                                !T.extras
                                                                    .skipLocationChange
                                                            ) {
                                                                const F =
                                                                    this.urlHandlingStrategy.merge(
                                                                        T.urlAfterRedirects,
                                                                        T.rawUrl
                                                                    );
                                                                this.setBrowserUrl(
                                                                    F,
                                                                    T
                                                                );
                                                            }
                                                            this.browserUrlTree =
                                                                T.urlAfterRedirects;
                                                        }
                                                        const R = new Nj(
                                                            T.id,
                                                            this.serializeUrl(
                                                                T.extractedUrl
                                                            ),
                                                            this.serializeUrl(
                                                                T.urlAfterRedirects
                                                            ),
                                                            T.targetSnapshot
                                                        );
                                                        r.next(R);
                                                    })
                                                )
                                            );
                                        if (
                                            E &&
                                            this.rawUrlTree &&
                                            this.urlHandlingStrategy.shouldProcessUrl(
                                                this.rawUrlTree
                                            )
                                        ) {
                                            const {
                                                    id: R,
                                                    extractedUrl: F,
                                                    source: K,
                                                    restoredState: Ie,
                                                    extras: Re,
                                                } = h,
                                                mt = new qM(
                                                    R,
                                                    this.serializeUrl(F),
                                                    K,
                                                    Ie
                                                );
                                            r.next(mt);
                                            const _t = LF(
                                                F,
                                                this.rootComponentType
                                            ).snapshot;
                                            return bt({
                                                ...h,
                                                targetSnapshot: _t,
                                                urlAfterRedirects: F,
                                                extras: {
                                                    ...Re,
                                                    skipLocationChange: !1,
                                                    replaceUrl: !1,
                                                },
                                            });
                                        }
                                        return (
                                            (this.rawUrlTree = h.rawUrl),
                                            h.resolve(null),
                                            Ul.E
                                        );
                                    }),
                                    (0, Qi.b)((h) => {
                                        const _ = new Pj(
                                            h.id,
                                            this.serializeUrl(h.extractedUrl),
                                            this.serializeUrl(
                                                h.urlAfterRedirects
                                            ),
                                            h.targetSnapshot
                                        );
                                        this.triggerEvent(_);
                                    }),
                                    (0, Mt.U)((h) => ({
                                        ...h,
                                        guards: WH(
                                            h.targetSnapshot,
                                            h.currentSnapshot,
                                            this.rootContexts
                                        ),
                                    })),
                                    (function ZH(n, e) {
                                        return (0, Es.z)((t) => {
                                            const {
                                                targetSnapshot: r,
                                                currentSnapshot: i,
                                                guards: {
                                                    canActivateChecks: a,
                                                    canDeactivateChecks: l,
                                                },
                                            } = t;
                                            return 0 === l.length &&
                                                0 === a.length
                                                ? bt({ ...t, guardsResult: !0 })
                                                : (function YH(n, e, t, r) {
                                                      return (0, dn.D)(n).pipe(
                                                          (0, Es.z)((i) =>
                                                              (function n$(
                                                                  n,
                                                                  e,
                                                                  t,
                                                                  r,
                                                                  i
                                                              ) {
                                                                  const a =
                                                                      e &&
                                                                      e.routeConfig
                                                                          ? e
                                                                                .routeConfig
                                                                                .canDeactivate
                                                                          : null;
                                                                  return a &&
                                                                      0 !==
                                                                          a.length
                                                                      ? bt(
                                                                            a.map(
                                                                                (
                                                                                    h
                                                                                ) => {
                                                                                    const _ =
                                                                                        RT(
                                                                                            h,
                                                                                            e,
                                                                                            i
                                                                                        );
                                                                                    return uh(
                                                                                        (function kH(
                                                                                            n
                                                                                        ) {
                                                                                            return (
                                                                                                n &&
                                                                                                CT(
                                                                                                    n.canDeactivate
                                                                                                )
                                                                                            );
                                                                                        })(
                                                                                            _
                                                                                        )
                                                                                            ? _.canDeactivate(
                                                                                                  n,
                                                                                                  e,
                                                                                                  t,
                                                                                                  r
                                                                                              )
                                                                                            : _(
                                                                                                  n,
                                                                                                  e,
                                                                                                  t,
                                                                                                  r
                                                                                              )
                                                                                    ).pipe(
                                                                                        Aa()
                                                                                    );
                                                                                }
                                                                            )
                                                                        ).pipe(
                                                                            LE()
                                                                        )
                                                                      : bt(!0);
                                                              })(
                                                                  i.component,
                                                                  i.route,
                                                                  t,
                                                                  e,
                                                                  r
                                                              )
                                                          ),
                                                          Aa(
                                                              (i) => !0 !== i,
                                                              !0
                                                          )
                                                      );
                                                  })(l, r, i, n).pipe(
                                                      (0, Es.z)((h) =>
                                                          h &&
                                                          (function RH(n) {
                                                              return (
                                                                  "boolean" ==
                                                                  typeof n
                                                              );
                                                          })(h)
                                                              ? (function QH(
                                                                    n,
                                                                    e,
                                                                    t,
                                                                    r
                                                                ) {
                                                                    return (0,
                                                                    dn.D)(
                                                                        e
                                                                    ).pipe(
                                                                        RE(
                                                                            (
                                                                                i
                                                                            ) =>
                                                                                ai(
                                                                                    (function XH(
                                                                                        n,
                                                                                        e
                                                                                    ) {
                                                                                        return (
                                                                                            null !==
                                                                                                n &&
                                                                                                e &&
                                                                                                e(
                                                                                                    new Uj(
                                                                                                        n
                                                                                                    )
                                                                                                ),
                                                                                            bt(
                                                                                                !0
                                                                                            )
                                                                                        );
                                                                                    })(
                                                                                        i
                                                                                            .route
                                                                                            .parent,
                                                                                        r
                                                                                    ),
                                                                                    (function JH(
                                                                                        n,
                                                                                        e
                                                                                    ) {
                                                                                        return (
                                                                                            null !==
                                                                                                n &&
                                                                                                e &&
                                                                                                e(
                                                                                                    new jj(
                                                                                                        n
                                                                                                    )
                                                                                                ),
                                                                                            bt(
                                                                                                !0
                                                                                            )
                                                                                        );
                                                                                    })(
                                                                                        i.route,
                                                                                        r
                                                                                    ),
                                                                                    (function t$(
                                                                                        n,
                                                                                        e,
                                                                                        t
                                                                                    ) {
                                                                                        const r =
                                                                                                e[
                                                                                                    e.length -
                                                                                                        1
                                                                                                ],
                                                                                            a =
                                                                                                e
                                                                                                    .slice(
                                                                                                        0,
                                                                                                        e.length -
                                                                                                            1
                                                                                                    )
                                                                                                    .reverse()
                                                                                                    .map(
                                                                                                        (
                                                                                                            l
                                                                                                        ) =>
                                                                                                            (function zH(
                                                                                                                n
                                                                                                            ) {
                                                                                                                const e =
                                                                                                                    n.routeConfig
                                                                                                                        ? n
                                                                                                                              .routeConfig
                                                                                                                              .canActivateChild
                                                                                                                        : null;
                                                                                                                return e &&
                                                                                                                    0 !==
                                                                                                                        e.length
                                                                                                                    ? {
                                                                                                                          node: n,
                                                                                                                          guards: e,
                                                                                                                      }
                                                                                                                    : null;
                                                                                                            })(
                                                                                                                l
                                                                                                            )
                                                                                                    )
                                                                                                    .filter(
                                                                                                        (
                                                                                                            l
                                                                                                        ) =>
                                                                                                            null !==
                                                                                                            l
                                                                                                    )
                                                                                                    .map(
                                                                                                        (
                                                                                                            l
                                                                                                        ) =>
                                                                                                            mF(
                                                                                                                () =>
                                                                                                                    bt(
                                                                                                                        l.guards.map(
                                                                                                                            (
                                                                                                                                _
                                                                                                                            ) => {
                                                                                                                                const E =
                                                                                                                                    RT(
                                                                                                                                        _,
                                                                                                                                        l.node,
                                                                                                                                        t
                                                                                                                                    );
                                                                                                                                return uh(
                                                                                                                                    (function PH(
                                                                                                                                        n
                                                                                                                                    ) {
                                                                                                                                        return (
                                                                                                                                            n &&
                                                                                                                                            CT(
                                                                                                                                                n.canActivateChild
                                                                                                                                            )
                                                                                                                                        );
                                                                                                                                    })(
                                                                                                                                        E
                                                                                                                                    )
                                                                                                                                        ? E.canActivateChild(
                                                                                                                                              r,
                                                                                                                                              n
                                                                                                                                          )
                                                                                                                                        : E(
                                                                                                                                              r,
                                                                                                                                              n
                                                                                                                                          )
                                                                                                                                ).pipe(
                                                                                                                                    Aa()
                                                                                                                                );
                                                                                                                            }
                                                                                                                        )
                                                                                                                    ).pipe(
                                                                                                                        LE()
                                                                                                                    )
                                                                                                            )
                                                                                                    );
                                                                                        return bt(
                                                                                            a
                                                                                        ).pipe(
                                                                                            LE()
                                                                                        );
                                                                                    })(
                                                                                        n,
                                                                                        i.path,
                                                                                        t
                                                                                    ),
                                                                                    (function e$(
                                                                                        n,
                                                                                        e,
                                                                                        t
                                                                                    ) {
                                                                                        const r =
                                                                                            e.routeConfig
                                                                                                ? e
                                                                                                      .routeConfig
                                                                                                      .canActivate
                                                                                                : null;
                                                                                        if (
                                                                                            !r ||
                                                                                            0 ===
                                                                                                r.length
                                                                                        )
                                                                                            return bt(
                                                                                                !0
                                                                                            );
                                                                                        const i =
                                                                                            r.map(
                                                                                                (
                                                                                                    a
                                                                                                ) =>
                                                                                                    mF(
                                                                                                        () => {
                                                                                                            const l =
                                                                                                                RT(
                                                                                                                    a,
                                                                                                                    e,
                                                                                                                    t
                                                                                                                );
                                                                                                            return uh(
                                                                                                                (function NH(
                                                                                                                    n
                                                                                                                ) {
                                                                                                                    return (
                                                                                                                        n &&
                                                                                                                        CT(
                                                                                                                            n.canActivate
                                                                                                                        )
                                                                                                                    );
                                                                                                                })(
                                                                                                                    l
                                                                                                                )
                                                                                                                    ? l.canActivate(
                                                                                                                          e,
                                                                                                                          n
                                                                                                                      )
                                                                                                                    : l(
                                                                                                                          e,
                                                                                                                          n
                                                                                                                      )
                                                                                                            ).pipe(
                                                                                                                Aa()
                                                                                                            );
                                                                                                        }
                                                                                                    )
                                                                                            );
                                                                                        return bt(
                                                                                            i
                                                                                        ).pipe(
                                                                                            LE()
                                                                                        );
                                                                                    })(
                                                                                        n,
                                                                                        i.route,
                                                                                        t
                                                                                    )
                                                                                )
                                                                        ),
                                                                        Aa(
                                                                            (
                                                                                i
                                                                            ) =>
                                                                                !0 !==
                                                                                i,
                                                                            !0
                                                                        )
                                                                    );
                                                                })(r, a, n, e)
                                                              : bt(h)
                                                      ),
                                                      (0, Mt.U)((h) => ({
                                                          ...t,
                                                          guardsResult: h,
                                                      }))
                                                  );
                                        });
                                    })(this.ngModule.injector, (h) =>
                                        this.triggerEvent(h)
                                    ),
                                    (0, Qi.b)((h) => {
                                        if (Lp(h.guardsResult)) {
                                            const E = ZM(
                                                `Redirecting to "${this.serializeUrl(
                                                    h.guardsResult
                                                )}"`
                                            );
                                            throw ((E.url = h.guardsResult), E);
                                        }
                                        const _ = new kj(
                                            h.id,
                                            this.serializeUrl(h.extractedUrl),
                                            this.serializeUrl(
                                                h.urlAfterRedirects
                                            ),
                                            h.targetSnapshot,
                                            !!h.guardsResult
                                        );
                                        this.triggerEvent(_);
                                    }),
                                    Ni(
                                        (h) =>
                                            !!h.guardsResult ||
                                            (this.restoreHistory(h),
                                            this.cancelNavigationTransition(
                                                h,
                                                ""
                                            ),
                                            !1)
                                    ),
                                    fN((h) => {
                                        if (h.guards.canActivateChecks.length)
                                            return bt(h).pipe(
                                                (0, Qi.b)((_) => {
                                                    const E = new Oj(
                                                        _.id,
                                                        this.serializeUrl(
                                                            _.extractedUrl
                                                        ),
                                                        this.serializeUrl(
                                                            _.urlAfterRedirects
                                                        ),
                                                        _.targetSnapshot
                                                    );
                                                    this.triggerEvent(E);
                                                }),
                                                fr((_) => {
                                                    let E = !1;
                                                    return bt(_).pipe(
                                                        (function c$(n, e) {
                                                            return (0, Es.z)(
                                                                (t) => {
                                                                    const {
                                                                        targetSnapshot:
                                                                            r,
                                                                        guards: {
                                                                            canActivateChecks:
                                                                                i,
                                                                        },
                                                                    } = t;
                                                                    if (
                                                                        !i.length
                                                                    )
                                                                        return bt(
                                                                            t
                                                                        );
                                                                    let a = 0;
                                                                    return (0,
                                                                    dn.D)(
                                                                        i
                                                                    ).pipe(
                                                                        RE(
                                                                            (
                                                                                l
                                                                            ) =>
                                                                                (function d$(
                                                                                    n,
                                                                                    e,
                                                                                    t,
                                                                                    r
                                                                                ) {
                                                                                    const i =
                                                                                            n.routeConfig,
                                                                                        a =
                                                                                            n._resolve;
                                                                                    return (
                                                                                        void 0 !==
                                                                                            i?.title &&
                                                                                            !lL(
                                                                                                i
                                                                                            ) &&
                                                                                            (a[
                                                                                                hN
                                                                                            ] =
                                                                                                i.title),
                                                                                        (function h$(
                                                                                            n,
                                                                                            e,
                                                                                            t,
                                                                                            r
                                                                                        ) {
                                                                                            const i =
                                                                                                (function f$(
                                                                                                    n
                                                                                                ) {
                                                                                                    return [
                                                                                                        ...Object.keys(
                                                                                                            n
                                                                                                        ),
                                                                                                        ...Object.getOwnPropertySymbols(
                                                                                                            n
                                                                                                        ),
                                                                                                    ];
                                                                                                })(
                                                                                                    n
                                                                                                );
                                                                                            if (
                                                                                                0 ===
                                                                                                i.length
                                                                                            )
                                                                                                return bt(
                                                                                                    {}
                                                                                                );
                                                                                            const a =
                                                                                                {};
                                                                                            return (0,
                                                                                            dn.D)(
                                                                                                i
                                                                                            ).pipe(
                                                                                                (0,
                                                                                                Es.z)(
                                                                                                    (
                                                                                                        l
                                                                                                    ) =>
                                                                                                        (function p$(
                                                                                                            n,
                                                                                                            e,
                                                                                                            t,
                                                                                                            r
                                                                                                        ) {
                                                                                                            const i =
                                                                                                                RT(
                                                                                                                    n,
                                                                                                                    e,
                                                                                                                    r
                                                                                                                );
                                                                                                            return uh(
                                                                                                                i.resolve
                                                                                                                    ? i.resolve(
                                                                                                                          e,
                                                                                                                          t
                                                                                                                      )
                                                                                                                    : i(
                                                                                                                          e,
                                                                                                                          t
                                                                                                                      )
                                                                                                            );
                                                                                                        })(
                                                                                                            n[
                                                                                                                l
                                                                                                            ],
                                                                                                            e,
                                                                                                            t,
                                                                                                            r
                                                                                                        ).pipe(
                                                                                                            Aa(),
                                                                                                            (0,
                                                                                                            Qi.b)(
                                                                                                                (
                                                                                                                    h
                                                                                                                ) => {
                                                                                                                    a[
                                                                                                                        l
                                                                                                                    ] =
                                                                                                                        h;
                                                                                                                }
                                                                                                            )
                                                                                                        )
                                                                                                ),
                                                                                                WM(
                                                                                                    1
                                                                                                ),
                                                                                                (function Mj(
                                                                                                    n
                                                                                                ) {
                                                                                                    return (0,
                                                                                                    Mt.U)(
                                                                                                        () =>
                                                                                                            n
                                                                                                    );
                                                                                                })(
                                                                                                    a
                                                                                                ),
                                                                                                Pp(
                                                                                                    (
                                                                                                        l
                                                                                                    ) =>
                                                                                                        l instanceof
                                                                                                        Dd
                                                                                                            ? Ul.E
                                                                                                            : xE(
                                                                                                                  l
                                                                                                              )
                                                                                                )
                                                                                            );
                                                                                        })(
                                                                                            a,
                                                                                            n,
                                                                                            e,
                                                                                            r
                                                                                        ).pipe(
                                                                                            (0,
                                                                                            Mt.U)(
                                                                                                (
                                                                                                    l
                                                                                                ) => (
                                                                                                    (n._resolvedData =
                                                                                                        l),
                                                                                                    (n.data =
                                                                                                        VF(
                                                                                                            n,
                                                                                                            t
                                                                                                        ).resolve),
                                                                                                    i &&
                                                                                                        lL(
                                                                                                            i
                                                                                                        ) &&
                                                                                                        (n.data[
                                                                                                            hN
                                                                                                        ] =
                                                                                                            i.title),
                                                                                                    null
                                                                                                )
                                                                                            )
                                                                                        )
                                                                                    );
                                                                                })(
                                                                                    l.route,
                                                                                    r,
                                                                                    n,
                                                                                    e
                                                                                )
                                                                        ),
                                                                        (0,
                                                                        Qi.b)(
                                                                            () =>
                                                                                a++
                                                                        ),
                                                                        WM(1),
                                                                        (0,
                                                                        Es.z)(
                                                                            (
                                                                                l
                                                                            ) =>
                                                                                a ===
                                                                                i.length
                                                                                    ? bt(
                                                                                          t
                                                                                      )
                                                                                    : Ul.E
                                                                        )
                                                                    );
                                                                }
                                                            );
                                                        })(
                                                            this
                                                                .paramsInheritanceStrategy,
                                                            this.ngModule
                                                                .injector
                                                        ),
                                                        (0, Qi.b)({
                                                            next: () =>
                                                                (E = !0),
                                                            complete: () => {
                                                                E ||
                                                                    (this.restoreHistory(
                                                                        _
                                                                    ),
                                                                    this.cancelNavigationTransition(
                                                                        _,
                                                                        "At least one route resolver didn't emit any value."
                                                                    ));
                                                            },
                                                        })
                                                    );
                                                }),
                                                (0, Qi.b)((_) => {
                                                    const E = new Fj(
                                                        _.id,
                                                        this.serializeUrl(
                                                            _.extractedUrl
                                                        ),
                                                        this.serializeUrl(
                                                            _.urlAfterRedirects
                                                        ),
                                                        _.targetSnapshot
                                                    );
                                                    this.triggerEvent(E);
                                                })
                                            );
                                    }),
                                    fN((h) => {
                                        const _ = (E) => {
                                            const D = [];
                                            E.routeConfig?.loadComponent &&
                                                !E.routeConfig
                                                    ._loadedComponent &&
                                                D.push(
                                                    this.configLoader
                                                        .loadComponent(
                                                            E.routeConfig
                                                        )
                                                        .pipe(
                                                            (0, Qi.b)((T) => {
                                                                E.component = T;
                                                            }),
                                                            (0, Mt.U)(() => {})
                                                        )
                                                );
                                            for (const T of E.children)
                                                D.push(..._(T));
                                            return D;
                                        };
                                        return pF(
                                            _(h.targetSnapshot.root)
                                        ).pipe(xw(), Hf(1));
                                    }),
                                    fN(() => this.afterPreactivation()),
                                    (0, Mt.U)((h) => {
                                        const _ = (function hH(n, e, t) {
                                            const r = PE(
                                                n,
                                                e._root,
                                                t ? t._root : void 0
                                            );
                                            return new FF(r, e);
                                        })(
                                            this.routeReuseStrategy,
                                            h.targetSnapshot,
                                            h.currentRouterState
                                        );
                                        return { ...h, targetRouterState: _ };
                                    }),
                                    (0, Qi.b)((h) => {
                                        (this.currentUrlTree =
                                            h.urlAfterRedirects),
                                            (this.rawUrlTree =
                                                this.urlHandlingStrategy.merge(
                                                    h.urlAfterRedirects,
                                                    h.rawUrl
                                                )),
                                            (this.routerState =
                                                h.targetRouterState),
                                            "deferred" ===
                                                this.urlUpdateStrategy &&
                                                (h.extras.skipLocationChange ||
                                                    this.setBrowserUrl(
                                                        this.rawUrlTree,
                                                        h
                                                    ),
                                                (this.browserUrlTree =
                                                    h.urlAfterRedirects));
                                    }),
                                    ((n, e, t) =>
                                        (0, Mt.U)(
                                            (r) => (
                                                new xH(
                                                    e,
                                                    r.targetRouterState,
                                                    r.currentRouterState,
                                                    t
                                                ).activate(n),
                                                r
                                            )
                                        ))(
                                        this.rootContexts,
                                        this.routeReuseStrategy,
                                        (h) => this.triggerEvent(h)
                                    ),
                                    (0, Qi.b)({
                                        next() {
                                            a = !0;
                                        },
                                        complete() {
                                            a = !0;
                                        },
                                    }),
                                    zM(() => {
                                        a ||
                                            l ||
                                            this.cancelNavigationTransition(
                                                i,
                                                `Navigation ID ${i.id} is not equal to the current navigation id ${this.navigationId}`
                                            ),
                                            this.currentNavigation?.id ===
                                                i.id &&
                                                (this.currentNavigation = null);
                                    }),
                                    Pp((h) => {
                                        if (
                                            ((l = !0),
                                            (function Wj(n) {
                                                return n && n[EF];
                                            })(h))
                                        ) {
                                            const _ = Lp(h.url);
                                            _ ||
                                                ((this.navigated = !0),
                                                this.restoreHistory(i, !0));
                                            const E = new fT(
                                                i.id,
                                                this.serializeUrl(
                                                    i.extractedUrl
                                                ),
                                                h.message
                                            );
                                            if ((r.next(E), _)) {
                                                const D =
                                                        this.urlHandlingStrategy.merge(
                                                            h.url,
                                                            this.rawUrlTree
                                                        ),
                                                    T = {
                                                        skipLocationChange:
                                                            i.extras
                                                                .skipLocationChange,
                                                        replaceUrl:
                                                            "eager" ===
                                                                this
                                                                    .urlUpdateStrategy ||
                                                            hL(i.source),
                                                    };
                                                this.scheduleNavigation(
                                                    D,
                                                    "imperative",
                                                    null,
                                                    T,
                                                    {
                                                        resolve: i.resolve,
                                                        reject: i.reject,
                                                        promise: i.promise,
                                                    }
                                                );
                                            } else i.resolve(!1);
                                        } else {
                                            this.restoreHistory(i, !0);
                                            const _ = new vF(
                                                i.id,
                                                this.serializeUrl(
                                                    i.extractedUrl
                                                ),
                                                h
                                            );
                                            r.next(_);
                                            try {
                                                i.resolve(this.errorHandler(h));
                                            } catch (E) {
                                                i.reject(E);
                                            }
                                        }
                                        return Ul.E;
                                    })
                                );
                            })
                        );
                    }
                    resetRootComponentType(t) {
                        (this.rootComponentType = t),
                            (this.routerState.root.component =
                                this.rootComponentType);
                    }
                    setTransition(t) {
                        this.transitions.next({
                            ...this.transitions.value,
                            ...t,
                        });
                    }
                    initialNavigation() {
                        this.setUpLocationChangeListener(),
                            0 === this.navigationId &&
                                this.navigateByUrl(this.location.path(!0), {
                                    replaceUrl: !0,
                                });
                    }
                    setUpLocationChangeListener() {
                        this.locationSubscription ||
                            (this.locationSubscription =
                                this.location.subscribe((t) => {
                                    const r =
                                        "popstate" === t.type
                                            ? "popstate"
                                            : "hashchange";
                                    "popstate" === r &&
                                        setTimeout(() => {
                                            const i = { replaceUrl: !0 },
                                                a = t.state?.navigationId
                                                    ? t.state
                                                    : null;
                                            if (a) {
                                                const h = { ...a };
                                                delete h.navigationId,
                                                    delete h.ɵrouterPageId,
                                                    0 !==
                                                        Object.keys(h).length &&
                                                        (i.state = h);
                                            }
                                            const l = this.parseUrl(t.url);
                                            this.scheduleNavigation(l, r, a, i);
                                        }, 0);
                                }));
                    }
                    get url() {
                        return this.serializeUrl(this.currentUrlTree);
                    }
                    getCurrentNavigation() {
                        return this.currentNavigation;
                    }
                    triggerEvent(t) {
                        this.events.next(t);
                    }
                    resetConfig(t) {
                        (this.config = t.map(lN)),
                            (this.navigated = !1),
                            (this.lastSuccessfulId = -1);
                    }
                    ngOnDestroy() {
                        this.dispose();
                    }
                    dispose() {
                        this.transitions.complete(),
                            this.locationSubscription &&
                                (this.locationSubscription.unsubscribe(),
                                (this.locationSubscription = void 0)),
                            (this.disposed = !0);
                    }
                    createUrlTree(t, r = {}) {
                        const {
                                relativeTo: i,
                                queryParams: a,
                                fragment: l,
                                queryParamsHandling: h,
                                preserveFragment: _,
                            } = r,
                            E = i || this.routerState.root,
                            D = _ ? this.currentUrlTree.fragment : l;
                        let T = null;
                        switch (h) {
                            case "merge":
                                T = {
                                    ...this.currentUrlTree.queryParams,
                                    ...a,
                                };
                                break;
                            case "preserve":
                                T = this.currentUrlTree.queryParams;
                                break;
                            default:
                                T = a || null;
                        }
                        return (
                            null !== T && (T = this.removeEmptyProps(T)),
                            (function gH(n, e, t, r, i) {
                                if (0 === t.length)
                                    return iN(e.root, e.root, e.root, r, i);
                                const a = (function mH(n) {
                                    if (
                                        "string" == typeof n[0] &&
                                        1 === n.length &&
                                        "/" === n[0]
                                    )
                                        return new HF(!0, 0, n);
                                    let e = 0,
                                        t = !1;
                                    const r = n.reduce((i, a, l) => {
                                        if ("object" == typeof a && null != a) {
                                            if (a.outlets) {
                                                const h = {};
                                                return (
                                                    Bi(a.outlets, (_, E) => {
                                                        h[E] =
                                                            "string" == typeof _
                                                                ? _.split("/")
                                                                : _;
                                                    }),
                                                    [...i, { outlets: h }]
                                                );
                                            }
                                            if (a.segmentPath)
                                                return [...i, a.segmentPath];
                                        }
                                        return "string" != typeof a
                                            ? [...i, a]
                                            : 0 === l
                                            ? (a.split("/").forEach((h, _) => {
                                                  (0 == _ && "." === h) ||
                                                      (0 == _ && "" === h
                                                          ? (t = !0)
                                                          : ".." === h
                                                          ? e++
                                                          : "" != h &&
                                                            i.push(h));
                                              }),
                                              i)
                                            : [...i, a];
                                    }, []);
                                    return new HF(t, e, r);
                                })(t);
                                return a.toRoot()
                                    ? iN(e.root, e.root, new pn([], {}), r, i)
                                    : (function l(_) {
                                          const E = (function _H(n, e, t, r) {
                                                  return n.isAbsolute
                                                      ? new sN(e.root, !0, 0)
                                                      : -1 === r
                                                      ? new sN(
                                                            t,
                                                            t === e.root,
                                                            0
                                                        )
                                                      : (function yH(n, e, t) {
                                                            let r = n,
                                                                i = e,
                                                                a = t;
                                                            for (; a > i; ) {
                                                                if (
                                                                    ((a -= i),
                                                                    (r =
                                                                        r.parent),
                                                                    !r)
                                                                )
                                                                    throw new p.vHH(
                                                                        4005,
                                                                        !1
                                                                    );
                                                                i =
                                                                    r.segments
                                                                        .length;
                                                            }
                                                            return new sN(
                                                                r,
                                                                !1,
                                                                i - a
                                                            );
                                                        })(
                                                            t,
                                                            r +
                                                                (wT(
                                                                    n
                                                                        .commands[0]
                                                                )
                                                                    ? 0
                                                                    : 1),
                                                            n.numberOfDoubleDots
                                                        );
                                              })(
                                                  a,
                                                  e,
                                                  n.snapshot?._urlSegment,
                                                  _
                                              ),
                                              D = E.processChildren
                                                  ? ET(
                                                        E.segmentGroup,
                                                        E.index,
                                                        a.commands
                                                    )
                                                  : $F(
                                                        E.segmentGroup,
                                                        E.index,
                                                        a.commands
                                                    );
                                          return iN(
                                              e.root,
                                              E.segmentGroup,
                                              D,
                                              r,
                                              i
                                          );
                                      })(n.snapshot?._lastPathIndex);
                            })(E, this.currentUrlTree, t, T, D ?? null)
                        );
                    }
                    navigateByUrl(t, r = { skipLocationChange: !1 }) {
                        const i = Lp(t) ? t : this.parseUrl(t),
                            a = this.urlHandlingStrategy.merge(
                                i,
                                this.rawUrlTree
                            );
                        return this.scheduleNavigation(
                            a,
                            "imperative",
                            null,
                            r
                        );
                    }
                    navigate(t, r = { skipLocationChange: !1 }) {
                        return (
                            (function b$(n) {
                                for (let e = 0; e < n.length; e++) {
                                    if (null == n[e]) throw new p.vHH(4008, !1);
                                }
                            })(t),
                            this.navigateByUrl(this.createUrlTree(t, r), r)
                        );
                    }
                    serializeUrl(t) {
                        return this.urlSerializer.serialize(t);
                    }
                    parseUrl(t) {
                        let r;
                        try {
                            r = this.urlSerializer.parse(t);
                        } catch (i) {
                            r = this.malformedUriErrorHandler(
                                i,
                                this.urlSerializer,
                                t
                            );
                        }
                        return r;
                    }
                    isActive(t, r) {
                        let i;
                        if (
                            ((i =
                                !0 === r
                                    ? { ...I$ }
                                    : !1 === r
                                    ? { ...C$ }
                                    : r),
                            Lp(t))
                        )
                            return TF(this.currentUrlTree, t, i);
                        const a = this.parseUrl(t);
                        return TF(this.currentUrlTree, a, i);
                    }
                    removeEmptyProps(t) {
                        return Object.keys(t).reduce((r, i) => {
                            const a = t[i];
                            return null != a && (r[i] = a), r;
                        }, {});
                    }
                    processNavigations() {
                        this.navigations.subscribe(
                            (t) => {
                                (this.navigated = !0),
                                    (this.lastSuccessfulId = t.id),
                                    (this.currentPageId = t.targetPageId),
                                    this.events.next(
                                        new kp(
                                            t.id,
                                            this.serializeUrl(t.extractedUrl),
                                            this.serializeUrl(
                                                this.currentUrlTree
                                            )
                                        )
                                    ),
                                    (this.lastSuccessfulNavigation =
                                        this.currentNavigation),
                                    this.titleStrategy?.updateTitle(
                                        this.routerState.snapshot
                                    ),
                                    t.resolve(!0);
                            },
                            (t) => {
                                this.console.warn(
                                    `Unhandled Navigation Error: ${t}`
                                );
                            }
                        );
                    }
                    scheduleNavigation(t, r, i, a, l) {
                        if (this.disposed) return Promise.resolve(!1);
                        let h, _, E;
                        l
                            ? ((h = l.resolve), (_ = l.reject), (E = l.promise))
                            : (E = new Promise((R, F) => {
                                  (h = R), (_ = F);
                              }));
                        const D = ++this.navigationId;
                        let T;
                        return (
                            "computed" === this.canceledNavigationResolution
                                ? (0 === this.currentPageId &&
                                      (i = this.location.getState()),
                                  (T =
                                      i && i.ɵrouterPageId
                                          ? i.ɵrouterPageId
                                          : a.replaceUrl || a.skipLocationChange
                                          ? this.browserPageId ?? 0
                                          : (this.browserPageId ?? 0) + 1))
                                : (T = 0),
                            this.setTransition({
                                id: D,
                                targetPageId: T,
                                source: r,
                                restoredState: i,
                                currentUrlTree: this.currentUrlTree,
                                currentRawUrl: this.rawUrlTree,
                                rawUrl: t,
                                extras: a,
                                resolve: h,
                                reject: _,
                                promise: E,
                                currentSnapshot: this.routerState.snapshot,
                                currentRouterState: this.routerState,
                            }),
                            E.catch((R) => Promise.reject(R))
                        );
                    }
                    setBrowserUrl(t, r) {
                        const i = this.urlSerializer.serialize(t),
                            a = {
                                ...r.extras.state,
                                ...this.generateNgRouterState(
                                    r.id,
                                    r.targetPageId
                                ),
                            };
                        this.location.isCurrentPathEqualTo(i) ||
                        r.extras.replaceUrl
                            ? this.location.replaceState(i, "", a)
                            : this.location.go(i, "", a);
                    }
                    restoreHistory(t, r = !1) {
                        if ("computed" === this.canceledNavigationResolution) {
                            const i = this.currentPageId - t.targetPageId;
                            ("popstate" !== t.source &&
                                "eager" !== this.urlUpdateStrategy &&
                                this.currentUrlTree !==
                                    this.currentNavigation?.finalUrl) ||
                            0 === i
                                ? this.currentUrlTree ===
                                      this.currentNavigation?.finalUrl &&
                                  0 === i &&
                                  (this.resetState(t),
                                  (this.browserUrlTree = t.currentUrlTree),
                                  this.resetUrlToCurrentUrlTree())
                                : this.location.historyGo(i);
                        } else
                            "replace" === this.canceledNavigationResolution &&
                                (r && this.resetState(t),
                                this.resetUrlToCurrentUrlTree());
                    }
                    resetState(t) {
                        (this.routerState = t.currentRouterState),
                            (this.currentUrlTree = t.currentUrlTree),
                            (this.rawUrlTree = this.urlHandlingStrategy.merge(
                                this.currentUrlTree,
                                t.rawUrl
                            ));
                    }
                    resetUrlToCurrentUrlTree() {
                        this.location.replaceState(
                            this.urlSerializer.serialize(this.rawUrlTree),
                            "",
                            this.generateNgRouterState(
                                this.lastSuccessfulId,
                                this.currentPageId
                            )
                        );
                    }
                    cancelNavigationTransition(t, r) {
                        const i = new fT(
                            t.id,
                            this.serializeUrl(t.extractedUrl),
                            r
                        );
                        this.triggerEvent(i), t.resolve(!1);
                    }
                    generateNgRouterState(t, r) {
                        return "computed" === this.canceledNavigationResolution
                            ? { navigationId: t, ɵrouterPageId: r }
                            : { navigationId: t };
                    }
                }
                return (
                    (n.ɵfac = function (t) {
                        p.$Z();
                    }),
                    (n.ɵprov = p.Yz7({ token: n, factory: n.ɵfac })),
                    n
                );
            })();
            function hL(n) {
                return "imperative" !== n;
            }
            let mN = (() => {
                    class n {
                        constructor(t, r, i, a, l) {
                            (this.router = t),
                                (this.route = r),
                                (this.tabIndexAttribute = i),
                                (this.renderer = a),
                                (this.el = l),
                                (this.commands = null),
                                (this.onChanges = new Cu.x()),
                                this.setTabIndexIfNotOnNativeEl("0");
                        }
                        setTabIndexIfNotOnNativeEl(t) {
                            if (null != this.tabIndexAttribute) return;
                            const r = this.renderer,
                                i = this.el.nativeElement;
                            null !== t
                                ? r.setAttribute(i, "tabindex", t)
                                : r.removeAttribute(i, "tabindex");
                        }
                        ngOnChanges(t) {
                            this.onChanges.next(this);
                        }
                        set routerLink(t) {
                            null != t
                                ? ((this.commands = Array.isArray(t) ? t : [t]),
                                  this.setTabIndexIfNotOnNativeEl("0"))
                                : ((this.commands = null),
                                  this.setTabIndexIfNotOnNativeEl(null));
                        }
                        onClick() {
                            if (null === this.urlTree) return !0;
                            const t = {
                                skipLocationChange: (0, p.D6c)(
                                    this.skipLocationChange
                                ),
                                replaceUrl: (0, p.D6c)(this.replaceUrl),
                                state: this.state,
                            };
                            return (
                                this.router.navigateByUrl(this.urlTree, t), !0
                            );
                        }
                        get urlTree() {
                            return null === this.commands
                                ? null
                                : this.router.createUrlTree(this.commands, {
                                      relativeTo:
                                          void 0 !== this.relativeTo
                                              ? this.relativeTo
                                              : this.route,
                                      queryParams: this.queryParams,
                                      fragment: this.fragment,
                                      queryParamsHandling:
                                          this.queryParamsHandling,
                                      preserveFragment: (0, p.D6c)(
                                          this.preserveFragment
                                      ),
                                  });
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(
                                p.Y36(ji),
                                p.Y36(ny),
                                p.$8M("tabindex"),
                                p.Y36(p.Qsj),
                                p.Y36(p.SBq)
                            );
                        }),
                        (n.ɵdir = p.lG2({
                            type: n,
                            selectors: [
                                ["", "routerLink", "", 5, "a", 5, "area"],
                            ],
                            hostBindings: function (t, r) {
                                1 & t &&
                                    p.NdJ("click", function () {
                                        return r.onClick();
                                    });
                            },
                            inputs: {
                                queryParams: "queryParams",
                                fragment: "fragment",
                                queryParamsHandling: "queryParamsHandling",
                                preserveFragment: "preserveFragment",
                                skipLocationChange: "skipLocationChange",
                                replaceUrl: "replaceUrl",
                                state: "state",
                                relativeTo: "relativeTo",
                                routerLink: "routerLink",
                            },
                            features: [p.TTD],
                        })),
                        n
                    );
                })(),
                MT = (() => {
                    class n {
                        constructor(t, r, i) {
                            (this.router = t),
                                (this.route = r),
                                (this.locationStrategy = i),
                                (this.commands = null),
                                (this.href = null),
                                (this.onChanges = new Cu.x()),
                                (this.subscription = t.events.subscribe((a) => {
                                    a instanceof kp &&
                                        this.updateTargetUrlAndHref();
                                }));
                        }
                        set routerLink(t) {
                            this.commands =
                                null != t ? (Array.isArray(t) ? t : [t]) : null;
                        }
                        ngOnChanges(t) {
                            this.updateTargetUrlAndHref(),
                                this.onChanges.next(this);
                        }
                        ngOnDestroy() {
                            this.subscription.unsubscribe();
                        }
                        onClick(t, r, i, a, l) {
                            if (
                                0 !== t ||
                                r ||
                                i ||
                                a ||
                                l ||
                                ("string" == typeof this.target &&
                                    "_self" != this.target) ||
                                null === this.urlTree
                            )
                                return !0;
                            const h = {
                                skipLocationChange: (0, p.D6c)(
                                    this.skipLocationChange
                                ),
                                replaceUrl: (0, p.D6c)(this.replaceUrl),
                                state: this.state,
                            };
                            return (
                                this.router.navigateByUrl(this.urlTree, h), !1
                            );
                        }
                        updateTargetUrlAndHref() {
                            this.href =
                                null !== this.urlTree
                                    ? this.locationStrategy.prepareExternalUrl(
                                          this.router.serializeUrl(this.urlTree)
                                      )
                                    : null;
                        }
                        get urlTree() {
                            return null === this.commands
                                ? null
                                : this.router.createUrlTree(this.commands, {
                                      relativeTo:
                                          void 0 !== this.relativeTo
                                              ? this.relativeTo
                                              : this.route,
                                      queryParams: this.queryParams,
                                      fragment: this.fragment,
                                      queryParamsHandling:
                                          this.queryParamsHandling,
                                      preserveFragment: (0, p.D6c)(
                                          this.preserveFragment
                                      ),
                                  });
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(
                                p.Y36(ji),
                                p.Y36(ny),
                                p.Y36(ce)
                            );
                        }),
                        (n.ɵdir = p.lG2({
                            type: n,
                            selectors: [
                                ["a", "routerLink", ""],
                                ["area", "routerLink", ""],
                            ],
                            hostVars: 2,
                            hostBindings: function (t, r) {
                                1 & t &&
                                    p.NdJ("click", function (a) {
                                        return r.onClick(
                                            a.button,
                                            a.ctrlKey,
                                            a.shiftKey,
                                            a.altKey,
                                            a.metaKey
                                        );
                                    }),
                                    2 & t &&
                                        p.uIk("target", r.target)(
                                            "href",
                                            r.href,
                                            p.LSH
                                        );
                            },
                            inputs: {
                                target: "target",
                                queryParams: "queryParams",
                                fragment: "fragment",
                                queryParamsHandling: "queryParamsHandling",
                                preserveFragment: "preserveFragment",
                                skipLocationChange: "skipLocationChange",
                                replaceUrl: "replaceUrl",
                                state: "state",
                                relativeTo: "relativeTo",
                                routerLink: "routerLink",
                            },
                            features: [p.TTD],
                        })),
                        n
                    );
                })(),
                fL = (() => {
                    class n {
                        constructor(t, r, i, a, l, h) {
                            (this.router = t),
                                (this.element = r),
                                (this.renderer = i),
                                (this.cdr = a),
                                (this.link = l),
                                (this.linkWithHref = h),
                                (this.classes = []),
                                (this.isActive = !1),
                                (this.routerLinkActiveOptions = { exact: !1 }),
                                (this.isActiveChange = new p.vpe()),
                                (this.routerEventsSubscription =
                                    t.events.subscribe((_) => {
                                        _ instanceof kp && this.update();
                                    }));
                        }
                        ngAfterContentInit() {
                            bt(
                                this.links.changes,
                                this.linksWithHrefs.changes,
                                bt(null)
                            )
                                .pipe((0, kd.J)())
                                .subscribe((t) => {
                                    this.update(),
                                        this.subscribeToEachLinkOnChanges();
                                });
                        }
                        subscribeToEachLinkOnChanges() {
                            this.linkInputChangesSubscription?.unsubscribe();
                            const t = [
                                ...this.links.toArray(),
                                ...this.linksWithHrefs.toArray(),
                                this.link,
                                this.linkWithHref,
                            ]
                                .filter((r) => !!r)
                                .map((r) => r.onChanges);
                            this.linkInputChangesSubscription = (0, dn.D)(t)
                                .pipe((0, kd.J)())
                                .subscribe((r) => {
                                    this.isActive !==
                                        this.isLinkActive(this.router)(r) &&
                                        this.update();
                                });
                        }
                        set routerLinkActive(t) {
                            const r = Array.isArray(t) ? t : t.split(" ");
                            this.classes = r.filter((i) => !!i);
                        }
                        ngOnChanges(t) {
                            this.update();
                        }
                        ngOnDestroy() {
                            this.routerEventsSubscription.unsubscribe(),
                                this.linkInputChangesSubscription?.unsubscribe();
                        }
                        update() {
                            !this.links ||
                                !this.linksWithHrefs ||
                                !this.router.navigated ||
                                Promise.resolve().then(() => {
                                    const t = this.hasActiveLinks();
                                    this.isActive !== t &&
                                        ((this.isActive = t),
                                        this.cdr.markForCheck(),
                                        this.classes.forEach((r) => {
                                            t
                                                ? this.renderer.addClass(
                                                      this.element
                                                          .nativeElement,
                                                      r
                                                  )
                                                : this.renderer.removeClass(
                                                      this.element
                                                          .nativeElement,
                                                      r
                                                  );
                                        }),
                                        t &&
                                        void 0 !== this.ariaCurrentWhenActive
                                            ? this.renderer.setAttribute(
                                                  this.element.nativeElement,
                                                  "aria-current",
                                                  this.ariaCurrentWhenActive.toString()
                                              )
                                            : this.renderer.removeAttribute(
                                                  this.element.nativeElement,
                                                  "aria-current"
                                              ),
                                        this.isActiveChange.emit(t));
                                });
                        }
                        isLinkActive(t) {
                            const r = (function D$(n) {
                                return !!n.paths;
                            })(this.routerLinkActiveOptions)
                                ? this.routerLinkActiveOptions
                                : this.routerLinkActiveOptions.exact || !1;
                            return (i) =>
                                !!i.urlTree && t.isActive(i.urlTree, r);
                        }
                        hasActiveLinks() {
                            const t = this.isLinkActive(this.router);
                            return (
                                (this.link && t(this.link)) ||
                                (this.linkWithHref && t(this.linkWithHref)) ||
                                this.links.some(t) ||
                                this.linksWithHrefs.some(t)
                            );
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(
                                p.Y36(ji),
                                p.Y36(p.SBq),
                                p.Y36(p.Qsj),
                                p.Y36(p.sBO),
                                p.Y36(mN, 8),
                                p.Y36(MT, 8)
                            );
                        }),
                        (n.ɵdir = p.lG2({
                            type: n,
                            selectors: [["", "routerLinkActive", ""]],
                            contentQueries: function (t, r, i) {
                                if (
                                    (1 & t &&
                                        (p.Suo(i, mN, 5), p.Suo(i, MT, 5)),
                                    2 & t)
                                ) {
                                    let a;
                                    p.iGM((a = p.CRH())) && (r.links = a),
                                        p.iGM((a = p.CRH())) &&
                                            (r.linksWithHrefs = a);
                                }
                            },
                            inputs: {
                                routerLinkActiveOptions:
                                    "routerLinkActiveOptions",
                                ariaCurrentWhenActive: "ariaCurrentWhenActive",
                                routerLinkActive: "routerLinkActive",
                            },
                            outputs: { isActiveChange: "isActiveChange" },
                            exportAs: ["routerLinkActive"],
                            features: [p.TTD],
                        })),
                        n
                    );
                })();
            class pL {
                buildTitle(e) {
                    let t,
                        r = e.root;
                    for (; void 0 !== r; )
                        (t = this.getResolvedTitleForRoute(r) ?? t),
                            (r = r.children.find((i) => i.outlet === on));
                    return t;
                }
                getResolvedTitleForRoute(e) {
                    return e.data[hN];
                }
            }
            let T$ = (() => {
                class n extends pL {
                    constructor(t) {
                        super(), (this.title = t);
                    }
                    updateTitle(t) {
                        const r = this.buildTitle(t);
                        void 0 !== r && this.title.setTitle(r);
                    }
                }
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)(p.LFG(Gp));
                    }),
                    (n.ɵprov = p.Yz7({
                        token: n,
                        factory: n.ɵfac,
                        providedIn: "root",
                    })),
                    n
                );
            })();
            class gL {}
            let mL = (() => {
                class n {
                    constructor(t, r, i, a, l) {
                        (this.router = t),
                            (this.injector = i),
                            (this.preloadingStrategy = a),
                            (this.loader = l);
                    }
                    setUpPreloading() {
                        this.subscription = this.router.events
                            .pipe(
                                Ni((t) => t instanceof kp),
                                RE(() => this.preload())
                            )
                            .subscribe(() => {});
                    }
                    preload() {
                        return this.processRoutes(
                            this.injector,
                            this.router.config
                        );
                    }
                    ngOnDestroy() {
                        this.subscription && this.subscription.unsubscribe();
                    }
                    processRoutes(t, r) {
                        const i = [];
                        for (const a of r) {
                            a.providers &&
                                !a._injector &&
                                (a._injector = (0, p.MMx)(
                                    a.providers,
                                    t,
                                    `Route: ${a.path}`
                                ));
                            const l = a._injector ?? t,
                                h = a._loadedInjector ?? l;
                            (a.loadChildren && !a._loadedRoutes) ||
                            (a.loadComponent && !a._loadedComponent)
                                ? i.push(this.preloadConfig(l, a))
                                : (a.children || a._loadedRoutes) &&
                                  i.push(
                                      this.processRoutes(
                                          h,
                                          a.children ?? a._loadedRoutes
                                      )
                                  );
                        }
                        return (0, dn.D)(i).pipe((0, kd.J)());
                    }
                    preloadConfig(t, r) {
                        return this.preloadingStrategy.preload(r, () => {
                            let i;
                            i =
                                r.loadChildren && void 0 === r.canLoad
                                    ? this.loader.loadChildren(t, r)
                                    : bt(null);
                            const a = i.pipe(
                                (0, Es.z)((l) =>
                                    null === l
                                        ? bt(void 0)
                                        : ((r._loadedRoutes = l.routes),
                                          (r._loadedInjector = l.injector),
                                          this.processRoutes(
                                              l.injector ?? t,
                                              l.routes
                                          ))
                                )
                            );
                            if (r.loadComponent && !r._loadedComponent) {
                                const l = this.loader.loadComponent(r);
                                return (0, dn.D)([a, l]).pipe((0, kd.J)());
                            }
                            return a;
                        });
                    }
                }
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)(
                            p.LFG(ji),
                            p.LFG(p.Sil),
                            p.LFG(p.lqb),
                            p.LFG(gL),
                            p.LFG(gN)
                        );
                    }),
                    (n.ɵprov = p.Yz7({ token: n, factory: n.ɵfac })),
                    n
                );
            })();
            const _L = new p.OlP("");
            let S$ = (() => {
                class n {
                    constructor(t, r, i = {}) {
                        (this.router = t),
                            (this.viewportScroller = r),
                            (this.options = i),
                            (this.lastId = 0),
                            (this.lastSource = "imperative"),
                            (this.restoredId = 0),
                            (this.store = {}),
                            (i.scrollPositionRestoration =
                                i.scrollPositionRestoration || "disabled"),
                            (i.anchorScrolling =
                                i.anchorScrolling || "disabled");
                    }
                    init() {
                        "disabled" !== this.options.scrollPositionRestoration &&
                            this.viewportScroller.setHistoryScrollRestoration(
                                "manual"
                            ),
                            (this.routerEventsSubscription =
                                this.createScrollEvents()),
                            (this.scrollEventsSubscription =
                                this.consumeScrollEvents());
                    }
                    createScrollEvents() {
                        return this.router.events.subscribe((t) => {
                            t instanceof qM
                                ? ((this.store[this.lastId] =
                                      this.viewportScroller.getScrollPosition()),
                                  (this.lastSource = t.navigationTrigger),
                                  (this.restoredId = t.restoredState
                                      ? t.restoredState.navigationId
                                      : 0))
                                : t instanceof kp &&
                                  ((this.lastId = t.id),
                                  this.scheduleScrollEvent(
                                      t,
                                      this.router.parseUrl(t.urlAfterRedirects)
                                          .fragment
                                  ));
                        });
                    }
                    consumeScrollEvents() {
                        return this.router.events.subscribe((t) => {
                            t instanceof wF &&
                                (t.position
                                    ? "top" ===
                                      this.options.scrollPositionRestoration
                                        ? this.viewportScroller.scrollToPosition(
                                              [0, 0]
                                          )
                                        : "enabled" ===
                                              this.options
                                                  .scrollPositionRestoration &&
                                          this.viewportScroller.scrollToPosition(
                                              t.position
                                          )
                                    : t.anchor &&
                                      "enabled" === this.options.anchorScrolling
                                    ? this.viewportScroller.scrollToAnchor(
                                          t.anchor
                                      )
                                    : "disabled" !==
                                          this.options
                                              .scrollPositionRestoration &&
                                      this.viewportScroller.scrollToPosition([
                                          0, 0,
                                      ]));
                        });
                    }
                    scheduleScrollEvent(t, r) {
                        this.router.triggerEvent(
                            new wF(
                                t,
                                "popstate" === this.lastSource
                                    ? this.store[this.restoredId]
                                    : null,
                                r
                            )
                        );
                    }
                    ngOnDestroy() {
                        this.routerEventsSubscription &&
                            this.routerEventsSubscription.unsubscribe(),
                            this.scrollEventsSubscription &&
                                this.scrollEventsSubscription.unsubscribe();
                    }
                }
                return (
                    (n.ɵfac = function (t) {
                        p.$Z();
                    }),
                    (n.ɵprov = p.Yz7({ token: n, factory: n.ɵfac })),
                    n
                );
            })();
            const _N = new p.OlP("ROUTER_CONFIGURATION", {
                    providedIn: "root",
                    factory: () => ({}),
                }),
                yL = new p.OlP("ROUTER_FORROOT_GUARD"),
                vL = new p.OlP(""),
                A$ = [
                    ve,
                    { provide: RF, useClass: MF },
                    {
                        provide: ji,
                        useFactory: function k$(
                            n,
                            e,
                            t,
                            r,
                            i,
                            a,
                            l = {},
                            h,
                            _,
                            E,
                            D
                        ) {
                            const T = new ji(null, n, e, t, r, i, CF(a));
                            return (
                                E && (T.urlHandlingStrategy = E),
                                D && (T.routeReuseStrategy = D),
                                (T.titleStrategy = _ ?? h),
                                (function O$(n, e) {
                                    n.errorHandler &&
                                        (e.errorHandler = n.errorHandler),
                                        n.malformedUriErrorHandler &&
                                            (e.malformedUriErrorHandler =
                                                n.malformedUriErrorHandler),
                                        n.onSameUrlNavigation &&
                                            (e.onSameUrlNavigation =
                                                n.onSameUrlNavigation),
                                        n.paramsInheritanceStrategy &&
                                            (e.paramsInheritanceStrategy =
                                                n.paramsInheritanceStrategy),
                                        n.relativeLinkResolution &&
                                            (e.relativeLinkResolution =
                                                n.relativeLinkResolution),
                                        n.urlUpdateStrategy &&
                                            (e.urlUpdateStrategy =
                                                n.urlUpdateStrategy),
                                        n.canceledNavigationResolution &&
                                            (e.canceledNavigationResolution =
                                                n.canceledNavigationResolution);
                                })(l, T),
                                T
                            );
                        },
                        deps: [
                            RF,
                            OE,
                            ve,
                            p.zs3,
                            p.Sil,
                            pN,
                            _N,
                            T$,
                            [pL, new p.FiY()],
                            [class y$ {}, new p.FiY()],
                            [class g$ {}, new p.FiY()],
                        ],
                    },
                    OE,
                    {
                        provide: ny,
                        useFactory: function F$(n) {
                            return n.routerState.root;
                        },
                        deps: [ji],
                    },
                    gN,
                ];
            function x$() {
                return new p.PXZ("Router", ji);
            }
            let wL = (() => {
                class n {
                    constructor(t, r) {}
                    static forRoot(t, r) {
                        return {
                            ngModule: n,
                            providers: [
                                A$,
                                [],
                                EL(t),
                                {
                                    provide: yL,
                                    useFactory: P$,
                                    deps: [[ji, new p.FiY(), new p.tp0()]],
                                },
                                { provide: _N, useValue: r || {} },
                                r?.useHash
                                    ? { provide: ce, useClass: Ae }
                                    : { provide: ce, useClass: Qe },
                                {
                                    provide: _L,
                                    useFactory: () => {
                                        const n = (0, p.f3M)(ji),
                                            e = (0, p.f3M)(Wi),
                                            t = (0, p.f3M)(_N);
                                        return (
                                            t.scrollOffset &&
                                                e.setOffset(t.scrollOffset),
                                            new S$(n, e, t)
                                        );
                                    },
                                },
                                r?.preloadingStrategy
                                    ? $$(r.preloadingStrategy)
                                    : [],
                                { provide: p.PXZ, multi: !0, useFactory: x$ },
                                r?.initialNavigation ? V$(r) : [],
                                [
                                    { provide: IL, useFactory: L$ },
                                    {
                                        provide: p.tb,
                                        multi: !0,
                                        useExisting: IL,
                                    },
                                ],
                            ],
                        };
                    }
                    static forChild(t) {
                        return { ngModule: n, providers: [EL(t)] };
                    }
                }
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)(p.LFG(yL, 8), p.LFG(ji, 8));
                    }),
                    (n.ɵmod = p.oAB({ type: n })),
                    (n.ɵinj = p.cJS({})),
                    n
                );
            })();
            function P$(n) {
                return "guarded";
            }
            function EL(n) {
                return [
                    { provide: p.deG, multi: !0, useValue: n },
                    { provide: pN, multi: !0, useValue: n },
                ];
            }
            function L$() {
                const n = (0, p.f3M)(p.zs3);
                return (e) => {
                    const t = n.get(p.z2F);
                    if (e !== t.components[0]) return;
                    const r = n.get(ji),
                        i = n.get(CL);
                    null === n.get(yN, null, p.XFs.Optional) &&
                        r.initialNavigation(),
                        n.get(vL, null, p.XFs.Optional)?.setUpPreloading(),
                        n.get(_L, null, p.XFs.Optional)?.init(),
                        r.resetRootComponentType(t.componentTypes[0]),
                        i.next(),
                        i.complete();
                };
            }
            const IL = new p.OlP("");
            function V$(n) {
                return [
                    "disabled" === n.initialNavigation
                        ? [
                              {
                                  provide: p.ip1,
                                  multi: !0,
                                  useFactory: () => {
                                      const n = (0, p.f3M)(ji);
                                      return () => {
                                          n.setUpLocationChangeListener();
                                      };
                                  },
                              },
                              { provide: yN, useValue: "disabled" },
                          ]
                        : [],
                    "enabledBlocking" === n.initialNavigation
                        ? [
                              { provide: yN, useValue: "enabledBlocking" },
                              {
                                  provide: p.ip1,
                                  multi: !0,
                                  deps: [p.zs3],
                                  useFactory: (n) => {
                                      const e = n.get(U, Promise.resolve(null));
                                      let t = !1;
                                      return () =>
                                          e.then(
                                              () =>
                                                  new Promise((i) => {
                                                      const a = n.get(ji),
                                                          l = n.get(CL);
                                                      (function r(i) {
                                                          const a = n.get(ji);
                                                          a.events
                                                              .pipe(
                                                                  Ni(
                                                                      (l) =>
                                                                          l instanceof
                                                                              kp ||
                                                                          l instanceof
                                                                              fT ||
                                                                          l instanceof
                                                                              vF
                                                                  ),
                                                                  (0, Mt.U)(
                                                                      (l) => {
                                                                          if (
                                                                              l instanceof
                                                                              kp
                                                                          )
                                                                              return !0;
                                                                          const h =
                                                                                  a.navigationId !==
                                                                                  l.id,
                                                                              _ =
                                                                                  l instanceof
                                                                                      fT &&
                                                                                  -1 !==
                                                                                      l.reason.indexOf(
                                                                                          KM
                                                                                      );
                                                                          return (
                                                                              !(
                                                                                  !h &&
                                                                                  !_
                                                                              ) &&
                                                                              null
                                                                          );
                                                                      }
                                                                  ),
                                                                  Ni(
                                                                      (l) =>
                                                                          null !==
                                                                          l
                                                                  ),
                                                                  Hf(1)
                                                              )
                                                              .subscribe(() => {
                                                                  i();
                                                              });
                                                      })(() => {
                                                          i(!0), (t = !0);
                                                      }),
                                                          (a.afterPreactivation =
                                                              () => (
                                                                  i(!0),
                                                                  t || l.closed
                                                                      ? bt(
                                                                            void 0
                                                                        )
                                                                      : l
                                                              )),
                                                          a.initialNavigation();
                                                  })
                                          );
                                  },
                              },
                          ]
                        : [],
                ];
            }
            const CL = new p.OlP("", { factory: () => new Cu.x() }),
                yN = new p.OlP("");
            function $$(n) {
                return [
                    mL,
                    { provide: vL, useExisting: mL },
                    { provide: gL, useExisting: n },
                ];
            }
            let ry = (() => {
                    class n {
                        constructor(t, r, i, a) {
                            (this.afs = t),
                                (this.afAuth = r),
                                (this.router = i),
                                (this.ngZone = a),
                                (this.usrDat = {}),
                                this.afAuth.authState.subscribe((l) => {
                                    l
                                        ? ((this.userData = l),
                                          localStorage.setItem(
                                              "user",
                                              JSON.stringify(this.userData)
                                          ),
                                          JSON.parse(
                                              localStorage.getItem("user")
                                          ),
                                          (this.currentUser = JSON.parse(
                                              localStorage.getItem("user")
                                          )),
                                          console.log(
                                              "AuthService ~ this.afAuth.authState.subscribe ~ this.currentUser",
                                              this.currentUser
                                          ))
                                        : (localStorage.setItem("user", "null"),
                                          JSON.parse(
                                              localStorage.getItem("user")
                                          ));
                                });
                        }
                        SignIn(t, r) {
                            return this.afAuth
                                .signInWithEmailAndPassword(t, r)
                                .then((i) => {
                                    this.ngZone.run(() => {}),
                                        this.SetUserData(i.user),
                                        this.router.navigate(["test"]);
                                })
                                .catch((i) => {
                                    window.alert(i.message),
                                        this.router.navigate(["refreshpass"]);
                                });
                        }
                        SignUp(t, r) {
                            return this.afAuth
                                .createUserWithEmailAndPassword(t, r)
                                .then((i) => {
                                    this.SendVerificationMail(),
                                        this.SetUserData(i.user),
                                        this.router.navigate(["test"]);
                                })
                                .catch((i) => {
                                    window.alert(i.message);
                                });
                        }
                        SendVerificationMail() {
                            return this.afAuth.currentUser
                                .then((t) => t.sendEmailVerification())
                                .then(() => {});
                        }
                        ForgotPassword(t) {
                            return this.afAuth
                                .sendPasswordResetEmail(t)
                                .then(() => {
                                    window.alert(
                                        "Password reset email sent, check your inbox."
                                    );
                                })
                                .catch((r) => {
                                    window.alert(r);
                                });
                        }
                        get isLoggedIn() {
                            const t = JSON.parse(localStorage.getItem("user"));
                            return null !== t && !1 !== t.emailVerified;
                        }
                        AuthLogin(t) {
                            return this.afAuth
                                .signInWithPopup(t)
                                .then((r) => {
                                    this.ngZone.run(() => {
                                        this.router.navigate(["test"]);
                                    }),
                                        this.SetUserData(r.user);
                                })
                                .catch((r) => {
                                    this.router.navigate(["refreshpass"]),
                                        window.alert(r);
                                });
                        }
                        SetUserData(t) {
                            return this.afs
                                .doc(`users/${t.uid}`)
                                .set(
                                    {
                                        uid: t.uid,
                                        email: t.email,
                                        displayName: t.displayName,
                                        photoURL: t.photoURL,
                                        emailVerified: t.emailVerified,
                                    },
                                    { merge: !0 }
                                );
                        }
                        SignOut() {
                            return this.afAuth.signOut().then(() => {
                                localStorage.removeItem("user"),
                                    this.router.navigate(["login"]),
                                    (this.currentUser = null);
                            });
                        }
                        getCurUser() {
                            return this.currentUser.email;
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(
                                p.LFG($M),
                                p.LFG(Pd),
                                p.LFG(ji),
                                p.LFG(p.R0b)
                            );
                        }),
                        (n.ɵprov = p.Yz7({
                            token: n,
                            factory: n.ɵfac,
                            providedIn: "root",
                        })),
                        n
                    );
                })(),
                G$ = (() => {
                    class n {
                        constructor(t, r) {
                            (this.authService = t), (this.afAuth = r);
                        }
                        ngOnInit() {
                            this.afAuth.authState.subscribe((t) => {
                                if (t) {
                                    let r = t.email?.indexOf("@");
                                    this.user = t.email?.slice(0, r);
                                }
                            });
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(p.Y36(ry), p.Y36(Pd));
                        }),
                        (n.ɵcmp = p.Xpm({
                            type: n,
                            selectors: [["app-testcomponent"]],
                            decls: 2,
                            vars: 1,
                            template: function (t, r) {
                                1 & t && (p.TgZ(0, "h3"), p._uU(1), p.qZA()),
                                    2 & t &&
                                        (p.xp6(1),
                                        p.hij(
                                            "hello, ",
                                            r.user || "anonimus",
                                            ""
                                        ));
                            },
                            styles: [
                                "input.ng-touched.ng-invalid[_ngcontent-%COMP%]{border:solid red 2px}input.ng-touched.ng-valid[_ngcontent-%COMP%]{border:solid green 2px}",
                            ],
                        })),
                        n
                    );
                })(),
                bL = (() => {
                    class n {
                        constructor(t) {
                            this.fireservices = t;
                        }
                        createNewUser(t) {
                            return this.fireservices.collection("user").add(t);
                        }
                        getAll() {
                            return this.fireservices
                                .collection("user")
                                .snapshotChanges();
                        }
                        getUser(t) {
                            this.loginUser = this.fireservices
                                .collection("user", (r) =>
                                    r.where("email", "==", t.email)
                                )
                                .get()
                                .subscribe((r) =>
                                    r.forEach((i) => {
                                        if (
                                            ((this.loginUser = i.data()),
                                            this.loginUser.password ===
                                                t.password)
                                        ) {
                                            console.log(
                                                "CrudService ~ data.forEach ~ this.currentUser",
                                                this.currentUser
                                            ),
                                                console.log(
                                                    `${this.loginUser.name}! welcome`
                                                );
                                            const a = ss.IH();
                                            ss.Kz(a, "login-event", {
                                                useremail: `${this.loginUser.email}`,
                                            });
                                        }
                                    })
                                );
                        }
                        currentUserName() {
                            return this.currentUser.name;
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(p.LFG($M));
                        }),
                        (n.ɵprov = p.Yz7({
                            token: n,
                            factory: n.ɵfac,
                            providedIn: "root",
                        })),
                        n
                    );
                })();
            function W$(n, e) {
                if (
                    (1 & n &&
                        (p.TgZ(0, "div")(1, "div")(2, "h5"),
                        p._uU(3, "user"),
                        p.qZA(),
                        p.TgZ(4, "div"),
                        p._uU(5),
                        p.qZA(),
                        p.TgZ(6, "div"),
                        p._uU(7),
                        p.qZA(),
                        p.TgZ(8, "div"),
                        p._uU(9),
                        p.qZA(),
                        p._UZ(10, "div"),
                        p.qZA()()),
                    2 & n)
                ) {
                    const t = e.$implicit;
                    p.xp6(5),
                        p.hij("Name: ", t.data.name, ""),
                        p.xp6(2),
                        p.hij("email: ", t.data.email, ""),
                        p.xp6(2),
                        p.hij("pass: ", t.data.password, "");
                }
            }
            let z$ = (() => {
                    class n {
                        constructor(t) {
                            (this.crudservice = t), (this.array = []);
                        }
                        ngOnInit() {
                            this.crudservice.getAll().subscribe((t) => {
                                (this.user = t.map((r) => ({
                                    id: r.payload.doc.id,
                                    data: r.payload.doc.data(),
                                }))),
                                    console.log(this.user),
                                    (this.array = this.user);
                            });
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(p.Y36(bL));
                        }),
                        (n.ɵcmp = p.Xpm({
                            type: n,
                            selectors: [["app-home"]],
                            decls: 6,
                            vars: 1,
                            consts: [[4, "ngFor", "ngForOf"]],
                            template: function (t, r) {
                                1 & t &&
                                    (p.TgZ(0, "p"),
                                    p._uU(
                                        1,
                                        "Hi! this is my first Angular App!"
                                    ),
                                    p.qZA(),
                                    p.TgZ(2, "p"),
                                    p._uU(
                                        3,
                                        "you may register, logIn or refresh your password"
                                    ),
                                    p.qZA(),
                                    p.TgZ(4, "div"),
                                    p.YNc(5, W$, 11, 3, "div", 0),
                                    p.qZA()),
                                    2 & t &&
                                        (p.xp6(5), p.Q6J("ngForOf", r.array));
                            },
                            dependencies: [pi],
                        })),
                        n
                    );
                })(),
                q$ = (() => {
                    class n {
                        constructor(t) {
                            this.authService = t;
                        }
                        authOnPassForgot(t) {
                            this.authService.ForgotPassword(t);
                            const r = ss.IH();
                            ss.Kz(r, "refreshPass", { userEmail: `${t}` });
                        }
                        ngOnInit() {}
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(p.Y36(ry));
                        }),
                        (n.ɵcmp = p.Xpm({
                            type: n,
                            selectors: [["app-refreshpass"]],
                            decls: 13,
                            vars: 0,
                            consts: [
                                [1, "displayTable"],
                                [1, "displayTableCell"],
                                [1, "authBlock"],
                                [1, "text-center"],
                                [1, "formGroup"],
                                [
                                    "type",
                                    "email",
                                    "placeholder",
                                    "Email Address",
                                    "required",
                                    "",
                                    1,
                                    "formControl",
                                ],
                                ["passwordResetEmail", ""],
                                [
                                    "type",
                                    "submit",
                                    "value",
                                    "Reset Password",
                                    1,
                                    "btn",
                                    "btnPrimary",
                                    3,
                                    "click",
                                ],
                            ],
                            template: function (t, r) {
                                if (1 & t) {
                                    const i = p.EpF();
                                    p.TgZ(0, "h3"),
                                        p._uU(1, "Reset Password"),
                                        p.qZA(),
                                        p.TgZ(2, "div", 0)(3, "div", 1)(
                                            4,
                                            "div",
                                            2
                                        )(5, "p", 3),
                                        p._uU(
                                            6,
                                            " Please enter your email address to request a password reset. "
                                        ),
                                        p.qZA(),
                                        p.TgZ(7, "div", 4),
                                        p._UZ(8, "input", 5, 6),
                                        p.qZA(),
                                        p.TgZ(10, "div", 4)(11, "button", 7),
                                        p.NdJ("click", function () {
                                            p.CHM(i);
                                            const l = p.MAs(9);
                                            return p.KtG(
                                                r.authOnPassForgot(l.value)
                                            );
                                        }),
                                        p._uU(12, " Reset Password "),
                                        p.qZA()()()()();
                                }
                            },
                            styles: [
                                ".authBlock[_ngcontent-%COMP%]{width:35%}.authBlock[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{display:flex;width:100%;justify-content:space-between;margin-bottom:10px}input[_ngcontent-%COMP%]{width:60%;text-align:center}button[_ngcontent-%COMP%]{width:62%}",
                            ],
                        })),
                        n
                    );
                })(),
                K$ = (() => {
                    class n {
                        constructor(t) {
                            this.authService = t;
                        }
                        authLogin(t, r) {
                            this.authService.SignIn(t, r);
                            const i = ss.IH();
                            ss.Kz(i, "login-event", { userLoginEmail: `${t}` }),
                                console.log("login");
                        }
                        ngOnInit() {}
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(p.Y36(ry));
                        }),
                        (n.ɵcmp = p.Xpm({
                            type: n,
                            selectors: [["app-login"]],
                            decls: 14,
                            vars: 0,
                            consts: [
                                [1, "displayTable"],
                                [1, "displayTableCell"],
                                [1, "authBlock"],
                                [1, "formGroup"],
                                [
                                    "type",
                                    "text",
                                    "placeholder",
                                    "Username",
                                    "required",
                                    "",
                                    1,
                                    "formControl",
                                ],
                                ["userName", ""],
                                [
                                    "type",
                                    "password",
                                    "placeholder",
                                    "Password",
                                    "required",
                                    "",
                                    1,
                                    "formControl",
                                ],
                                ["userPassword", ""],
                                [
                                    "type",
                                    "button",
                                    "value",
                                    "Log in",
                                    1,
                                    "btn",
                                    "btnPrimary",
                                    3,
                                    "click",
                                ],
                            ],
                            template: function (t, r) {
                                if (1 & t) {
                                    const i = p.EpF();
                                    p.TgZ(0, "h3"),
                                        p._uU(1, "Sign In"),
                                        p.qZA(),
                                        p.TgZ(2, "div", 0)(3, "div", 1)(
                                            4,
                                            "div",
                                            2
                                        )(5, "div", 3),
                                        p._UZ(6, "input", 4, 5),
                                        p.qZA(),
                                        p.TgZ(8, "div", 3),
                                        p._UZ(9, "input", 6, 7),
                                        p.qZA(),
                                        p.TgZ(11, "div", 3)(12, "button", 8),
                                        p.NdJ("click", function () {
                                            p.CHM(i);
                                            const l = p.MAs(7),
                                                h = p.MAs(10);
                                            return p.KtG(
                                                r.authLogin(l.value, h.value)
                                            );
                                        }),
                                        p._uU(13, " Log in "),
                                        p.qZA()()()()();
                                }
                            },
                            styles: [
                                ".authBlock[_ngcontent-%COMP%]{width:35%}.authBlock[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{display:flex;width:100%;justify-content:space-between;margin-bottom:10px}input[_ngcontent-%COMP%]{margin-left:20px;width:60%;text-align:center}button[_ngcontent-%COMP%]{margin-left:20px;width:62%}",
                            ],
                        })),
                        n
                    );
                })(),
                Z$ = (() => {
                    class n {
                        constructor(t) {
                            this.authService = t;
                        }
                        authRegister(t, r) {
                            this.authService.SignUp(t, r);
                            const i = ss.IH();
                            ss.Kz(i, "register-event", {
                                firsttimeuser: !0,
                                userRegisterEmail: `${t}`,
                            }),
                                console.log("registered: ", t, r);
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(p.Y36(ry));
                        }),
                        (n.ɵcmp = p.Xpm({
                            type: n,
                            selectors: [["app-register"]],
                            decls: 14,
                            vars: 0,
                            consts: [
                                [1, "displayTable"],
                                [1, "displayTableCell"],
                                [1, "authBlock"],
                                [1, "formGroup"],
                                [
                                    "type",
                                    "email",
                                    "placeholder",
                                    "Email Address",
                                    "required",
                                    "",
                                    1,
                                    "formControl",
                                ],
                                ["userEmail", ""],
                                [
                                    "type",
                                    "password",
                                    "placeholder",
                                    "Password",
                                    "required",
                                    "",
                                    1,
                                    "formControl",
                                ],
                                ["userPwd", ""],
                                [
                                    "type",
                                    "button",
                                    "value",
                                    "Sign Up",
                                    1,
                                    "btn",
                                    "btnPrimary",
                                    3,
                                    "click",
                                ],
                            ],
                            template: function (t, r) {
                                if (1 & t) {
                                    const i = p.EpF();
                                    p.TgZ(0, "h3"),
                                        p._uU(1, "Sign Up"),
                                        p.qZA(),
                                        p.TgZ(2, "div", 0)(3, "div", 1)(
                                            4,
                                            "div",
                                            2
                                        )(5, "div", 3),
                                        p._UZ(6, "input", 4, 5),
                                        p.qZA(),
                                        p.TgZ(8, "div", 3),
                                        p._UZ(9, "input", 6, 7),
                                        p.qZA(),
                                        p.TgZ(11, "div", 3)(12, "button", 8),
                                        p.NdJ("click", function () {
                                            p.CHM(i);
                                            const l = p.MAs(7),
                                                h = p.MAs(10);
                                            return p.KtG(
                                                r.authRegister(l.value, h.value)
                                            );
                                        }),
                                        p._uU(13, " Sign Up "),
                                        p.qZA()()()()();
                                }
                            },
                            styles: [
                                ".authBlock[_ngcontent-%COMP%]{width:35%}.authBlock[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{display:flex;width:100%;justify-content:space-between;margin-bottom:10px}input[_ngcontent-%COMP%]{margin-left:20px;width:60%;text-align:center}button[_ngcontent-%COMP%]{margin-left:20px;width:62%}",
                            ],
                        })),
                        n
                    );
                })(),
                Y$ = (() => {
                    class n {}
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)();
                        }),
                        (n.ɵmod = p.oAB({ type: n })),
                        (n.ɵinj = p.cJS({
                            imports: [
                                wL.forRoot([
                                    { path: "", component: z$ },
                                    { path: "register", component: Z$ },
                                    { path: "login", component: K$ },
                                    { path: "refreshpass", component: q$ },
                                    { path: "test", component: G$ },
                                ]),
                                wL,
                            ],
                        })),
                        n
                    );
                })();
            function Q$(n, e) {
                1 & n && (p.TgZ(0, "a", 9), p._uU(1, "register"), p.qZA());
            }
            function J$(n, e) {
                1 & n && (p.TgZ(0, "a", 10), p._uU(1, "login"), p.qZA());
            }
            function X$(n, e) {
                1 & n && (p.TgZ(0, "a", 11), p._uU(1, "refreshpass"), p.qZA());
            }
            function eG(n, e) {
                1 & n && (p.TgZ(0, "a", 12), p._uU(1, "test"), p.qZA());
            }
            function tG(n, e) {
                if (1 & n) {
                    const t = p.EpF();
                    p.TgZ(0, "button", 13),
                        p.NdJ("click", function () {
                            p.CHM(t);
                            const i = p.oxw();
                            return p.KtG(i.authLogOut());
                        }),
                        p._uU(1, " logOut "),
                        p.qZA();
                }
            }
            let nG = (() => {
                class n {
                    constructor(t) {
                        (this.authService = t),
                            (this.currentUser = JSON.parse(
                                localStorage.getItem("user")
                            )),
                            (this.title = "angularapp"),
                            (this.userName = ""),
                            (this.userEmail = ""),
                            (this.userPassword = ""),
                            (this.userId = "");
                    }
                    authLogOut() {
                        const t = JSON.parse(localStorage.getItem("user")),
                            r = ss.IH();
                        ss.Kz(r, "loginOut", {
                            userLogoutEmail: `${t.providerData[0].email}`,
                        }),
                            this.authService.SignOut();
                    }
                    ngAfterViewInit() {}
                }
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)(p.Y36(ry));
                    }),
                    (n.ɵcmp = p.Xpm({
                        type: n,
                        selectors: [["app-root"]],
                        decls: 11,
                        vars: 5,
                        consts: [
                            [1, "container"],
                            [1, "nav"],
                            [
                                "routerLink",
                                "/",
                                "routerLinkActive",
                                "active",
                                "ariaCurrentWhenActive",
                                "page",
                            ],
                            [1, "logo"],
                            [
                                "routerLink",
                                "/register",
                                "routerLinkActive",
                                "active",
                                "ariaCurrentWhenActive",
                                "page",
                                4,
                                "ngIf",
                            ],
                            [
                                "routerLink",
                                "/login",
                                "routerLinkActive",
                                "active",
                                "ariaCurrentWhenActive",
                                "page",
                                4,
                                "ngIf",
                            ],
                            [
                                "routerLink",
                                "/refreshpass",
                                "routerLinkActive",
                                "active",
                                "ariaCurrentWhenActive",
                                "page",
                                4,
                                "ngIf",
                            ],
                            [
                                "routerLink",
                                "/test",
                                "routerLinkActive",
                                "active",
                                "ariaCurrentWhenActive",
                                "page",
                                4,
                                "ngIf",
                            ],
                            [3, "click", 4, "ngIf"],
                            [
                                "routerLink",
                                "/register",
                                "routerLinkActive",
                                "active",
                                "ariaCurrentWhenActive",
                                "page",
                            ],
                            [
                                "routerLink",
                                "/login",
                                "routerLinkActive",
                                "active",
                                "ariaCurrentWhenActive",
                                "page",
                            ],
                            [
                                "routerLink",
                                "/refreshpass",
                                "routerLinkActive",
                                "active",
                                "ariaCurrentWhenActive",
                                "page",
                            ],
                            [
                                "routerLink",
                                "/test",
                                "routerLinkActive",
                                "active",
                                "ariaCurrentWhenActive",
                                "page",
                            ],
                            [3, "click"],
                        ],
                        template: function (t, r) {
                            1 & t &&
                                (p.TgZ(0, "div", 0)(1, "div", 1)(2, "a", 2)(
                                    3,
                                    "p",
                                    3
                                ),
                                p._uU(4, "hello"),
                                p.qZA()(),
                                p.YNc(5, Q$, 2, 0, "a", 4),
                                p.YNc(6, J$, 2, 0, "a", 5),
                                p.YNc(7, X$, 2, 0, "a", 6),
                                p.YNc(8, eG, 2, 0, "a", 7),
                                p.YNc(9, tG, 2, 0, "button", 8),
                                p.qZA(),
                                p._UZ(10, "router-outlet"),
                                p.qZA()),
                                2 & t &&
                                    (p.xp6(5),
                                    p.Q6J("ngIf", !r.authService.currentUser),
                                    p.xp6(1),
                                    p.Q6J("ngIf", !r.authService.currentUser),
                                    p.xp6(1),
                                    p.Q6J("ngIf", !r.authService.currentUser),
                                    p.xp6(1),
                                    p.Q6J("ngIf", r.authService.currentUser),
                                    p.xp6(1),
                                    p.Q6J("ngIf", r.authService.currentUser));
                        },
                        dependencies: [Xn, aN, MT, fL],
                        styles: [
                            "*[_ngcontent-%COMP%]{box-sizing:border-box}.container[_ngcontent-%COMP%]{padding:1.5rem}.logo[_ngcontent-%COMP%]{color:red}.nav[_ngcontent-%COMP%], .nav[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{display:flex;gap:40px;align-items:center}button[_ngcontent-%COMP%]{margin-left:auto}a.active[_ngcontent-%COMP%]:not(:nth-child(1)){border:1px solid red}",
                        ],
                    })),
                    n
                );
            })();
            const DL = "firebasestorage.googleapis.com",
                TL = "storageBucket";
            class kr extends C.ZR {
                constructor(e, t) {
                    super(vN(e), `Firebase Storage: ${t} (${vN(e)})`),
                        (this.customData = { serverResponse: null }),
                        (this._baseMessage = this.message),
                        Object.setPrototypeOf(this, kr.prototype);
                }
                _codeEquals(e) {
                    return vN(e) === this.code;
                }
                get serverResponse() {
                    return this.customData.serverResponse;
                }
                set serverResponse(e) {
                    (this.customData.serverResponse = e),
                        (this.message = this.customData.serverResponse
                            ? `${this._baseMessage}\n${this.customData.serverResponse}`
                            : this._baseMessage);
                }
            }
            function vN(n) {
                return "storage/" + n;
            }
            function wN() {
                return new kr(
                    "unknown",
                    "An unknown error occurred, please check the error payload for server response."
                );
            }
            function SL() {
                return new kr("canceled", "User canceled the upload/download.");
            }
            function AL() {
                return new kr(
                    "cannot-slice-blob",
                    "Cannot slice blob for upload. Please retry the upload."
                );
            }
            function iy(n) {
                return new kr("invalid-argument", n);
            }
            function xL() {
                return new kr("app-deleted", "The Firebase app was deleted.");
            }
            function RL(n) {
                return new kr(
                    "invalid-root-operation",
                    "The operation '" +
                        n +
                        "' cannot be performed on a root reference, create a non-root reference using child, such as .child('file.png')."
                );
            }
            function jE(n, e) {
                return new kr(
                    "invalid-format",
                    "String does not match format '" + n + "': " + e
                );
            }
            function HE(n) {
                throw new kr("internal-error", "Internal error: " + n);
            }
            class Ji {
                constructor(e, t) {
                    (this.bucket = e), (this.path_ = t);
                }
                get path() {
                    return this.path_;
                }
                get isRoot() {
                    return 0 === this.path.length;
                }
                fullServerUrl() {
                    const e = encodeURIComponent;
                    return "/b/" + e(this.bucket) + "/o/" + e(this.path);
                }
                bucketOnlyServerUrl() {
                    return "/b/" + encodeURIComponent(this.bucket) + "/o";
                }
                static makeFromBucketSpec(e, t) {
                    let r;
                    try {
                        r = Ji.makeFromUrl(e, t);
                    } catch {
                        return new Ji(e, "");
                    }
                    if ("" === r.path) return r;
                    throw (function fG(n) {
                        return new kr(
                            "invalid-default-bucket",
                            "Invalid default bucket '" + n + "'."
                        );
                    })(e);
                }
                static makeFromUrl(e, t) {
                    let r = null;
                    const i = "([A-Za-z0-9.\\-_]+)",
                        h = new RegExp("^gs://" + i + "(/(.*))?$", "i");
                    function E(gt) {
                        gt.path_ = decodeURIComponent(gt.path);
                    }
                    const T = t.replace(/[.]/g, "\\."),
                        yt = [
                            {
                                regex: h,
                                indices: { bucket: 1, path: 3 },
                                postModify: function a(gt) {
                                    "/" ===
                                        gt.path.charAt(gt.path.length - 1) &&
                                        (gt.path_ = gt.path_.slice(0, -1));
                                },
                            },
                            {
                                regex: new RegExp(
                                    `^https?://${T}/v[A-Za-z0-9_]+/b/${i}/o(/([^?#]*).*)?$`,
                                    "i"
                                ),
                                indices: { bucket: 1, path: 3 },
                                postModify: E,
                            },
                            {
                                regex: new RegExp(
                                    `^https?://${
                                        t === DL
                                            ? "(?:storage.googleapis.com|storage.cloud.google.com)"
                                            : t
                                    }/${i}/([^?#]*)`,
                                    "i"
                                ),
                                indices: { bucket: 1, path: 2 },
                                postModify: E,
                            },
                        ];
                    for (let gt = 0; gt < yt.length; gt++) {
                        const $t = yt[gt],
                            un = $t.regex.exec(e);
                        if (un) {
                            let Fa = un[$t.indices.path];
                            Fa || (Fa = ""),
                                (r = new Ji(un[$t.indices.bucket], Fa)),
                                $t.postModify(r);
                            break;
                        }
                    }
                    if (null == r)
                        throw (function hG(n) {
                            return new kr(
                                "invalid-url",
                                "Invalid URL '" + n + "'."
                            );
                        })(e);
                    return r;
                }
            }
            class _G {
                constructor(e) {
                    this.promise_ = Promise.reject(e);
                }
                getPromise() {
                    return this.promise_;
                }
                cancel(e = !1) {}
            }
            function NT(n) {
                return "string" == typeof n || n instanceof String;
            }
            function ML(n) {
                return EN() && n instanceof Blob;
            }
            function EN() {
                return typeof Blob < "u";
            }
            function IN(n, e, t, r) {
                if (r < e)
                    throw iy(
                        `Invalid value for '${n}'. Expected ${e} or greater.`
                    );
                if (r > t)
                    throw iy(
                        `Invalid value for '${n}'. Expected ${t} or less.`
                    );
            }
            function oc(n, e, t) {
                let r = e;
                return null == t && (r = `https://${e}`), `${t}://${r}/v0${n}`;
            }
            function NL(n) {
                const e = encodeURIComponent;
                let t = "?";
                for (const r in n)
                    n.hasOwnProperty(r) &&
                        (t = t + (e(r) + "=") + e(n[r]) + "&");
                return (t = t.slice(0, -1)), t;
            }
            var lh = (() => (
                (function (n) {
                    (n[(n.NO_ERROR = 0)] = "NO_ERROR"),
                        (n[(n.NETWORK_ERROR = 1)] = "NETWORK_ERROR"),
                        (n[(n.ABORT = 2)] = "ABORT");
                })(lh || (lh = {})),
                lh
            ))();
            class CG {
                constructor(e, t, r, i, a, l, h, _, E, D, T) {
                    (this.url_ = e),
                        (this.method_ = t),
                        (this.headers_ = r),
                        (this.body_ = i),
                        (this.successCodes_ = a),
                        (this.additionalRetryCodes_ = l),
                        (this.callback_ = h),
                        (this.errorCallback_ = _),
                        (this.timeout_ = E),
                        (this.progressCallback_ = D),
                        (this.connectionFactory_ = T),
                        (this.pendingConnection_ = null),
                        (this.backoffId_ = null),
                        (this.canceled_ = !1),
                        (this.appDelete_ = !1),
                        (this.promise_ = new Promise((R, F) => {
                            (this.resolve_ = R),
                                (this.reject_ = F),
                                this.start_();
                        }));
                }
                start_() {
                    const t = (r, i) => {
                        const a = this.resolve_,
                            l = this.reject_,
                            h = i.connection;
                        if (i.wasSuccessCode)
                            try {
                                const _ = this.callback_(h, h.getResponse());
                                !(function wG(n) {
                                    return void 0 !== n;
                                })(_)
                                    ? a()
                                    : a(_);
                            } catch (_) {
                                l(_);
                            }
                        else if (null !== h) {
                            const _ = wN();
                            (_.serverResponse = h.getErrorText()),
                                l(
                                    this.errorCallback_
                                        ? this.errorCallback_(h, _)
                                        : _
                                );
                        } else
                            l(
                                i.canceled
                                    ? this.appDelete_
                                        ? xL()
                                        : SL()
                                    : (function dG() {
                                          return new kr(
                                              "retry-limit-exceeded",
                                              "Max retry time for operation exceeded, please try again."
                                          );
                                      })()
                            );
                    };
                    this.canceled_
                        ? t(0, new PT(!1, null, !0))
                        : (this.backoffId_ = (function yG(n, e, t) {
                              let r = 1,
                                  i = null,
                                  a = null,
                                  l = !1,
                                  h = 0;
                              function _() {
                                  return 2 === h;
                              }
                              let E = !1;
                              function D(...Re) {
                                  E || ((E = !0), e.apply(null, Re));
                              }
                              function T(Re) {
                                  i = setTimeout(() => {
                                      (i = null), n(F, _());
                                  }, Re);
                              }
                              function R() {
                                  a && clearTimeout(a);
                              }
                              function F(Re, ...mt) {
                                  if (E) return void R();
                                  if (Re)
                                      return R(), void D.call(null, Re, ...mt);
                                  if (_() || l)
                                      return R(), void D.call(null, Re, ...mt);
                                  let yt;
                                  r < 64 && (r *= 2),
                                      1 === h
                                          ? ((h = 2), (yt = 0))
                                          : (yt = 1e3 * (r + Math.random())),
                                      T(yt);
                              }
                              let K = !1;
                              function Ie(Re) {
                                  K ||
                                      ((K = !0),
                                      R(),
                                      !E &&
                                          (null !== i
                                              ? (Re || (h = 2),
                                                clearTimeout(i),
                                                T(0))
                                              : Re || (h = 1)));
                              }
                              return (
                                  T(0),
                                  (a = setTimeout(() => {
                                      (l = !0), Ie(!0);
                                  }, t)),
                                  Ie
                              );
                          })(
                              (r, i) => {
                                  if (i)
                                      return void r(!1, new PT(!1, null, !0));
                                  const a = this.connectionFactory_();
                                  this.pendingConnection_ = a;
                                  const l = (h) => {
                                      null !== this.progressCallback_ &&
                                          this.progressCallback_(
                                              h.loaded,
                                              h.lengthComputable ? h.total : -1
                                          );
                                  };
                                  null !== this.progressCallback_ &&
                                      a.addUploadProgressListener(l),
                                      a
                                          .send(
                                              this.url_,
                                              this.method_,
                                              this.body_,
                                              this.headers_
                                          )
                                          .then(() => {
                                              null !== this.progressCallback_ &&
                                                  a.removeUploadProgressListener(
                                                      l
                                                  ),
                                                  (this.pendingConnection_ =
                                                      null);
                                              const h =
                                                      a.getErrorCode() ===
                                                      lh.NO_ERROR,
                                                  _ = a.getStatus();
                                              if (
                                                  !h ||
                                                  this.isRetryStatusCode_(_)
                                              ) {
                                                  const D =
                                                      a.getErrorCode() ===
                                                      lh.ABORT;
                                                  return void r(
                                                      !1,
                                                      new PT(!1, null, D)
                                                  );
                                              }
                                              const E =
                                                  -1 !==
                                                  this.successCodes_.indexOf(_);
                                              r(!0, new PT(E, a));
                                          });
                              },
                              t,
                              this.timeout_
                          ));
                }
                getPromise() {
                    return this.promise_;
                }
                cancel(e) {
                    (this.canceled_ = !0),
                        (this.appDelete_ = e || !1),
                        null !== this.backoffId_ &&
                            (function vG(n) {
                                n(!1);
                            })(this.backoffId_),
                        null !== this.pendingConnection_ &&
                            this.pendingConnection_.abort();
                }
                isRetryStatusCode_(e) {
                    const t = e >= 500 && e < 600,
                        i = -1 !== [408, 429].indexOf(e),
                        a = -1 !== this.additionalRetryCodes_.indexOf(e);
                    return t || i || a;
                }
            }
            class PT {
                constructor(e, t, r) {
                    (this.wasSuccessCode = e),
                        (this.connection = t),
                        (this.canceled = !!r);
                }
            }
            function RG(...n) {
                const e = (function xG() {
                    return typeof BlobBuilder < "u"
                        ? BlobBuilder
                        : typeof WebKitBlobBuilder < "u"
                        ? WebKitBlobBuilder
                        : void 0;
                })();
                if (void 0 !== e) {
                    const t = new e();
                    for (let r = 0; r < n.length; r++) t.append(n[r]);
                    return t.getBlob();
                }
                if (EN()) return new Blob(n);
                throw new kr(
                    "unsupported-environment",
                    "This browser doesn't seem to support creating Blobs"
                );
            }
            const _o = {
                RAW: "raw",
                BASE64: "base64",
                BASE64URL: "base64url",
                DATA_URL: "data_url",
            };
            class CN {
                constructor(e, t) {
                    (this.data = e), (this.contentType = t || null);
                }
            }
            function bN(n, e) {
                switch (n) {
                    case _o.RAW:
                        return new CN(PL(e));
                    case _o.BASE64:
                    case _o.BASE64URL:
                        return new CN(kL(n, e));
                    case _o.DATA_URL:
                        return new CN(
                            (function kG(n) {
                                const e = new OL(n);
                                return e.base64
                                    ? kL(_o.BASE64, e.rest)
                                    : (function PG(n) {
                                          let e;
                                          try {
                                              e = decodeURIComponent(n);
                                          } catch {
                                              throw jE(
                                                  _o.DATA_URL,
                                                  "Malformed data URL."
                                              );
                                          }
                                          return PL(e);
                                      })(e.rest);
                            })(e),
                            (function OG(n) {
                                return new OL(n).contentType;
                            })(e)
                        );
                }
                throw wN();
            }
            function PL(n) {
                const e = [];
                for (let t = 0; t < n.length; t++) {
                    let r = n.charCodeAt(t);
                    r <= 127
                        ? e.push(r)
                        : r <= 2047
                        ? e.push(192 | (r >> 6), 128 | (63 & r))
                        : 55296 == (64512 & r)
                        ? t < n.length - 1 &&
                          56320 == (64512 & n.charCodeAt(t + 1))
                            ? ((r =
                                  65536 |
                                  ((1023 & r) << 10) |
                                  (1023 & n.charCodeAt(++t))),
                              e.push(
                                  240 | (r >> 18),
                                  128 | ((r >> 12) & 63),
                                  128 | ((r >> 6) & 63),
                                  128 | (63 & r)
                              ))
                            : e.push(239, 191, 189)
                        : 56320 == (64512 & r)
                        ? e.push(239, 191, 189)
                        : e.push(
                              224 | (r >> 12),
                              128 | ((r >> 6) & 63),
                              128 | (63 & r)
                          );
                }
                return new Uint8Array(e);
            }
            function kL(n, e) {
                switch (n) {
                    case _o.BASE64: {
                        const i = -1 !== e.indexOf("-"),
                            a = -1 !== e.indexOf("_");
                        if (i || a)
                            throw jE(
                                n,
                                "Invalid character '" +
                                    (i ? "-" : "_") +
                                    "' found: is it base64url encoded?"
                            );
                        break;
                    }
                    case _o.BASE64URL: {
                        const i = -1 !== e.indexOf("+"),
                            a = -1 !== e.indexOf("/");
                        if (i || a)
                            throw jE(
                                n,
                                "Invalid character '" +
                                    (i ? "+" : "/") +
                                    "' found: is it base64 encoded?"
                            );
                        e = e.replace(/-/g, "+").replace(/_/g, "/");
                        break;
                    }
                }
                let t;
                try {
                    t = (function NG(n) {
                        return atob(n);
                    })(e);
                } catch {
                    throw jE(n, "Invalid character found");
                }
                const r = new Uint8Array(t.length);
                for (let i = 0; i < t.length; i++) r[i] = t.charCodeAt(i);
                return r;
            }
            class OL {
                constructor(e) {
                    (this.base64 = !1), (this.contentType = null);
                    const t = e.match(/^data:([^,]+)?,/);
                    if (null === t)
                        throw jE(
                            _o.DATA_URL,
                            "Must be formatted 'data:[<mediatype>][;base64],<data>"
                        );
                    const r = t[1] || null;
                    null != r &&
                        ((this.base64 = (function FG(n, e) {
                            return (
                                n.length >= e.length &&
                                n.substring(n.length - e.length) === e
                            );
                        })(r, ";base64")),
                        (this.contentType = this.base64
                            ? r.substring(0, r.length - 7)
                            : r)),
                        (this.rest = e.substring(e.indexOf(",") + 1));
                }
            }
            class Bu {
                constructor(e, t) {
                    let r = 0,
                        i = "";
                    ML(e)
                        ? ((this.data_ = e), (r = e.size), (i = e.type))
                        : e instanceof ArrayBuffer
                        ? (t
                              ? (this.data_ = new Uint8Array(e))
                              : ((this.data_ = new Uint8Array(e.byteLength)),
                                this.data_.set(new Uint8Array(e))),
                          (r = this.data_.length))
                        : e instanceof Uint8Array &&
                          (t
                              ? (this.data_ = e)
                              : ((this.data_ = new Uint8Array(e.length)),
                                this.data_.set(e)),
                          (r = e.length)),
                        (this.size_ = r),
                        (this.type_ = i);
                }
                size() {
                    return this.size_;
                }
                type() {
                    return this.type_;
                }
                slice(e, t) {
                    if (ML(this.data_)) {
                        const i = (function MG(n, e, t) {
                            return n.webkitSlice
                                ? n.webkitSlice(e, t)
                                : n.mozSlice
                                ? n.mozSlice(e, t)
                                : n.slice
                                ? n.slice(e, t)
                                : null;
                        })(this.data_, e, t);
                        return null === i ? null : new Bu(i);
                    }
                    {
                        const r = new Uint8Array(this.data_.buffer, e, t - e);
                        return new Bu(r, !0);
                    }
                }
                static getBlob(...e) {
                    if (EN()) {
                        const t = e.map((r) => (r instanceof Bu ? r.data_ : r));
                        return new Bu(RG.apply(null, t));
                    }
                    {
                        const t = e.map((l) =>
                            NT(l) ? bN(_o.RAW, l).data : l.data_
                        );
                        let r = 0;
                        t.forEach((l) => {
                            r += l.byteLength;
                        });
                        const i = new Uint8Array(r);
                        let a = 0;
                        return (
                            t.forEach((l) => {
                                for (let h = 0; h < l.length; h++)
                                    i[a++] = l[h];
                            }),
                            new Bu(i, !0)
                        );
                    }
                }
                uploadData() {
                    return this.data_;
                }
            }
            function DN(n) {
                let e;
                try {
                    e = JSON.parse(n);
                } catch {
                    return null;
                }
                return (function IG(n) {
                    return "object" == typeof n && !Array.isArray(n);
                })(e)
                    ? e
                    : null;
            }
            function FL(n) {
                const e = n.lastIndexOf("/", n.length - 2);
                return -1 === e ? n : n.slice(e + 1);
            }
            function UG(n, e) {
                return e;
            }
            class Is {
                constructor(e, t, r, i) {
                    (this.server = e),
                        (this.local = t || e),
                        (this.writable = !!r),
                        (this.xform = i || UG);
                }
            }
            let kT = null;
            function $E() {
                if (kT) return kT;
                const n = [];
                n.push(new Is("bucket")),
                    n.push(new Is("generation")),
                    n.push(new Is("metageneration")),
                    n.push(new Is("name", "fullPath", !0));
                const t = new Is("name");
                (t.xform = function e(a, l) {
                    return (function BG(n) {
                        return !NT(n) || n.length < 2 ? n : FL(n);
                    })(l);
                }),
                    n.push(t);
                const i = new Is("size");
                return (
                    (i.xform = function r(a, l) {
                        return void 0 !== l ? Number(l) : l;
                    }),
                    n.push(i),
                    n.push(new Is("timeCreated")),
                    n.push(new Is("updated")),
                    n.push(new Is("md5Hash", null, !0)),
                    n.push(new Is("cacheControl", null, !0)),
                    n.push(new Is("contentDisposition", null, !0)),
                    n.push(new Is("contentEncoding", null, !0)),
                    n.push(new Is("contentLanguage", null, !0)),
                    n.push(new Is("contentType", null, !0)),
                    n.push(new Is("metadata", "customMetadata", !0)),
                    (kT = n),
                    kT
                );
            }
            function LL(n, e, t) {
                const r = DN(e);
                return null === r
                    ? null
                    : (function HG(n, e, t) {
                          const r = { type: "file" },
                              i = t.length;
                          for (let a = 0; a < i; a++) {
                              const l = t[a];
                              r[l.local] = l.xform(r, e[l.server]);
                          }
                          return (
                              (function jG(n, e) {
                                  Object.defineProperty(n, "ref", {
                                      get: function t() {
                                          const a = new Ji(
                                              n.bucket,
                                              n.fullPath
                                          );
                                          return e._makeStorageReference(a);
                                      },
                                  });
                              })(r, n),
                              r
                          );
                      })(n, r, t);
            }
            function TN(n, e) {
                const t = {},
                    r = e.length;
                for (let i = 0; i < r; i++) {
                    const a = e[i];
                    a.writable && (t[a.server] = n[a.local]);
                }
                return JSON.stringify(t);
            }
            const VL = "prefixes";
            class ju {
                constructor(e, t, r, i) {
                    (this.url = e),
                        (this.method = t),
                        (this.handler = r),
                        (this.timeout = i),
                        (this.urlParams = {}),
                        (this.headers = {}),
                        (this.body = null),
                        (this.errorHandler = null),
                        (this.progressCallback = null),
                        (this.successCodes = [200]),
                        (this.additionalRetryCodes = []);
                }
            }
            function Hu(n) {
                if (!n) throw wN();
            }
            function OT(n, e) {
                return function t(r, i) {
                    const a = LL(n, i, e);
                    return Hu(null !== a), a;
                };
            }
            function sy(n) {
                return function e(t, r) {
                    let i;
                    return (
                        (i =
                            401 === t.getStatus()
                                ? t
                                      .getErrorText()
                                      .includes(
                                          "Firebase App Check token is invalid"
                                      )
                                    ? (function lG() {
                                          return new kr(
                                              "unauthorized-app",
                                              "This app does not have permission to access Firebase Storage on this project."
                                          );
                                      })()
                                    : (function uG() {
                                          return new kr(
                                              "unauthenticated",
                                              "User is not authenticated, please authenticate using Firebase Authentication and try again."
                                          );
                                      })()
                                : 402 === t.getStatus()
                                ? (function aG(n) {
                                      return new kr(
                                          "quota-exceeded",
                                          "Quota for bucket '" +
                                              n +
                                              "' exceeded, please view quota on https://firebase.google.com/pricing/."
                                      );
                                  })(n.bucket)
                                : 403 === t.getStatus()
                                ? (function cG(n) {
                                      return new kr(
                                          "unauthorized",
                                          "User does not have permission to access '" +
                                              n +
                                              "'."
                                      );
                                  })(n.path)
                                : r),
                        (i.serverResponse = r.serverResponse),
                        i
                    );
                };
            }
            function GE(n) {
                const e = sy(n);
                return function t(r, i) {
                    let a = e(r, i);
                    return (
                        404 === r.getStatus() &&
                            (a = (function oG(n) {
                                return new kr(
                                    "object-not-found",
                                    "Object '" + n + "' does not exist."
                                );
                            })(n.path)),
                        (a.serverResponse = i.serverResponse),
                        a
                    );
                };
            }
            function BL(n, e, t) {
                const i = oc(e.fullServerUrl(), n.host, n._protocol),
                    l = n.maxOperationRetryTime,
                    h = new ju(i, "GET", OT(n, t), l);
                return (h.errorHandler = GE(e)), h;
            }
            function KG(n, e, t, r, i) {
                const a = {};
                (a.prefix = e.isRoot ? "" : e.path + "/"),
                    t && t.length > 0 && (a.delimiter = t),
                    r && (a.pageToken = r),
                    i && (a.maxResults = i);
                const h = oc(e.bucketOnlyServerUrl(), n.host, n._protocol),
                    E = n.maxOperationRetryTime,
                    D = new ju(
                        h,
                        "GET",
                        (function zG(n, e) {
                            return function t(r, i) {
                                const a = (function WG(n, e, t) {
                                    const r = DN(t);
                                    return null === r
                                        ? null
                                        : (function GG(n, e, t) {
                                              const r = {
                                                  prefixes: [],
                                                  items: [],
                                                  nextPageToken:
                                                      t.nextPageToken,
                                              };
                                              if (t[VL])
                                                  for (const i of t[VL]) {
                                                      const a = i.replace(
                                                              /\/$/,
                                                              ""
                                                          ),
                                                          l =
                                                              n._makeStorageReference(
                                                                  new Ji(e, a)
                                                              );
                                                      r.prefixes.push(l);
                                                  }
                                              if (t.items)
                                                  for (const i of t.items) {
                                                      const a =
                                                          n._makeStorageReference(
                                                              new Ji(e, i.name)
                                                          );
                                                      r.items.push(a);
                                                  }
                                              return r;
                                          })(n, e, r);
                                })(n, e, i);
                                return Hu(null !== a), a;
                            };
                        })(n, e.bucket),
                        E
                    );
                return (D.urlParams = a), (D.errorHandler = sy(e)), D;
            }
            function HL(n, e, t) {
                const r = Object.assign({}, t);
                return (
                    (r.fullPath = n.path),
                    (r.size = e.size()),
                    r.contentType ||
                        (r.contentType = (function JG(n, e) {
                            return (
                                (n && n.contentType) ||
                                (e && e.type()) ||
                                "application/octet-stream"
                            );
                        })(null, e)),
                    r
                );
            }
            class FT {
                constructor(e, t, r, i) {
                    (this.current = e),
                        (this.total = t),
                        (this.finalized = !!r),
                        (this.metadata = i || null);
                }
            }
            function SN(n, e) {
                let t = null;
                try {
                    t = n.getResponseHeader("X-Goog-Upload-Status");
                } catch {
                    Hu(!1);
                }
                return Hu(!!t && -1 !== (e || ["active"]).indexOf(t)), t;
            }
            const nW = { STATE_CHANGED: "state_changed" },
                Cs = {
                    RUNNING: "running",
                    PAUSED: "paused",
                    SUCCESS: "success",
                    CANCELED: "canceled",
                    ERROR: "error",
                };
            function AN(n) {
                switch (n) {
                    case "running":
                    case "pausing":
                    case "canceling":
                        return Cs.RUNNING;
                    case "paused":
                        return Cs.PAUSED;
                    case "success":
                        return Cs.SUCCESS;
                    case "canceled":
                        return Cs.CANCELED;
                    default:
                        return Cs.ERROR;
                }
            }
            class rW {
                constructor(e, t, r) {
                    if (
                        (function EG(n) {
                            return "function" == typeof n;
                        })(e) ||
                        null != t ||
                        null != r
                    )
                        (this.next = e),
                            (this.error = t ?? void 0),
                            (this.complete = r ?? void 0);
                    else {
                        const a = e;
                        (this.next = a.next),
                            (this.error = a.error),
                            (this.complete = a.complete);
                    }
                }
            }
            function oy(n) {
                return (...e) => {
                    Promise.resolve().then(() => n(...e));
                };
            }
            class sW extends class iW {
                constructor() {
                    (this.sent_ = !1),
                        (this.xhr_ = new XMLHttpRequest()),
                        this.initXhr(),
                        (this.errorCode_ = lh.NO_ERROR),
                        (this.sendPromise_ = new Promise((e) => {
                            this.xhr_.addEventListener("abort", () => {
                                (this.errorCode_ = lh.ABORT), e();
                            }),
                                this.xhr_.addEventListener("error", () => {
                                    (this.errorCode_ = lh.NETWORK_ERROR), e();
                                }),
                                this.xhr_.addEventListener("load", () => {
                                    e();
                                });
                        }));
                }
                send(e, t, r, i) {
                    if (this.sent_) throw HE("cannot .send() more than once");
                    if (
                        ((this.sent_ = !0),
                        this.xhr_.open(t, e, !0),
                        void 0 !== i)
                    )
                        for (const a in i)
                            i.hasOwnProperty(a) &&
                                this.xhr_.setRequestHeader(a, i[a].toString());
                    return (
                        void 0 !== r ? this.xhr_.send(r) : this.xhr_.send(),
                        this.sendPromise_
                    );
                }
                getErrorCode() {
                    if (!this.sent_)
                        throw HE("cannot .getErrorCode() before sending");
                    return this.errorCode_;
                }
                getStatus() {
                    if (!this.sent_)
                        throw HE("cannot .getStatus() before sending");
                    try {
                        return this.xhr_.status;
                    } catch {
                        return -1;
                    }
                }
                getResponse() {
                    if (!this.sent_)
                        throw HE("cannot .getResponse() before sending");
                    return this.xhr_.response;
                }
                getErrorText() {
                    if (!this.sent_)
                        throw HE("cannot .getErrorText() before sending");
                    return this.xhr_.statusText;
                }
                abort() {
                    this.xhr_.abort();
                }
                getResponseHeader(e) {
                    return this.xhr_.getResponseHeader(e);
                }
                addUploadProgressListener(e) {
                    null != this.xhr_.upload &&
                        this.xhr_.upload.addEventListener("progress", e);
                }
                removeUploadProgressListener(e) {
                    null != this.xhr_.upload &&
                        this.xhr_.upload.removeEventListener("progress", e);
                }
            } {
                initXhr() {
                    this.xhr_.responseType = "text";
                }
            }
            function Oa() {
                return new sW();
            }
            class zL {
                constructor(e, t, r = null) {
                    (this._transferred = 0),
                        (this._needToFetchStatus = !1),
                        (this._needToFetchMetadata = !1),
                        (this._observers = []),
                        (this._error = void 0),
                        (this._uploadUrl = void 0),
                        (this._request = void 0),
                        (this._chunkMultiplier = 1),
                        (this._resolve = void 0),
                        (this._reject = void 0),
                        (this._ref = e),
                        (this._blob = t),
                        (this._metadata = r),
                        (this._mappings = $E()),
                        (this._resumable = this._shouldDoResumable(this._blob)),
                        (this._state = "running"),
                        (this._errorHandler = (i) => {
                            (this._request = void 0),
                                (this._chunkMultiplier = 1),
                                i._codeEquals("canceled")
                                    ? ((this._needToFetchStatus = !0),
                                      this.completeTransitions_())
                                    : ((this._error = i),
                                      this._transition("error"));
                        }),
                        (this._metadataErrorHandler = (i) => {
                            (this._request = void 0),
                                i._codeEquals("canceled")
                                    ? this.completeTransitions_()
                                    : ((this._error = i),
                                      this._transition("error"));
                        }),
                        (this._promise = new Promise((i, a) => {
                            (this._resolve = i),
                                (this._reject = a),
                                this._start();
                        })),
                        this._promise.then(null, () => {});
                }
                _makeProgressCallback() {
                    const e = this._transferred;
                    return (t) => this._updateProgress(e + t);
                }
                _shouldDoResumable(e) {
                    return e.size() > 262144;
                }
                _start() {
                    "running" === this._state &&
                        void 0 === this._request &&
                        (this._resumable
                            ? void 0 === this._uploadUrl
                                ? this._createResumable()
                                : this._needToFetchStatus
                                ? this._fetchStatus()
                                : this._needToFetchMetadata
                                ? this._fetchMetadata()
                                : this._continueUpload()
                            : this._oneShotUpload());
                }
                _resolveToken(e) {
                    Promise.all([
                        this._ref.storage._getAuthToken(),
                        this._ref.storage._getAppCheckToken(),
                    ]).then(([t, r]) => {
                        switch (this._state) {
                            case "running":
                                e(t, r);
                                break;
                            case "canceling":
                                this._transition("canceled");
                                break;
                            case "pausing":
                                this._transition("paused");
                        }
                    });
                }
                _createResumable() {
                    this._resolveToken((e, t) => {
                        const r = (function XG(n, e, t, r, i) {
                                const a = e.bucketOnlyServerUrl(),
                                    l = HL(e, r, i),
                                    h = { name: l.fullPath },
                                    _ = oc(a, n.host, n._protocol),
                                    D = {
                                        "X-Goog-Upload-Protocol": "resumable",
                                        "X-Goog-Upload-Command": "start",
                                        "X-Goog-Upload-Header-Content-Length": `${r.size()}`,
                                        "X-Goog-Upload-Header-Content-Type":
                                            l.contentType,
                                        "Content-Type":
                                            "application/json; charset=utf-8",
                                    },
                                    T = TN(l, t),
                                    K = new ju(
                                        _,
                                        "POST",
                                        function F(Ie) {
                                            let Re;
                                            SN(Ie);
                                            try {
                                                Re =
                                                    Ie.getResponseHeader(
                                                        "X-Goog-Upload-URL"
                                                    );
                                            } catch {
                                                Hu(!1);
                                            }
                                            return Hu(NT(Re)), Re;
                                        },
                                        n.maxUploadRetryTime
                                    );
                                return (
                                    (K.urlParams = h),
                                    (K.headers = D),
                                    (K.body = T),
                                    (K.errorHandler = sy(e)),
                                    K
                                );
                            })(
                                this._ref.storage,
                                this._ref._location,
                                this._mappings,
                                this._blob,
                                this._metadata
                            ),
                            i = this._ref.storage._makeRequest(r, Oa, e, t);
                        (this._request = i),
                            i.getPromise().then((a) => {
                                (this._request = void 0),
                                    (this._uploadUrl = a),
                                    (this._needToFetchStatus = !1),
                                    this.completeTransitions_();
                            }, this._errorHandler);
                    });
                }
                _fetchStatus() {
                    const e = this._uploadUrl;
                    this._resolveToken((t, r) => {
                        const i = (function eW(n, e, t, r) {
                                const _ = new ju(
                                    t,
                                    "POST",
                                    function a(E) {
                                        const D = SN(E, ["active", "final"]);
                                        let T = null;
                                        try {
                                            T = E.getResponseHeader(
                                                "X-Goog-Upload-Size-Received"
                                            );
                                        } catch {
                                            Hu(!1);
                                        }
                                        T || Hu(!1);
                                        const R = Number(T);
                                        return (
                                            Hu(!isNaN(R)),
                                            new FT(R, r.size(), "final" === D)
                                        );
                                    },
                                    n.maxUploadRetryTime
                                );
                                return (
                                    (_.headers = {
                                        "X-Goog-Upload-Command": "query",
                                    }),
                                    (_.errorHandler = sy(e)),
                                    _
                                );
                            })(
                                this._ref.storage,
                                this._ref._location,
                                e,
                                this._blob
                            ),
                            a = this._ref.storage._makeRequest(i, Oa, t, r);
                        (this._request = a),
                            a.getPromise().then((l) => {
                                (this._request = void 0),
                                    this._updateProgress(l.current),
                                    (this._needToFetchStatus = !1),
                                    l.finalized &&
                                        (this._needToFetchMetadata = !0),
                                    this.completeTransitions_();
                            }, this._errorHandler);
                    });
                }
                _continueUpload() {
                    const e = 262144 * this._chunkMultiplier,
                        t = new FT(this._transferred, this._blob.size()),
                        r = this._uploadUrl;
                    this._resolveToken((i, a) => {
                        let l;
                        try {
                            l = (function tW(n, e, t, r, i, a, l, h) {
                                const _ = new FT(0, 0);
                                if (
                                    (l
                                        ? ((_.current = l.current),
                                          (_.total = l.total))
                                        : ((_.current = 0),
                                          (_.total = r.size())),
                                    r.size() !== _.total)
                                )
                                    throw (function gG() {
                                        return new kr(
                                            "server-file-wrong-size",
                                            "Server recorded incorrect upload file size, please retry the upload."
                                        );
                                    })();
                                const E = _.total - _.current;
                                let D = E;
                                i > 0 && (D = Math.min(D, i));
                                const T = _.current,
                                    K = {
                                        "X-Goog-Upload-Command":
                                            D === E
                                                ? "upload, finalize"
                                                : "upload",
                                        "X-Goog-Upload-Offset": `${_.current}`,
                                    },
                                    Ie = r.slice(T, T + D);
                                if (null === Ie) throw AL();
                                const yt = new ju(
                                    t,
                                    "POST",
                                    function Re(gt, $t) {
                                        const un = SN(gt, ["active", "final"]),
                                            Yr = _.current + D,
                                            Fa = r.size();
                                        let MN;
                                        return (
                                            (MN =
                                                "final" === un
                                                    ? OT(e, a)(gt, $t)
                                                    : null),
                                            new FT(Yr, Fa, "final" === un, MN)
                                        );
                                    },
                                    e.maxUploadRetryTime
                                );
                                return (
                                    (yt.headers = K),
                                    (yt.body = Ie.uploadData()),
                                    (yt.progressCallback = h || null),
                                    (yt.errorHandler = sy(n)),
                                    yt
                                );
                            })(
                                this._ref._location,
                                this._ref.storage,
                                r,
                                this._blob,
                                e,
                                this._mappings,
                                t,
                                this._makeProgressCallback()
                            );
                        } catch (_) {
                            return (
                                (this._error = _),
                                void this._transition("error")
                            );
                        }
                        const h = this._ref.storage._makeRequest(l, Oa, i, a);
                        (this._request = h),
                            h.getPromise().then((_) => {
                                this._increaseMultiplier(),
                                    (this._request = void 0),
                                    this._updateProgress(_.current),
                                    _.finalized
                                        ? ((this._metadata = _.metadata),
                                          this._transition("success"))
                                        : this.completeTransitions_();
                            }, this._errorHandler);
                    });
                }
                _increaseMultiplier() {
                    262144 * this._chunkMultiplier < 33554432 &&
                        (this._chunkMultiplier *= 2);
                }
                _fetchMetadata() {
                    this._resolveToken((e, t) => {
                        const r = BL(
                                this._ref.storage,
                                this._ref._location,
                                this._mappings
                            ),
                            i = this._ref.storage._makeRequest(r, Oa, e, t);
                        (this._request = i),
                            i.getPromise().then((a) => {
                                (this._request = void 0),
                                    (this._metadata = a),
                                    this._transition("success");
                            }, this._metadataErrorHandler);
                    });
                }
                _oneShotUpload() {
                    this._resolveToken((e, t) => {
                        const r = (function $L(n, e, t, r, i) {
                                const a = e.bucketOnlyServerUrl(),
                                    l = {
                                        "X-Goog-Upload-Protocol": "multipart",
                                    },
                                    _ = (function h() {
                                        let yt = "";
                                        for (let gt = 0; gt < 2; gt++)
                                            yt += Math.random()
                                                .toString()
                                                .slice(2);
                                        return yt;
                                    })();
                                l["Content-Type"] =
                                    "multipart/related; boundary=" + _;
                                const E = HL(e, r, i),
                                    D = TN(E, t),
                                    F = Bu.getBlob(
                                        "--" +
                                            _ +
                                            "\r\nContent-Type: application/json; charset=utf-8\r\n\r\n" +
                                            D +
                                            "\r\n--" +
                                            _ +
                                            "\r\nContent-Type: " +
                                            E.contentType +
                                            "\r\n\r\n",
                                        r,
                                        "\r\n--" + _ + "--"
                                    );
                                if (null === F) throw AL();
                                const K = { name: E.fullPath },
                                    Ie = oc(a, n.host, n._protocol),
                                    mt = n.maxUploadRetryTime,
                                    _t = new ju(Ie, "POST", OT(n, t), mt);
                                return (
                                    (_t.urlParams = K),
                                    (_t.headers = l),
                                    (_t.body = F.uploadData()),
                                    (_t.errorHandler = sy(e)),
                                    _t
                                );
                            })(
                                this._ref.storage,
                                this._ref._location,
                                this._mappings,
                                this._blob,
                                this._metadata
                            ),
                            i = this._ref.storage._makeRequest(r, Oa, e, t);
                        (this._request = i),
                            i.getPromise().then((a) => {
                                (this._request = void 0),
                                    (this._metadata = a),
                                    this._updateProgress(this._blob.size()),
                                    this._transition("success");
                            }, this._errorHandler);
                    });
                }
                _updateProgress(e) {
                    const t = this._transferred;
                    (this._transferred = e),
                        this._transferred !== t && this._notifyObservers();
                }
                _transition(e) {
                    if (this._state !== e)
                        switch (e) {
                            case "canceling":
                            case "pausing":
                                (this._state = e),
                                    void 0 !== this._request &&
                                        this._request.cancel();
                                break;
                            case "running":
                                const t = "paused" === this._state;
                                (this._state = e),
                                    t &&
                                        (this._notifyObservers(),
                                        this._start());
                                break;
                            case "paused":
                            case "error":
                            case "success":
                                (this._state = e), this._notifyObservers();
                                break;
                            case "canceled":
                                (this._error = SL()),
                                    (this._state = e),
                                    this._notifyObservers();
                        }
                }
                completeTransitions_() {
                    switch (this._state) {
                        case "pausing":
                            this._transition("paused");
                            break;
                        case "canceling":
                            this._transition("canceled");
                            break;
                        case "running":
                            this._start();
                    }
                }
                get snapshot() {
                    const e = AN(this._state);
                    return {
                        bytesTransferred: this._transferred,
                        totalBytes: this._blob.size(),
                        state: e,
                        metadata: this._metadata,
                        task: this,
                        ref: this._ref,
                    };
                }
                on(e, t, r, i) {
                    const a = new rW(t || void 0, r || void 0, i || void 0);
                    return (
                        this._addObserver(a),
                        () => {
                            this._removeObserver(a);
                        }
                    );
                }
                then(e, t) {
                    return this._promise.then(e, t);
                }
                catch(e) {
                    return this.then(null, e);
                }
                _addObserver(e) {
                    this._observers.push(e), this._notifyObserver(e);
                }
                _removeObserver(e) {
                    const t = this._observers.indexOf(e);
                    -1 !== t && this._observers.splice(t, 1);
                }
                _notifyObservers() {
                    this._finishPromise(),
                        this._observers.slice().forEach((t) => {
                            this._notifyObserver(t);
                        });
                }
                _finishPromise() {
                    if (void 0 !== this._resolve) {
                        let e = !0;
                        switch (AN(this._state)) {
                            case Cs.SUCCESS:
                                oy(this._resolve.bind(null, this.snapshot))();
                                break;
                            case Cs.CANCELED:
                            case Cs.ERROR:
                                oy(this._reject.bind(null, this._error))();
                                break;
                            default:
                                e = !1;
                        }
                        e &&
                            ((this._resolve = void 0), (this._reject = void 0));
                    }
                }
                _notifyObserver(e) {
                    switch (AN(this._state)) {
                        case Cs.RUNNING:
                        case Cs.PAUSED:
                            e.next && oy(e.next.bind(e, this.snapshot))();
                            break;
                        case Cs.SUCCESS:
                            e.complete && oy(e.complete.bind(e))();
                            break;
                        default:
                            e.error && oy(e.error.bind(e, this._error))();
                    }
                }
                resume() {
                    const e =
                        "paused" === this._state || "pausing" === this._state;
                    return e && this._transition("running"), e;
                }
                pause() {
                    const e = "running" === this._state;
                    return e && this._transition("pausing"), e;
                }
                cancel() {
                    const e =
                        "running" === this._state || "pausing" === this._state;
                    return e && this._transition("canceling"), e;
                }
            }
            class Vp {
                constructor(e, t) {
                    (this._service = e),
                        (this._location =
                            t instanceof Ji ? t : Ji.makeFromUrl(t, e.host));
                }
                toString() {
                    return (
                        "gs://" +
                        this._location.bucket +
                        "/" +
                        this._location.path
                    );
                }
                _newRef(e, t) {
                    return new Vp(e, t);
                }
                get root() {
                    const e = new Ji(this._location.bucket, "");
                    return this._newRef(this._service, e);
                }
                get bucket() {
                    return this._location.bucket;
                }
                get fullPath() {
                    return this._location.path;
                }
                get name() {
                    return FL(this._location.path);
                }
                get storage() {
                    return this._service;
                }
                get parent() {
                    const e = (function LG(n) {
                        if (0 === n.length) return null;
                        const e = n.lastIndexOf("/");
                        return -1 === e ? "" : n.slice(0, e);
                    })(this._location.path);
                    if (null === e) return null;
                    const t = new Ji(this._location.bucket, e);
                    return new Vp(this._service, t);
                }
                _throwIfRoot(e) {
                    if ("" === this._location.path) throw RL(e);
                }
            }
            function KL(n, e, t) {
                return xN.apply(this, arguments);
            }
            function xN() {
                return (
                    (xN = (0, y.Z)(function* (n, e, t) {
                        const i = yield ZL(n, { pageToken: t });
                        e.prefixes.push(...i.prefixes),
                            e.items.push(...i.items),
                            null != i.nextPageToken &&
                                (yield KL(n, e, i.nextPageToken));
                    })),
                    xN.apply(this, arguments)
                );
            }
            function ZL(n, e) {
                null != e &&
                    "number" == typeof e.maxResults &&
                    IN("options.maxResults", 1, 1e3, e.maxResults);
                const t = e || {},
                    r = KG(
                        n.storage,
                        n._location,
                        "/",
                        t.pageToken,
                        t.maxResults
                    );
                return n.storage.makeRequestWithTokens(r, Oa);
            }
            function _W(n) {
                n._throwIfRoot("getDownloadURL");
                const e = (function ZG(n, e, t) {
                    const i = oc(e.fullServerUrl(), n.host, n._protocol),
                        l = n.maxOperationRetryTime,
                        h = new ju(
                            i,
                            "GET",
                            (function qG(n, e) {
                                return function t(r, i) {
                                    const a = LL(n, i, e);
                                    return (
                                        Hu(null !== a),
                                        (function $G(n, e, t, r) {
                                            const i = DN(e);
                                            if (
                                                null === i ||
                                                !NT(i.downloadTokens)
                                            )
                                                return null;
                                            const a = i.downloadTokens;
                                            if (0 === a.length) return null;
                                            const l = encodeURIComponent;
                                            return a.split(",").map((E) => {
                                                const T = n.fullPath;
                                                return (
                                                    oc(
                                                        "/b/" +
                                                            l(n.bucket) +
                                                            "/o/" +
                                                            l(T),
                                                        t,
                                                        r
                                                    ) +
                                                    NL({
                                                        alt: "media",
                                                        token: E,
                                                    })
                                                );
                                            })[0];
                                        })(a, i, n.host, n._protocol)
                                    );
                                };
                            })(n, t),
                            l
                        );
                    return (h.errorHandler = GE(e)), h;
                })(n.storage, n._location, $E());
                return n.storage.makeRequestWithTokens(e, Oa).then((t) => {
                    if (null === t)
                        throw (function mG() {
                            return new kr(
                                "no-download-url",
                                "The given file does not have any download URLs."
                            );
                        })();
                    return t;
                });
            }
            function YL(n, e) {
                const t = (function VG(n, e) {
                        const t = e
                            .split("/")
                            .filter((r) => r.length > 0)
                            .join("/");
                        return 0 === n.length ? t : n + "/" + t;
                    })(n._location.path, e),
                    r = new Ji(n._location.bucket, t);
                return new Vp(n.storage, r);
            }
            function QL(n, e) {
                if (n instanceof RN) {
                    const t = n;
                    if (null == t._bucket)
                        throw (function pG() {
                            return new kr(
                                "no-default-bucket",
                                "No default bucket found. Did you set the '" +
                                    TL +
                                    "' property when initializing the app?"
                            );
                        })();
                    const r = new Vp(t, t._bucket);
                    return null != e ? QL(r, e) : r;
                }
                return void 0 !== e ? YL(n, e) : n;
            }
            function EW(n, e) {
                if (
                    e &&
                    (function vW(n) {
                        return /^[A-Za-z]+:\/\//.test(n);
                    })(e)
                ) {
                    if (n instanceof RN)
                        return (function wW(n, e) {
                            return new Vp(n, e);
                        })(n, e);
                    throw iy(
                        "To use ref(service, url), the first argument must be a Storage instance."
                    );
                }
                return QL(n, e);
            }
            function JL(n, e) {
                const t = e?.[TL];
                return null == t ? null : Ji.makeFromBucketSpec(t, n);
            }
            class RN {
                constructor(e, t, r, i, a) {
                    (this.app = e),
                        (this._authProvider = t),
                        (this._appCheckProvider = r),
                        (this._url = i),
                        (this._firebaseVersion = a),
                        (this._bucket = null),
                        (this._host = DL),
                        (this._protocol = "https"),
                        (this._appId = null),
                        (this._deleted = !1),
                        (this._maxOperationRetryTime = 12e4),
                        (this._maxUploadRetryTime = 6e5),
                        (this._requests = new Set()),
                        (this._bucket =
                            null != i
                                ? Ji.makeFromBucketSpec(i, this._host)
                                : JL(this._host, this.app.options));
                }
                get host() {
                    return this._host;
                }
                set host(e) {
                    (this._host = e),
                        (this._bucket =
                            null != this._url
                                ? Ji.makeFromBucketSpec(this._url, e)
                                : JL(e, this.app.options));
                }
                get maxUploadRetryTime() {
                    return this._maxUploadRetryTime;
                }
                set maxUploadRetryTime(e) {
                    IN("time", 0, Number.POSITIVE_INFINITY, e),
                        (this._maxUploadRetryTime = e);
                }
                get maxOperationRetryTime() {
                    return this._maxOperationRetryTime;
                }
                set maxOperationRetryTime(e) {
                    IN("time", 0, Number.POSITIVE_INFINITY, e),
                        (this._maxOperationRetryTime = e);
                }
                _getAuthToken() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        if (e._overrideAuthToken) return e._overrideAuthToken;
                        const t = e._authProvider.getImmediate({
                            optional: !0,
                        });
                        if (t) {
                            const r = yield t.getToken();
                            if (null !== r) return r.accessToken;
                        }
                        return null;
                    })();
                }
                _getAppCheckToken() {
                    var e = this;
                    return (0, y.Z)(function* () {
                        const t = e._appCheckProvider.getImmediate({
                            optional: !0,
                        });
                        return t ? (yield t.getToken()).token : null;
                    })();
                }
                _delete() {
                    return (
                        this._deleted ||
                            ((this._deleted = !0),
                            this._requests.forEach((e) => e.cancel()),
                            this._requests.clear()),
                        Promise.resolve()
                    );
                }
                _makeStorageReference(e) {
                    return new Vp(this, e);
                }
                _makeRequest(e, t, r, i) {
                    if (this._deleted) return new _G(xL());
                    {
                        const a = (function AG(n, e, t, r, i, a) {
                            const l = NL(n.urlParams),
                                h = n.url + l,
                                _ = Object.assign({}, n.headers);
                            return (
                                (function TG(n, e) {
                                    e && (n["X-Firebase-GMPID"] = e);
                                })(_, e),
                                (function bG(n, e) {
                                    null !== e &&
                                        e.length > 0 &&
                                        (n.Authorization = "Firebase " + e);
                                })(_, t),
                                (function DG(n, e) {
                                    n["X-Firebase-Storage-Version"] =
                                        "webjs/" + (e ?? "AppManager");
                                })(_, a),
                                (function SG(n, e) {
                                    null !== e &&
                                        (n["X-Firebase-AppCheck"] = e);
                                })(_, r),
                                new CG(
                                    h,
                                    n.method,
                                    _,
                                    n.body,
                                    n.successCodes,
                                    n.additionalRetryCodes,
                                    n.handler,
                                    n.errorHandler,
                                    n.timeout,
                                    n.progressCallback,
                                    i
                                )
                            );
                        })(e, this._appId, r, i, t, this._firebaseVersion);
                        return (
                            this._requests.add(a),
                            a.getPromise().then(
                                () => this._requests.delete(a),
                                () => this._requests.delete(a)
                            ),
                            a
                        );
                    }
                }
                makeRequestWithTokens(e, t) {
                    var r = this;
                    return (0, y.Z)(function* () {
                        const [i, a] = yield Promise.all([
                            r._getAuthToken(),
                            r._getAppCheckToken(),
                        ]);
                        return r._makeRequest(e, t, i, a).getPromise();
                    })();
                }
            }
            const XL = "@firebase/storage";
            function nV(n, e) {
                return EW((n = (0, C.m9)(n)), e);
            }
            function NW(n, { instanceIdentifier: e }) {
                const t = n.getProvider("app").getImmediate(),
                    r = n.getProvider("auth-internal"),
                    i = n.getProvider("app-check-internal");
                return new RN(t, r, i, e, A.SDK_VERSION);
            }
            !(function PW() {
                (0, A._registerComponent)(
                    new m.wA("storage", NW, "PUBLIC").setMultipleInstances(!0)
                ),
                    (0, A.registerVersion)(XL, "0.9.9", ""),
                    (0, A.registerVersion)(XL, "0.9.9", "esm2017");
            })();
            class LT {
                constructor(e, t, r) {
                    (this._delegate = e), (this.task = t), (this.ref = r);
                }
                get bytesTransferred() {
                    return this._delegate.bytesTransferred;
                }
                get metadata() {
                    return this._delegate.metadata;
                }
                get state() {
                    return this._delegate.state;
                }
                get totalBytes() {
                    return this._delegate.totalBytes;
                }
            }
            class rV {
                constructor(e, t) {
                    (this._delegate = e),
                        (this._ref = t),
                        (this.cancel = this._delegate.cancel.bind(
                            this._delegate
                        )),
                        (this.catch = this._delegate.catch.bind(
                            this._delegate
                        )),
                        (this.pause = this._delegate.pause.bind(
                            this._delegate
                        )),
                        (this.resume = this._delegate.resume.bind(
                            this._delegate
                        ));
                }
                get snapshot() {
                    return new LT(this._delegate.snapshot, this, this._ref);
                }
                then(e, t) {
                    return this._delegate.then((r) => {
                        if (e) return e(new LT(r, this, this._ref));
                    }, t);
                }
                on(e, t, r, i) {
                    let a;
                    return (
                        t &&
                            (a =
                                "function" == typeof t
                                    ? (l) => t(new LT(l, this, this._ref))
                                    : {
                                          next: t.next
                                              ? (l) =>
                                                    t.next(
                                                        new LT(
                                                            l,
                                                            this,
                                                            this._ref
                                                        )
                                                    )
                                              : void 0,
                                          complete: t.complete || void 0,
                                          error: t.error || void 0,
                                      }),
                        this._delegate.on(e, a, r || void 0, i || void 0)
                    );
                }
            }
            class iV {
                constructor(e, t) {
                    (this._delegate = e), (this._service = t);
                }
                get prefixes() {
                    return this._delegate.prefixes.map(
                        (e) => new ac(e, this._service)
                    );
                }
                get items() {
                    return this._delegate.items.map(
                        (e) => new ac(e, this._service)
                    );
                }
                get nextPageToken() {
                    return this._delegate.nextPageToken || null;
                }
            }
            class ac {
                constructor(e, t) {
                    (this._delegate = e), (this.storage = t);
                }
                get name() {
                    return this._delegate.name;
                }
                get bucket() {
                    return this._delegate.bucket;
                }
                get fullPath() {
                    return this._delegate.fullPath;
                }
                toString() {
                    return this._delegate.toString();
                }
                child(e) {
                    const t = (function RW(n, e) {
                        return YL(n, e);
                    })(this._delegate, e);
                    return new ac(t, this.storage);
                }
                get root() {
                    return new ac(this._delegate.root, this.storage);
                }
                get parent() {
                    const e = this._delegate.parent;
                    return null == e ? null : new ac(e, this.storage);
                }
                put(e, t) {
                    return (
                        this._throwIfRoot("put"),
                        new rV(
                            (function CW(n, e, t) {
                                return (function hW(n, e, t) {
                                    return (
                                        n._throwIfRoot("uploadBytesResumable"),
                                        new zL(n, new Bu(e), t)
                                    );
                                })((n = (0, C.m9)(n)), e, t);
                            })(this._delegate, e, t),
                            this
                        )
                    );
                }
                putString(e, t = _o.RAW, r) {
                    this._throwIfRoot("putString");
                    const i = bN(t, e),
                        a = Object.assign({}, r);
                    return (
                        null == a.contentType &&
                            null != i.contentType &&
                            (a.contentType = i.contentType),
                        new rV(
                            new zL(this._delegate, new Bu(i.data, !0), a),
                            this
                        )
                    );
                }
                listAll() {
                    return (function SW(n) {
                        return (function pW(n) {
                            const e = { prefixes: [], items: [] };
                            return KL(n, e).then(() => e);
                        })((n = (0, C.m9)(n)));
                    })(this._delegate).then((e) => new iV(e, this.storage));
                }
                list(e) {
                    return (function TW(n, e) {
                        return ZL((n = (0, C.m9)(n)), e);
                    })(this._delegate, e || void 0).then(
                        (t) => new iV(t, this.storage)
                    );
                }
                getMetadata() {
                    return (function bW(n) {
                        return (function gW(n) {
                            n._throwIfRoot("getMetadata");
                            const e = BL(n.storage, n._location, $E());
                            return n.storage.makeRequestWithTokens(e, Oa);
                        })((n = (0, C.m9)(n)));
                    })(this._delegate);
                }
                updateMetadata(e) {
                    return (function DW(n, e) {
                        return (function mW(n, e) {
                            n._throwIfRoot("updateMetadata");
                            const t = (function YG(n, e, t, r) {
                                const a = oc(
                                        e.fullServerUrl(),
                                        n.host,
                                        n._protocol
                                    ),
                                    h = TN(t, r),
                                    E = n.maxOperationRetryTime,
                                    D = new ju(a, "PATCH", OT(n, r), E);
                                return (
                                    (D.headers = {
                                        "Content-Type":
                                            "application/json; charset=utf-8",
                                    }),
                                    (D.body = h),
                                    (D.errorHandler = GE(e)),
                                    D
                                );
                            })(n.storage, n._location, e, $E());
                            return n.storage.makeRequestWithTokens(t, Oa);
                        })((n = (0, C.m9)(n)), e);
                    })(this._delegate, e);
                }
                getDownloadURL() {
                    return (function AW(n) {
                        return _W((n = (0, C.m9)(n)));
                    })(this._delegate);
                }
                delete() {
                    return (
                        this._throwIfRoot("delete"),
                        (function xW(n) {
                            return (function yW(n) {
                                n._throwIfRoot("deleteObject");
                                const e = (function QG(n, e) {
                                    const r = oc(
                                            e.fullServerUrl(),
                                            n.host,
                                            n._protocol
                                        ),
                                        h = new ju(
                                            r,
                                            "DELETE",
                                            function l(_, E) {},
                                            n.maxOperationRetryTime
                                        );
                                    return (
                                        (h.successCodes = [200, 204]),
                                        (h.errorHandler = GE(e)),
                                        h
                                    );
                                })(n.storage, n._location);
                                return n.storage.makeRequestWithTokens(e, Oa);
                            })((n = (0, C.m9)(n)));
                        })(this._delegate)
                    );
                }
                _throwIfRoot(e) {
                    if ("" === this._delegate._location.path) throw RL(e);
                }
            }
            class sV {
                constructor(e, t) {
                    (this.app = e), (this._delegate = t);
                }
                get maxOperationRetryTime() {
                    return this._delegate.maxOperationRetryTime;
                }
                get maxUploadRetryTime() {
                    return this._delegate.maxUploadRetryTime;
                }
                ref(e) {
                    if (oV(e))
                        throw iy(
                            "ref() expected a child path but got a URL, use refFromURL instead."
                        );
                    return new ac(nV(this._delegate, e), this);
                }
                refFromURL(e) {
                    if (!oV(e))
                        throw iy(
                            "refFromURL() expected a full URL but got a child path, use ref() instead."
                        );
                    try {
                        Ji.makeFromUrl(e, this._delegate.host);
                    } catch {
                        throw iy(
                            "refFromUrl() expected a valid full URL but got an invalid one."
                        );
                    }
                    return new ac(nV(this._delegate, e), this);
                }
                setMaxUploadRetryTime(e) {
                    this._delegate.maxUploadRetryTime = e;
                }
                setMaxOperationRetryTime(e) {
                    this._delegate.maxOperationRetryTime = e;
                }
                useEmulator(e, t, r = {}) {
                    !(function MW(n, e, t, r = {}) {
                        !(function IW(n, e, t, r = {}) {
                            (n.host = `${e}:${t}`), (n._protocol = "http");
                            const { mockUserToken: i } = r;
                            i &&
                                (n._overrideAuthToken =
                                    "string" == typeof i
                                        ? i
                                        : (0, C.Sg)(
                                              i,
                                              n.app.options.projectId
                                          ));
                        })(n, e, t, r);
                    })(this._delegate, e, t, r);
                }
            }
            function oV(n) {
                return /^[A-Za-z]+:\/\//.test(n);
            }
            function LW(n, { instanceIdentifier: e }) {
                const t = n.getProvider("app-compat").getImmediate(),
                    r = n
                        .getProvider("storage")
                        .getImmediate({ identifier: e });
                return new sV(t, r);
            }
            function aV(n) {
                const e = (function UW(n) {
                    return new rs.y((e) => {
                        const t = (l) => e.next(l);
                        t(n.snapshot);
                        const a = n.on("state_changed", t);
                        return (
                            n.then(
                                (l) => {
                                    t(l), e.complete();
                                },
                                (l) => {
                                    t(n.snapshot),
                                        ((l) => {
                                            e.error(l);
                                        })(l);
                                }
                            ),
                            function () {
                                a();
                            }
                        );
                    }).pipe(
                        (function rG(n, e = zh.z) {
                            return (0, hr.e)((t, r) => {
                                let i = null,
                                    a = null,
                                    l = null;
                                const h = () => {
                                    if (i) {
                                        i.unsubscribe(), (i = null);
                                        const E = a;
                                        (a = null), r.next(E);
                                    }
                                };
                                function _() {
                                    const E = l + n,
                                        D = e.now();
                                    if (D < E)
                                        return (
                                            (i = this.schedule(void 0, E - D)),
                                            void r.add(i)
                                        );
                                    h();
                                }
                                t.subscribe(
                                    (0, dr.x)(
                                        r,
                                        (E) => {
                                            (a = E),
                                                (l = e.now()),
                                                i ||
                                                    ((i = e.schedule(_, n)),
                                                    r.add(i));
                                        },
                                        () => {
                                            h(), r.complete();
                                        },
                                        void 0,
                                        () => {
                                            a = i = null;
                                        }
                                    )
                                );
                            });
                        })(0)
                    );
                })(n);
                return {
                    task: n,
                    then: n.then.bind(n),
                    catch: n.catch.bind(n),
                    pause: n.pause.bind(n),
                    cancel: n.cancel.bind(n),
                    resume: n.resume.bind(n),
                    snapshotChanges: () => e,
                    percentageChanges: () =>
                        e.pipe(
                            (0, Mt.U)(
                                (t) => (t.bytesTransferred / t.totalBytes) * 100
                            )
                        ),
                };
            }
            function VT(n) {
                return {
                    getDownloadURL: () =>
                        bt(void 0).pipe(
                            hn.fc,
                            fr(() => n.getDownloadURL()),
                            hn.iC
                        ),
                    getMetadata: () =>
                        bt(void 0).pipe(
                            hn.fc,
                            fr(() => n.getMetadata()),
                            hn.iC
                        ),
                    delete: () => (0, dn.D)(n.delete()),
                    child: (e) => VT(n.child(e)),
                    updateMetadata: (e) => (0, dn.D)(n.updateMetadata(e)),
                    put: (e, t) => aV(n.put(e, t)),
                    putString: (e, t, r) => aV(n.putString(e, t, r)),
                    list: (e) => (0, dn.D)(n.list(e)),
                    listAll: () => (0, dn.D)(n.listAll()),
                };
            }
            !(function VW(n) {
                const e = {
                    TaskState: Cs,
                    TaskEvent: nW,
                    StringFormat: _o,
                    Storage: sV,
                    Reference: ac,
                };
                n.INTERNAL.registerComponent(
                    new m.wA("storage-compat", LW, "PUBLIC")
                        .setServiceProps(e)
                        .setMultipleInstances(!0)
                ),
                    n.registerVersion("@firebase/storage-compat", "0.1.17");
            })(f.Z);
            const BW = new p.OlP("angularfire2.storageBucket"),
                jW = new p.OlP("angularfire2.storage.maxUploadRetryTime"),
                HW = new p.OlP("angularfire2.storage.maxOperationRetryTime"),
                $W = new p.OlP("angularfire2.storage.use-emulator");
            let GW = (() => {
                    class n {
                        constructor(t, r, i, a, l, h, _, E, D, T) {
                            const R = (0, pr.on)(t, l, r);
                            this.storage = (0, pr.cc)(
                                `${R.name}.storage.${i}`,
                                "AngularFireStorage",
                                R.name,
                                () => {
                                    const F = l.runOutsideAngular(() =>
                                            R.storage(i || void 0)
                                        ),
                                        K = D;
                                    return (
                                        K && F.useEmulator(...K),
                                        _ && F.setMaxUploadRetryTime(_),
                                        E && F.setMaxOperationRetryTime(E),
                                        F
                                    );
                                },
                                [_, E]
                            );
                        }
                        ref(t) {
                            return VT(this.storage.ref(t));
                        }
                        refFromURL(t) {
                            return VT(this.storage.refFromURL(t));
                        }
                        upload(t, r, i) {
                            return VT(this.storage.ref(t)).put(r, i);
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)(
                                p.LFG(pr.Dh),
                                p.LFG(pr.xv, 8),
                                p.LFG(BW, 8),
                                p.LFG(p.Lbi),
                                p.LFG(p.R0b),
                                p.LFG(hn.HU),
                                p.LFG(jW, 8),
                                p.LFG(HW, 8),
                                p.LFG($W, 8),
                                p.LFG(Rd, 8)
                            );
                        }),
                        (n.ɵprov = p.Yz7({
                            token: n,
                            factory: n.ɵfac,
                            providedIn: "any",
                        })),
                        n
                    );
                })(),
                WW = (() => {
                    class n {}
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)();
                        }),
                        (n.ɵmod = p.oAB({ type: n })),
                        (n.ɵinj = p.cJS({})),
                        n
                    );
                })(),
                zW = (() => {
                    class n {
                        constructor() {
                            ms.Z.registerVersion(
                                "angularfire",
                                hn.q4.full,
                                "gcs-compat"
                            );
                        }
                    }
                    return (
                        (n.ɵfac = function (t) {
                            return new (t || n)();
                        }),
                        (n.ɵmod = p.oAB({ type: n })),
                        (n.ɵinj = p.cJS({ providers: [GW], imports: [WW] })),
                        n
                    );
                })();
            const KW = (0, Zc.ZF)({
                apiKey: "AIzaSyClD21a4Yb_O2e__nm-sqI_LsdocEieF54",
                authDomain: "my-test-project-450cf.firebaseapp.com",
                projectId: "my-test-project-450cf",
                storageBucket: "my-test-project-450cf.appspot.com",
                messagingSenderId: "781922575005",
                appId: "1:781922575005:web:25d346cef985b1b201ea74",
                measurementId: "G-T2GBSCH2D1",
            });
            (0, ss.IH)(KW);
            let ZW = (() => {
                class n {}
                return (
                    (n.ɵfac = function (t) {
                        return new (t || n)();
                    }),
                    (n.ɵmod = p.oAB({ type: n, bootstrap: [nG] })),
                    (n.ɵinj = p.cJS({
                        providers: [bL, ry],
                        imports: [
                            Rn,
                            Y$,
                            zW,
                            ax,
                            Ri,
                            pr.hO.initializeApp(Wh_firebaseConfig),
                            hx,
                            Sj,
                        ],
                    })),
                    n
                );
            })();
            (0, p.G48)(),
                fy()
                    .bootstrapModule(ZW)
                    .catch((n) => console.error(n));
        },
        6148: (pt, Me, P) => {
            P.d(Me, { IH: () => Ln, Gb: () => Xt, Kz: () => xe });
            var p = P(5861),
                Q = P(9681),
                O = P(1877),
                ie = P(2090),
                he = P(4859);
            P(2833);
            const se = "analytics",
                ge = "firebase_id",
                B =
                    "https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig",
                J = "https://www.googletagmanager.com/gtag/js",
                Le = new O.Yd("@firebase/analytics");
            function Ee(ne) {
                return Promise.all(ne.map((le) => le.catch((be) => be)));
            }
            function Se(ne, le) {
                const be = document.createElement("script");
                (be.src = `${J}?l=${ne}&id=${le}`),
                    (be.async = !0),
                    document.head.appendChild(be);
            }
            function ce(ne, le, be, Oe, ze, ut) {
                return de.apply(this, arguments);
            }
            function de() {
                return (de = (0, p.Z)(function* (ne, le, be, Oe, ze, ut) {
                    const wt = Oe[ze];
                    try {
                        if (wt) yield le[wt];
                        else {
                            const tt = (yield Ee(be)).find(
                                (It) => It.measurementId === ze
                            );
                            tt && (yield le[tt.appId]);
                        }
                    } catch (Ne) {
                        Le.error(Ne);
                    }
                    ne("config", ze, ut);
                })).apply(this, arguments);
            }
            function nt(ne, le, be, Oe, ze) {
                return Qe.apply(this, arguments);
            }
            function Qe() {
                return (Qe = (0, p.Z)(function* (ne, le, be, Oe, ze) {
                    try {
                        let ut = [];
                        if (ze && ze.send_to) {
                            let wt = ze.send_to;
                            Array.isArray(wt) || (wt = [wt]);
                            const Ne = yield Ee(be);
                            for (const tt of wt) {
                                const It = Ne.find(
                                        (ar) => ar.measurementId === tt
                                    ),
                                    Ut = It && le[It.appId];
                                if (!Ut) {
                                    ut = [];
                                    break;
                                }
                                ut.push(Ut);
                            }
                        }
                        0 === ut.length && (ut = Object.values(le)),
                            yield Promise.all(ut),
                            ne("event", Oe, ze || {});
                    } catch (ut) {
                        Le.error(ut);
                    }
                })).apply(this, arguments);
            }
            function De() {
                const ne = window.document.getElementsByTagName("script");
                for (const le of Object.values(ne))
                    if (le.src && le.src.includes(J)) return le;
                return null;
            }
            const Ue = new ie.LL("analytics", "Analytics", {
                    "already-exists":
                        "A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.",
                    "already-initialized":
                        "initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.",
                    "already-initialized-settings":
                        "Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.",
                    "interop-component-reg-failed":
                        "Firebase Analytics Interop Component failed to instantiate: {$reason}",
                    "invalid-analytics-context":
                        "Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}",
                    "indexeddb-unavailable":
                        "IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}",
                    "fetch-throttle":
                        "The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.",
                    "config-fetch-failed":
                        "Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}",
                    "no-api-key":
                        'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',
                    "no-app-id":
                        'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',
                }),
                te = new (class Y {
                    constructor(le = {}, be = 1e3) {
                        (this.throttleMetadata = le),
                            (this.intervalMillis = be);
                    }
                    getThrottleMetadata(le) {
                        return this.throttleMetadata[le];
                    }
                    setThrottleMetadata(le, be) {
                        this.throttleMetadata[le] = be;
                    }
                    deleteThrottleMetadata(le) {
                        delete this.throttleMetadata[le];
                    }
                })();
            function X(ne) {
                return new Headers({
                    Accept: "application/json",
                    "x-goog-api-key": ne,
                });
            }
            function pe(ne) {
                return oe.apply(this, arguments);
            }
            function oe() {
                return (oe = (0, p.Z)(function* (ne) {
                    var le;
                    const { appId: be, apiKey: Oe } = ne,
                        ze = { method: "GET", headers: X(Oe) },
                        ut = B.replace("{app-id}", be),
                        wt = yield fetch(ut, ze);
                    if (200 !== wt.status && 304 !== wt.status) {
                        let Ne = "";
                        try {
                            const tt = yield wt.json();
                            null !== (le = tt.error) &&
                                void 0 !== le &&
                                le.message &&
                                (Ne = tt.error.message);
                        } catch {}
                        throw Ue.create("config-fetch-failed", {
                            httpStatus: wt.status,
                            responseMessage: Ne,
                        });
                    }
                    return wt.json();
                })).apply(this, arguments);
            }
            function Be(ne) {
                return ct.apply(this, arguments);
            }
            function ct() {
                return (ct = (0, p.Z)(function* (ne, le = te, be) {
                    const {
                        appId: Oe,
                        apiKey: ze,
                        measurementId: ut,
                    } = ne.options;
                    if (!Oe) throw Ue.create("no-app-id");
                    if (!ze) {
                        if (ut) return { measurementId: ut, appId: Oe };
                        throw Ue.create("no-api-key");
                    }
                    const wt = le.getThrottleMetadata(Oe) || {
                            backoffCount: 0,
                            throttleEndTimeMillis: Date.now(),
                        },
                        Ne = new Yn();
                    return (
                        setTimeout(
                            (0, p.Z)(function* () {
                                Ne.abort();
                            }),
                            void 0 !== be ? be : 6e4
                        ),
                        Gt(
                            { appId: Oe, apiKey: ze, measurementId: ut },
                            wt,
                            Ne,
                            le
                        )
                    );
                })).apply(this, arguments);
            }
            function Gt(ne, le, be) {
                return Pt.apply(this, arguments);
            }
            function Pt() {
                return (Pt = (0, p.Z)(function* (
                    ne,
                    { throttleEndTimeMillis: le, backoffCount: be },
                    Oe,
                    ze = te
                ) {
                    var ut, wt;
                    const { appId: Ne, measurementId: tt } = ne;
                    try {
                        yield Ke(Oe, le);
                    } catch (It) {
                        if (tt)
                            return (
                                Le.warn(
                                    `Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${tt} provided in the "measurementId" field in the local Firebase config. [${
                                        null === (ut = It) || void 0 === ut
                                            ? void 0
                                            : ut.message
                                    }]`
                                ),
                                { appId: Ne, measurementId: tt }
                            );
                        throw It;
                    }
                    try {
                        const It = yield pe(ne);
                        return ze.deleteThrottleMetadata(Ne), It;
                    } catch (It) {
                        const Ut = It;
                        if (!rn(Ut)) {
                            if ((ze.deleteThrottleMetadata(Ne), tt))
                                return (
                                    Le.warn(
                                        `Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${tt} provided in the "measurementId" field in the local Firebase config. [${Ut?.message}]`
                                    ),
                                    { appId: Ne, measurementId: tt }
                                );
                            throw It;
                        }
                        const ar =
                                503 ===
                                Number(
                                    null === (wt = Ut?.customData) ||
                                        void 0 === wt
                                        ? void 0
                                        : wt.httpStatus
                                )
                                    ? (0, ie.$s)(be, ze.intervalMillis, 30)
                                    : (0, ie.$s)(be, ze.intervalMillis),
                            cn = {
                                throttleEndTimeMillis: Date.now() + ar,
                                backoffCount: be + 1,
                            };
                        return (
                            ze.setThrottleMetadata(Ne, cn),
                            Le.debug(
                                `Calling attemptFetch again in ${ar} millis`
                            ),
                            Gt(ne, cn, Oe, ze)
                        );
                    }
                })).apply(this, arguments);
            }
            function Ke(ne, le) {
                return new Promise((be, Oe) => {
                    const ze = Math.max(le - Date.now(), 0),
                        ut = setTimeout(be, ze);
                    ne.addEventListener(() => {
                        clearTimeout(ut),
                            Oe(
                                Ue.create("fetch-throttle", {
                                    throttleEndTimeMillis: le,
                                })
                            );
                    });
                });
            }
            function rn(ne) {
                if (!(ne instanceof ie.ZR && ne.customData)) return !1;
                const le = Number(ne.customData.httpStatus);
                return 429 === le || 500 === le || 503 === le || 504 === le;
            }
            class Yn {
                constructor() {
                    this.listeners = [];
                }
                addEventListener(le) {
                    this.listeners.push(le);
                }
                abort() {
                    this.listeners.forEach((le) => le());
                }
            }
            let yn, Fr;
            function qn() {
                return (qn = (0, p.Z)(function* (ne, le, be, Oe, ze) {
                    if (ze && ze.global) ne("event", be, Oe);
                    else {
                        const ut = yield le;
                        ne(
                            "event",
                            be,
                            Object.assign(Object.assign({}, Oe), {
                                send_to: ut,
                            })
                        );
                    }
                })).apply(this, arguments);
            }
            function sr(ne) {
                Fr = ne;
            }
            function dt(ne) {
                yn = ne;
            }
            function or() {
                return an.apply(this, arguments);
            }
            function an() {
                return (an = (0, p.Z)(function* () {
                    var ne;
                    if (!(0, ie.hl)())
                        return (
                            Le.warn(
                                Ue.create("indexeddb-unavailable", {
                                    errorInfo:
                                        "IndexedDB is not available in this environment.",
                                }).message
                            ),
                            !1
                        );
                    try {
                        yield (0, ie.eu)();
                    } catch (le) {
                        return (
                            Le.warn(
                                Ue.create("indexeddb-unavailable", {
                                    errorInfo:
                                        null === (ne = le) || void 0 === ne
                                            ? void 0
                                            : ne.toString(),
                                }).message
                            ),
                            !1
                        );
                    }
                    return !0;
                })).apply(this, arguments);
            }
            function br() {
                return (br = (0, p.Z)(function* (ne, le, be, Oe, ze, ut, wt) {
                    var Ne;
                    const tt = Be(ne);
                    tt
                        .then((Vn) => {
                            (be[Vn.measurementId] = Vn.appId),
                                ne.options.measurementId &&
                                    Vn.measurementId !==
                                        ne.options.measurementId &&
                                    Le.warn(
                                        `The measurement ID in the local Firebase config (${ne.options.measurementId}) does not match the measurement ID fetched from the server (${Vn.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`
                                    );
                        })
                        .catch((Vn) => Le.error(Vn)),
                        le.push(tt);
                    const It = or().then((Vn) => {
                            if (Vn) return Oe.getId();
                        }),
                        [Ut, ar] = yield Promise.all([tt, It]);
                    De() || Se(ut, Ut.measurementId),
                        Fr && (ze("consent", "default", Fr), sr(void 0)),
                        ze("js", new Date());
                    const cn =
                        null !== (Ne = wt?.config) && void 0 !== Ne ? Ne : {};
                    return (
                        (cn.origin = "firebase"),
                        (cn.update = !0),
                        null != ar && (cn[ge] = ar),
                        ze("config", Ut.measurementId, cn),
                        yn && (ze("set", yn), dt(void 0)),
                        Ut.measurementId
                    );
                })).apply(this, arguments);
            }
            class Qr {
                constructor(le) {
                    this.app = le;
                }
                _delete() {
                    return delete ln[this.app.options.appId], Promise.resolve();
                }
            }
            let ln = {},
                Fn = [];
            const Lr = {};
            let qe,
                at,
                Dr = "dataLayer",
                gn = !1;
            function yr(ne, le, be) {
                !(function Tt() {
                    const ne = [];
                    if (
                        ((0, ie.ru)() &&
                            ne.push("This is a browser extension environment."),
                        (0, ie.zI)() || ne.push("Cookies are not available."),
                        ne.length > 0)
                    ) {
                        const le = ne
                                .map((Oe, ze) => `(${ze + 1}) ${Oe}`)
                                .join(" "),
                            be = Ue.create("invalid-analytics-context", {
                                errorInfo: le,
                            });
                        Le.warn(be.message);
                    }
                })();
                const Oe = ne.options.appId;
                if (!Oe) throw Ue.create("no-app-id");
                if (!ne.options.apiKey) {
                    if (!ne.options.measurementId)
                        throw Ue.create("no-api-key");
                    Le.warn(
                        `The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${ne.options.measurementId} provided in the "measurementId" field in the local Firebase config.`
                    );
                }
                if (null != ln[Oe])
                    throw Ue.create("already-exists", { id: Oe });
                if (!gn) {
                    !(function He(ne) {
                        let le = [];
                        Array.isArray(window[ne])
                            ? (le = window[ne])
                            : (window[ne] = le);
                    })(Dr);
                    const { wrappedGtag: ut, gtagCore: wt } = (function ve(
                        ne,
                        le,
                        be,
                        Oe,
                        ze
                    ) {
                        let ut = function (...wt) {
                            window[Oe].push(arguments);
                        };
                        return (
                            window[ze] &&
                                "function" == typeof window[ze] &&
                                (ut = window[ze]),
                            (window[ze] = (function Ae(ne, le, be, Oe) {
                                function ut() {
                                    return (ut = (0, p.Z)(function* (
                                        wt,
                                        Ne,
                                        tt
                                    ) {
                                        try {
                                            "event" === wt
                                                ? yield nt(ne, le, be, Ne, tt)
                                                : "config" === wt
                                                ? yield ce(
                                                      ne,
                                                      le,
                                                      be,
                                                      Oe,
                                                      Ne,
                                                      tt
                                                  )
                                                : "consent" === wt
                                                ? ne("consent", "update", tt)
                                                : ne("set", Ne);
                                        } catch (It) {
                                            Le.error(It);
                                        }
                                    })).apply(this, arguments);
                                }
                                return function ze(wt, Ne, tt) {
                                    return ut.apply(this, arguments);
                                };
                            })(ut, ne, le, be)),
                            { gtagCore: ut, wrappedGtag: window[ze] }
                        );
                    })(ln, Fn, Lr, Dr, "gtag");
                    (at = ut), (qe = wt), (gn = !0);
                }
                return (
                    (ln[Oe] = (function Pn(ne, le, be, Oe, ze, ut, wt) {
                        return br.apply(this, arguments);
                    })(ne, Fn, Lr, le, qe, Dr, be)),
                    new Qr(ne)
                );
            }
            function Ln(ne = (0, Q.getApp)()) {
                ne = (0, ie.m9)(ne);
                const le = (0, Q._getProvider)(ne, se);
                return le.isInitialized()
                    ? le.getImmediate()
                    : (function vr(ne, le = {}) {
                          const be = (0, Q._getProvider)(ne, se);
                          if (be.isInitialized()) {
                              const ze = be.getImmediate();
                              if ((0, ie.vZ)(le, be.getOptions())) return ze;
                              throw Ue.create("already-initialized");
                          }
                          return be.initialize({ options: le });
                      })(ne);
            }
            function Xt() {
                return Jn.apply(this, arguments);
            }
            function Jn() {
                return (Jn = (0, p.Z)(function* () {
                    if ((0, ie.ru)() || !(0, ie.zI)() || !(0, ie.hl)())
                        return !1;
                    try {
                        return yield (0, ie.eu)();
                    } catch {
                        return !1;
                    }
                })).apply(this, arguments);
            }
            function xe(ne, le, be, Oe) {
                (ne = (0, ie.m9)(ne)),
                    (function Jt(ne, le, be, Oe, ze) {
                        return qn.apply(this, arguments);
                    })(at, ln[ne.app.options.appId], le, be, Oe).catch((ze) =>
                        Le.error(ze)
                    );
            }
            const ot = "@firebase/analytics";
            !(function Zt() {
                (0, Q._registerComponent)(
                    new he.wA(
                        se,
                        (le, { options: be }) =>
                            yr(
                                le.getProvider("app").getImmediate(),
                                le
                                    .getProvider("installations-internal")
                                    .getImmediate(),
                                be
                            ),
                        "PUBLIC"
                    )
                ),
                    (0, Q._registerComponent)(
                        new he.wA(
                            "analytics-internal",
                            function ne(le) {
                                try {
                                    const be = le
                                        .getProvider(se)
                                        .getImmediate();
                                    return {
                                        logEvent: (Oe, ze, ut) =>
                                            xe(be, Oe, ze, ut),
                                    };
                                } catch (be) {
                                    throw Ue.create(
                                        "interop-component-reg-failed",
                                        { reason: be }
                                    );
                                }
                            },
                            "PRIVATE"
                        )
                    ),
                    (0, Q.registerVersion)(ot, "0.8.0"),
                    (0, Q.registerVersion)(ot, "0.8.0", "esm2017");
            })();
        },
        5867: (pt, Me, P) => {
            P.d(Me, {
                C6: () => p.getApps,
                Mq: () => p.getApp,
                ZF: () => p.initializeApp,
            });
            var p = P(9681);
            (0, p.registerVersion)("firebase", "9.9.1", "app");
        },
        127: (pt, Me, P) => {
            P.d(Me, { Z: () => p.Z });
            var p = P(3942);
            p.Z.registerVersion("firebase", "9.9.1", "app-compat");
        },
        1451: (pt, Me, P) => {
            P.r(Me);
            var p = P(5861),
                Q = P(3942),
                O = P(2090),
                ie = P(9681),
                he = P(655),
                _e = P(1877),
                se = P(4859);
            const Se = function Le() {
                    return {
                        "admin-restricted-operation":
                            "This operation is restricted to administrators only.",
                        "argument-error": "",
                        "app-not-authorized":
                            "This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.",
                        "app-not-installed":
                            "The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.",
                        "captcha-check-failed":
                            "The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.",
                        "code-expired":
                            "The SMS code has expired. Please re-send the verification code to try again.",
                        "cordova-not-ready": "Cordova framework is not ready.",
                        "cors-unsupported": "This browser is not supported.",
                        "credential-already-in-use":
                            "This credential is already associated with a different user account.",
                        "custom-token-mismatch":
                            "The custom token corresponds to a different audience.",
                        "requires-recent-login":
                            "This operation is sensitive and requires recent authentication. Log in again before retrying this request.",
                        "dependent-sdk-initialized-before-auth":
                            "Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.",
                        "dynamic-link-not-activated":
                            "Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.",
                        "email-change-needs-verification":
                            "Multi-factor users must always have a verified email.",
                        "email-already-in-use":
                            "The email address is already in use by another account.",
                        "emulator-config-failed":
                            'Auth instance has already been used to make a network call. Auth can no longer be configured to use the emulator. Try calling "connectAuthEmulator()" sooner.',
                        "expired-action-code": "The action code has expired.",
                        "cancelled-popup-request":
                            "This operation has been cancelled due to another conflicting popup being opened.",
                        "internal-error": "An internal AuthError has occurred.",
                        "invalid-app-credential":
                            "The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.",
                        "invalid-app-id":
                            "The mobile app identifier is not registed for the current project.",
                        "invalid-user-token":
                            "This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.",
                        "invalid-auth-event":
                            "An internal AuthError has occurred.",
                        "invalid-verification-code":
                            "The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure to use the verification code provided by the user.",
                        "invalid-continue-uri":
                            "The continue URL provided in the request is invalid.",
                        "invalid-cordova-configuration":
                            "The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.",
                        "invalid-custom-token":
                            "The custom token format is incorrect. Please check the documentation.",
                        "invalid-dynamic-link-domain":
                            "The provided dynamic link domain is not configured or authorized for the current project.",
                        "invalid-email":
                            "The email address is badly formatted.",
                        "invalid-emulator-scheme":
                            "Emulator URL must start with a valid scheme (http:// or https://).",
                        "invalid-api-key":
                            "Your API key is invalid, please check you have copied it correctly.",
                        "invalid-cert-hash":
                            "The SHA-1 certificate hash provided is invalid.",
                        "invalid-credential":
                            "The supplied auth credential is malformed or has expired.",
                        "invalid-message-payload":
                            "The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.",
                        "invalid-multi-factor-session":
                            "The request does not contain a valid proof of first factor successful sign-in.",
                        "invalid-oauth-provider":
                            "EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.",
                        "invalid-oauth-client-id":
                            "The OAuth client ID provided is either invalid or does not match the specified API key.",
                        "unauthorized-domain":
                            "This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.",
                        "invalid-action-code":
                            "The action code is invalid. This can happen if the code is malformed, expired, or has already been used.",
                        "wrong-password":
                            "The password is invalid or the user does not have a password.",
                        "invalid-persistence-type":
                            "The specified persistence type is invalid. It can only be local, session or none.",
                        "invalid-phone-number":
                            "The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].",
                        "invalid-provider-id":
                            "The specified provider ID is invalid.",
                        "invalid-recipient-email":
                            "The email corresponding to this action failed to send as the provided recipient email address is invalid.",
                        "invalid-sender":
                            "The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.",
                        "invalid-verification-id":
                            "The verification ID used to create the phone auth credential is invalid.",
                        "invalid-tenant-id":
                            "The Auth instance's tenant ID is invalid.",
                        "login-blocked":
                            "Login blocked by user-provided method: {$originalMessage}",
                        "missing-android-pkg-name":
                            "An Android Package Name must be provided if the Android App is required to be installed.",
                        "auth-domain-config-required":
                            "Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.",
                        "missing-app-credential":
                            "The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.",
                        "missing-verification-code":
                            "The phone auth credential was created with an empty SMS verification code.",
                        "missing-continue-uri":
                            "A continue URL must be provided in the request.",
                        "missing-iframe-start":
                            "An internal AuthError has occurred.",
                        "missing-ios-bundle-id":
                            "An iOS Bundle ID must be provided if an App Store ID is provided.",
                        "missing-or-invalid-nonce":
                            "The request does not contain a valid nonce. This can occur if the SHA-256 hash of the provided raw nonce does not match the hashed nonce in the ID token payload.",
                        "missing-multi-factor-info":
                            "No second factor identifier is provided.",
                        "missing-multi-factor-session":
                            "The request is missing proof of first factor successful sign-in.",
                        "missing-phone-number":
                            "To send verification codes, provide a phone number for the recipient.",
                        "missing-verification-id":
                            "The phone auth credential was created with an empty verification ID.",
                        "app-deleted":
                            "This instance of FirebaseApp has been deleted.",
                        "multi-factor-info-not-found":
                            "The user does not have a second factor matching the identifier provided.",
                        "multi-factor-auth-required":
                            "Proof of ownership of a second factor is required to complete sign-in.",
                        "account-exists-with-different-credential":
                            "An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.",
                        "network-request-failed":
                            "A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.",
                        "no-auth-event": "An internal AuthError has occurred.",
                        "no-such-provider":
                            "User was not linked to an account with the given provider.",
                        "null-user":
                            "A null user object was provided as the argument for an operation which requires a non-null user object.",
                        "operation-not-allowed":
                            "The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.",
                        "operation-not-supported-in-this-environment":
                            'This operation is not supported in the environment this application is running on. "location.protocol" must be http, https or chrome-extension and web storage must be enabled.',
                        "popup-blocked":
                            "Unable to establish a connection with the popup. It may have been blocked by the browser.",
                        "popup-closed-by-user":
                            "The popup has been closed by the user before finalizing the operation.",
                        "provider-already-linked":
                            "User can only be linked to one identity for the given provider.",
                        "quota-exceeded":
                            "The project's quota for this operation has been exceeded.",
                        "redirect-cancelled-by-user":
                            "The redirect operation has been cancelled by the user before finalizing.",
                        "redirect-operation-pending":
                            "A redirect sign-in operation is already pending.",
                        "rejected-credential":
                            "The request contains malformed or mismatching credentials.",
                        "second-factor-already-in-use":
                            "The second factor is already enrolled on this account.",
                        "maximum-second-factor-count-exceeded":
                            "The maximum allowed number of second factors on a user has been exceeded.",
                        "tenant-id-mismatch":
                            "The provided tenant ID does not match the Auth instance's tenant ID",
                        timeout: "The operation has timed out.",
                        "user-token-expired":
                            "The user's credential is no longer valid. The user must sign in again.",
                        "too-many-requests":
                            "We have blocked all requests from this device due to unusual activity. Try again later.",
                        "unauthorized-continue-uri":
                            "The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.",
                        "unsupported-first-factor":
                            "Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.",
                        "unsupported-persistence-type":
                            "The current environment does not support the specified persistence type.",
                        "unsupported-tenant-operation":
                            "This operation is not supported in a multi-tenant context.",
                        "unverified-email":
                            "The operation requires a verified email.",
                        "user-cancelled":
                            "The user did not grant your application the permissions it requested.",
                        "user-not-found":
                            "There is no user record corresponding to this identifier. The user may have been deleted.",
                        "user-disabled":
                            "The user account has been disabled by an administrator.",
                        "user-mismatch":
                            "The supplied credentials do not correspond to the previously signed in user.",
                        "user-signed-out": "",
                        "weak-password":
                            "The password must be 6 characters long or more.",
                        "web-storage-unsupported":
                            "This browser is not supported or 3rd party cookies and data may be disabled.",
                        "already-initialized":
                            "initializeAuth() has already been called with different options. To avoid this error, call initializeAuth() with the same options as when it was originally called, or call getAuth() to return the already initialized instance.",
                    };
                },
                He = function Ee() {
                    return {
                        "dependent-sdk-initialized-before-auth":
                            "Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.",
                    };
                },
                ce = new O.LL("auth", "Firebase", {
                    "dependent-sdk-initialized-before-auth":
                        "Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.",
                }),
                nt = new _e.Yd("@firebase/auth");
            function Qe(v, ...f) {
                nt.logLevel <= _e.in.ERROR &&
                    nt.error(`Auth (${ie.SDK_VERSION}): ${v}`, ...f);
            }
            function Ae(v, ...f) {
                throw Ue(v, ...f);
            }
            function ve(v, ...f) {
                return Ue(v, ...f);
            }
            function De(v, f, m) {
                const y = Object.assign(Object.assign({}, He()), { [f]: m });
                return new O.LL("auth", "Firebase", y).create(f, {
                    appName: v.name,
                });
            }
            function We(v, f, m) {
                if (!(f instanceof m))
                    throw (
                        (m.name !== f.constructor.name &&
                            Ae(v, "argument-error"),
                        De(
                            v,
                            "argument-error",
                            `Type of ${f.constructor.name} does not match expected instance.Did you pass a reference from a different Auth SDK?`
                        ))
                    );
            }
            function Ue(v, ...f) {
                if ("string" != typeof v) {
                    const m = f[0],
                        y = [...f.slice(1)];
                    return (
                        y[0] && (y[0].appName = v.name),
                        v._errorFactory.create(m, ...y)
                    );
                }
                return ce.create(v, ...f);
            }
            function j(v, f, ...m) {
                if (!v) throw Ue(f, ...m);
            }
            function Ce(v) {
                const f = "INTERNAL ASSERTION FAILED: " + v;
                throw (Qe(f), new Error(f));
            }
            function Y(v, f) {
                v || Ce(f);
            }
            const te = new Map();
            function X(v) {
                Y(v instanceof Function, "Expected a class definition");
                let f = te.get(v);
                return f
                    ? (Y(
                          f instanceof v,
                          "Instance stored in cache mismatched with class"
                      ),
                      f)
                    : ((f = new v()), te.set(v, f), f);
            }
            function Be() {
                var v;
                return (
                    (typeof self < "u" &&
                        (null === (v = self.location) || void 0 === v
                            ? void 0
                            : v.href)) ||
                    ""
                );
            }
            function ct() {
                return "http:" === Gt() || "https:" === Gt();
            }
            function Gt() {
                var v;
                return (
                    (typeof self < "u" &&
                        (null === (v = self.location) || void 0 === v
                            ? void 0
                            : v.protocol)) ||
                    null
                );
            }
            class rn {
                constructor(f, m) {
                    (this.shortDelay = f),
                        (this.longDelay = m),
                        Y(m > f, "Short delay should be less than long delay!"),
                        (this.isMobile = (0, O.uI)() || (0, O.b$)());
                }
                get() {
                    return (function Pt() {
                        return (
                            !(
                                typeof navigator < "u" &&
                                navigator &&
                                "onLine" in navigator &&
                                "boolean" == typeof navigator.onLine &&
                                (ct() ||
                                    (0, O.ru)() ||
                                    "connection" in navigator)
                            ) || navigator.onLine
                        );
                    })()
                        ? this.isMobile
                            ? this.longDelay
                            : this.shortDelay
                        : Math.min(5e3, this.shortDelay);
                }
            }
            function Yn(v, f) {
                Y(v.emulator, "Emulator should always be set here");
                const { url: m } = v.emulator;
                return f ? `${m}${f.startsWith("/") ? f.slice(1) : f}` : m;
            }
            class yn {
                static initialize(f, m, y) {
                    (this.fetchImpl = f),
                        m && (this.headersImpl = m),
                        y && (this.responseImpl = y);
                }
                static fetch() {
                    return this.fetchImpl
                        ? this.fetchImpl
                        : typeof self < "u" && "fetch" in self
                        ? self.fetch
                        : void Ce(
                              "Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill"
                          );
                }
                static headers() {
                    return this.headersImpl
                        ? this.headersImpl
                        : typeof self < "u" && "Headers" in self
                        ? self.Headers
                        : void Ce(
                              "Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill"
                          );
                }
                static response() {
                    return this.responseImpl
                        ? this.responseImpl
                        : typeof self < "u" && "Response" in self
                        ? self.Response
                        : void Ce(
                              "Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill"
                          );
                }
            }
            const Jt = {
                    CREDENTIAL_MISMATCH: "custom-token-mismatch",
                    MISSING_CUSTOM_TOKEN: "internal-error",
                    INVALID_IDENTIFIER: "invalid-email",
                    MISSING_CONTINUE_URI: "internal-error",
                    INVALID_PASSWORD: "wrong-password",
                    MISSING_PASSWORD: "internal-error",
                    EMAIL_EXISTS: "email-already-in-use",
                    PASSWORD_LOGIN_DISABLED: "operation-not-allowed",
                    INVALID_IDP_RESPONSE: "invalid-credential",
                    INVALID_PENDING_TOKEN: "invalid-credential",
                    FEDERATED_USER_ID_ALREADY_LINKED:
                        "credential-already-in-use",
                    MISSING_REQ_TYPE: "internal-error",
                    EMAIL_NOT_FOUND: "user-not-found",
                    RESET_PASSWORD_EXCEED_LIMIT: "too-many-requests",
                    EXPIRED_OOB_CODE: "expired-action-code",
                    INVALID_OOB_CODE: "invalid-action-code",
                    MISSING_OOB_CODE: "internal-error",
                    CREDENTIAL_TOO_OLD_LOGIN_AGAIN: "requires-recent-login",
                    INVALID_ID_TOKEN: "invalid-user-token",
                    TOKEN_EXPIRED: "user-token-expired",
                    USER_NOT_FOUND: "user-token-expired",
                    TOO_MANY_ATTEMPTS_TRY_LATER: "too-many-requests",
                    INVALID_CODE: "invalid-verification-code",
                    INVALID_SESSION_INFO: "invalid-verification-id",
                    INVALID_TEMPORARY_PROOF: "invalid-credential",
                    MISSING_SESSION_INFO: "missing-verification-id",
                    SESSION_EXPIRED: "code-expired",
                    MISSING_ANDROID_PACKAGE_NAME: "missing-android-pkg-name",
                    UNAUTHORIZED_DOMAIN: "unauthorized-continue-uri",
                    INVALID_OAUTH_CLIENT_ID: "invalid-oauth-client-id",
                    ADMIN_ONLY_OPERATION: "admin-restricted-operation",
                    INVALID_MFA_PENDING_CREDENTIAL:
                        "invalid-multi-factor-session",
                    MFA_ENROLLMENT_NOT_FOUND: "multi-factor-info-not-found",
                    MISSING_MFA_ENROLLMENT_ID: "missing-multi-factor-info",
                    MISSING_MFA_PENDING_CREDENTIAL:
                        "missing-multi-factor-session",
                    SECOND_FACTOR_EXISTS: "second-factor-already-in-use",
                    SECOND_FACTOR_LIMIT_EXCEEDED:
                        "maximum-second-factor-count-exceeded",
                    BLOCKING_FUNCTION_ERROR_RESPONSE: "internal-error",
                },
                qn = new rn(3e4, 6e4);
            function kt(v, f) {
                return v.tenantId && !f.tenantId
                    ? Object.assign(Object.assign({}, f), {
                          tenantId: v.tenantId,
                      })
                    : f;
            }
            function xt(v, f, m, y) {
                return Or.apply(this, arguments);
            }
            function Or() {
                return (Or = (0, p.Z)(function* (v, f, m, y, A = {}) {
                    return fi(
                        v,
                        A,
                        (0, p.Z)(function* () {
                            let C = {},
                                H = {};
                            y &&
                                ("GET" === f
                                    ? (H = y)
                                    : (C = { body: JSON.stringify(y) }));
                            const re = (0, O.xO)(
                                    Object.assign({ key: v.config.apiKey }, H)
                                ).slice(1),
                                Ge = yield v._getAdditionalHeaders();
                            return (
                                (Ge["Content-Type"] = "application/json"),
                                v.languageCode &&
                                    (Ge["X-Firebase-Locale"] = v.languageCode),
                                yn.fetch()(
                                    Cr(v, v.config.apiHost, m, re),
                                    Object.assign(
                                        {
                                            method: f,
                                            headers: Ge,
                                            referrerPolicy: "no-referrer",
                                        },
                                        C
                                    )
                                )
                            );
                        })
                    );
                })).apply(this, arguments);
            }
            function fi(v, f, m) {
                return ir.apply(this, arguments);
            }
            function ir() {
                return (ir = (0, p.Z)(function* (v, f, m) {
                    v._canInitEmulator = !1;
                    const y = Object.assign(Object.assign({}, Jt), f);
                    try {
                        const A = new Fr(v),
                            C = yield Promise.race([m(), A.promise]);
                        A.clearNetworkTimeout();
                        const H = yield C.json();
                        if ("needConfirmation" in H)
                            throw sr(
                                v,
                                "account-exists-with-different-credential",
                                H
                            );
                        if (C.ok && !("errorMessage" in H)) return H;
                        {
                            const re = C.ok ? H.errorMessage : H.error.message,
                                [Ge, it] = re.split(" : ");
                            if ("FEDERATED_USER_ID_ALREADY_LINKED" === Ge)
                                throw sr(v, "credential-already-in-use", H);
                            if ("EMAIL_EXISTS" === Ge)
                                throw sr(v, "email-already-in-use", H);
                            if ("USER_DISABLED" === Ge)
                                throw sr(v, "user-disabled", H);
                            const At =
                                y[Ge] ||
                                Ge.toLowerCase().replace(/[_\s]+/g, "-");
                            if (it) throw De(v, At, it);
                            Ae(v, At);
                        }
                    } catch (A) {
                        if (A instanceof O.ZR) throw A;
                        Ae(v, "network-request-failed");
                    }
                })).apply(this, arguments);
            }
            function Nn(v, f, m, y) {
                return Ir.apply(this, arguments);
            }
            function Ir() {
                return (Ir = (0, p.Z)(function* (v, f, m, y, A = {}) {
                    const C = yield xt(v, f, m, y, A);
                    return (
                        "mfaPendingCredential" in C &&
                            Ae(v, "multi-factor-auth-required", {
                                _serverResponse: C,
                            }),
                        C
                    );
                })).apply(this, arguments);
            }
            function Cr(v, f, m, y) {
                const A = `${f}${m}?${y}`;
                return v.config.emulator
                    ? Yn(v.config, A)
                    : `${v.config.apiScheme}://${A}`;
            }
            class Fr {
                constructor(f) {
                    (this.auth = f),
                        (this.timer = null),
                        (this.promise = new Promise((m, y) => {
                            this.timer = setTimeout(
                                () =>
                                    y(ve(this.auth, "network-request-failed")),
                                qn.get()
                            );
                        }));
                }
                clearNetworkTimeout() {
                    clearTimeout(this.timer);
                }
            }
            function sr(v, f, m) {
                const y = { appName: v.name };
                m.email && (y.email = m.email),
                    m.phoneNumber && (y.phoneNumber = m.phoneNumber);
                const A = ve(v, f, y);
                return (A.customData._tokenResponse = m), A;
            }
            function or() {
                return (or = (0, p.Z)(function* (v, f) {
                    return xt(v, "POST", "/v1/accounts:delete", f);
                })).apply(this, arguments);
            }
            function an(v, f) {
                return Pn.apply(this, arguments);
            }
            function Pn() {
                return (Pn = (0, p.Z)(function* (v, f) {
                    return xt(v, "POST", "/v1/accounts:update", f);
                })).apply(this, arguments);
            }
            function br(v, f) {
                return Qr.apply(this, arguments);
            }
            function Qr() {
                return (Qr = (0, p.Z)(function* (v, f) {
                    return xt(v, "POST", "/v1/accounts:lookup", f);
                })).apply(this, arguments);
            }
            function ln(v) {
                if (v)
                    try {
                        const f = new Date(Number(v));
                        if (!isNaN(f.getTime())) return f.toUTCString();
                    } catch {}
            }
            function Dr() {
                return (Dr = (0, p.Z)(function* (v, f = !1) {
                    const m = (0, O.m9)(v),
                        y = yield m.getIdToken(f),
                        A = qe(y);
                    j(
                        A && A.exp && A.auth_time && A.iat,
                        m.auth,
                        "internal-error"
                    );
                    const C =
                            "object" == typeof A.firebase ? A.firebase : void 0,
                        H = C?.sign_in_provider;
                    return {
                        claims: A,
                        token: y,
                        authTime: ln(Wt(A.auth_time)),
                        issuedAtTime: ln(Wt(A.iat)),
                        expirationTime: ln(Wt(A.exp)),
                        signInProvider: H || null,
                        signInSecondFactor: C?.sign_in_second_factor || null,
                    };
                })).apply(this, arguments);
            }
            function Wt(v) {
                return 1e3 * Number(v);
            }
            function qe(v) {
                var f;
                const [m, y, A] = v.split(".");
                if (void 0 === m || void 0 === y || void 0 === A)
                    return (
                        Qe("JWT malformed, contained fewer than 3 sections"),
                        null
                    );
                try {
                    const C = (0, O.tV)(y);
                    return C
                        ? JSON.parse(C)
                        : (Qe("Failed to decode base64 JWT payload"), null);
                } catch (C) {
                    return (
                        Qe(
                            "Caught error parsing JWT payload as JSON",
                            null === (f = C) || void 0 === f
                                ? void 0
                                : f.toString()
                        ),
                        null
                    );
                }
            }
            function gn(v, f) {
                return Qn.apply(this, arguments);
            }
            function Qn() {
                return (Qn = (0, p.Z)(function* (v, f, m = !1) {
                    if (m) return f;
                    try {
                        return yield f;
                    } catch (y) {
                        throw (
                            (y instanceof O.ZR &&
                                Tt(y) &&
                                v.auth.currentUser === v &&
                                (yield v.auth.signOut()),
                            y)
                        );
                    }
                })).apply(this, arguments);
            }
            function Tt({ code: v }) {
                return (
                    "auth/user-disabled" === v ||
                    "auth/user-token-expired" === v
                );
            }
            class yr {
                constructor(f) {
                    (this.user = f),
                        (this.isRunning = !1),
                        (this.timerId = null),
                        (this.errorBackoff = 3e4);
                }
                _start() {
                    this.isRunning || ((this.isRunning = !0), this.schedule());
                }
                _stop() {
                    !this.isRunning ||
                        ((this.isRunning = !1),
                        null !== this.timerId && clearTimeout(this.timerId));
                }
                getInterval(f) {
                    var m;
                    if (f) {
                        const y = this.errorBackoff;
                        return (
                            (this.errorBackoff = Math.min(
                                2 * this.errorBackoff,
                                96e4
                            )),
                            y
                        );
                    }
                    {
                        this.errorBackoff = 3e4;
                        const A =
                            (null !==
                                (m =
                                    this.user.stsTokenManager.expirationTime) &&
                            void 0 !== m
                                ? m
                                : 0) -
                            Date.now() -
                            3e5;
                        return Math.max(0, A);
                    }
                }
                schedule(f = !1) {
                    var m = this;
                    if (!this.isRunning) return;
                    const y = this.getInterval(f);
                    this.timerId = setTimeout(
                        (0, p.Z)(function* () {
                            yield m.iteration();
                        }),
                        y
                    );
                }
                iteration() {
                    var f = this;
                    return (0, p.Z)(function* () {
                        var m;
                        try {
                            yield f.user.getIdToken(!0);
                        } catch (y) {
                            return void (
                                "auth/network-request-failed" ===
                                    (null === (m = y) || void 0 === m
                                        ? void 0
                                        : m.code) && f.schedule(!0)
                            );
                        }
                        f.schedule();
                    })();
                }
            }
            class Ln {
                constructor(f, m) {
                    (this.createdAt = f),
                        (this.lastLoginAt = m),
                        this._initializeTime();
                }
                _initializeTime() {
                    (this.lastSignInTime = ln(this.lastLoginAt)),
                        (this.creationTime = ln(this.createdAt));
                }
                _copy(f) {
                    (this.createdAt = f.createdAt),
                        (this.lastLoginAt = f.lastLoginAt),
                        this._initializeTime();
                }
                toJSON() {
                    return {
                        createdAt: this.createdAt,
                        lastLoginAt: this.lastLoginAt,
                    };
                }
            }
            function vr(v) {
                return Xt.apply(this, arguments);
            }
            function Xt() {
                return (Xt = (0, p.Z)(function* (v) {
                    var f;
                    const m = v.auth,
                        y = yield v.getIdToken(),
                        A = yield gn(v, br(m, { idToken: y }));
                    j(A?.users.length, m, "internal-error");
                    const C = A.users[0];
                    v._notifyReloadListener(C);
                    const H =
                            null !== (f = C.providerUserInfo) &&
                            void 0 !== f &&
                            f.length
                                ? L(C.providerUserInfo)
                                : [],
                        re = W(v.providerData, H),
                        At =
                            !!v.isAnonymous &&
                            !((v.email && C.passwordHash) || re?.length),
                        vt = {
                            uid: C.localId,
                            displayName: C.displayName || null,
                            photoURL: C.photoUrl || null,
                            email: C.email || null,
                            emailVerified: C.emailVerified || !1,
                            phoneNumber: C.phoneNumber || null,
                            tenantId: C.tenantId || null,
                            providerData: re,
                            metadata: new Ln(C.createdAt, C.lastLoginAt),
                            isAnonymous: At,
                        };
                    Object.assign(v, vt);
                })).apply(this, arguments);
            }
            function V() {
                return (V = (0, p.Z)(function* (v) {
                    const f = (0, O.m9)(v);
                    yield vr(f),
                        yield f.auth._persistUserIfCurrent(f),
                        f.auth._notifyListenersIfCurrent(f);
                })).apply(this, arguments);
            }
            function W(v, f) {
                return [
                    ...v.filter(
                        (y) => !f.some((A) => A.providerId === y.providerId)
                    ),
                    ...f,
                ];
            }
            function L(v) {
                return v.map((f) => {
                    var { providerId: m } = f,
                        y = (0, he._T)(f, ["providerId"]);
                    return {
                        providerId: m,
                        uid: y.rawId || "",
                        displayName: y.displayName || null,
                        email: y.email || null,
                        phoneNumber: y.phoneNumber || null,
                        photoURL: y.photoUrl || null,
                    };
                });
            }
            function G() {
                return (G = (0, p.Z)(function* (v, f) {
                    const m = yield fi(
                        v,
                        {},
                        (0, p.Z)(function* () {
                            const y = (0, O.xO)({
                                    grant_type: "refresh_token",
                                    refresh_token: f,
                                }).slice(1),
                                { tokenApiHost: A, apiKey: C } = v.config,
                                H = Cr(v, A, "/v1/token", `key=${C}`),
                                re = yield v._getAdditionalHeaders();
                            return (
                                (re["Content-Type"] =
                                    "application/x-www-form-urlencoded"),
                                yn.fetch()(H, {
                                    method: "POST",
                                    headers: re,
                                    body: y,
                                })
                            );
                        })
                    );
                    return {
                        accessToken: m.access_token,
                        expiresIn: m.expires_in,
                        refreshToken: m.refresh_token,
                    };
                })).apply(this, arguments);
            }
            class xe {
                constructor() {
                    (this.refreshToken = null),
                        (this.accessToken = null),
                        (this.expirationTime = null);
                }
                get isExpired() {
                    return (
                        !this.expirationTime ||
                        Date.now() > this.expirationTime - 3e4
                    );
                }
                updateFromServerResponse(f) {
                    j(f.idToken, "internal-error"),
                        j(typeof f.idToken < "u", "internal-error"),
                        j(typeof f.refreshToken < "u", "internal-error");
                    const m =
                        "expiresIn" in f && typeof f.expiresIn < "u"
                            ? Number(f.expiresIn)
                            : (function at(v) {
                                  const f = qe(v);
                                  return (
                                      j(f, "internal-error"),
                                      j(typeof f.exp < "u", "internal-error"),
                                      j(typeof f.iat < "u", "internal-error"),
                                      Number(f.exp) - Number(f.iat)
                                  );
                              })(f.idToken);
                    this.updateTokensAndExpiration(
                        f.idToken,
                        f.refreshToken,
                        m
                    );
                }
                getToken(f, m = !1) {
                    var y = this;
                    return (0, p.Z)(function* () {
                        return (
                            j(
                                !y.accessToken || y.refreshToken,
                                f,
                                "user-token-expired"
                            ),
                            m || !y.accessToken || y.isExpired
                                ? y.refreshToken
                                    ? (yield y.refresh(f, y.refreshToken),
                                      y.accessToken)
                                    : null
                                : y.accessToken
                        );
                    })();
                }
                clearRefreshToken() {
                    this.refreshToken = null;
                }
                refresh(f, m) {
                    var y = this;
                    return (0, p.Z)(function* () {
                        const {
                            accessToken: A,
                            refreshToken: C,
                            expiresIn: H,
                        } = yield (function $(v, f) {
                            return G.apply(this, arguments);
                        })(f, m);
                        y.updateTokensAndExpiration(A, C, Number(H));
                    })();
                }
                updateTokensAndExpiration(f, m, y) {
                    (this.refreshToken = m || null),
                        (this.accessToken = f || null),
                        (this.expirationTime = Date.now() + 1e3 * y);
                }
                static fromJSON(f, m) {
                    const {
                            refreshToken: y,
                            accessToken: A,
                            expirationTime: C,
                        } = m,
                        H = new xe();
                    return (
                        y &&
                            (j("string" == typeof y, "internal-error", {
                                appName: f,
                            }),
                            (H.refreshToken = y)),
                        A &&
                            (j("string" == typeof A, "internal-error", {
                                appName: f,
                            }),
                            (H.accessToken = A)),
                        C &&
                            (j("number" == typeof C, "internal-error", {
                                appName: f,
                            }),
                            (H.expirationTime = C)),
                        H
                    );
                }
                toJSON() {
                    return {
                        refreshToken: this.refreshToken,
                        accessToken: this.accessToken,
                        expirationTime: this.expirationTime,
                    };
                }
                _assign(f) {
                    (this.accessToken = f.accessToken),
                        (this.refreshToken = f.refreshToken),
                        (this.expirationTime = f.expirationTime);
                }
                _clone() {
                    return Object.assign(new xe(), this.toJSON());
                }
                _performRefresh() {
                    return Ce("not implemented");
                }
            }
            function Ze(v, f) {
                j("string" == typeof v || typeof v > "u", "internal-error", {
                    appName: f,
                });
            }
            class ot {
                constructor(f) {
                    var { uid: m, auth: y, stsTokenManager: A } = f,
                        C = (0, he._T)(f, ["uid", "auth", "stsTokenManager"]);
                    (this.providerId = "firebase"),
                        (this.proactiveRefresh = new yr(this)),
                        (this.reloadUserInfo = null),
                        (this.reloadListener = null),
                        (this.uid = m),
                        (this.auth = y),
                        (this.stsTokenManager = A),
                        (this.accessToken = A.accessToken),
                        (this.displayName = C.displayName || null),
                        (this.email = C.email || null),
                        (this.emailVerified = C.emailVerified || !1),
                        (this.phoneNumber = C.phoneNumber || null),
                        (this.photoURL = C.photoURL || null),
                        (this.isAnonymous = C.isAnonymous || !1),
                        (this.tenantId = C.tenantId || null),
                        (this.providerData = C.providerData
                            ? [...C.providerData]
                            : []),
                        (this.metadata = new Ln(
                            C.createdAt || void 0,
                            C.lastLoginAt || void 0
                        ));
                }
                getIdToken(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        const y = yield gn(
                            m,
                            m.stsTokenManager.getToken(m.auth, f)
                        );
                        return (
                            j(y, m.auth, "internal-error"),
                            m.accessToken !== y &&
                                ((m.accessToken = y),
                                yield m.auth._persistUserIfCurrent(m),
                                m.auth._notifyListenersIfCurrent(m)),
                            y
                        );
                    })();
                }
                getIdTokenResult(f) {
                    return (function Lr(v) {
                        return Dr.apply(this, arguments);
                    })(this, f);
                }
                reload() {
                    return (function Jn(v) {
                        return V.apply(this, arguments);
                    })(this);
                }
                _assign(f) {
                    this !== f &&
                        (j(this.uid === f.uid, this.auth, "internal-error"),
                        (this.displayName = f.displayName),
                        (this.photoURL = f.photoURL),
                        (this.email = f.email),
                        (this.emailVerified = f.emailVerified),
                        (this.phoneNumber = f.phoneNumber),
                        (this.isAnonymous = f.isAnonymous),
                        (this.tenantId = f.tenantId),
                        (this.providerData = f.providerData.map((m) =>
                            Object.assign({}, m)
                        )),
                        this.metadata._copy(f.metadata),
                        this.stsTokenManager._assign(f.stsTokenManager));
                }
                _clone(f) {
                    return new ot(
                        Object.assign(Object.assign({}, this), {
                            auth: f,
                            stsTokenManager: this.stsTokenManager._clone(),
                        })
                    );
                }
                _onReload(f) {
                    j(!this.reloadListener, this.auth, "internal-error"),
                        (this.reloadListener = f),
                        this.reloadUserInfo &&
                            (this._notifyReloadListener(this.reloadUserInfo),
                            (this.reloadUserInfo = null));
                }
                _notifyReloadListener(f) {
                    this.reloadListener
                        ? this.reloadListener(f)
                        : (this.reloadUserInfo = f);
                }
                _startProactiveRefresh() {
                    this.proactiveRefresh._start();
                }
                _stopProactiveRefresh() {
                    this.proactiveRefresh._stop();
                }
                _updateTokensIfNecessary(f, m = !1) {
                    var y = this;
                    return (0, p.Z)(function* () {
                        let A = !1;
                        f.idToken &&
                            f.idToken !== y.stsTokenManager.accessToken &&
                            (y.stsTokenManager.updateFromServerResponse(f),
                            (A = !0)),
                            m && (yield vr(y)),
                            yield y.auth._persistUserIfCurrent(y),
                            A && y.auth._notifyListenersIfCurrent(y);
                    })();
                }
                delete() {
                    var f = this;
                    return (0, p.Z)(function* () {
                        const m = yield f.getIdToken();
                        return (
                            yield gn(
                                f,
                                (function dt(v, f) {
                                    return or.apply(this, arguments);
                                })(f.auth, { idToken: m })
                            ),
                            f.stsTokenManager.clearRefreshToken(),
                            f.auth.signOut()
                        );
                    })();
                }
                toJSON() {
                    return Object.assign(
                        Object.assign(
                            {
                                uid: this.uid,
                                email: this.email || void 0,
                                emailVerified: this.emailVerified,
                                displayName: this.displayName || void 0,
                                isAnonymous: this.isAnonymous,
                                photoURL: this.photoURL || void 0,
                                phoneNumber: this.phoneNumber || void 0,
                                tenantId: this.tenantId || void 0,
                                providerData: this.providerData.map((f) =>
                                    Object.assign({}, f)
                                ),
                                stsTokenManager: this.stsTokenManager.toJSON(),
                                _redirectEventId: this._redirectEventId,
                            },
                            this.metadata.toJSON()
                        ),
                        {
                            apiKey: this.auth.config.apiKey,
                            appName: this.auth.name,
                        }
                    );
                }
                get refreshToken() {
                    return this.stsTokenManager.refreshToken || "";
                }
                static _fromJSON(f, m) {
                    var y, A, C, H, re, Ge, it, At;
                    const vt =
                            null !== (y = m.displayName) && void 0 !== y
                                ? y
                                : void 0,
                        xr =
                            null !== (A = m.email) && void 0 !== A ? A : void 0,
                        tr =
                            null !== (C = m.phoneNumber) && void 0 !== C
                                ? C
                                : void 0,
                        zi =
                            null !== (H = m.photoURL) && void 0 !== H
                                ? H
                                : void 0,
                        iu =
                            null !== (re = m.tenantId) && void 0 !== re
                                ? re
                                : void 0,
                        Oo =
                            null !== (Ge = m._redirectEventId) && void 0 !== Ge
                                ? Ge
                                : void 0,
                        Qc =
                            null !== (it = m.createdAt) && void 0 !== it
                                ? it
                                : void 0,
                        Kh =
                            null !== (At = m.lastLoginAt) && void 0 !== At
                                ? At
                                : void 0,
                        {
                            uid: os,
                            emailVerified: Fo,
                            isAnonymous: Jc,
                            providerData: su,
                            stsTokenManager: nr,
                        } = m;
                    j(os && nr, f, "internal-error");
                    const ou = xe.fromJSON(this.name, nr);
                    j("string" == typeof os, f, "internal-error"),
                        Ze(vt, f.name),
                        Ze(xr, f.name),
                        j("boolean" == typeof Fo, f, "internal-error"),
                        j("boolean" == typeof Jc, f, "internal-error"),
                        Ze(tr, f.name),
                        Ze(zi, f.name),
                        Ze(iu, f.name),
                        Ze(Oo, f.name),
                        Ze(Qc, f.name),
                        Ze(Kh, f.name);
                    const Xc = new ot({
                        uid: os,
                        auth: f,
                        email: xr,
                        emailVerified: Fo,
                        displayName: vt,
                        isAnonymous: Jc,
                        photoURL: zi,
                        phoneNumber: tr,
                        tenantId: iu,
                        stsTokenManager: ou,
                        createdAt: Qc,
                        lastLoginAt: Kh,
                    });
                    return (
                        su &&
                            Array.isArray(su) &&
                            (Xc.providerData = su.map((ri) =>
                                Object.assign({}, ri)
                            )),
                        Oo && (Xc._redirectEventId = Oo),
                        Xc
                    );
                }
                static _fromIdTokenResponse(f, m, y = !1) {
                    return (0, p.Z)(function* () {
                        const A = new xe();
                        A.updateFromServerResponse(m);
                        const C = new ot({
                            uid: m.localId,
                            auth: f,
                            stsTokenManager: A,
                            isAnonymous: y,
                        });
                        return yield vr(C), C;
                    })();
                }
            }
            const Zt = (() => {
                class v {
                    constructor() {
                        (this.type = "NONE"), (this.storage = {});
                    }
                    _isAvailable() {
                        return (0, p.Z)(function* () {
                            return !0;
                        })();
                    }
                    _set(m, y) {
                        var A = this;
                        return (0, p.Z)(function* () {
                            A.storage[m] = y;
                        })();
                    }
                    _get(m) {
                        var y = this;
                        return (0, p.Z)(function* () {
                            const A = y.storage[m];
                            return void 0 === A ? null : A;
                        })();
                    }
                    _remove(m) {
                        var y = this;
                        return (0, p.Z)(function* () {
                            delete y.storage[m];
                        })();
                    }
                    _addListener(m, y) {}
                    _removeListener(m, y) {}
                }
                return (v.type = "NONE"), v;
            })();
            function ne(v, f, m) {
                return `firebase:${v}:${f}:${m}`;
            }
            class le {
                constructor(f, m, y) {
                    (this.persistence = f), (this.auth = m), (this.userKey = y);
                    const { config: A, name: C } = this.auth;
                    (this.fullUserKey = ne(this.userKey, A.apiKey, C)),
                        (this.fullPersistenceKey = ne(
                            "persistence",
                            A.apiKey,
                            C
                        )),
                        (this.boundEventHandler = m._onStorageEvent.bind(m)),
                        this.persistence._addListener(
                            this.fullUserKey,
                            this.boundEventHandler
                        );
                }
                setCurrentUser(f) {
                    return this.persistence._set(this.fullUserKey, f.toJSON());
                }
                getCurrentUser() {
                    var f = this;
                    return (0, p.Z)(function* () {
                        const m = yield f.persistence._get(f.fullUserKey);
                        return m ? ot._fromJSON(f.auth, m) : null;
                    })();
                }
                removeCurrentUser() {
                    return this.persistence._remove(this.fullUserKey);
                }
                savePersistenceForRedirect() {
                    return this.persistence._set(
                        this.fullPersistenceKey,
                        this.persistence.type
                    );
                }
                setPersistence(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        if (m.persistence === f) return;
                        const y = yield m.getCurrentUser();
                        return (
                            yield m.removeCurrentUser(),
                            (m.persistence = f),
                            y ? m.setCurrentUser(y) : void 0
                        );
                    })();
                }
                delete() {
                    this.persistence._removeListener(
                        this.fullUserKey,
                        this.boundEventHandler
                    );
                }
                static create(f, m, y = "authUser") {
                    return (0, p.Z)(function* () {
                        if (!m.length) return new le(X(Zt), f, y);
                        const A = (yield Promise.all(
                            m.map(
                                (function () {
                                    var it = (0, p.Z)(function* (At) {
                                        if (yield At._isAvailable()) return At;
                                    });
                                    return function (At) {
                                        return it.apply(this, arguments);
                                    };
                                })()
                            )
                        )).filter((it) => it);
                        let C = A[0] || X(Zt);
                        const H = ne(y, f.config.apiKey, f.name);
                        let re = null;
                        for (const it of m)
                            try {
                                const At = yield it._get(H);
                                if (At) {
                                    const vt = ot._fromJSON(f, At);
                                    it !== C && (re = vt), (C = it);
                                    break;
                                }
                            } catch {}
                        const Ge = A.filter((it) => it._shouldAllowMigration);
                        return C._shouldAllowMigration && Ge.length
                            ? ((C = Ge[0]),
                              re && (yield C._set(H, re.toJSON())),
                              yield Promise.all(
                                  m.map(
                                      (function () {
                                          var it = (0, p.Z)(function* (At) {
                                              if (At !== C)
                                                  try {
                                                      yield At._remove(H);
                                                  } catch {}
                                          });
                                          return function (At) {
                                              return it.apply(this, arguments);
                                          };
                                      })()
                                  )
                              ),
                              new le(C, f, y))
                            : new le(C, f, y);
                    })();
                }
            }
            function be(v) {
                const f = v.toLowerCase();
                if (
                    f.includes("opera/") ||
                    f.includes("opr/") ||
                    f.includes("opios/")
                )
                    return "Opera";
                if (wt(f)) return "IEMobile";
                if (f.includes("msie") || f.includes("trident/")) return "IE";
                if (f.includes("edge/")) return "Edge";
                if (Oe(f)) return "Firefox";
                if (f.includes("silk/")) return "Silk";
                if (tt(f)) return "Blackberry";
                if (It(f)) return "Webos";
                if (ze(f)) return "Safari";
                if ((f.includes("chrome/") || ut(f)) && !f.includes("edge/"))
                    return "Chrome";
                if (Ne(f)) return "Android";
                {
                    const y = v.match(/([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/);
                    if (2 === y?.length) return y[1];
                }
                return "Other";
            }
            function Oe(v = (0, O.z$)()) {
                return /firefox\//i.test(v);
            }
            function ze(v = (0, O.z$)()) {
                const f = v.toLowerCase();
                return (
                    f.includes("safari/") &&
                    !f.includes("chrome/") &&
                    !f.includes("crios/") &&
                    !f.includes("android")
                );
            }
            function ut(v = (0, O.z$)()) {
                return /crios\//i.test(v);
            }
            function wt(v = (0, O.z$)()) {
                return /iemobile/i.test(v);
            }
            function Ne(v = (0, O.z$)()) {
                return /android/i.test(v);
            }
            function tt(v = (0, O.z$)()) {
                return /blackberry/i.test(v);
            }
            function It(v = (0, O.z$)()) {
                return /webos/i.test(v);
            }
            function Ut(v = (0, O.z$)()) {
                return (
                    /iphone|ipad|ipod/i.test(v) ||
                    (/macintosh/i.test(v) && /mobile/i.test(v))
                );
            }
            function In(v = (0, O.z$)()) {
                return (
                    Ut(v) ||
                    Ne(v) ||
                    It(v) ||
                    tt(v) ||
                    /windows phone/i.test(v) ||
                    wt(v)
                );
            }
            function Jr(v, f = []) {
                let m;
                switch (v) {
                    case "Browser":
                        m = be((0, O.z$)());
                        break;
                    case "Worker":
                        m = `${be((0, O.z$)())}-${v}`;
                        break;
                    default:
                        m = v;
                }
                const y = f.length ? f.join(",") : "FirebaseCore-web";
                return `${m}/JsCore/${ie.SDK_VERSION}/${y}`;
            }
            class Ot {
                constructor(f) {
                    (this.auth = f), (this.queue = []);
                }
                pushCallback(f, m) {
                    const y = (C) =>
                        new Promise((H, re) => {
                            try {
                                H(f(C));
                            } catch (Ge) {
                                re(Ge);
                            }
                        });
                    (y.onAbort = m), this.queue.push(y);
                    const A = this.queue.length - 1;
                    return () => {
                        this.queue[A] = () => Promise.resolve();
                    };
                }
                runMiddleware(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        var y;
                        if (m.auth.currentUser === f) return;
                        const A = [];
                        try {
                            for (const C of m.queue)
                                yield C(f), C.onAbort && A.push(C.onAbort);
                        } catch (C) {
                            A.reverse();
                            for (const H of A)
                                try {
                                    H();
                                } catch {}
                            throw m.auth._errorFactory.create("login-blocked", {
                                originalMessage:
                                    null === (y = C) || void 0 === y
                                        ? void 0
                                        : y.message,
                            });
                        }
                    })();
                }
            }
            class bs {
                constructor(f, m, y) {
                    (this.app = f),
                        (this.heartbeatServiceProvider = m),
                        (this.config = y),
                        (this.currentUser = null),
                        (this.emulatorConfig = null),
                        (this.operations = Promise.resolve()),
                        (this.authStateSubscription = new ye(this)),
                        (this.idTokenSubscription = new ye(this)),
                        (this.beforeStateQueue = new Ot(this)),
                        (this.redirectUser = null),
                        (this.isProactiveRefreshEnabled = !1),
                        (this._canInitEmulator = !0),
                        (this._isInitialized = !1),
                        (this._deleted = !1),
                        (this._initializationPromise = null),
                        (this._popupRedirectResolver = null),
                        (this._errorFactory = ce),
                        (this.lastNotifiedUid = void 0),
                        (this.languageCode = null),
                        (this.tenantId = null),
                        (this.settings = {
                            appVerificationDisabledForTesting: !1,
                        }),
                        (this.frameworks = []),
                        (this.name = f.name),
                        (this.clientVersion = y.sdkClientVersion);
                }
                _initializeWithPersistence(f, m) {
                    var y = this;
                    return (
                        m && (this._popupRedirectResolver = X(m)),
                        (this._initializationPromise = this.queue(
                            (0, p.Z)(function* () {
                                var A, C;
                                if (
                                    !y._deleted &&
                                    ((y.persistenceManager = yield le.create(
                                        y,
                                        f
                                    )),
                                    !y._deleted)
                                ) {
                                    if (
                                        null !==
                                            (A = y._popupRedirectResolver) &&
                                        void 0 !== A &&
                                        A._shouldInitProactively
                                    )
                                        try {
                                            yield y._popupRedirectResolver._initialize(
                                                y
                                            );
                                        } catch {}
                                    yield y.initializeCurrentUser(m),
                                        (y.lastNotifiedUid =
                                            (null === (C = y.currentUser) ||
                                            void 0 === C
                                                ? void 0
                                                : C.uid) || null),
                                        !y._deleted && (y._isInitialized = !0);
                                }
                            })
                        )),
                        this._initializationPromise
                    );
                }
                _onStorageEvent() {
                    var f = this;
                    return (0, p.Z)(function* () {
                        if (f._deleted) return;
                        const m = yield f.assertedPersistence.getCurrentUser();
                        if (f.currentUser || m) {
                            if (
                                f.currentUser &&
                                m &&
                                f.currentUser.uid === m.uid
                            )
                                return (
                                    f._currentUser._assign(m),
                                    void (yield f.currentUser.getIdToken())
                                );
                            yield f._updateCurrentUser(m, !0);
                        }
                    })();
                }
                initializeCurrentUser(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        var y;
                        const A = yield m.assertedPersistence.getCurrentUser();
                        let C = A,
                            H = !1;
                        if (f && m.config.authDomain) {
                            yield m.getOrInitRedirectPersistenceManager();
                            const re =
                                    null === (y = m.redirectUser) ||
                                    void 0 === y
                                        ? void 0
                                        : y._redirectEventId,
                                Ge = C?._redirectEventId,
                                it = yield m.tryRedirectSignIn(f);
                            (!re || re === Ge) &&
                                it?.user &&
                                ((C = it.user), (H = !0));
                        }
                        if (!C) return m.directlySetCurrentUser(null);
                        if (!C._redirectEventId) {
                            if (H)
                                try {
                                    yield m.beforeStateQueue.runMiddleware(C);
                                } catch (re) {
                                    (C = A),
                                        m._popupRedirectResolver._overrideRedirectResult(
                                            m,
                                            () => Promise.reject(re)
                                        );
                                }
                            return C
                                ? m.reloadAndSetCurrentUserOrClear(C)
                                : m.directlySetCurrentUser(null);
                        }
                        return (
                            j(m._popupRedirectResolver, m, "argument-error"),
                            yield m.getOrInitRedirectPersistenceManager(),
                            m.redirectUser &&
                            m.redirectUser._redirectEventId ===
                                C._redirectEventId
                                ? m.directlySetCurrentUser(C)
                                : m.reloadAndSetCurrentUserOrClear(C)
                        );
                    })();
                }
                tryRedirectSignIn(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        let y = null;
                        try {
                            y =
                                yield m._popupRedirectResolver._completeRedirectFn(
                                    m,
                                    f,
                                    !0
                                );
                        } catch {
                            yield m._setRedirectUser(null);
                        }
                        return y;
                    })();
                }
                reloadAndSetCurrentUserOrClear(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        var y;
                        try {
                            yield vr(f);
                        } catch (A) {
                            if (
                                "auth/network-request-failed" !==
                                (null === (y = A) || void 0 === y
                                    ? void 0
                                    : y.code)
                            )
                                return m.directlySetCurrentUser(null);
                        }
                        return m.directlySetCurrentUser(f);
                    })();
                }
                useDeviceLanguage() {
                    this.languageCode = (function Ke() {
                        if (typeof navigator > "u") return null;
                        const v = navigator;
                        return (
                            (v.languages && v.languages[0]) ||
                            v.language ||
                            null
                        );
                    })();
                }
                _delete() {
                    var f = this;
                    return (0, p.Z)(function* () {
                        f._deleted = !0;
                    })();
                }
                updateCurrentUser(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        const y = f ? (0, O.m9)(f) : null;
                        return (
                            y &&
                                j(
                                    y.auth.config.apiKey === m.config.apiKey,
                                    m,
                                    "invalid-user-token"
                                ),
                            m._updateCurrentUser(y && y._clone(m))
                        );
                    })();
                }
                _updateCurrentUser(f, m = !1) {
                    var y = this;
                    return (0, p.Z)(function* () {
                        if (!y._deleted)
                            return (
                                f &&
                                    j(
                                        y.tenantId === f.tenantId,
                                        y,
                                        "tenant-id-mismatch"
                                    ),
                                m ||
                                    (yield y.beforeStateQueue.runMiddleware(f)),
                                y.queue(
                                    (0, p.Z)(function* () {
                                        yield y.directlySetCurrentUser(f),
                                            y.notifyAuthListeners();
                                    })
                                )
                            );
                    })();
                }
                signOut() {
                    var f = this;
                    return (0, p.Z)(function* () {
                        return (
                            yield f.beforeStateQueue.runMiddleware(null),
                            (f.redirectPersistenceManager ||
                                f._popupRedirectResolver) &&
                                (yield f._setRedirectUser(null)),
                            f._updateCurrentUser(null, !0)
                        );
                    })();
                }
                setPersistence(f) {
                    var m = this;
                    return this.queue(
                        (0, p.Z)(function* () {
                            yield m.assertedPersistence.setPersistence(X(f));
                        })
                    );
                }
                _getPersistence() {
                    return this.assertedPersistence.persistence.type;
                }
                _updateErrorMap(f) {
                    this._errorFactory = new O.LL("auth", "Firebase", f());
                }
                onAuthStateChanged(f, m, y) {
                    return this.registerStateListener(
                        this.authStateSubscription,
                        f,
                        m,
                        y
                    );
                }
                beforeAuthStateChanged(f, m) {
                    return this.beforeStateQueue.pushCallback(f, m);
                }
                onIdTokenChanged(f, m, y) {
                    return this.registerStateListener(
                        this.idTokenSubscription,
                        f,
                        m,
                        y
                    );
                }
                toJSON() {
                    var f;
                    return {
                        apiKey: this.config.apiKey,
                        authDomain: this.config.authDomain,
                        appName: this.name,
                        currentUser:
                            null === (f = this._currentUser) || void 0 === f
                                ? void 0
                                : f.toJSON(),
                    };
                }
                _setRedirectUser(f, m) {
                    var y = this;
                    return (0, p.Z)(function* () {
                        const A = yield y.getOrInitRedirectPersistenceManager(
                            m
                        );
                        return null === f
                            ? A.removeCurrentUser()
                            : A.setCurrentUser(f);
                    })();
                }
                getOrInitRedirectPersistenceManager(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        if (!m.redirectPersistenceManager) {
                            const y = (f && X(f)) || m._popupRedirectResolver;
                            j(y, m, "argument-error"),
                                (m.redirectPersistenceManager = yield le.create(
                                    m,
                                    [X(y._redirectPersistence)],
                                    "redirectUser"
                                )),
                                (m.redirectUser =
                                    yield m.redirectPersistenceManager.getCurrentUser());
                        }
                        return m.redirectPersistenceManager;
                    })();
                }
                _redirectUserForId(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        var y, A;
                        return (
                            m._isInitialized &&
                                (yield m.queue((0, p.Z)(function* () {}))),
                            (null === (y = m._currentUser) || void 0 === y
                                ? void 0
                                : y._redirectEventId) === f
                                ? m._currentUser
                                : (null === (A = m.redirectUser) || void 0 === A
                                      ? void 0
                                      : A._redirectEventId) === f
                                ? m.redirectUser
                                : null
                        );
                    })();
                }
                _persistUserIfCurrent(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        if (f === m.currentUser)
                            return m.queue(
                                (0, p.Z)(function* () {
                                    return m.directlySetCurrentUser(f);
                                })
                            );
                    })();
                }
                _notifyListenersIfCurrent(f) {
                    f === this.currentUser && this.notifyAuthListeners();
                }
                _key() {
                    return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;
                }
                _startProactiveRefresh() {
                    (this.isProactiveRefreshEnabled = !0),
                        this.currentUser &&
                            this._currentUser._startProactiveRefresh();
                }
                _stopProactiveRefresh() {
                    (this.isProactiveRefreshEnabled = !1),
                        this.currentUser &&
                            this._currentUser._stopProactiveRefresh();
                }
                get _currentUser() {
                    return this.currentUser;
                }
                notifyAuthListeners() {
                    var f, m;
                    if (!this._isInitialized) return;
                    this.idTokenSubscription.next(this.currentUser);
                    const y =
                        null !==
                            (m =
                                null === (f = this.currentUser) || void 0 === f
                                    ? void 0
                                    : f.uid) && void 0 !== m
                            ? m
                            : null;
                    this.lastNotifiedUid !== y &&
                        ((this.lastNotifiedUid = y),
                        this.authStateSubscription.next(this.currentUser));
                }
                registerStateListener(f, m, y, A) {
                    if (this._deleted) return () => {};
                    const C = "function" == typeof m ? m : m.next.bind(m),
                        H = this._isInitialized
                            ? Promise.resolve()
                            : this._initializationPromise;
                    return (
                        j(H, this, "internal-error"),
                        H.then(() => C(this.currentUser)),
                        "function" == typeof m
                            ? f.addObserver(m, y, A)
                            : f.addObserver(m)
                    );
                }
                directlySetCurrentUser(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        m.currentUser &&
                            m.currentUser !== f &&
                            (m._currentUser._stopProactiveRefresh(),
                            f &&
                                m.isProactiveRefreshEnabled &&
                                f._startProactiveRefresh()),
                            (m.currentUser = f),
                            f
                                ? yield m.assertedPersistence.setCurrentUser(f)
                                : yield m.assertedPersistence.removeCurrentUser();
                    })();
                }
                queue(f) {
                    return (
                        (this.operations = this.operations.then(f, f)),
                        this.operations
                    );
                }
                get assertedPersistence() {
                    return (
                        j(this.persistenceManager, this, "internal-error"),
                        this.persistenceManager
                    );
                }
                _logFramework(f) {
                    !f ||
                        this.frameworks.includes(f) ||
                        (this.frameworks.push(f),
                        this.frameworks.sort(),
                        (this.clientVersion = Jr(
                            this.config.clientPlatform,
                            this._getFrameworks()
                        )));
                }
                _getFrameworks() {
                    return this.frameworks;
                }
                _getAdditionalHeaders() {
                    var f = this;
                    return (0, p.Z)(function* () {
                        var m;
                        const y = { "X-Client-Version": f.clientVersion };
                        f.app.options.appId &&
                            (y["X-Firebase-gmpid"] = f.app.options.appId);
                        const A = yield null ===
                            (m = f.heartbeatServiceProvider.getImmediate({
                                optional: !0,
                            })) || void 0 === m
                            ? void 0
                            : m.getHeartbeatsHeader();
                        return A && (y["X-Firebase-Client"] = A), y;
                    })();
                }
            }
            function Z(v) {
                return (0, O.m9)(v);
            }
            class ye {
                constructor(f) {
                    (this.auth = f),
                        (this.observer = null),
                        (this.addObserver = (0, O.ne)(
                            (m) => (this.observer = m)
                        ));
                }
                get next() {
                    return (
                        j(this.observer, this.auth, "internal-error"),
                        this.observer.next.bind(this.observer)
                    );
                }
            }
            function et(v) {
                const f = v.indexOf(":");
                return f < 0 ? "" : v.substr(0, f + 1);
            }
            function Yt(v) {
                if (!v) return null;
                const f = Number(v);
                return isNaN(f) ? null : f;
            }
            class Dn {
                constructor(f, m) {
                    (this.providerId = f), (this.signInMethod = m);
                }
                toJSON() {
                    return Ce("not implemented");
                }
                _getIdTokenResponse(f) {
                    return Ce("not implemented");
                }
                _linkToIdToken(f, m) {
                    return Ce("not implemented");
                }
                _getReauthenticationResolver(f) {
                    return Ce("not implemented");
                }
            }
            function Ci(v, f) {
                return jt.apply(this, arguments);
            }
            function jt() {
                return (jt = (0, p.Z)(function* (v, f) {
                    return xt(
                        v,
                        "POST",
                        "/v1/accounts:resetPassword",
                        kt(v, f)
                    );
                })).apply(this, arguments);
            }
            function La(v, f) {
                return $u.apply(this, arguments);
            }
            function $u() {
                return ($u = (0, p.Z)(function* (v, f) {
                    return xt(v, "POST", "/v1/accounts:update", f);
                })).apply(this, arguments);
            }
            function Xo(v, f) {
                return yo.apply(this, arguments);
            }
            function yo() {
                return (yo = (0, p.Z)(function* (v, f) {
                    return xt(v, "POST", "/v1/accounts:update", kt(v, f));
                })).apply(this, arguments);
            }
            function vo() {
                return (vo = (0, p.Z)(function* (v, f) {
                    return Nn(
                        v,
                        "POST",
                        "/v1/accounts:signInWithPassword",
                        kt(v, f)
                    );
                })).apply(this, arguments);
            }
            function pi(v, f) {
                return $n.apply(this, arguments);
            }
            function $n() {
                return ($n = (0, p.Z)(function* (v, f) {
                    return xt(v, "POST", "/v1/accounts:sendOobCode", kt(v, f));
                })).apply(this, arguments);
            }
            function ch(v, f) {
                return Xn.apply(this, arguments);
            }
            function Xn() {
                return (Xn = (0, p.Z)(function* (v, f) {
                    return pi(v, f);
                })).apply(this, arguments);
            }
            function bi(v, f) {
                return Ts.apply(this, arguments);
            }
            function Ts() {
                return (Ts = (0, p.Z)(function* (v, f) {
                    return pi(v, f);
                })).apply(this, arguments);
            }
            function Gs(v, f) {
                return Hi.apply(this, arguments);
            }
            function Hi() {
                return (Hi = (0, p.Z)(function* (v, f) {
                    return pi(v, f);
                })).apply(this, arguments);
            }
            function Di(v, f) {
                return ea.apply(this, arguments);
            }
            function ea() {
                return (ea = (0, p.Z)(function* (v, f) {
                    return pi(v, f);
                })).apply(this, arguments);
            }
            function Va() {
                return (Va = (0, p.Z)(function* (v, f) {
                    return Nn(
                        v,
                        "POST",
                        "/v1/accounts:signInWithEmailLink",
                        kt(v, f)
                    );
                })).apply(this, arguments);
            }
            function Wu() {
                return (Wu = (0, p.Z)(function* (v, f) {
                    return Nn(
                        v,
                        "POST",
                        "/v1/accounts:signInWithEmailLink",
                        kt(v, f)
                    );
                })).apply(this, arguments);
            }
            class ta extends Dn {
                constructor(f, m, y, A = null) {
                    super("password", y),
                        (this._email = f),
                        (this._password = m),
                        (this._tenantId = A);
                }
                static _fromEmailAndPassword(f, m) {
                    return new ta(f, m, "password");
                }
                static _fromEmailAndCode(f, m, y = null) {
                    return new ta(f, m, "emailLink", y);
                }
                toJSON() {
                    return {
                        email: this._email,
                        password: this._password,
                        signInMethod: this.signInMethod,
                        tenantId: this._tenantId,
                    };
                }
                static fromJSON(f) {
                    const m = "string" == typeof f ? JSON.parse(f) : f;
                    if (m?.email && m?.password) {
                        if ("password" === m.signInMethod)
                            return this._fromEmailAndPassword(
                                m.email,
                                m.password
                            );
                        if ("emailLink" === m.signInMethod)
                            return this._fromEmailAndCode(
                                m.email,
                                m.password,
                                m.tenantId
                            );
                    }
                    return null;
                }
                _getIdTokenResponse(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        switch (m.signInMethod) {
                            case "password":
                                return (function Ds(v, f) {
                                    return vo.apply(this, arguments);
                                })(f, {
                                    returnSecureToken: !0,
                                    email: m._email,
                                    password: m._password,
                                });
                            case "emailLink":
                                return (function ay(v, f) {
                                    return Va.apply(this, arguments);
                                })(f, {
                                    email: m._email,
                                    oobCode: m._password,
                                });
                            default:
                                Ae(f, "internal-error");
                        }
                    })();
                }
                _linkToIdToken(f, m) {
                    var y = this;
                    return (0, p.Z)(function* () {
                        switch (y.signInMethod) {
                            case "password":
                                return La(f, {
                                    idToken: m,
                                    returnSecureToken: !0,
                                    email: y._email,
                                    password: y._password,
                                });
                            case "emailLink":
                                return (function Gu(v, f) {
                                    return Wu.apply(this, arguments);
                                })(f, {
                                    idToken: m,
                                    email: y._email,
                                    oobCode: y._password,
                                });
                            default:
                                Ae(f, "internal-error");
                        }
                    })();
                }
                _getReauthenticationResolver(f) {
                    return this._getIdTokenResponse(f);
                }
            }
            function Ws(v, f) {
                return gi.apply(this, arguments);
            }
            function gi() {
                return (gi = (0, p.Z)(function* (v, f) {
                    return Nn(
                        v,
                        "POST",
                        "/v1/accounts:signInWithIdp",
                        kt(v, f)
                    );
                })).apply(this, arguments);
            }
            class $i extends Dn {
                constructor() {
                    super(...arguments), (this.pendingToken = null);
                }
                static _fromParams(f) {
                    const m = new $i(f.providerId, f.signInMethod);
                    return (
                        f.idToken || f.accessToken
                            ? (f.idToken && (m.idToken = f.idToken),
                              f.accessToken && (m.accessToken = f.accessToken),
                              f.nonce && !f.pendingToken && (m.nonce = f.nonce),
                              f.pendingToken &&
                                  (m.pendingToken = f.pendingToken))
                            : f.oauthToken && f.oauthTokenSecret
                            ? ((m.accessToken = f.oauthToken),
                              (m.secret = f.oauthTokenSecret))
                            : Ae("argument-error"),
                        m
                    );
                }
                toJSON() {
                    return {
                        idToken: this.idToken,
                        accessToken: this.accessToken,
                        secret: this.secret,
                        nonce: this.nonce,
                        pendingToken: this.pendingToken,
                        providerId: this.providerId,
                        signInMethod: this.signInMethod,
                    };
                }
                static fromJSON(f) {
                    const m = "string" == typeof f ? JSON.parse(f) : f,
                        { providerId: y, signInMethod: A } = m,
                        C = (0, he._T)(m, ["providerId", "signInMethod"]);
                    if (!y || !A) return null;
                    const H = new $i(y, A);
                    return (
                        (H.idToken = C.idToken || void 0),
                        (H.accessToken = C.accessToken || void 0),
                        (H.secret = C.secret),
                        (H.nonce = C.nonce),
                        (H.pendingToken = C.pendingToken || null),
                        H
                    );
                }
                _getIdTokenResponse(f) {
                    return Ws(f, this.buildRequest());
                }
                _linkToIdToken(f, m) {
                    const y = this.buildRequest();
                    return (y.idToken = m), Ws(f, y);
                }
                _getReauthenticationResolver(f) {
                    const m = this.buildRequest();
                    return (m.autoCreate = !1), Ws(f, m);
                }
                buildRequest() {
                    const f = {
                        requestUri: "http://localhost",
                        returnSecureToken: !0,
                    };
                    if (this.pendingToken) f.pendingToken = this.pendingToken;
                    else {
                        const m = {};
                        this.idToken && (m.id_token = this.idToken),
                            this.accessToken &&
                                (m.access_token = this.accessToken),
                            this.secret && (m.oauth_token_secret = this.secret),
                            (m.providerId = this.providerId),
                            this.nonce &&
                                !this.pendingToken &&
                                (m.nonce = this.nonce),
                            (f.postBody = (0, O.xO)(m));
                    }
                    return f;
                }
            }
            function uc(v, f) {
                return lc.apply(this, arguments);
            }
            function lc() {
                return (lc = (0, p.Z)(function* (v, f) {
                    return xt(
                        v,
                        "POST",
                        "/v1/accounts:sendVerificationCode",
                        kt(v, f)
                    );
                })).apply(this, arguments);
            }
            function dc() {
                return (dc = (0, p.Z)(function* (v, f) {
                    return Nn(
                        v,
                        "POST",
                        "/v1/accounts:signInWithPhoneNumber",
                        kt(v, f)
                    );
                })).apply(this, arguments);
            }
            function dh() {
                return (dh = (0, p.Z)(function* (v, f) {
                    const m = yield Nn(
                        v,
                        "POST",
                        "/v1/accounts:signInWithPhoneNumber",
                        kt(v, f)
                    );
                    if (m.temporaryProof)
                        throw sr(
                            v,
                            "account-exists-with-different-credential",
                            m
                        );
                    return m;
                })).apply(this, arguments);
            }
            const hc = { USER_NOT_FOUND: "user-not-found" };
            function zu() {
                return (zu = (0, p.Z)(function* (v, f) {
                    return Nn(
                        v,
                        "POST",
                        "/v1/accounts:signInWithPhoneNumber",
                        kt(
                            v,
                            Object.assign(Object.assign({}, f), {
                                operation: "REAUTH",
                            })
                        ),
                        hc
                    );
                })).apply(this, arguments);
            }
            class Xi extends Dn {
                constructor(f) {
                    super("phone", "phone"), (this.params = f);
                }
                static _fromVerification(f, m) {
                    return new Xi({ verificationId: f, verificationCode: m });
                }
                static _fromTokenResponse(f, m) {
                    return new Xi({ phoneNumber: f, temporaryProof: m });
                }
                _getIdTokenResponse(f) {
                    return (function cc(v, f) {
                        return dc.apply(this, arguments);
                    })(f, this._makeVerificationRequest());
                }
                _linkToIdToken(f, m) {
                    return (function uy(v, f) {
                        return dh.apply(this, arguments);
                    })(
                        f,
                        Object.assign(
                            { idToken: m },
                            this._makeVerificationRequest()
                        )
                    );
                }
                _getReauthenticationResolver(f) {
                    return (function ly(v, f) {
                        return zu.apply(this, arguments);
                    })(f, this._makeVerificationRequest());
                }
                _makeVerificationRequest() {
                    const {
                        temporaryProof: f,
                        phoneNumber: m,
                        verificationId: y,
                        verificationCode: A,
                    } = this.params;
                    return f && m
                        ? { temporaryProof: f, phoneNumber: m }
                        : { sessionInfo: y, code: A };
                }
                toJSON() {
                    const f = { providerId: this.providerId };
                    return (
                        this.params.phoneNumber &&
                            (f.phoneNumber = this.params.phoneNumber),
                        this.params.temporaryProof &&
                            (f.temporaryProof = this.params.temporaryProof),
                        this.params.verificationCode &&
                            (f.verificationCode = this.params.verificationCode),
                        this.params.verificationId &&
                            (f.verificationId = this.params.verificationId),
                        f
                    );
                }
                static fromJSON(f) {
                    "string" == typeof f && (f = JSON.parse(f));
                    const {
                        verificationId: m,
                        verificationCode: y,
                        phoneNumber: A,
                        temporaryProof: C,
                    } = f;
                    return y || m || A || C
                        ? new Xi({
                              verificationId: m,
                              verificationCode: y,
                              phoneNumber: A,
                              temporaryProof: C,
                          })
                        : null;
                }
            }
            class Ua {
                constructor(f) {
                    var m, y, A, C, H, re;
                    const Ge = (0, O.zd)((0, O.pd)(f)),
                        it =
                            null !== (m = Ge.apiKey) && void 0 !== m ? m : null,
                        At =
                            null !== (y = Ge.oobCode) && void 0 !== y
                                ? y
                                : null,
                        vt = (function Bp(v) {
                            switch (v) {
                                case "recoverEmail":
                                    return "RECOVER_EMAIL";
                                case "resetPassword":
                                    return "PASSWORD_RESET";
                                case "signIn":
                                    return "EMAIL_SIGNIN";
                                case "verifyEmail":
                                    return "VERIFY_EMAIL";
                                case "verifyAndChangeEmail":
                                    return "VERIFY_AND_CHANGE_EMAIL";
                                case "revertSecondFactorAddition":
                                    return "REVERT_SECOND_FACTOR_ADDITION";
                                default:
                                    return null;
                            }
                        })(null !== (A = Ge.mode) && void 0 !== A ? A : null);
                    j(it && At && vt, "argument-error"),
                        (this.apiKey = it),
                        (this.operation = vt),
                        (this.code = At),
                        (this.continueUrl =
                            null !== (C = Ge.continueUrl) && void 0 !== C
                                ? C
                                : null),
                        (this.languageCode =
                            null !== (H = Ge.languageCode) && void 0 !== H
                                ? H
                                : null),
                        (this.tenantId =
                            null !== (re = Ge.tenantId) && void 0 !== re
                                ? re
                                : null);
                }
                static parseLink(f) {
                    const m = (function jp(v) {
                        const f = (0, O.zd)((0, O.pd)(v)).link,
                            m = f ? (0, O.zd)((0, O.pd)(f)).deep_link_id : null,
                            y = (0, O.zd)((0, O.pd)(v)).deep_link_id;
                        return (
                            (y ? (0, O.zd)((0, O.pd)(y)).link : null) ||
                            y ||
                            m ||
                            f ||
                            v
                        );
                    })(f);
                    try {
                        return new Ua(m);
                    } catch {
                        return null;
                    }
                }
            }
            let qu = (() => {
                class v {
                    constructor() {
                        this.providerId = v.PROVIDER_ID;
                    }
                    static credential(m, y) {
                        return ta._fromEmailAndPassword(m, y);
                    }
                    static credentialWithLink(m, y) {
                        const A = Ua.parseLink(y);
                        return (
                            j(A, "argument-error"),
                            ta._fromEmailAndCode(m, A.code, A.tenantId)
                        );
                    }
                }
                return (
                    (v.PROVIDER_ID = "password"),
                    (v.EMAIL_PASSWORD_SIGN_IN_METHOD = "password"),
                    (v.EMAIL_LINK_SIGN_IN_METHOD = "emailLink"),
                    v
                );
            })();
            class Ti {
                constructor(f) {
                    (this.providerId = f),
                        (this.defaultLanguageCode = null),
                        (this.customParameters = {});
                }
                setDefaultLanguage(f) {
                    this.defaultLanguageCode = f;
                }
                setCustomParameters(f) {
                    return (this.customParameters = f), this;
                }
                getCustomParameters() {
                    return this.customParameters;
                }
            }
            class zs extends Ti {
                constructor() {
                    super(...arguments), (this.scopes = []);
                }
                addScope(f) {
                    return this.scopes.includes(f) || this.scopes.push(f), this;
                }
                getScopes() {
                    return [...this.scopes];
                }
            }
            class Eo extends zs {
                static credentialFromJSON(f) {
                    const m = "string" == typeof f ? JSON.parse(f) : f;
                    return (
                        j(
                            "providerId" in m && "signInMethod" in m,
                            "argument-error"
                        ),
                        $i._fromParams(m)
                    );
                }
                credential(f) {
                    return this._credential(
                        Object.assign(Object.assign({}, f), {
                            nonce: f.rawNonce,
                        })
                    );
                }
                _credential(f) {
                    return (
                        j(f.idToken || f.accessToken, "argument-error"),
                        $i._fromParams(
                            Object.assign(Object.assign({}, f), {
                                providerId: this.providerId,
                                signInMethod: this.providerId,
                            })
                        )
                    );
                }
                static credentialFromResult(f) {
                    return Eo.oauthCredentialFromTaggedObject(f);
                }
                static credentialFromError(f) {
                    return Eo.oauthCredentialFromTaggedObject(
                        f.customData || {}
                    );
                }
                static oauthCredentialFromTaggedObject({ _tokenResponse: f }) {
                    if (!f) return null;
                    const {
                        oauthIdToken: m,
                        oauthAccessToken: y,
                        oauthTokenSecret: A,
                        pendingToken: C,
                        nonce: H,
                        providerId: re,
                    } = f;
                    if ((!y && !A && !m && !C) || !re) return null;
                    try {
                        return new Eo(re)._credential({
                            idToken: m,
                            accessToken: y,
                            nonce: H,
                            pendingToken: C,
                        });
                    } catch {
                        return null;
                    }
                }
            }
            let Ku = (() => {
                    class v extends zs {
                        constructor() {
                            super("facebook.com");
                        }
                        static credential(m) {
                            return $i._fromParams({
                                providerId: v.PROVIDER_ID,
                                signInMethod: v.FACEBOOK_SIGN_IN_METHOD,
                                accessToken: m,
                            });
                        }
                        static credentialFromResult(m) {
                            return v.credentialFromTaggedObject(m);
                        }
                        static credentialFromError(m) {
                            return v.credentialFromTaggedObject(
                                m.customData || {}
                            );
                        }
                        static credentialFromTaggedObject({
                            _tokenResponse: m,
                        }) {
                            if (
                                !m ||
                                !("oauthAccessToken" in m) ||
                                !m.oauthAccessToken
                            )
                                return null;
                            try {
                                return v.credential(m.oauthAccessToken);
                            } catch {
                                return null;
                            }
                        }
                    }
                    return (
                        (v.FACEBOOK_SIGN_IN_METHOD = "facebook.com"),
                        (v.PROVIDER_ID = "facebook.com"),
                        v
                    );
                })(),
                na = (() => {
                    class v extends zs {
                        constructor() {
                            super("google.com"), this.addScope("profile");
                        }
                        static credential(m, y) {
                            return $i._fromParams({
                                providerId: v.PROVIDER_ID,
                                signInMethod: v.GOOGLE_SIGN_IN_METHOD,
                                idToken: m,
                                accessToken: y,
                            });
                        }
                        static credentialFromResult(m) {
                            return v.credentialFromTaggedObject(m);
                        }
                        static credentialFromError(m) {
                            return v.credentialFromTaggedObject(
                                m.customData || {}
                            );
                        }
                        static credentialFromTaggedObject({
                            _tokenResponse: m,
                        }) {
                            if (!m) return null;
                            const { oauthIdToken: y, oauthAccessToken: A } = m;
                            if (!y && !A) return null;
                            try {
                                return v.credential(y, A);
                            } catch {
                                return null;
                            }
                        }
                    }
                    return (
                        (v.GOOGLE_SIGN_IN_METHOD = "google.com"),
                        (v.PROVIDER_ID = "google.com"),
                        v
                    );
                })(),
                ra = (() => {
                    class v extends zs {
                        constructor() {
                            super("github.com");
                        }
                        static credential(m) {
                            return $i._fromParams({
                                providerId: v.PROVIDER_ID,
                                signInMethod: v.GITHUB_SIGN_IN_METHOD,
                                accessToken: m,
                            });
                        }
                        static credentialFromResult(m) {
                            return v.credentialFromTaggedObject(m);
                        }
                        static credentialFromError(m) {
                            return v.credentialFromTaggedObject(
                                m.customData || {}
                            );
                        }
                        static credentialFromTaggedObject({
                            _tokenResponse: m,
                        }) {
                            if (
                                !m ||
                                !("oauthAccessToken" in m) ||
                                !m.oauthAccessToken
                            )
                                return null;
                            try {
                                return v.credential(m.oauthAccessToken);
                            } catch {
                                return null;
                            }
                        }
                    }
                    return (
                        (v.GITHUB_SIGN_IN_METHOD = "github.com"),
                        (v.PROVIDER_ID = "github.com"),
                        v
                    );
                })();
            class es extends Dn {
                constructor(f, m) {
                    super(f, f), (this.pendingToken = m);
                }
                _getIdTokenResponse(f) {
                    return Ws(f, this.buildRequest());
                }
                _linkToIdToken(f, m) {
                    const y = this.buildRequest();
                    return (y.idToken = m), Ws(f, y);
                }
                _getReauthenticationResolver(f) {
                    const m = this.buildRequest();
                    return (m.autoCreate = !1), Ws(f, m);
                }
                toJSON() {
                    return {
                        signInMethod: this.signInMethod,
                        providerId: this.providerId,
                        pendingToken: this.pendingToken,
                    };
                }
                static fromJSON(f) {
                    const m = "string" == typeof f ? JSON.parse(f) : f,
                        { providerId: y, signInMethod: A, pendingToken: C } = m;
                    return y && A && C && y === A ? new es(y, C) : null;
                }
                static _create(f, m) {
                    return new es(f, m);
                }
                buildRequest() {
                    return {
                        requestUri: "http://localhost",
                        returnSecureToken: !0,
                        pendingToken: this.pendingToken,
                    };
                }
            }
            class ur extends Ti {
                constructor(f) {
                    j(f.startsWith("saml."), "argument-error"), super(f);
                }
                static credentialFromResult(f) {
                    return ur.samlCredentialFromTaggedObject(f);
                }
                static credentialFromError(f) {
                    return ur.samlCredentialFromTaggedObject(
                        f.customData || {}
                    );
                }
                static credentialFromJSON(f) {
                    const m = es.fromJSON(f);
                    return j(m, "argument-error"), m;
                }
                static samlCredentialFromTaggedObject({ _tokenResponse: f }) {
                    if (!f) return null;
                    const { pendingToken: m, providerId: y } = f;
                    if (!m || !y) return null;
                    try {
                        return es._create(y, m);
                    } catch {
                        return null;
                    }
                }
            }
            let Io = (() => {
                class v extends zs {
                    constructor() {
                        super("twitter.com");
                    }
                    static credential(m, y) {
                        return $i._fromParams({
                            providerId: v.PROVIDER_ID,
                            signInMethod: v.TWITTER_SIGN_IN_METHOD,
                            oauthToken: m,
                            oauthTokenSecret: y,
                        });
                    }
                    static credentialFromResult(m) {
                        return v.credentialFromTaggedObject(m);
                    }
                    static credentialFromError(m) {
                        return v.credentialFromTaggedObject(m.customData || {});
                    }
                    static credentialFromTaggedObject({ _tokenResponse: m }) {
                        if (!m) return null;
                        const { oauthAccessToken: y, oauthTokenSecret: A } = m;
                        if (!y || !A) return null;
                        try {
                            return v.credential(y, A);
                        } catch {
                            return null;
                        }
                    }
                }
                return (
                    (v.TWITTER_SIGN_IN_METHOD = "twitter.com"),
                    (v.PROVIDER_ID = "twitter.com"),
                    v
                );
            })();
            function Ba(v, f) {
                return qs.apply(this, arguments);
            }
            function qs() {
                return (qs = (0, p.Z)(function* (v, f) {
                    return Nn(v, "POST", "/v1/accounts:signUp", kt(v, f));
                })).apply(this, arguments);
            }
            class Gi {
                constructor(f) {
                    (this.user = f.user),
                        (this.providerId = f.providerId),
                        (this._tokenResponse = f._tokenResponse),
                        (this.operationType = f.operationType);
                }
                static _fromIdTokenResponse(f, m, y, A = !1) {
                    return (0, p.Z)(function* () {
                        const C = yield ot._fromIdTokenResponse(f, y, A),
                            H = hh(y);
                        return new Gi({
                            user: C,
                            providerId: H,
                            _tokenResponse: y,
                            operationType: m,
                        });
                    })();
                }
                static _forOperation(f, m, y) {
                    return (0, p.Z)(function* () {
                        yield f._updateTokensIfNecessary(y, !0);
                        const A = hh(y);
                        return new Gi({
                            user: f,
                            providerId: A,
                            _tokenResponse: y,
                            operationType: m,
                        });
                    })();
                }
            }
            function hh(v) {
                return v.providerId
                    ? v.providerId
                    : "phoneNumber" in v
                    ? "phone"
                    : null;
            }
            function fc() {
                return (fc = (0, p.Z)(function* (v) {
                    var f;
                    const m = Z(v);
                    if (
                        (yield m._initializationPromise,
                        null !== (f = m.currentUser) &&
                            void 0 !== f &&
                            f.isAnonymous)
                    )
                        return new Gi({
                            user: m.currentUser,
                            providerId: null,
                            operationType: "signIn",
                        });
                    const y = yield Ba(m, { returnSecureToken: !0 }),
                        A = yield Gi._fromIdTokenResponse(m, "signIn", y, !0);
                    return yield m._updateCurrentUser(A.user), A;
                })).apply(this, arguments);
            }
            class pc extends O.ZR {
                constructor(f, m, y, A) {
                    var C;
                    super(m.code, m.message),
                        (this.operationType = y),
                        (this.user = A),
                        Object.setPrototypeOf(this, pc.prototype),
                        (this.customData = {
                            appName: f.name,
                            tenantId:
                                null !== (C = f.tenantId) && void 0 !== C
                                    ? C
                                    : void 0,
                            _serverResponse: m.customData._serverResponse,
                            operationType: y,
                        });
                }
                static _fromErrorAndOperation(f, m, y, A) {
                    return new pc(f, m, y, A);
                }
            }
            function Wi(v, f, m, y) {
                return (
                    "reauthenticate" === f
                        ? m._getReauthenticationResolver(v)
                        : m._getIdTokenResponse(v)
                ).catch((C) => {
                    throw "auth/multi-factor-auth-required" === C.code
                        ? pc._fromErrorAndOperation(v, C, f, y)
                        : C;
                });
            }
            function jr(v) {
                return new Set(
                    v.map(({ providerId: f }) => f).filter((f) => !!f)
                );
            }
            function ia() {
                return (ia = (0, p.Z)(function* (v, f) {
                    const m = (0, O.m9)(v);
                    yield Si(!0, m, f);
                    const { providerUserInfo: y } = yield an(m.auth, {
                            idToken: yield m.getIdToken(),
                            deleteProvider: [f],
                        }),
                        A = jr(y || []);
                    return (
                        (m.providerData = m.providerData.filter((C) =>
                            A.has(C.providerId)
                        )),
                        A.has("phone") || (m.phoneNumber = null),
                        yield m.auth._persistUserIfCurrent(m),
                        m
                    );
                })).apply(this, arguments);
            }
            function Xr(v, f) {
                return Vr.apply(this, arguments);
            }
            function Vr() {
                return (Vr = (0, p.Z)(function* (v, f, m = !1) {
                    const y = yield gn(
                        v,
                        f._linkToIdToken(v.auth, yield v.getIdToken()),
                        m
                    );
                    return Gi._forOperation(v, "link", y);
                })).apply(this, arguments);
            }
            function Si(v, f, m) {
                return Ks.apply(this, arguments);
            }
            function Ks() {
                return (Ks = (0, p.Z)(function* (v, f, m) {
                    yield vr(f);
                    const A =
                        !1 === v
                            ? "provider-already-linked"
                            : "no-such-provider";
                    j(jr(f.providerData).has(m) === v, f.auth, A);
                })).apply(this, arguments);
            }
            function sa(v, f) {
                return Ai.apply(this, arguments);
            }
            function Ai() {
                return (Ai = (0, p.Z)(function* (v, f, m = !1) {
                    var y;
                    const { auth: A } = v,
                        C = "reauthenticate";
                    try {
                        const H = yield gn(v, Wi(A, C, f, v), m);
                        j(H.idToken, A, "internal-error");
                        const re = qe(H.idToken);
                        j(re, A, "internal-error");
                        const { sub: Ge } = re;
                        return (
                            j(v.uid === Ge, A, "user-mismatch"),
                            Gi._forOperation(v, C, H)
                        );
                    } catch (H) {
                        throw (
                            ("auth/user-not-found" ===
                                (null === (y = H) || void 0 === y
                                    ? void 0
                                    : y.code) && Ae(A, "user-mismatch"),
                            H)
                        );
                    }
                })).apply(this, arguments);
            }
            function Co(v, f) {
                return oa.apply(this, arguments);
            }
            function oa() {
                return (oa = (0, p.Z)(function* (v, f, m = !1) {
                    const y = "signIn",
                        A = yield Wi(v, y, f),
                        C = yield Gi._fromIdTokenResponse(v, y, A);
                    return m || (yield v._updateCurrentUser(C.user)), C;
                })).apply(this, arguments);
            }
            function Rt(v, f) {
                return N.apply(this, arguments);
            }
            function N() {
                return (N = (0, p.Z)(function* (v, f) {
                    return Co(Z(v), f);
                })).apply(this, arguments);
            }
            function M(v, f) {
                return q.apply(this, arguments);
            }
            function q() {
                return (q = (0, p.Z)(function* (v, f) {
                    const m = (0, O.m9)(v);
                    return yield Si(!1, m, f.providerId), Xr(m, f);
                })).apply(this, arguments);
            }
            function ae(v, f) {
                return Pe.apply(this, arguments);
            }
            function Pe() {
                return (Pe = (0, p.Z)(function* (v, f) {
                    return sa((0, O.m9)(v), f);
                })).apply(this, arguments);
            }
            function Ye(v, f) {
                return ht.apply(this, arguments);
            }
            function ht() {
                return (ht = (0, p.Z)(function* (v, f) {
                    return Nn(
                        v,
                        "POST",
                        "/v1/accounts:signInWithCustomToken",
                        kt(v, f)
                    );
                })).apply(this, arguments);
            }
            function we() {
                return (we = (0, p.Z)(function* (v, f) {
                    const m = Z(v),
                        y = yield Ye(m, { token: f, returnSecureToken: !0 }),
                        A = yield Gi._fromIdTokenResponse(m, "signIn", y);
                    return yield m._updateCurrentUser(A.user), A;
                })).apply(this, arguments);
            }
            class Ct {
                constructor(f, m) {
                    (this.factorId = f),
                        (this.uid = m.mfaEnrollmentId),
                        (this.enrollmentTime = new Date(
                            m.enrolledAt
                        ).toUTCString()),
                        (this.displayName = m.displayName);
                }
                static _fromServerResponse(f, m) {
                    return "phoneInfo" in m
                        ? Tn._fromServerResponse(f, m)
                        : Ae(f, "internal-error");
                }
            }
            class Tn extends Ct {
                constructor(f) {
                    super("phone", f), (this.phoneNumber = f.phoneInfo);
                }
                static _fromServerResponse(f, m) {
                    return new Tn(m);
                }
            }
            function St(v, f, m) {
                var y;
                j(
                    (null === (y = m.url) || void 0 === y ? void 0 : y.length) >
                        0,
                    v,
                    "invalid-continue-uri"
                ),
                    j(
                        typeof m.dynamicLinkDomain > "u" ||
                            m.dynamicLinkDomain.length > 0,
                        v,
                        "invalid-dynamic-link-domain"
                    ),
                    (f.continueUrl = m.url),
                    (f.dynamicLinkDomain = m.dynamicLinkDomain),
                    (f.canHandleCodeInApp = m.handleCodeInApp),
                    m.iOS &&
                        (j(
                            m.iOS.bundleId.length > 0,
                            v,
                            "missing-ios-bundle-id"
                        ),
                        (f.iOSBundleId = m.iOS.bundleId)),
                    m.android &&
                        (j(
                            m.android.packageName.length > 0,
                            v,
                            "missing-android-pkg-name"
                        ),
                        (f.androidInstallApp = m.android.installApp),
                        (f.androidMinimumVersionCode =
                            m.android.minimumVersion),
                        (f.androidPackageName = m.android.packageName));
            }
            function Ss() {
                return (Ss = (0, p.Z)(function* (v, f, m) {
                    const y = (0, O.m9)(v),
                        A = { requestType: "PASSWORD_RESET", email: f };
                    m && St(y, A, m), yield bi(y, A);
                })).apply(this, arguments);
            }
            function Tr() {
                return (Tr = (0, p.Z)(function* (v, f, m) {
                    yield Ci((0, O.m9)(v), { oobCode: f, newPassword: m });
                })).apply(this, arguments);
            }
            function aa() {
                return (aa = (0, p.Z)(function* (v, f) {
                    yield Xo((0, O.m9)(v), { oobCode: f });
                })).apply(this, arguments);
            }
            function bo(v, f) {
                return Rs.apply(this, arguments);
            }
            function Rs() {
                return (Rs = (0, p.Z)(function* (v, f) {
                    const m = (0, O.m9)(v),
                        y = yield Ci(m, { oobCode: f }),
                        A = y.requestType;
                    switch ((j(A, m, "internal-error"), A)) {
                        case "EMAIL_SIGNIN":
                            break;
                        case "VERIFY_AND_CHANGE_EMAIL":
                            j(y.newEmail, m, "internal-error");
                            break;
                        case "REVERT_SECOND_FACTOR_ADDITION":
                            j(y.mfaInfo, m, "internal-error");
                        default:
                            j(y.email, m, "internal-error");
                    }
                    let C = null;
                    return (
                        y.mfaInfo &&
                            (C = Ct._fromServerResponse(Z(m), y.mfaInfo)),
                        {
                            data: {
                                email:
                                    ("VERIFY_AND_CHANGE_EMAIL" === y.requestType
                                        ? y.newEmail
                                        : y.email) || null,
                                previousEmail:
                                    ("VERIFY_AND_CHANGE_EMAIL" === y.requestType
                                        ? y.email
                                        : y.newEmail) || null,
                                multiFactorInfo: C,
                            },
                            operation: A,
                        }
                    );
                })).apply(this, arguments);
            }
            function ei() {
                return (ei = (0, p.Z)(function* (v, f) {
                    const { data: m } = yield bo((0, O.m9)(v), f);
                    return m.email;
                })).apply(this, arguments);
            }
            function ts() {
                return (ts = (0, p.Z)(function* (v, f, m) {
                    const y = Z(v),
                        A = yield Ba(y, {
                            returnSecureToken: !0,
                            email: f,
                            password: m,
                        }),
                        C = yield Gi._fromIdTokenResponse(y, "signIn", A);
                    return yield y._updateCurrentUser(C.user), C;
                })).apply(this, arguments);
            }
            function ns() {
                return (ns = (0, p.Z)(function* (v, f, m) {
                    const y = (0, O.m9)(v),
                        A = { requestType: "EMAIL_SIGNIN", email: f };
                    j(m.handleCodeInApp, y, "argument-error"),
                        m && St(y, A, m),
                        yield Gs(y, A);
                })).apply(this, arguments);
            }
            function mc() {
                return (mc = (0, p.Z)(function* (v, f, m) {
                    const y = (0, O.m9)(v),
                        A = qu.credentialWithLink(f, m || Be());
                    return (
                        j(
                            A._tenantId === (y.tenantId || null),
                            y,
                            "tenant-id-mismatch"
                        ),
                        Rt(y, A)
                    );
                })).apply(this, arguments);
            }
            function dy(v, f) {
                return Qu.apply(this, arguments);
            }
            function Qu() {
                return (Qu = (0, p.Z)(function* (v, f) {
                    return xt(
                        v,
                        "POST",
                        "/v1/accounts:createAuthUri",
                        kt(v, f)
                    );
                })).apply(this, arguments);
            }
            function yc() {
                return (yc = (0, p.Z)(function* (v, f) {
                    const y = {
                            identifier: f,
                            continueUri: ct() ? Be() : "http://localhost",
                        },
                        { signinMethods: A } = yield dy((0, O.m9)(v), y);
                    return A || [];
                })).apply(this, arguments);
            }
            function gh() {
                return (gh = (0, p.Z)(function* (v, f) {
                    const m = (0, O.m9)(v),
                        A = {
                            requestType: "VERIFY_EMAIL",
                            idToken: yield v.getIdToken(),
                        };
                    f && St(m.auth, A, f);
                    const { email: C } = yield ch(m.auth, A);
                    C !== v.email && (yield v.reload());
                })).apply(this, arguments);
            }
            function wc() {
                return (wc = (0, p.Z)(function* (v, f, m) {
                    const y = (0, O.m9)(v),
                        C = {
                            requestType: "VERIFY_AND_CHANGE_EMAIL",
                            idToken: yield v.getIdToken(),
                            newEmail: f,
                        };
                    m && St(y.auth, C, m);
                    const { email: H } = yield Di(y.auth, C);
                    H !== v.email && (yield v.reload());
                })).apply(this, arguments);
            }
            function hy(v, f) {
                return Ec.apply(this, arguments);
            }
            function Ec() {
                return (Ec = (0, p.Z)(function* (v, f) {
                    return xt(v, "POST", "/v1/accounts:update", f);
                })).apply(this, arguments);
            }
            function Ic() {
                return (Ic = (0, p.Z)(function* (
                    v,
                    { displayName: f, photoURL: m }
                ) {
                    if (void 0 === f && void 0 === m) return;
                    const y = (0, O.m9)(v),
                        C = {
                            idToken: yield y.getIdToken(),
                            displayName: f,
                            photoUrl: m,
                            returnSecureToken: !0,
                        },
                        H = yield gn(y, hy(y.auth, C));
                    (y.displayName = H.displayName || null),
                        (y.photoURL = H.photoUrl || null);
                    const re = y.providerData.find(
                        ({ providerId: Ge }) => "password" === Ge
                    );
                    re &&
                        ((re.displayName = y.displayName),
                        (re.photoURL = y.photoURL)),
                        yield y._updateTokensIfNecessary(H);
                })).apply(this, arguments);
            }
            function mh(v, f, m) {
                return Sr.apply(this, arguments);
            }
            function Sr() {
                return (Sr = (0, p.Z)(function* (v, f, m) {
                    const { auth: y } = v,
                        C = {
                            idToken: yield v.getIdToken(),
                            returnSecureToken: !0,
                        };
                    f && (C.email = f), m && (C.password = m);
                    const H = yield gn(v, La(y, C));
                    yield v._updateTokensIfNecessary(H, !0);
                })).apply(this, arguments);
            }
            class Rn {
                constructor(f, m, y = {}) {
                    (this.isNewUser = f),
                        (this.providerId = m),
                        (this.profile = y);
                }
            }
            class py extends Rn {
                constructor(f, m, y, A) {
                    super(f, m, y), (this.username = A);
                }
            }
            class gy extends Rn {
                constructor(f, m) {
                    super(f, "facebook.com", m);
                }
            }
            class WE extends py {
                constructor(f, m) {
                    super(
                        f,
                        "github.com",
                        m,
                        "string" == typeof m?.login ? m?.login : null
                    );
                }
            }
            class my extends Rn {
                constructor(f, m) {
                    super(f, "google.com", m);
                }
            }
            class Gp extends py {
                constructor(f, m, y) {
                    super(f, "twitter.com", m, y);
                }
            }
            function _y(v) {
                const { user: f, _tokenResponse: m } = v;
                return f.isAnonymous && !m
                    ? { providerId: null, isNewUser: !1, profile: null }
                    : (function Zs(v) {
                          var f, m;
                          if (!v) return null;
                          const { providerId: y } = v,
                              A = v.rawUserInfo
                                  ? JSON.parse(v.rawUserInfo)
                                  : {},
                              C =
                                  v.isNewUser ||
                                  "identitytoolkit#SignupNewUserResponse" ===
                                      v.kind;
                          if (!y && v?.idToken) {
                              const H =
                                  null ===
                                      (m =
                                          null === (f = qe(v.idToken)) ||
                                          void 0 === f
                                              ? void 0
                                              : f.firebase) || void 0 === m
                                      ? void 0
                                      : m.sign_in_provider;
                              if (H)
                                  return new Rn(
                                      C,
                                      "anonymous" !== H && "custom" !== H
                                          ? H
                                          : null
                                  );
                          }
                          if (!y) return null;
                          switch (y) {
                              case "facebook.com":
                                  return new gy(C, A);
                              case "github.com":
                                  return new WE(C, A);
                              case "google.com":
                                  return new my(C, A);
                              case "twitter.com":
                                  return new Gp(C, A, v.screenName || null);
                              case "custom":
                              case "anonymous":
                                  return new Rn(C, null);
                              default:
                                  return new Rn(C, y, A);
                          }
                      })(m);
            }
            class Ha {
                constructor(f, m) {
                    (this.type = f), (this.credential = m);
                }
                static _fromIdtoken(f) {
                    return new Ha("enroll", f);
                }
                static _fromMfaPendingCredential(f) {
                    return new Ha("signin", f);
                }
                toJSON() {
                    return {
                        multiFactorSession: {
                            ["enroll" === this.type
                                ? "idToken"
                                : "pendingCredential"]: this.credential,
                        },
                    };
                }
                static fromJSON(f) {
                    var m, y;
                    if (f?.multiFactorSession) {
                        if (
                            null !== (m = f.multiFactorSession) &&
                            void 0 !== m &&
                            m.pendingCredential
                        )
                            return Ha._fromMfaPendingCredential(
                                f.multiFactorSession.pendingCredential
                            );
                        if (
                            null !== (y = f.multiFactorSession) &&
                            void 0 !== y &&
                            y.idToken
                        )
                            return Ha._fromIdtoken(
                                f.multiFactorSession.idToken
                            );
                    }
                    return null;
                }
            }
            class $a {
                constructor(f, m, y) {
                    (this.session = f),
                        (this.hints = m),
                        (this.signInResolver = y);
                }
                static _fromError(f, m) {
                    const y = Z(f),
                        A = m.customData._serverResponse,
                        C = (A.mfaInfo || []).map((re) =>
                            Ct._fromServerResponse(y, re)
                        );
                    j(A.mfaPendingCredential, y, "internal-error");
                    const H = Ha._fromMfaPendingCredential(
                        A.mfaPendingCredential
                    );
                    return new $a(
                        H,
                        C,
                        (function () {
                            var re = (0, p.Z)(function* (Ge) {
                                const it = yield Ge._process(y, H);
                                delete A.mfaInfo, delete A.mfaPendingCredential;
                                const At = Object.assign(Object.assign({}, A), {
                                    idToken: it.idToken,
                                    refreshToken: it.refreshToken,
                                });
                                switch (m.operationType) {
                                    case "signIn":
                                        const vt =
                                            yield Gi._fromIdTokenResponse(
                                                y,
                                                m.operationType,
                                                At
                                            );
                                        return (
                                            yield y._updateCurrentUser(vt.user),
                                            vt
                                        );
                                    case "reauthenticate":
                                        return (
                                            j(m.user, y, "internal-error"),
                                            Gi._forOperation(
                                                m.user,
                                                m.operationType,
                                                At
                                            )
                                        );
                                    default:
                                        Ae(y, "internal-error");
                                }
                            });
                            return function (Ge) {
                                return re.apply(this, arguments);
                            };
                        })()
                    );
                }
                resolveSignIn(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        return m.signInResolver(f);
                    })();
                }
            }
            function yy(v, f) {
                return xt(
                    v,
                    "POST",
                    "/v2/accounts/mfaEnrollment:start",
                    kt(v, f)
                );
            }
            class vy {
                constructor(f) {
                    (this.user = f),
                        (this.enrolledFactors = []),
                        f._onReload((m) => {
                            m.mfaInfo &&
                                (this.enrolledFactors = m.mfaInfo.map((y) =>
                                    Ct._fromServerResponse(f.auth, y)
                                ));
                        });
                }
                static _fromUser(f) {
                    return new vy(f);
                }
                getSession() {
                    var f = this;
                    return (0, p.Z)(function* () {
                        return Ha._fromIdtoken(yield f.user.getIdToken());
                    })();
                }
                enroll(f, m) {
                    var y = this;
                    return (0, p.Z)(function* () {
                        const A = f,
                            C = yield y.getSession(),
                            H = yield gn(y.user, A._process(y.user.auth, C, m));
                        return (
                            yield y.user._updateTokensIfNecessary(H),
                            y.user.reload()
                        );
                    })();
                }
                unenroll(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        var y;
                        const A = "string" == typeof f ? f : f.uid,
                            C = yield m.user.getIdToken(),
                            H = yield gn(
                                m.user,
                                (function KE(v, f) {
                                    return xt(
                                        v,
                                        "POST",
                                        "/v2/accounts/mfaEnrollment:withdraw",
                                        kt(v, f)
                                    );
                                })(m.user.auth, {
                                    idToken: C,
                                    mfaEnrollmentId: A,
                                })
                            );
                        (m.enrolledFactors = m.enrolledFactors.filter(
                            ({ uid: re }) => re !== A
                        )),
                            yield m.user._updateTokensIfNecessary(H);
                        try {
                            yield m.user.reload();
                        } catch (re) {
                            if (
                                "auth/user-token-expired" !==
                                (null === (y = re) || void 0 === y
                                    ? void 0
                                    : y.code)
                            )
                                throw re;
                        }
                    })();
                }
            }
            const Ju = new WeakMap(),
                Xu = "__sak";
            class Dc {
                constructor(f, m) {
                    (this.storageRetriever = f), (this.type = m);
                }
                _isAvailable() {
                    try {
                        return this.storage
                            ? (this.storage.setItem(Xu, "1"),
                              this.storage.removeItem(Xu),
                              Promise.resolve(!0))
                            : Promise.resolve(!1);
                    } catch {
                        return Promise.resolve(!1);
                    }
                }
                _set(f, m) {
                    return (
                        this.storage.setItem(f, JSON.stringify(m)),
                        Promise.resolve()
                    );
                }
                _get(f) {
                    const m = this.storage.getItem(f);
                    return Promise.resolve(m ? JSON.parse(m) : null);
                }
                _remove(f) {
                    return this.storage.removeItem(f), Promise.resolve();
                }
                get storage() {
                    return this.storageRetriever();
                }
            }
            const To = (() => {
                    class v extends Dc {
                        constructor() {
                            super(() => window.localStorage, "LOCAL"),
                                (this.boundEventHandler = (m, y) =>
                                    this.onStorageEvent(m, y)),
                                (this.listeners = {}),
                                (this.localCache = {}),
                                (this.pollTimer = null),
                                (this.safariLocalStorageNotSynced =
                                    (function Ey() {
                                        const v = (0, O.z$)();
                                        return ze(v) || Ut(v);
                                    })() &&
                                    (function $s() {
                                        try {
                                            return !(
                                                !window || window === window.top
                                            );
                                        } catch {
                                            return !1;
                                        }
                                    })()),
                                (this.fallbackToPolling = In()),
                                (this._shouldAllowMigration = !0);
                        }
                        forAllChangedKeys(m) {
                            for (const y of Object.keys(this.listeners)) {
                                const A = this.storage.getItem(y),
                                    C = this.localCache[y];
                                A !== C && m(y, C, A);
                            }
                        }
                        onStorageEvent(m, y = !1) {
                            if (!m.key)
                                return void this.forAllChangedKeys(
                                    (re, Ge, it) => {
                                        this.notifyListeners(re, it);
                                    }
                                );
                            const A = m.key;
                            if (
                                (y ? this.detachListener() : this.stopPolling(),
                                this.safariLocalStorageNotSynced)
                            ) {
                                const re = this.storage.getItem(A);
                                if (m.newValue !== re)
                                    null !== m.newValue
                                        ? this.storage.setItem(A, m.newValue)
                                        : this.storage.removeItem(A);
                                else if (
                                    this.localCache[A] === m.newValue &&
                                    !y
                                )
                                    return;
                            }
                            const C = () => {
                                    const re = this.storage.getItem(A);
                                    (!y && this.localCache[A] === re) ||
                                        this.notifyListeners(A, re);
                                },
                                H = this.storage.getItem(A);
                            !(function Vn() {
                                return (
                                    (0, O.w1)() && 10 === document.documentMode
                                );
                            })() ||
                            H === m.newValue ||
                            m.newValue === m.oldValue
                                ? C()
                                : setTimeout(C, 10);
                        }
                        notifyListeners(m, y) {
                            this.localCache[m] = y;
                            const A = this.listeners[m];
                            if (A)
                                for (const C of Array.from(A))
                                    C(y && JSON.parse(y));
                        }
                        startPolling() {
                            this.stopPolling(),
                                (this.pollTimer = setInterval(() => {
                                    this.forAllChangedKeys((m, y, A) => {
                                        this.onStorageEvent(
                                            new StorageEvent("storage", {
                                                key: m,
                                                oldValue: y,
                                                newValue: A,
                                            }),
                                            !0
                                        );
                                    });
                                }, 1e3));
                        }
                        stopPolling() {
                            this.pollTimer &&
                                (clearInterval(this.pollTimer),
                                (this.pollTimer = null));
                        }
                        attachListener() {
                            window.addEventListener(
                                "storage",
                                this.boundEventHandler
                            );
                        }
                        detachListener() {
                            window.removeEventListener(
                                "storage",
                                this.boundEventHandler
                            );
                        }
                        _addListener(m, y) {
                            0 === Object.keys(this.listeners).length &&
                                (this.fallbackToPolling
                                    ? this.startPolling()
                                    : this.attachListener()),
                                this.listeners[m] ||
                                    ((this.listeners[m] = new Set()),
                                    (this.localCache[m] =
                                        this.storage.getItem(m))),
                                this.listeners[m].add(y);
                        }
                        _removeListener(m, y) {
                            this.listeners[m] &&
                                (this.listeners[m].delete(y),
                                0 === this.listeners[m].size &&
                                    delete this.listeners[m]),
                                0 === Object.keys(this.listeners).length &&
                                    (this.detachListener(), this.stopPolling());
                        }
                        _set(m, y) {
                            var A = () => super._set,
                                C = this;
                            return (0, p.Z)(function* () {
                                yield A().call(C, m, y),
                                    (C.localCache[m] = JSON.stringify(y));
                            })();
                        }
                        _get(m) {
                            var y = () => super._get,
                                A = this;
                            return (0, p.Z)(function* () {
                                const C = yield y().call(A, m);
                                return (A.localCache[m] = JSON.stringify(C)), C;
                            })();
                        }
                        _remove(m) {
                            var y = () => super._remove,
                                A = this;
                            return (0, p.Z)(function* () {
                                yield y().call(A, m), delete A.localCache[m];
                            })();
                        }
                    }
                    return (v.type = "LOCAL"), v;
                })(),
                Ms = (() => {
                    class v extends Dc {
                        constructor() {
                            super(() => window.sessionStorage, "SESSION");
                        }
                        _addListener(m, y) {}
                        _removeListener(m, y) {}
                    }
                    return (v.type = "SESSION"), v;
                })();
            let by = (() => {
                class v {
                    constructor(m) {
                        (this.eventTarget = m),
                            (this.handlersMap = {}),
                            (this.boundEventHandler =
                                this.handleEvent.bind(this));
                    }
                    static _getInstance(m) {
                        const y = this.receivers.find((C) =>
                            C.isListeningto(m)
                        );
                        if (y) return y;
                        const A = new v(m);
                        return this.receivers.push(A), A;
                    }
                    isListeningto(m) {
                        return this.eventTarget === m;
                    }
                    handleEvent(m) {
                        var y = this;
                        return (0, p.Z)(function* () {
                            const A = m,
                                { eventId: C, eventType: H, data: re } = A.data,
                                Ge = y.handlersMap[H];
                            if (!Ge?.size) return;
                            A.ports[0].postMessage({
                                status: "ack",
                                eventId: C,
                                eventType: H,
                            });
                            const it = Array.from(Ge).map(
                                    (function () {
                                        var vt = (0, p.Z)(function* (xr) {
                                            return xr(A.origin, re);
                                        });
                                        return function (xr) {
                                            return vt.apply(this, arguments);
                                        };
                                    })()
                                ),
                                At = yield (function ZE(v) {
                                    return Promise.all(
                                        v.map(
                                            (function () {
                                                var f = (0, p.Z)(function* (m) {
                                                    try {
                                                        return {
                                                            fulfilled: !0,
                                                            value: yield m,
                                                        };
                                                    } catch (y) {
                                                        return {
                                                            fulfilled: !1,
                                                            reason: y,
                                                        };
                                                    }
                                                });
                                                return function (m) {
                                                    return f.apply(
                                                        this,
                                                        arguments
                                                    );
                                                };
                                            })()
                                        )
                                    );
                                })(it);
                            A.ports[0].postMessage({
                                status: "done",
                                eventId: C,
                                eventType: H,
                                response: At,
                            });
                        })();
                    }
                    _subscribe(m, y) {
                        0 === Object.keys(this.handlersMap).length &&
                            this.eventTarget.addEventListener(
                                "message",
                                this.boundEventHandler
                            ),
                            this.handlersMap[m] ||
                                (this.handlersMap[m] = new Set()),
                            this.handlersMap[m].add(y);
                    }
                    _unsubscribe(m, y) {
                        this.handlersMap[m] &&
                            y &&
                            this.handlersMap[m].delete(y),
                            (!y || 0 === this.handlersMap[m].size) &&
                                delete this.handlersMap[m],
                            0 === Object.keys(this.handlersMap).length &&
                                this.eventTarget.removeEventListener(
                                    "message",
                                    this.boundEventHandler
                                );
                    }
                }
                return (v.receivers = []), v;
            })();
            function dn(v = "", f = 10) {
                let m = "";
                for (let y = 0; y < f; y++) m += Math.floor(10 * Math.random());
                return v + m;
            }
            class rs {
                constructor(f) {
                    (this.target = f), (this.handlers = new Set());
                }
                removeMessageHandler(f) {
                    f.messageChannel &&
                        (f.messageChannel.port1.removeEventListener(
                            "message",
                            f.onMessage
                        ),
                        f.messageChannel.port1.close()),
                        this.handlers.delete(f);
                }
                _send(f, m, y = 50) {
                    var A = this;
                    return (0, p.Z)(function* () {
                        const C =
                            typeof MessageChannel < "u"
                                ? new MessageChannel()
                                : null;
                        if (!C) throw new Error("connection_unavailable");
                        let H, re;
                        return new Promise((Ge, it) => {
                            const At = dn("", 20);
                            C.port1.start();
                            const vt = setTimeout(() => {
                                it(new Error("unsupported_event"));
                            }, y);
                            (re = {
                                messageChannel: C,
                                onMessage(xr) {
                                    const tr = xr;
                                    if (tr.data.eventId === At)
                                        switch (tr.data.status) {
                                            case "ack":
                                                clearTimeout(vt),
                                                    (H = setTimeout(() => {
                                                        it(
                                                            new Error("timeout")
                                                        );
                                                    }, 3e3));
                                                break;
                                            case "done":
                                                clearTimeout(H),
                                                    Ge(tr.data.response);
                                                break;
                                            default:
                                                clearTimeout(vt),
                                                    clearTimeout(H),
                                                    it(
                                                        new Error(
                                                            "invalid_response"
                                                        )
                                                    );
                                        }
                                },
                            }),
                                A.handlers.add(re),
                                C.port1.addEventListener(
                                    "message",
                                    re.onMessage
                                ),
                                A.target.postMessage(
                                    { eventType: f, eventId: At, data: m },
                                    [C.port2]
                                );
                        }).finally(() => {
                            re && A.removeMessageHandler(re);
                        });
                    })();
                }
            }
            function An() {
                return window;
            }
            function da() {
                return (
                    typeof An().WorkerGlobalScope < "u" &&
                    "function" == typeof An().importScripts
                );
            }
            function Ga() {
                return (Ga = (0, p.Z)(function* () {
                    if (!navigator?.serviceWorker) return null;
                    try {
                        return (yield navigator.serviceWorker.ready).active;
                    } catch {
                        return null;
                    }
                })).apply(this, arguments);
            }
            const Ao = "firebaseLocalStorageDb",
                Mt = "firebaseLocalStorage",
                wh = "fbase_key";
            class Wa {
                constructor(f) {
                    this.request = f;
                }
                toPromise() {
                    return new Promise((f, m) => {
                        this.request.addEventListener("success", () => {
                            f(this.request.result);
                        }),
                            this.request.addEventListener("error", () => {
                                m(this.request.error);
                            });
                    });
                }
            }
            function tl(v, f) {
                return v
                    .transaction([Mt], f ? "readwrite" : "readonly")
                    .objectStore(Mt);
            }
            function ha() {
                const v = indexedDB.open(Ao, 1);
                return new Promise((f, m) => {
                    v.addEventListener("error", () => {
                        m(v.error);
                    }),
                        v.addEventListener("upgradeneeded", () => {
                            const y = v.result;
                            try {
                                y.createObjectStore(Mt, { keyPath: wh });
                            } catch (A) {
                                m(A);
                            }
                        }),
                        v.addEventListener(
                            "success",
                            (0, p.Z)(function* () {
                                const y = v.result;
                                y.objectStoreNames.contains(Mt)
                                    ? f(y)
                                    : (y.close(),
                                      yield (function nl() {
                                          const v =
                                              indexedDB.deleteDatabase(Ao);
                                          return new Wa(v).toPromise();
                                      })(),
                                      f(yield ha()));
                            })
                        );
                });
            }
            function Eh(v, f, m) {
                return Ns.apply(this, arguments);
            }
            function Ns() {
                return (Ns = (0, p.Z)(function* (v, f, m) {
                    const y = tl(v, !0).put({ [wh]: f, value: m });
                    return new Wa(y).toPromise();
                })).apply(this, arguments);
            }
            function xo() {
                return (xo = (0, p.Z)(function* (v, f) {
                    const m = tl(v, !1).get(f),
                        y = yield new Wa(m).toPromise();
                    return void 0 === y ? null : y.value;
                })).apply(this, arguments);
            }
            function Ih(v, f) {
                const m = tl(v, !0).delete(f);
                return new Wa(m).toPromise();
            }
            const Ys = (() => {
                class v {
                    constructor() {
                        (this.type = "LOCAL"),
                            (this._shouldAllowMigration = !0),
                            (this.listeners = {}),
                            (this.localCache = {}),
                            (this.pollTimer = null),
                            (this.pendingWrites = 0),
                            (this.receiver = null),
                            (this.sender = null),
                            (this.serviceWorkerReceiverAvailable = !1),
                            (this.activeServiceWorker = null),
                            (this._workerInitializationPromise =
                                this.initializeServiceWorkerMessaging().then(
                                    () => {},
                                    () => {}
                                ));
                    }
                    _openDb() {
                        var m = this;
                        return (0, p.Z)(function* () {
                            return m.db || (m.db = yield ha()), m.db;
                        })();
                    }
                    _withRetries(m) {
                        var y = this;
                        return (0, p.Z)(function* () {
                            let A = 0;
                            for (;;)
                                try {
                                    const C = yield y._openDb();
                                    return yield m(C);
                                } catch (C) {
                                    if (A++ > 3) throw C;
                                    y.db && (y.db.close(), (y.db = void 0));
                                }
                        })();
                    }
                    initializeServiceWorkerMessaging() {
                        var m = this;
                        return (0, p.Z)(function* () {
                            return da()
                                ? m.initializeReceiver()
                                : m.initializeSender();
                        })();
                    }
                    initializeReceiver() {
                        var m = this;
                        return (0, p.Z)(function* () {
                            (m.receiver = by._getInstance(
                                (function So() {
                                    return da() ? self : null;
                                })()
                            )),
                                m.receiver._subscribe(
                                    "keyChanged",
                                    (function () {
                                        var y = (0, p.Z)(function* (A, C) {
                                            return {
                                                keyProcessed:
                                                    (yield m._poll()).includes(
                                                        C.key
                                                    ),
                                            };
                                        });
                                        return function (A, C) {
                                            return y.apply(this, arguments);
                                        };
                                    })()
                                ),
                                m.receiver._subscribe(
                                    "ping",
                                    (function () {
                                        var y = (0, p.Z)(function* (A, C) {
                                            return ["keyChanged"];
                                        });
                                        return function (A, C) {
                                            return y.apply(this, arguments);
                                        };
                                    })()
                                );
                        })();
                    }
                    initializeSender() {
                        var m = this;
                        return (0, p.Z)(function* () {
                            var y, A;
                            if (
                                ((m.activeServiceWorker = yield (function vh() {
                                    return Ga.apply(this, arguments);
                                })()),
                                !m.activeServiceWorker)
                            )
                                return;
                            m.sender = new rs(m.activeServiceWorker);
                            const C = yield m.sender._send("ping", {}, 800);
                            !C ||
                                ((null === (y = C[0]) || void 0 === y
                                    ? void 0
                                    : y.fulfilled) &&
                                    (null === (A = C[0]) || void 0 === A
                                        ? void 0
                                        : A.value.includes("keyChanged")) &&
                                    (m.serviceWorkerReceiverAvailable = !0));
                        })();
                    }
                    notifyServiceWorker(m) {
                        var y = this;
                        return (0, p.Z)(function* () {
                            if (
                                y.sender &&
                                y.activeServiceWorker &&
                                (function Tc() {
                                    var v;
                                    return (
                                        (null ===
                                            (v = navigator?.serviceWorker) ||
                                        void 0 === v
                                            ? void 0
                                            : v.controller) || null
                                    );
                                })() === y.activeServiceWorker
                            )
                                try {
                                    yield y.sender._send(
                                        "keyChanged",
                                        { key: m },
                                        y.serviceWorkerReceiverAvailable
                                            ? 800
                                            : 50
                                    );
                                } catch {}
                        })();
                    }
                    _isAvailable() {
                        return (0, p.Z)(function* () {
                            try {
                                if (!indexedDB) return !1;
                                const m = yield ha();
                                return (
                                    yield Eh(m, Xu, "1"), yield Ih(m, Xu), !0
                                );
                            } catch {}
                            return !1;
                        })();
                    }
                    _withPendingWrite(m) {
                        var y = this;
                        return (0, p.Z)(function* () {
                            y.pendingWrites++;
                            try {
                                yield m();
                            } finally {
                                y.pendingWrites--;
                            }
                        })();
                    }
                    _set(m, y) {
                        var A = this;
                        return (0, p.Z)(function* () {
                            return A._withPendingWrite(
                                (0, p.Z)(function* () {
                                    return (
                                        yield A._withRetries((C) =>
                                            Eh(C, m, y)
                                        ),
                                        (A.localCache[m] = y),
                                        A.notifyServiceWorker(m)
                                    );
                                })
                            );
                        })();
                    }
                    _get(m) {
                        var y = this;
                        return (0, p.Z)(function* () {
                            const A = yield y._withRetries((C) =>
                                (function is(v, f) {
                                    return xo.apply(this, arguments);
                                })(C, m)
                            );
                            return (y.localCache[m] = A), A;
                        })();
                    }
                    _remove(m) {
                        var y = this;
                        return (0, p.Z)(function* () {
                            return y._withPendingWrite(
                                (0, p.Z)(function* () {
                                    return (
                                        yield y._withRetries((A) => Ih(A, m)),
                                        delete y.localCache[m],
                                        y.notifyServiceWorker(m)
                                    );
                                })
                            );
                        })();
                    }
                    _poll() {
                        var m = this;
                        return (0, p.Z)(function* () {
                            const y = yield m._withRetries((H) => {
                                const re = tl(H, !1).getAll();
                                return new Wa(re).toPromise();
                            });
                            if (!y) return [];
                            if (0 !== m.pendingWrites) return [];
                            const A = [],
                                C = new Set();
                            for (const { fbase_key: H, value: re } of y)
                                C.add(H),
                                    JSON.stringify(m.localCache[H]) !==
                                        JSON.stringify(re) &&
                                        (m.notifyListeners(H, re), A.push(H));
                            for (const H of Object.keys(m.localCache))
                                m.localCache[H] &&
                                    !C.has(H) &&
                                    (m.notifyListeners(H, null), A.push(H));
                            return A;
                        })();
                    }
                    notifyListeners(m, y) {
                        this.localCache[m] = y;
                        const A = this.listeners[m];
                        if (A) for (const C of Array.from(A)) C(y);
                    }
                    startPolling() {
                        var m = this;
                        this.stopPolling(),
                            (this.pollTimer = setInterval(
                                (0, p.Z)(function* () {
                                    return m._poll();
                                }),
                                800
                            ));
                    }
                    stopPolling() {
                        this.pollTimer &&
                            (clearInterval(this.pollTimer),
                            (this.pollTimer = null));
                    }
                    _addListener(m, y) {
                        0 === Object.keys(this.listeners).length &&
                            this.startPolling(),
                            this.listeners[m] ||
                                ((this.listeners[m] = new Set()), this._get(m)),
                            this.listeners[m].add(y);
                    }
                    _removeListener(m, y) {
                        this.listeners[m] &&
                            (this.listeners[m].delete(y),
                            0 === this.listeners[m].size &&
                                delete this.listeners[m]),
                            0 === Object.keys(this.listeners).length &&
                                this.stopPolling();
                    }
                }
                return (v.type = "LOCAL"), v;
            })();
            function bh(v, f) {
                return xt(v, "POST", "/v2/accounts/mfaSignIn:start", kt(v, f));
            }
            function Gn() {
                return (Gn = (0, p.Z)(function* (v) {
                    return (
                        (yield xt(v, "GET", "/v1/recaptchaParams"))
                            .recaptchaSiteKey || ""
                    );
                })).apply(this, arguments);
            }
            function Sc(v) {
                return new Promise((f, m) => {
                    const y = document.createElement("script");
                    y.setAttribute("src", v),
                        (y.onload = f),
                        (y.onerror = (A) => {
                            const C = ve("internal-error");
                            (C.customData = A), m(C);
                        }),
                        (y.type = "text/javascript"),
                        (y.charset = "UTF-8"),
                        (function Qs() {
                            var v, f;
                            return null !==
                                (f =
                                    null ===
                                        (v =
                                            document.getElementsByTagName(
                                                "head"
                                            )) || void 0 === v
                                        ? void 0
                                        : v[0]) && void 0 !== f
                                ? f
                                : document;
                        })().appendChild(y);
                });
            }
            function za(v) {
                return `__${v}${Math.floor(1e6 * Math.random())}`;
            }
            const mn = 1e12;
            class Yp {
                constructor(f) {
                    (this.auth = f),
                        (this.counter = mn),
                        (this._widgets = new Map());
                }
                render(f, m) {
                    const y = this.counter;
                    return (
                        this._widgets.set(
                            y,
                            new Sy(f, this.auth.name, m || {})
                        ),
                        this.counter++,
                        y
                    );
                }
                reset(f) {
                    var m;
                    const y = f || mn;
                    null === (m = this._widgets.get(y)) ||
                        void 0 === m ||
                        m.delete(),
                        this._widgets.delete(y);
                }
                getResponse(f) {
                    var m;
                    return (
                        (null === (m = this._widgets.get(f || mn)) ||
                        void 0 === m
                            ? void 0
                            : m.getResponse()) || ""
                    );
                }
                execute(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        var y;
                        return (
                            null === (y = m._widgets.get(f || mn)) ||
                                void 0 === y ||
                                y.execute(),
                            ""
                        );
                    })();
                }
            }
            class Sy {
                constructor(f, m, y) {
                    (this.params = y),
                        (this.timerId = null),
                        (this.deleted = !1),
                        (this.responseToken = null),
                        (this.clickHandler = () => {
                            this.execute();
                        });
                    const A =
                        "string" == typeof f ? document.getElementById(f) : f;
                    j(A, "argument-error", { appName: m }),
                        (this.container = A),
                        (this.isVisible = "invisible" !== this.params.size),
                        this.isVisible
                            ? this.execute()
                            : this.container.addEventListener(
                                  "click",
                                  this.clickHandler
                              );
                }
                getResponse() {
                    return this.checkIfDeleted(), this.responseToken;
                }
                delete() {
                    this.checkIfDeleted(),
                        (this.deleted = !0),
                        this.timerId &&
                            (clearTimeout(this.timerId), (this.timerId = null)),
                        this.container.removeEventListener(
                            "click",
                            this.clickHandler
                        );
                }
                execute() {
                    this.checkIfDeleted(),
                        !this.timerId &&
                            (this.timerId = window.setTimeout(() => {
                                this.responseToken = (function Ay(v) {
                                    const f = [],
                                        m =
                                            "1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
                                    for (let y = 0; y < v; y++)
                                        f.push(
                                            m.charAt(
                                                Math.floor(
                                                    Math.random() * m.length
                                                )
                                            )
                                        );
                                    return f.join("");
                                })(50);
                                const { callback: f, "expired-callback": m } =
                                    this.params;
                                if (f)
                                    try {
                                        f(this.responseToken);
                                    } catch {}
                                this.timerId = window.setTimeout(() => {
                                    if (
                                        ((this.timerId = null),
                                        (this.responseToken = null),
                                        m)
                                    )
                                        try {
                                            m();
                                        } catch {}
                                    this.isVisible && this.execute();
                                }, 6e4);
                            }, 500));
                }
                checkIfDeleted() {
                    if (this.deleted)
                        throw new Error("reCAPTCHA mock was already deleted!");
                }
            }
            const Dh = za("rcb"),
                xy = new rn(3e4, 6e4);
            class Ry {
                constructor() {
                    var f;
                    (this.hostLanguage = ""),
                        (this.counter = 0),
                        (this.librarySeparatelyLoaded = !(
                            null === (f = An().grecaptcha) ||
                            void 0 === f ||
                            !f.render
                        ));
                }
                load(f, m = "") {
                    return (
                        j(
                            (function qa(v) {
                                return (
                                    v.length <= 6 &&
                                    /^\s*[a-zA-Z0-9\-]*\s*$/.test(v)
                                );
                            })(m),
                            f,
                            "argument-error"
                        ),
                        this.shouldResolveImmediately(m)
                            ? Promise.resolve(An().grecaptcha)
                            : new Promise((y, A) => {
                                  const C = An().setTimeout(() => {
                                      A(ve(f, "network-request-failed"));
                                  }, xy.get());
                                  (An()[Dh] = () => {
                                      An().clearTimeout(C), delete An()[Dh];
                                      const re = An().grecaptcha;
                                      if (!re)
                                          return void A(
                                              ve(f, "internal-error")
                                          );
                                      const Ge = re.render;
                                      (re.render = (it, At) => {
                                          const vt = Ge(it, At);
                                          return this.counter++, vt;
                                      }),
                                          (this.hostLanguage = m),
                                          y(re);
                                  }),
                                      Sc(
                                          `https://www.google.com/recaptcha/api.js??${(0,
                                          O.xO)({
                                              onload: Dh,
                                              render: "explicit",
                                              hl: m,
                                          })}`
                                      ).catch(() => {
                                          clearTimeout(C),
                                              A(ve(f, "internal-error"));
                                      });
                              })
                    );
                }
                clearedOneInstance() {
                    this.counter--;
                }
                shouldResolveImmediately(f) {
                    var m;
                    return (
                        !(
                            null === (m = An().grecaptcha) ||
                            void 0 === m ||
                            !m.render
                        ) &&
                        (f === this.hostLanguage ||
                            this.counter > 0 ||
                            this.librarySeparatelyLoaded)
                    );
                }
            }
            class My {
                load(f) {
                    return (0, p.Z)(function* () {
                        return new Yp(f);
                    })();
                }
                clearedOneInstance() {}
            }
            const Qp = "recaptcha",
                wr = { theme: "light", type: "image" };
            class Ac {
                constructor(f, m = Object.assign({}, wr), y) {
                    (this.parameters = m),
                        (this.type = Qp),
                        (this.destroyed = !1),
                        (this.widgetId = null),
                        (this.tokenChangeListeners = new Set()),
                        (this.renderPromise = null),
                        (this.recaptcha = null),
                        (this.auth = Z(y)),
                        (this.isInvisible =
                            "invisible" === this.parameters.size),
                        j(
                            typeof document < "u",
                            this.auth,
                            "operation-not-supported-in-this-environment"
                        );
                    const A =
                        "string" == typeof f ? document.getElementById(f) : f;
                    j(A, this.auth, "argument-error"),
                        (this.container = A),
                        (this.parameters.callback = this.makeTokenCallback(
                            this.parameters.callback
                        )),
                        (this._recaptchaLoader = this.auth.settings
                            .appVerificationDisabledForTesting
                            ? new My()
                            : new Ry()),
                        this.validateStartingState();
                }
                verify() {
                    var f = this;
                    return (0, p.Z)(function* () {
                        f.assertNotDestroyed();
                        const m = yield f.render(),
                            y = f.getAssertedRecaptcha();
                        return (
                            y.getResponse(m) ||
                            new Promise((C) => {
                                const H = (re) => {
                                    !re ||
                                        (f.tokenChangeListeners.delete(H),
                                        C(re));
                                };
                                f.tokenChangeListeners.add(H),
                                    f.isInvisible && y.execute(m);
                            })
                        );
                    })();
                }
                render() {
                    try {
                        this.assertNotDestroyed();
                    } catch (f) {
                        return Promise.reject(f);
                    }
                    return (
                        this.renderPromise ||
                            (this.renderPromise =
                                this.makeRenderPromise().catch((f) => {
                                    throw ((this.renderPromise = null), f);
                                })),
                        this.renderPromise
                    );
                }
                _reset() {
                    this.assertNotDestroyed(),
                        null !== this.widgetId &&
                            this.getAssertedRecaptcha().reset(this.widgetId);
                }
                clear() {
                    this.assertNotDestroyed(),
                        (this.destroyed = !0),
                        this._recaptchaLoader.clearedOneInstance(),
                        this.isInvisible ||
                            this.container.childNodes.forEach((f) => {
                                this.container.removeChild(f);
                            });
                }
                validateStartingState() {
                    j(!this.parameters.sitekey, this.auth, "argument-error"),
                        j(
                            this.isInvisible || !this.container.hasChildNodes(),
                            this.auth,
                            "argument-error"
                        ),
                        j(
                            typeof document < "u",
                            this.auth,
                            "operation-not-supported-in-this-environment"
                        );
                }
                makeTokenCallback(f) {
                    return (m) => {
                        if (
                            (this.tokenChangeListeners.forEach((y) => y(m)),
                            "function" == typeof f)
                        )
                            f(m);
                        else if ("string" == typeof f) {
                            const y = An()[f];
                            "function" == typeof y && y(m);
                        }
                    };
                }
                assertNotDestroyed() {
                    j(!this.destroyed, this.auth, "internal-error");
                }
                makeRenderPromise() {
                    var f = this;
                    return (0, p.Z)(function* () {
                        if ((yield f.init(), !f.widgetId)) {
                            let m = f.container;
                            if (!f.isInvisible) {
                                const y = document.createElement("div");
                                m.appendChild(y), (m = y);
                            }
                            f.widgetId = f
                                .getAssertedRecaptcha()
                                .render(m, f.parameters);
                        }
                        return f.widgetId;
                    })();
                }
                init() {
                    var f = this;
                    return (0, p.Z)(function* () {
                        j(ct() && !da(), f.auth, "internal-error"),
                            yield (function Ka() {
                                let v = null;
                                return new Promise((f) => {
                                    "complete" !== document.readyState
                                        ? ((v = () => f()),
                                          window.addEventListener("load", v))
                                        : f();
                                }).catch((f) => {
                                    throw (
                                        (v &&
                                            window.removeEventListener(
                                                "load",
                                                v
                                            ),
                                        f)
                                    );
                                });
                            })(),
                            (f.recaptcha = yield f._recaptchaLoader.load(
                                f.auth,
                                f.auth.languageCode || void 0
                            ));
                        const m = yield (function fa(v) {
                            return Gn.apply(this, arguments);
                        })(f.auth);
                        j(m, f.auth, "internal-error"),
                            (f.parameters.sitekey = m);
                    })();
                }
                getAssertedRecaptcha() {
                    return (
                        j(this.recaptcha, this.auth, "internal-error"),
                        this.recaptcha
                    );
                }
            }
            class xc {
                constructor(f, m) {
                    (this.verificationId = f), (this.onConfirmation = m);
                }
                confirm(f) {
                    const m = Xi._fromVerification(this.verificationId, f);
                    return this.onConfirmation(m);
                }
            }
            function Ur() {
                return (Ur = (0, p.Z)(function* (v, f, m) {
                    const y = Z(v),
                        A = yield Ro(y, f, (0, O.m9)(m));
                    return new xc(A, (C) => Rt(y, C));
                })).apply(this, arguments);
            }
            function rl() {
                return (rl = (0, p.Z)(function* (v, f, m) {
                    const y = (0, O.m9)(v);
                    yield Si(!1, y, "phone");
                    const A = yield Ro(y.auth, f, (0, O.m9)(m));
                    return new xc(A, (C) => M(y, C));
                })).apply(this, arguments);
            }
            function Js() {
                return (Js = (0, p.Z)(function* (v, f, m) {
                    const y = (0, O.m9)(v),
                        A = yield Ro(y.auth, f, (0, O.m9)(m));
                    return new xc(A, (C) => ae(y, C));
                })).apply(this, arguments);
            }
            function Ro(v, f, m) {
                return Rc.apply(this, arguments);
            }
            function Rc() {
                return (Rc = (0, p.Z)(function* (v, f, m) {
                    var y;
                    const A = yield m.verify();
                    try {
                        let C;
                        if (
                            (j("string" == typeof A, v, "argument-error"),
                            j(m.type === Qp, v, "argument-error"),
                            (C = "string" == typeof f ? { phoneNumber: f } : f),
                            "session" in C)
                        ) {
                            const H = C.session;
                            if ("phoneNumber" in C)
                                return (
                                    j("enroll" === H.type, v, "internal-error"),
                                    (yield yy(v, {
                                        idToken: H.credential,
                                        phoneEnrollmentInfo: {
                                            phoneNumber: C.phoneNumber,
                                            recaptchaToken: A,
                                        },
                                    })).phoneSessionInfo.sessionInfo
                                );
                            {
                                j("signin" === H.type, v, "internal-error");
                                const re =
                                    (null === (y = C.multiFactorHint) ||
                                    void 0 === y
                                        ? void 0
                                        : y.uid) || C.multiFactorUid;
                                return (
                                    j(re, v, "missing-multi-factor-info"),
                                    (yield bh(v, {
                                        mfaPendingCredential: H.credential,
                                        mfaEnrollmentId: re,
                                        phoneSignInInfo: { recaptchaToken: A },
                                    })).phoneResponseInfo.sessionInfo
                                );
                            }
                        }
                        {
                            const { sessionInfo: H } = yield uc(v, {
                                phoneNumber: C.phoneNumber,
                                recaptchaToken: A,
                            });
                            return H;
                        }
                    } finally {
                        m._reset();
                    }
                })).apply(this, arguments);
            }
            function Sh() {
                return (Sh = (0, p.Z)(function* (v, f) {
                    yield Xr((0, O.m9)(v), f);
                })).apply(this, arguments);
            }
            let Ar = (() => {
                class v {
                    constructor(m) {
                        (this.providerId = v.PROVIDER_ID), (this.auth = Z(m));
                    }
                    verifyPhoneNumber(m, y) {
                        return Ro(this.auth, m, (0, O.m9)(y));
                    }
                    static credential(m, y) {
                        return Xi._fromVerification(m, y);
                    }
                    static credentialFromResult(m) {
                        return v.credentialFromTaggedObject(m);
                    }
                    static credentialFromError(m) {
                        return v.credentialFromTaggedObject(m.customData || {});
                    }
                    static credentialFromTaggedObject({ _tokenResponse: m }) {
                        if (!m) return null;
                        const { phoneNumber: y, temporaryProof: A } = m;
                        return y && A ? Xi._fromTokenResponse(y, A) : null;
                    }
                }
                return (
                    (v.PROVIDER_ID = "phone"),
                    (v.PHONE_SIGN_IN_METHOD = "phone"),
                    v
                );
            })();
            function ti(v, f) {
                return f
                    ? X(f)
                    : (j(v._popupRedirectResolver, v, "argument-error"),
                      v._popupRedirectResolver);
            }
            class Hr extends Dn {
                constructor(f) {
                    super("custom", "custom"), (this.params = f);
                }
                _getIdTokenResponse(f) {
                    return Ws(f, this._buildIdpRequest());
                }
                _linkToIdToken(f, m) {
                    return Ws(f, this._buildIdpRequest(m));
                }
                _getReauthenticationResolver(f) {
                    return Ws(f, this._buildIdpRequest());
                }
                _buildIdpRequest(f) {
                    const m = {
                        requestUri: this.params.requestUri,
                        sessionId: this.params.sessionId,
                        postBody: this.params.postBody,
                        tenantId: this.params.tenantId,
                        pendingToken: this.params.pendingToken,
                        returnSecureToken: !0,
                        returnIdpCredential: !0,
                    };
                    return f && (m.idToken = f), m;
                }
            }
            function eg(v) {
                return Co(v.auth, new Hr(v), v.bypassAuthState);
            }
            function sl(v) {
                const { auth: f, user: m } = v;
                return (
                    j(m, f, "internal-error"),
                    sa(m, new Hr(v), v.bypassAuthState)
                );
            }
            function QE(v) {
                return Mc.apply(this, arguments);
            }
            function Mc() {
                return (Mc = (0, p.Z)(function* (v) {
                    const { auth: f, user: m } = v;
                    return (
                        j(m, f, "internal-error"),
                        Xr(m, new Hr(v), v.bypassAuthState)
                    );
                })).apply(this, arguments);
            }
            class Nc {
                constructor(f, m, y, A, C = !1) {
                    (this.auth = f),
                        (this.resolver = y),
                        (this.user = A),
                        (this.bypassAuthState = C),
                        (this.pendingPromise = null),
                        (this.eventManager = null),
                        (this.filter = Array.isArray(m) ? m : [m]);
                }
                execute() {
                    var f = this;
                    return new Promise(
                        (function () {
                            var m = (0, p.Z)(function* (y, A) {
                                f.pendingPromise = { resolve: y, reject: A };
                                try {
                                    (f.eventManager =
                                        yield f.resolver._initialize(f.auth)),
                                        yield f.onExecution(),
                                        f.eventManager.registerConsumer(f);
                                } catch (C) {
                                    f.reject(C);
                                }
                            });
                            return function (y, A) {
                                return m.apply(this, arguments);
                            };
                        })()
                    );
                }
                onAuthEvent(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        const {
                            urlResponse: y,
                            sessionId: A,
                            postBody: C,
                            tenantId: H,
                            error: re,
                            type: Ge,
                        } = f;
                        if (re) return void m.reject(re);
                        const it = {
                            auth: m.auth,
                            requestUri: y,
                            sessionId: A,
                            tenantId: H || void 0,
                            postBody: C || void 0,
                            user: m.user,
                            bypassAuthState: m.bypassAuthState,
                        };
                        try {
                            m.resolve(yield m.getIdpTask(Ge)(it));
                        } catch (At) {
                            m.reject(At);
                        }
                    })();
                }
                onError(f) {
                    this.reject(f);
                }
                getIdpTask(f) {
                    switch (f) {
                        case "signInViaPopup":
                        case "signInViaRedirect":
                            return eg;
                        case "linkViaPopup":
                        case "linkViaRedirect":
                            return QE;
                        case "reauthViaPopup":
                        case "reauthViaRedirect":
                            return sl;
                        default:
                            Ae(this.auth, "internal-error");
                    }
                }
                resolve(f) {
                    Y(this.pendingPromise, "Pending promise was never set"),
                        this.pendingPromise.resolve(f),
                        this.unregisterAndCleanUp();
                }
                reject(f) {
                    Y(this.pendingPromise, "Pending promise was never set"),
                        this.pendingPromise.reject(f),
                        this.unregisterAndCleanUp();
                }
                unregisterAndCleanUp() {
                    this.eventManager &&
                        this.eventManager.unregisterConsumer(this),
                        (this.pendingPromise = null),
                        this.cleanUp();
                }
            }
            const Pc = new rn(2e3, 1e4);
            function ol() {
                return (ol = (0, p.Z)(function* (v, f, m) {
                    const y = Z(v);
                    We(v, f, Ti);
                    const A = ti(y, m);
                    return new ky(y, "signInViaPopup", f, A).executeNotNull();
                })).apply(this, arguments);
            }
            function tg() {
                return (tg = (0, p.Z)(function* (v, f, m) {
                    const y = (0, O.m9)(v);
                    We(y.auth, f, Ti);
                    const A = ti(y.auth, m);
                    return new ky(
                        y.auth,
                        "reauthViaPopup",
                        f,
                        A,
                        y
                    ).executeNotNull();
                })).apply(this, arguments);
            }
            function al() {
                return (al = (0, p.Z)(function* (v, f, m) {
                    const y = (0, O.m9)(v);
                    We(y.auth, f, Ti);
                    const A = ti(y.auth, m);
                    return new ky(
                        y.auth,
                        "linkViaPopup",
                        f,
                        A,
                        y
                    ).executeNotNull();
                })).apply(this, arguments);
            }
            let ky = (() => {
                class v extends Nc {
                    constructor(m, y, A, C, H) {
                        super(m, y, C, H),
                            (this.provider = A),
                            (this.authWindow = null),
                            (this.pollId = null),
                            v.currentPopupAction &&
                                v.currentPopupAction.cancel(),
                            (v.currentPopupAction = this);
                    }
                    executeNotNull() {
                        var m = this;
                        return (0, p.Z)(function* () {
                            const y = yield m.execute();
                            return j(y, m.auth, "internal-error"), y;
                        })();
                    }
                    onExecution() {
                        var m = this;
                        return (0, p.Z)(function* () {
                            Y(
                                1 === m.filter.length,
                                "Popup operations only handle one event"
                            );
                            const y = dn();
                            (m.authWindow = yield m.resolver._openPopup(
                                m.auth,
                                m.provider,
                                m.filter[0],
                                y
                            )),
                                (m.authWindow.associatedEvent = y),
                                m.resolver
                                    ._originValidation(m.auth)
                                    .catch((A) => {
                                        m.reject(A);
                                    }),
                                m.resolver._isIframeWebStorageSupported(
                                    m.auth,
                                    (A) => {
                                        A ||
                                            m.reject(
                                                ve(
                                                    m.auth,
                                                    "web-storage-unsupported"
                                                )
                                            );
                                    }
                                ),
                                m.pollUserCancellation();
                        })();
                    }
                    get eventId() {
                        var m;
                        return (
                            (null === (m = this.authWindow) || void 0 === m
                                ? void 0
                                : m.associatedEvent) || null
                        );
                    }
                    cancel() {
                        this.reject(ve(this.auth, "cancelled-popup-request"));
                    }
                    cleanUp() {
                        this.authWindow && this.authWindow.close(),
                            this.pollId && window.clearTimeout(this.pollId),
                            (this.authWindow = null),
                            (this.pollId = null),
                            (v.currentPopupAction = null);
                    }
                    pollUserCancellation() {
                        const m = () => {
                            var y, A;
                            this.pollId =
                                null !==
                                    (A =
                                        null === (y = this.authWindow) ||
                                        void 0 === y
                                            ? void 0
                                            : y.window) &&
                                void 0 !== A &&
                                A.closed
                                    ? window.setTimeout(() => {
                                          (this.pollId = null),
                                              this.reject(
                                                  ve(
                                                      this.auth,
                                                      "popup-closed-by-user"
                                                  )
                                              );
                                      }, 2e3)
                                    : window.setTimeout(m, Pc.get());
                        };
                        m();
                    }
                }
                return (v.currentPopupAction = null), v;
            })();
            const Za = new Map();
            class Ah extends Nc {
                constructor(f, m, y = !1) {
                    super(
                        f,
                        [
                            "signInViaRedirect",
                            "linkViaRedirect",
                            "reauthViaRedirect",
                            "unknown",
                        ],
                        m,
                        void 0,
                        y
                    ),
                        (this.eventId = null);
                }
                execute() {
                    var f = () => super.execute,
                        m = this;
                    return (0, p.Z)(function* () {
                        let y = Za.get(m.auth._key());
                        if (!y) {
                            try {
                                const C = (yield (function Oy(v, f) {
                                    return Oc.apply(this, arguments);
                                })(m.resolver, m.auth))
                                    ? yield f().call(m)
                                    : null;
                                y = () => Promise.resolve(C);
                            } catch (A) {
                                y = () => Promise.reject(A);
                            }
                            Za.set(m.auth._key(), y);
                        }
                        return (
                            m.bypassAuthState ||
                                Za.set(m.auth._key(), () =>
                                    Promise.resolve(null)
                                ),
                            y()
                        );
                    })();
                }
                onAuthEvent(f) {
                    var m = () => super.onAuthEvent,
                        y = this;
                    return (0, p.Z)(function* () {
                        if ("signInViaRedirect" === f.type)
                            return m().call(y, f);
                        if ("unknown" !== f.type) {
                            if (f.eventId) {
                                const A = yield y.auth._redirectUserForId(
                                    f.eventId
                                );
                                if (A) return (y.user = A), m().call(y, f);
                                y.resolve(null);
                            }
                        } else y.resolve(null);
                    })();
                }
                onExecution() {
                    return (0, p.Z)(function* () {})();
                }
                cleanUp() {}
            }
            function Oc() {
                return (Oc = (0, p.Z)(function* (v, f) {
                    const m = Un(f),
                        y = Ya(v);
                    if (!(yield y._isAvailable())) return !1;
                    const A = "true" === (yield y._get(m));
                    return yield y._remove(m), A;
                })).apply(this, arguments);
            }
            function xh(v, f) {
                return Fc.apply(this, arguments);
            }
            function Fc() {
                return (Fc = (0, p.Z)(function* (v, f) {
                    return Ya(v)._set(Un(f), "true");
                })).apply(this, arguments);
            }
            function Mo(v, f) {
                Za.set(v._key(), f);
            }
            function Ya(v) {
                return X(v._redirectPersistence);
            }
            function Un(v) {
                return ne("pendingRedirect", v.config.apiKey, v.name);
            }
            function ga() {
                return (ga = (0, p.Z)(function* (v, f, m) {
                    const y = Z(v);
                    We(v, f, Ti);
                    const A = ti(y, m);
                    return (
                        yield xh(A, y),
                        A._openRedirect(y, f, "signInViaRedirect")
                    );
                })).apply(this, arguments);
            }
            function Lc() {
                return (Lc = (0, p.Z)(function* (v, f, m) {
                    const y = (0, O.m9)(v);
                    We(y.auth, f, Ti);
                    const A = ti(y.auth, m);
                    yield xh(A, y.auth);
                    const C = yield Xa(y);
                    return A._openRedirect(y.auth, f, "reauthViaRedirect", C);
                })).apply(this, arguments);
            }
            function No() {
                return (No = (0, p.Z)(function* (v, f, m) {
                    const y = (0, O.m9)(v);
                    We(y.auth, f, Ti);
                    const A = ti(y.auth, m);
                    yield Si(!1, y, f.providerId), yield xh(A, y.auth);
                    const C = yield Xa(y);
                    return A._openRedirect(y.auth, f, "linkViaRedirect", C);
                })).apply(this, arguments);
            }
            function Xs() {
                return (Xs = (0, p.Z)(function* (v, f) {
                    return yield Z(v)._initializationPromise, Nh(v, f, !1);
                })).apply(this, arguments);
            }
            function Nh(v, f) {
                return Ph.apply(this, arguments);
            }
            function Ph() {
                return (Ph = (0, p.Z)(function* (v, f, m = !1) {
                    const y = Z(v),
                        A = ti(y, f),
                        H = yield new Ah(y, A, m).execute();
                    return (
                        H &&
                            !m &&
                            (delete H.user._redirectEventId,
                            yield y._persistUserIfCurrent(H.user),
                            yield y._setRedirectUser(null, f)),
                        H
                    );
                })).apply(this, arguments);
            }
            function Xa(v) {
                return ll.apply(this, arguments);
            }
            function ll() {
                return (ll = (0, p.Z)(function* (v) {
                    const f = dn(`${v.uid}:::`);
                    return (
                        (v._redirectEventId = f),
                        yield v.auth._setRedirectUser(v),
                        yield v.auth._persistUserIfCurrent(v),
                        f
                    );
                })).apply(this, arguments);
            }
            class eu {
                constructor(f) {
                    (this.auth = f),
                        (this.cachedEventUids = new Set()),
                        (this.consumers = new Set()),
                        (this.queuedRedirectEvent = null),
                        (this.hasHandledPotentialRedirect = !1),
                        (this.lastProcessedEventTime = Date.now());
                }
                registerConsumer(f) {
                    this.consumers.add(f),
                        this.queuedRedirectEvent &&
                            this.isEventForConsumer(
                                this.queuedRedirectEvent,
                                f
                            ) &&
                            (this.sendToConsumer(this.queuedRedirectEvent, f),
                            this.saveEventToCache(this.queuedRedirectEvent),
                            (this.queuedRedirectEvent = null));
                }
                unregisterConsumer(f) {
                    this.consumers.delete(f);
                }
                onEvent(f) {
                    if (this.hasEventBeenHandled(f)) return !1;
                    let m = !1;
                    return (
                        this.consumers.forEach((y) => {
                            this.isEventForConsumer(f, y) &&
                                ((m = !0),
                                this.sendToConsumer(f, y),
                                this.saveEventToCache(f));
                        }),
                        this.hasHandledPotentialRedirect ||
                            !(function hl(v) {
                                switch (v.type) {
                                    case "signInViaRedirect":
                                    case "linkViaRedirect":
                                    case "reauthViaRedirect":
                                        return !0;
                                    case "unknown":
                                        return ks(v);
                                    default:
                                        return !1;
                                }
                            })(f) ||
                            ((this.hasHandledPotentialRedirect = !0),
                            m || ((this.queuedRedirectEvent = f), (m = !0))),
                        m
                    );
                }
                sendToConsumer(f, m) {
                    var y;
                    if (f.error && !ks(f)) {
                        const A =
                            (null === (y = f.error.code) || void 0 === y
                                ? void 0
                                : y.split("auth/")[1]) || "internal-error";
                        m.onError(ve(this.auth, A));
                    } else m.onAuthEvent(f);
                }
                isEventForConsumer(f, m) {
                    const y =
                        null === m.eventId ||
                        (!!f.eventId && f.eventId === m.eventId);
                    return m.filter.includes(f.type) && y;
                }
                hasEventBeenHandled(f) {
                    return (
                        Date.now() - this.lastProcessedEventTime >= 6e5 &&
                            this.cachedEventUids.clear(),
                        this.cachedEventUids.has(dl(f))
                    );
                }
                saveEventToCache(f) {
                    this.cachedEventUids.add(dl(f)),
                        (this.lastProcessedEventTime = Date.now());
                }
            }
            function dl(v) {
                return [v.type, v.eventId, v.sessionId, v.tenantId]
                    .filter((f) => f)
                    .join("-");
            }
            function ks({ type: v, error: f }) {
                return "unknown" === v && "auth/no-auth-event" === f?.code;
            }
            function Bc(v) {
                return fl.apply(this, arguments);
            }
            function fl() {
                return (fl = (0, p.Z)(function* (v, f = {}) {
                    return xt(v, "GET", "/v1/projects", f);
                })).apply(this, arguments);
            }
            const rg = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,
                Fy = /^https?/;
            function kh() {
                return (kh = (0, p.Z)(function* (v) {
                    if (v.config.emulator) return;
                    const { authorizedDomains: f } = yield Bc(v);
                    for (const m of f)
                        try {
                            if (ig(m)) return;
                        } catch {}
                    Ae(v, "unauthorized-domain");
                })).apply(this, arguments);
            }
            function ig(v) {
                const f = Be(),
                    { protocol: m, hostname: y } = new URL(f);
                if (v.startsWith("chrome-extension://")) {
                    const H = new URL(v);
                    return "" === H.hostname && "" === y
                        ? "chrome-extension:" === m &&
                              v.replace("chrome-extension://", "") ===
                                  f.replace("chrome-extension://", "")
                        : "chrome-extension:" === m && H.hostname === y;
                }
                if (!Fy.test(m)) return !1;
                if (rg.test(v)) return y === v;
                const A = v.replace(/\./g, "\\.");
                return new RegExp("^(.+\\." + A + "|" + A + ")$", "i").test(y);
            }
            const Vy = new rn(3e4, 6e4);
            function jc() {
                const v = An().___jsl;
                if (v?.H)
                    for (const f of Object.keys(v.H))
                        if (
                            ((v.H[f].r = v.H[f].r || []),
                            (v.H[f].L = v.H[f].L || []),
                            (v.H[f].r = [...v.H[f].L]),
                            v.CP)
                        )
                            for (let m = 0; m < v.CP.length; m++)
                                v.CP[m] = null;
            }
            let pl = null;
            function Uy(v) {
                return (
                    (pl =
                        pl ||
                        (function sg(v) {
                            return new Promise((f, m) => {
                                var y, A, C;
                                function H() {
                                    jc(),
                                        gapi.load("gapi.iframes", {
                                            callback: () => {
                                                f(gapi.iframes.getContext());
                                            },
                                            ontimeout: () => {
                                                jc(),
                                                    m(
                                                        ve(
                                                            v,
                                                            "network-request-failed"
                                                        )
                                                    );
                                            },
                                            timeout: Vy.get(),
                                        });
                                }
                                if (
                                    null !==
                                        (A =
                                            null === (y = An().gapi) ||
                                            void 0 === y
                                                ? void 0
                                                : y.iframes) &&
                                    void 0 !== A &&
                                    A.Iframe
                                )
                                    f(gapi.iframes.getContext());
                                else {
                                    if (
                                        null === (C = An().gapi) ||
                                        void 0 === C ||
                                        !C.load
                                    ) {
                                        const re = za("iframefcb");
                                        return (
                                            (An()[re] = () => {
                                                gapi.load
                                                    ? H()
                                                    : m(
                                                          ve(
                                                              v,
                                                              "network-request-failed"
                                                          )
                                                      );
                                            }),
                                            Sc(
                                                `https://apis.google.com/js/api.js?onload=${re}`
                                            ).catch((Ge) => m(Ge))
                                        );
                                    }
                                    H();
                                }
                            }).catch((f) => {
                                throw ((pl = null), f);
                            });
                        })(v)),
                    pl
                );
            }
            const og = new rn(5e3, 15e3),
                gl = {
                    style: {
                        position: "absolute",
                        top: "-100px",
                        width: "1px",
                        height: "1px",
                    },
                    "aria-hidden": "true",
                    tabindex: "-1",
                },
                jy = new Map([
                    ["identitytoolkit.googleapis.com", "p"],
                    ["staging-identitytoolkit.sandbox.googleapis.com", "s"],
                    ["test-identitytoolkit.sandbox.googleapis.com", "t"],
                ]);
            function Hy(v) {
                const f = v.config;
                j(f.authDomain, v, "auth-domain-config-required");
                const m = f.emulator
                        ? Yn(f, "emulator/auth/iframe")
                        : `https://${v.config.authDomain}/__/auth/iframe`,
                    y = {
                        apiKey: f.apiKey,
                        appName: v.name,
                        v: ie.SDK_VERSION,
                    },
                    A = jy.get(v.config.apiHost);
                A && (y.eid = A);
                const C = v._getFrameworks();
                return (
                    C.length && (y.fw = C.join(",")),
                    `${m}?${(0, O.xO)(y).slice(1)}`
                );
            }
            function eo() {
                return (
                    (eo = (0, p.Z)(function* (v) {
                        const f = yield Uy(v),
                            m = An().gapi;
                        return (
                            j(m, v, "internal-error"),
                            f.open(
                                {
                                    where: document.body,
                                    url: Hy(v),
                                    messageHandlersFilter:
                                        m.iframes.CROSS_ORIGIN_IFRAMES_FILTER,
                                    attributes: gl,
                                    dontclear: !0,
                                },
                                (y) =>
                                    new Promise(
                                        (function () {
                                            var A = (0, p.Z)(function* (C, H) {
                                                yield y.restyle({
                                                    setHideOnLeave: !1,
                                                });
                                                const re = ve(
                                                        v,
                                                        "network-request-failed"
                                                    ),
                                                    Ge = An().setTimeout(() => {
                                                        H(re);
                                                    }, og.get());
                                                function it() {
                                                    An().clearTimeout(Ge), C(y);
                                                }
                                                y.ping(it).then(it, () => {
                                                    H(re);
                                                });
                                            });
                                            return function (C, H) {
                                                return A.apply(this, arguments);
                                            };
                                        })()
                                    )
                            )
                        );
                    })),
                    eo.apply(this, arguments)
                );
            }
            const Po = {
                location: "yes",
                resizable: "yes",
                statusbar: "yes",
                toolbar: "no",
            };
            class $c {
                constructor(f) {
                    (this.window = f), (this.associatedEvent = null);
                }
                close() {
                    if (this.window)
                        try {
                            this.window.close();
                        } catch {}
                }
            }
            function cg(v, f, m, y, A, C) {
                j(v.config.authDomain, v, "auth-domain-config-required"),
                    j(v.config.apiKey, v, "invalid-api-key");
                const H = {
                    apiKey: v.config.apiKey,
                    appName: v.name,
                    authType: m,
                    redirectUrl: y,
                    v: ie.SDK_VERSION,
                    eventId: A,
                };
                if (f instanceof Ti) {
                    f.setDefaultLanguage(v.languageCode),
                        (H.providerId = f.providerId || ""),
                        (0, O.xb)(f.getCustomParameters()) ||
                            (H.customParameters = JSON.stringify(
                                f.getCustomParameters()
                            ));
                    for (const [Ge, it] of Object.entries(C || {})) H[Ge] = it;
                }
                if (f instanceof zs) {
                    const Ge = f.getScopes().filter((it) => "" !== it);
                    Ge.length > 0 && (H.scopes = Ge.join(","));
                }
                v.tenantId && (H.tid = v.tenantId);
                const re = H;
                for (const Ge of Object.keys(re))
                    void 0 === re[Ge] && delete re[Ge];
                return `${(function qy({ config: v }) {
                    return v.emulator
                        ? Yn(v, "emulator/auth/handler")
                        : `https://${v.authDomain}/__/auth/handler`;
                })(v)}?${(0, O.xO)(re).slice(1)}`;
            }
            const Gc = "webStorageSupport";
            class ma extends class to {
                constructor(f) {
                    this.factorId = f;
                }
                _process(f, m, y) {
                    switch (m.type) {
                        case "enroll":
                            return this._finalizeEnroll(f, m.credential, y);
                        case "signin":
                            return this._finalizeSignIn(f, m.credential);
                        default:
                            return Ce("unexpected MultiFactorSessionType");
                    }
                }
            } {
                constructor(f) {
                    super("phone"), (this.credential = f);
                }
                static _fromCredential(f) {
                    return new ma(f);
                }
                _finalizeEnroll(f, m, y) {
                    return (function qE(v, f) {
                        return xt(
                            v,
                            "POST",
                            "/v2/accounts/mfaEnrollment:finalize",
                            kt(v, f)
                        );
                    })(f, {
                        idToken: m,
                        displayName: y,
                        phoneVerificationInfo:
                            this.credential._makeVerificationRequest(),
                    });
                }
                _finalizeSignIn(f, m) {
                    return (function xi(v, f) {
                        return xt(
                            v,
                            "POST",
                            "/v2/accounts/mfaSignIn:finalize",
                            kt(v, f)
                        );
                    })(f, {
                        mfaPendingCredential: m,
                        phoneVerificationInfo:
                            this.credential._makeVerificationRequest(),
                    });
                }
            }
            let Zy = (() => {
                class v {
                    constructor() {}
                    static assertion(m) {
                        return ma._fromCredential(m);
                    }
                }
                return (v.FACTOR_ID = "phone"), v;
            })();
            var dg = "@firebase/auth";
            class BT {
                constructor(f) {
                    (this.auth = f), (this.internalListeners = new Map());
                }
                getUid() {
                    var f;
                    return (
                        this.assertAuthConfigured(),
                        (null === (f = this.auth.currentUser) || void 0 === f
                            ? void 0
                            : f.uid) || null
                    );
                }
                getToken(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        return (
                            m.assertAuthConfigured(),
                            yield m.auth._initializationPromise,
                            m.auth.currentUser
                                ? {
                                      accessToken:
                                          yield m.auth.currentUser.getIdToken(
                                              f
                                          ),
                                  }
                                : null
                        );
                    })();
                }
                addAuthTokenListener(f) {
                    if (
                        (this.assertAuthConfigured(),
                        this.internalListeners.has(f))
                    )
                        return;
                    const m = this.auth.onIdTokenChanged((y) => {
                        var A;
                        f(
                            (null === (A = y) || void 0 === A
                                ? void 0
                                : A.stsTokenManager.accessToken) || null
                        );
                    });
                    this.internalListeners.set(f, m),
                        this.updateProactiveRefresh();
                }
                removeAuthTokenListener(f) {
                    this.assertAuthConfigured();
                    const m = this.internalListeners.get(f);
                    !m ||
                        (this.internalListeners.delete(f),
                        m(),
                        this.updateProactiveRefresh());
                }
                assertAuthConfigured() {
                    j(
                        this.auth._initializationPromise,
                        "dependent-sdk-initialized-before-auth"
                    );
                }
                updateProactiveRefresh() {
                    this.internalListeners.size > 0
                        ? this.auth._startProactiveRefresh()
                        : this.auth._stopProactiveRefresh();
                }
            }
            function _a() {
                return window;
            }
            function Vh() {
                return (Vh = (0, p.Z)(function* (v, f, m) {
                    var y;
                    const { BuildInfo: A } = _a();
                    Y(f.sessionId, "AuthEvent did not contain a session ID");
                    const C = yield Wc(f.sessionId),
                        H = {};
                    return (
                        Ut()
                            ? (H.ibi = A.packageName)
                            : Ne()
                            ? (H.apn = A.packageName)
                            : Ae(
                                  v,
                                  "operation-not-supported-in-this-environment"
                              ),
                        A.displayName && (H.appDisplayName = A.displayName),
                        (H.sessionId = C),
                        cg(
                            v,
                            m,
                            f.type,
                            void 0,
                            null !== (y = f.eventId) && void 0 !== y
                                ? y
                                : void 0,
                            H
                        )
                    );
                })).apply(this, arguments);
            }
            function Uh() {
                return (Uh = (0, p.Z)(function* (v) {
                    const { BuildInfo: f } = _a(),
                        m = {};
                    Ut()
                        ? (m.iosBundleId = f.packageName)
                        : Ne()
                        ? (m.androidPackageName = f.packageName)
                        : Ae(v, "operation-not-supported-in-this-environment"),
                        yield Bc(v, m);
                })).apply(this, arguments);
            }
            function mi() {
                return (mi = (0, p.Z)(function* (v, f, m) {
                    const { cordova: y } = _a();
                    let A = () => {};
                    try {
                        yield new Promise((C, H) => {
                            let re = null;
                            function Ge() {
                                var vt;
                                C();
                                const xr =
                                    null === (vt = y.plugins.browsertab) ||
                                    void 0 === vt
                                        ? void 0
                                        : vt.close;
                                "function" == typeof xr && xr(),
                                    "function" == typeof m?.close && m.close();
                            }
                            function it() {
                                re ||
                                    (re = window.setTimeout(() => {
                                        H(ve(v, "redirect-cancelled-by-user"));
                                    }, 2e3));
                            }
                            function At() {
                                "visible" === document?.visibilityState && it();
                            }
                            f.addPassiveListener(Ge),
                                document.addEventListener("resume", it, !1),
                                Ne() &&
                                    document.addEventListener(
                                        "visibilitychange",
                                        At,
                                        !1
                                    ),
                                (A = () => {
                                    f.removePassiveListener(Ge),
                                        document.removeEventListener(
                                            "resume",
                                            it,
                                            !1
                                        ),
                                        document.removeEventListener(
                                            "visibilitychange",
                                            At,
                                            !1
                                        ),
                                        re && window.clearTimeout(re);
                                });
                        });
                    } finally {
                        A();
                    }
                })).apply(this, arguments);
            }
            function Wc(v) {
                return _l.apply(this, arguments);
            }
            function _l() {
                return (_l = (0, p.Z)(function* (v) {
                    const f = mg(v),
                        m = yield crypto.subtle.digest("SHA-256", f);
                    return Array.from(new Uint8Array(m))
                        .map((A) => A.toString(16).padStart(2, "0"))
                        .join("");
                })).apply(this, arguments);
            }
            function mg(v) {
                if (
                    (Y(
                        /[0-9a-zA-Z]+/.test(v),
                        "Can only convert alpha-numeric strings"
                    ),
                    typeof TextEncoder < "u")
                )
                    return new TextEncoder().encode(v);
                const f = new ArrayBuffer(v.length),
                    m = new Uint8Array(f);
                for (let y = 0; y < v.length; y++) m[y] = v.charCodeAt(y);
                return m;
            }
            !(function JE(v) {
                (0, ie._registerComponent)(
                    new se.wA(
                        "auth",
                        (f, { options: m }) => {
                            const y = f.getProvider("app").getImmediate(),
                                A = f.getProvider("heartbeat"),
                                { apiKey: C, authDomain: H } = y.options;
                            return ((re, Ge) => {
                                j(C && !C.includes(":"), "invalid-api-key", {
                                    appName: re.name,
                                }),
                                    j(!H?.includes(":"), "argument-error", {
                                        appName: re.name,
                                    });
                                const it = {
                                        apiKey: C,
                                        authDomain: H,
                                        clientPlatform: v,
                                        apiHost:
                                            "identitytoolkit.googleapis.com",
                                        tokenApiHost:
                                            "securetoken.googleapis.com",
                                        apiScheme: "https",
                                        sdkClientVersion: Jr(v),
                                    },
                                    At = new bs(re, Ge, it);
                                return (
                                    (function oe(v, f) {
                                        const m = f?.persistence || [],
                                            y = (
                                                Array.isArray(m) ? m : [m]
                                            ).map(X);
                                        f?.errorMap &&
                                            v._updateErrorMap(f.errorMap),
                                            v._initializeWithPersistence(
                                                y,
                                                f?.popupRedirectResolver
                                            );
                                    })(At, m),
                                    At
                                );
                            })(y, A);
                        },
                        "PUBLIC"
                    )
                        .setInstantiationMode("EXPLICIT")
                        .setInstanceCreatedCallback((f, m, y) => {
                            f.getProvider("auth-internal").initialize();
                        })
                ),
                    (0, ie._registerComponent)(
                        new se.wA(
                            "auth-internal",
                            (f) => {
                                const m = Z(
                                    f.getProvider("auth").getImmediate()
                                );
                                return new BT(m);
                            },
                            "PRIVATE"
                        ).setInstantiationMode("EXPLICIT")
                    ),
                    (0, ie.registerVersion)(
                        dg,
                        "0.20.5",
                        (function Qy(v) {
                            switch (v) {
                                case "Node":
                                    return "node";
                                case "ReactNative":
                                    return "rn";
                                case "Worker":
                                    return "webworker";
                                case "Cordova":
                                    return "cordova";
                                default:
                                    return;
                            }
                        })(v)
                    ),
                    (0, ie.registerVersion)(dg, "0.20.5", "esm2017");
            })("Browser");
            class XE extends eu {
                constructor() {
                    super(...arguments),
                        (this.passiveListeners = new Set()),
                        (this.initPromise = new Promise((f) => {
                            this.resolveInialized = f;
                        }));
                }
                addPassiveListener(f) {
                    this.passiveListeners.add(f);
                }
                removePassiveListener(f) {
                    this.passiveListeners.delete(f);
                }
                resetRedirect() {
                    (this.queuedRedirectEvent = null),
                        (this.hasHandledPotentialRedirect = !1);
                }
                onEvent(f) {
                    return (
                        this.resolveInialized(),
                        this.passiveListeners.forEach((m) => m(f)),
                        super.onEvent(f)
                    );
                }
                initialized() {
                    var f = this;
                    return (0, p.Z)(function* () {
                        yield f.initPromise;
                    })();
                }
            }
            function nu(v) {
                return yl.apply(this, arguments);
            }
            function yl() {
                return (yl = (0, p.Z)(function* (v) {
                    const f = yield zc()._get(_g(v));
                    return f && (yield zc()._remove(_g(v))), f;
                })).apply(this, arguments);
            }
            function tv() {
                const v = [],
                    f =
                        "1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
                for (let m = 0; m < 20; m++) {
                    const y = Math.floor(Math.random() * f.length);
                    v.push(f.charAt(y));
                }
                return v.join("");
            }
            function zc() {
                return X(To);
            }
            function _g(v) {
                return ne("authEvent", v.config.apiKey, v.name);
            }
            function vl(v) {
                if (!v?.includes("?")) return {};
                const [f, ...m] = v.split("?");
                return (0, O.zd)(m.join("?"));
            }
            function wl() {
                return {
                    type: "unknown",
                    eventId: null,
                    sessionId: null,
                    urlResponse: null,
                    postBody: null,
                    tenantId: null,
                    error: ve("no-auth-event"),
                };
            }
            function no() {
                var v;
                return (
                    (null === (v = self?.location) || void 0 === v
                        ? void 0
                        : v.protocol) || null
                );
            }
            function yg(v = (0, O.z$)()) {
                return !(
                    ("file:" !== no() &&
                        "ionic:" !== no() &&
                        "capacitor:" !== no()) ||
                    !v.toLowerCase().match(/iphone|ipad|ipod|android/)
                );
            }
            function Eg() {
                try {
                    const v = self.localStorage,
                        f = dn();
                    if (v)
                        return (
                            v.setItem(f, "1"),
                            v.removeItem(f),
                            !(function uv(v = (0, O.z$)()) {
                                return (
                                    (function av() {
                                        return (
                                            (0, O.w1)() &&
                                            11 === document?.documentMode
                                        );
                                    })() ||
                                    (function wg(v = (0, O.z$)()) {
                                        return /Edge\/\d+/.test(v);
                                    })(v)
                                );
                            })() || (0, O.hl)()
                        );
                } catch {
                    return Ig() && (0, O.hl)();
                }
                return !1;
            }
            function Ig() {
                return (
                    typeof global < "u" &&
                    "WorkerGlobalScope" in global &&
                    "importScripts" in global
                );
            }
            function ko() {
                return (
                    ((function $h() {
                        return "http:" === no() || "https:" === no();
                    })() ||
                        (0, O.ru)() ||
                        yg()) &&
                    !(function vg() {
                        return (0, O.b$)() || (0, O.UG)();
                    })() &&
                    Eg() &&
                    !Ig()
                );
            }
            function Gh() {
                return yg() && typeof document < "u";
            }
            function qc() {
                return (qc = (0, p.Z)(function* () {
                    return (
                        !!Gh() &&
                        new Promise((v) => {
                            const f = setTimeout(() => {
                                v(!1);
                            }, 1e3);
                            document.addEventListener("deviceready", () => {
                                clearTimeout(f), v(!0);
                            });
                        })
                    );
                })).apply(this, arguments);
            }
            const Ri = { LOCAL: "local", NONE: "none", SESSION: "session" },
                Kc = j,
                Cg = "persistence";
            function bg(v) {
                return Dg.apply(this, arguments);
            }
            function Dg() {
                return (Dg = (0, p.Z)(function* (v) {
                    yield v._initializationPromise;
                    const f = cv(),
                        m = ne(Cg, v.config.apiKey, v.name);
                    f && f.setItem(m, v._getPersistence());
                })).apply(this, arguments);
            }
            function cv() {
                var v;
                try {
                    return (
                        (null ===
                            (v = (function El() {
                                return typeof window < "u" ? window : null;
                            })()) || void 0 === v
                            ? void 0
                            : v.sessionStorage) || null
                    );
                } catch {
                    return null;
                }
            }
            const Tg = j;
            class ya {
                constructor() {
                    (this.browserResolver = X(
                        class Ky {
                            constructor() {
                                (this.eventManagers = {}),
                                    (this.iframes = {}),
                                    (this.originValidationPromises = {}),
                                    (this._redirectPersistence = Ms),
                                    (this._completeRedirectFn = Nh),
                                    (this._overrideRedirectResult = Mo);
                            }
                            _openPopup(f, m, y, A) {
                                var C = this;
                                return (0, p.Z)(function* () {
                                    var H;
                                    Y(
                                        null ===
                                            (H = C.eventManagers[f._key()]) ||
                                            void 0 === H
                                            ? void 0
                                            : H.manager,
                                        "_initialize() not called before _openPopup()"
                                    );
                                    const re = cg(f, m, y, Be(), A);
                                    return (function Fh(
                                        v,
                                        f,
                                        m,
                                        y = 500,
                                        A = 600
                                    ) {
                                        const C = Math.max(
                                                (window.screen.availHeight -
                                                    A) /
                                                    2,
                                                0
                                            ).toString(),
                                            H = Math.max(
                                                (window.screen.availWidth - y) /
                                                    2,
                                                0
                                            ).toString();
                                        let re = "";
                                        const Ge = Object.assign(
                                                Object.assign({}, Po),
                                                {
                                                    width: y.toString(),
                                                    height: A.toString(),
                                                    top: C,
                                                    left: H,
                                                }
                                            ),
                                            it = (0, O.z$)().toLowerCase();
                                        m && (re = ut(it) ? "_blank" : m),
                                            Oe(it) &&
                                                ((f = f || "http://localhost"),
                                                (Ge.scrollbars = "yes"));
                                        const At = Object.entries(Ge).reduce(
                                            (xr, [tr, zi]) =>
                                                `${xr}${tr}=${zi},`,
                                            ""
                                        );
                                        if (
                                            (function cn(v = (0, O.z$)()) {
                                                var f;
                                                return (
                                                    Ut(v) &&
                                                    !(
                                                        null ===
                                                            (f =
                                                                window.navigator) ||
                                                        void 0 === f ||
                                                        !f.standalone
                                                    )
                                                );
                                            })(it) &&
                                            "_self" !== re
                                        )
                                            return (
                                                (function Gy(v, f) {
                                                    const m =
                                                        document.createElement(
                                                            "a"
                                                        );
                                                    (m.href = v),
                                                        (m.target = f);
                                                    const y =
                                                        document.createEvent(
                                                            "MouseEvent"
                                                        );
                                                    y.initMouseEvent(
                                                        "click",
                                                        !0,
                                                        !0,
                                                        window,
                                                        1,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        !1,
                                                        !1,
                                                        !1,
                                                        !1,
                                                        1,
                                                        null
                                                    ),
                                                        m.dispatchEvent(y);
                                                })(f || "", re),
                                                new $c(null)
                                            );
                                        const vt = window.open(f || "", re, At);
                                        j(vt, v, "popup-blocked");
                                        try {
                                            vt.focus();
                                        } catch {}
                                        return new $c(vt);
                                    })(f, re, dn());
                                })();
                            }
                            _openRedirect(f, m, y, A) {
                                var C = this;
                                return (0, p.Z)(function* () {
                                    return (
                                        yield C._originValidation(f),
                                        (function Dy(v) {
                                            An().location.href = v;
                                        })(cg(f, m, y, Be(), A)),
                                        new Promise(() => {})
                                    );
                                })();
                            }
                            _initialize(f) {
                                const m = f._key();
                                if (this.eventManagers[m]) {
                                    const { manager: A, promise: C } =
                                        this.eventManagers[m];
                                    return A
                                        ? Promise.resolve(A)
                                        : (Y(
                                              C,
                                              "If manager is not set, promise should be"
                                          ),
                                          C);
                                }
                                const y = this.initAndGetManager(f);
                                return (
                                    (this.eventManagers[m] = { promise: y }),
                                    y.catch(() => {
                                        delete this.eventManagers[m];
                                    }),
                                    y
                                );
                            }
                            initAndGetManager(f) {
                                var m = this;
                                return (0, p.Z)(function* () {
                                    const y = yield (function Hc(v) {
                                            return eo.apply(this, arguments);
                                        })(f),
                                        A = new eu(f);
                                    return (
                                        y.register(
                                            "authEvent",
                                            (C) => (
                                                j(
                                                    C?.authEvent,
                                                    f,
                                                    "invalid-auth-event"
                                                ),
                                                {
                                                    status: A.onEvent(
                                                        C.authEvent
                                                    )
                                                        ? "ACK"
                                                        : "ERROR",
                                                }
                                            ),
                                            gapi.iframes
                                                .CROSS_ORIGIN_IFRAMES_FILTER
                                        ),
                                        (m.eventManagers[f._key()] = {
                                            manager: A,
                                        }),
                                        (m.iframes[f._key()] = y),
                                        A
                                    );
                                })();
                            }
                            _isIframeWebStorageSupported(f, m) {
                                this.iframes[f._key()].send(
                                    Gc,
                                    { type: Gc },
                                    (A) => {
                                        var C;
                                        const H =
                                            null === (C = A?.[0]) ||
                                            void 0 === C
                                                ? void 0
                                                : C[Gc];
                                        void 0 !== H && m(!!H),
                                            Ae(f, "internal-error");
                                    },
                                    gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER
                                );
                            }
                            _originValidation(f) {
                                const m = f._key();
                                return (
                                    this.originValidationPromises[m] ||
                                        (this.originValidationPromises[m] =
                                            (function Ly(v) {
                                                return kh.apply(
                                                    this,
                                                    arguments
                                                );
                                            })(f)),
                                    this.originValidationPromises[m]
                                );
                            }
                            get _shouldInitProactively() {
                                return In() || ze() || Ut();
                            }
                        }
                    )),
                        (this.cordovaResolver = X(
                            class Os {
                                constructor() {
                                    (this._redirectPersistence = Ms),
                                        (this._shouldInitProactively = !0),
                                        (this.eventManagers = new Map()),
                                        (this.originValidationPromises = {}),
                                        (this._completeRedirectFn = Nh),
                                        (this._overrideRedirectResult = Mo);
                                }
                                _initialize(f) {
                                    var m = this;
                                    return (0, p.Z)(function* () {
                                        const y = f._key();
                                        let A = m.eventManagers.get(y);
                                        return (
                                            A ||
                                                ((A = new XE(f)),
                                                m.eventManagers.set(y, A),
                                                m.attachCallbackListeners(
                                                    f,
                                                    A
                                                )),
                                            A
                                        );
                                    })();
                                }
                                _openPopup(f) {
                                    Ae(
                                        f,
                                        "operation-not-supported-in-this-environment"
                                    );
                                }
                                _openRedirect(f, m, y, A) {
                                    var C = this;
                                    return (0, p.Z)(function* () {
                                        !(function ml(v) {
                                            var f,
                                                m,
                                                y,
                                                A,
                                                C,
                                                H,
                                                re,
                                                Ge,
                                                it,
                                                At;
                                            const vt = _a();
                                            j(
                                                "function" ==
                                                    typeof (null ===
                                                        (f =
                                                            vt?.universalLinks) ||
                                                    void 0 === f
                                                        ? void 0
                                                        : f.subscribe),
                                                v,
                                                "invalid-cordova-configuration",
                                                {
                                                    missingPlugin:
                                                        "cordova-universal-links-plugin-fix",
                                                }
                                            ),
                                                j(
                                                    typeof (null ===
                                                        (m = vt?.BuildInfo) ||
                                                    void 0 === m
                                                        ? void 0
                                                        : m.packageName) < "u",
                                                    v,
                                                    "invalid-cordova-configuration",
                                                    {
                                                        missingPlugin:
                                                            "cordova-plugin-buildInfo",
                                                    }
                                                ),
                                                j(
                                                    "function" ==
                                                        typeof (null ===
                                                            (C =
                                                                null ===
                                                                    (A =
                                                                        null ===
                                                                            (y =
                                                                                vt?.cordova) ||
                                                                        void 0 ===
                                                                            y
                                                                            ? void 0
                                                                            : y.plugins) ||
                                                                void 0 === A
                                                                    ? void 0
                                                                    : A.browsertab) ||
                                                        void 0 === C
                                                            ? void 0
                                                            : C.openUrl),
                                                    v,
                                                    "invalid-cordova-configuration",
                                                    {
                                                        missingPlugin:
                                                            "cordova-plugin-browsertab",
                                                    }
                                                ),
                                                j(
                                                    "function" ==
                                                        typeof (null ===
                                                            (Ge =
                                                                null ===
                                                                    (re =
                                                                        null ===
                                                                            (H =
                                                                                vt?.cordova) ||
                                                                        void 0 ===
                                                                            H
                                                                            ? void 0
                                                                            : H.plugins) ||
                                                                void 0 === re
                                                                    ? void 0
                                                                    : re.browsertab) ||
                                                        void 0 === Ge
                                                            ? void 0
                                                            : Ge.isAvailable),
                                                    v,
                                                    "invalid-cordova-configuration",
                                                    {
                                                        missingPlugin:
                                                            "cordova-plugin-browsertab",
                                                    }
                                                ),
                                                j(
                                                    "function" ==
                                                        typeof (null ===
                                                            (At =
                                                                null ===
                                                                    (it =
                                                                        vt?.cordova) ||
                                                                void 0 === it
                                                                    ? void 0
                                                                    : it.InAppBrowser) ||
                                                        void 0 === At
                                                            ? void 0
                                                            : At.open),
                                                    v,
                                                    "invalid-cordova-configuration",
                                                    {
                                                        missingPlugin:
                                                            "cordova-plugin-inappbrowser",
                                                    }
                                                );
                                        })(f);
                                        const H = yield C._initialize(f);
                                        yield H.initialized(),
                                            H.resetRedirect(),
                                            (function ul() {
                                                Za.clear();
                                            })(),
                                            yield C._originValidation(f);
                                        const re = (function ev(
                                            v,
                                            f,
                                            m = null
                                        ) {
                                            return {
                                                type: f,
                                                eventId: m,
                                                urlResponse: null,
                                                sessionId: tv(),
                                                postBody: null,
                                                tenantId: v.tenantId,
                                                error: ve(v, "no-auth-event"),
                                            };
                                        })(f, y, A);
                                        yield (function Bh(v, f) {
                                            return zc()._set(_g(v), f);
                                        })(f, re);
                                        const Ge = yield (function pg(v, f, m) {
                                                return Vh.apply(
                                                    this,
                                                    arguments
                                                );
                                            })(f, re, m),
                                            it = yield (function tu(v) {
                                                const { cordova: f } = _a();
                                                return new Promise((m) => {
                                                    f.plugins.browsertab.isAvailable(
                                                        (y) => {
                                                            let A = null;
                                                            y
                                                                ? f.plugins.browsertab.openUrl(
                                                                      v
                                                                  )
                                                                : (A =
                                                                      f.InAppBrowser.open(
                                                                          v,
                                                                          (function ar(
                                                                              v = (0,
                                                                              O.z$)()
                                                                          ) {
                                                                              return (
                                                                                  /(iPad|iPhone|iPod).*OS 7_\d/i.test(
                                                                                      v
                                                                                  ) ||
                                                                                  /(iPad|iPhone|iPod).*OS 8_\d/i.test(
                                                                                      v
                                                                                  )
                                                                              );
                                                                          })()
                                                                              ? "_blank"
                                                                              : "_system",
                                                                          "location=yes"
                                                                      )),
                                                                m(A);
                                                        }
                                                    );
                                                });
                                            })(Ge);
                                        return (function gg(v, f, m) {
                                            return mi.apply(this, arguments);
                                        })(f, H, it);
                                    })();
                                }
                                _isIframeWebStorageSupported(f, m) {
                                    throw new Error("Method not implemented.");
                                }
                                _originValidation(f) {
                                    const m = f._key();
                                    return (
                                        this.originValidationPromises[m] ||
                                            (this.originValidationPromises[m] =
                                                (function Jy(v) {
                                                    return Uh.apply(
                                                        this,
                                                        arguments
                                                    );
                                                })(f)),
                                        this.originValidationPromises[m]
                                    );
                                }
                                attachCallbackListeners(f, m) {
                                    const {
                                            universalLinks: y,
                                            handleOpenURL: A,
                                            BuildInfo: C,
                                        } = _a(),
                                        H = setTimeout(
                                            (0, p.Z)(function* () {
                                                yield nu(f), m.onEvent(wl());
                                            }),
                                            500
                                        ),
                                        re = (function () {
                                            var At = (0, p.Z)(function* (vt) {
                                                clearTimeout(H);
                                                const xr = yield nu(f);
                                                let tr = null;
                                                xr &&
                                                    vt?.url &&
                                                    (tr = (function eI(v, f) {
                                                        var m, y;
                                                        const A = (function nv(
                                                            v
                                                        ) {
                                                            const f = vl(v),
                                                                m = f.link
                                                                    ? decodeURIComponent(
                                                                          f.link
                                                                      )
                                                                    : void 0,
                                                                y = vl(m).link,
                                                                A =
                                                                    f.deep_link_id
                                                                        ? decodeURIComponent(
                                                                              f.deep_link_id
                                                                          )
                                                                        : void 0;
                                                            return (
                                                                vl(A).link ||
                                                                A ||
                                                                y ||
                                                                m ||
                                                                v
                                                            );
                                                        })(f);
                                                        if (
                                                            A.includes(
                                                                "/__/auth/callback"
                                                            )
                                                        ) {
                                                            const C = vl(A),
                                                                H =
                                                                    C.firebaseError
                                                                        ? (function jh(
                                                                              v
                                                                          ) {
                                                                              try {
                                                                                  return JSON.parse(
                                                                                      v
                                                                                  );
                                                                              } catch {
                                                                                  return null;
                                                                              }
                                                                          })(
                                                                              decodeURIComponent(
                                                                                  C.firebaseError
                                                                              )
                                                                          )
                                                                        : null,
                                                                re =
                                                                    null ===
                                                                        (y =
                                                                            null ===
                                                                                (m =
                                                                                    H?.code) ||
                                                                            void 0 ===
                                                                                m
                                                                                ? void 0
                                                                                : m.split(
                                                                                      "auth/"
                                                                                  )) ||
                                                                    void 0 === y
                                                                        ? void 0
                                                                        : y[1],
                                                                Ge = re
                                                                    ? ve(re)
                                                                    : null;
                                                            return Ge
                                                                ? {
                                                                      type: v.type,
                                                                      eventId:
                                                                          v.eventId,
                                                                      tenantId:
                                                                          v.tenantId,
                                                                      error: Ge,
                                                                      urlResponse:
                                                                          null,
                                                                      sessionId:
                                                                          null,
                                                                      postBody:
                                                                          null,
                                                                  }
                                                                : {
                                                                      type: v.type,
                                                                      eventId:
                                                                          v.eventId,
                                                                      tenantId:
                                                                          v.tenantId,
                                                                      sessionId:
                                                                          v.sessionId,
                                                                      urlResponse:
                                                                          A,
                                                                      postBody:
                                                                          null,
                                                                  };
                                                        }
                                                        return null;
                                                    })(xr, vt.url)),
                                                    m.onEvent(tr || wl());
                                            });
                                            return function (xr) {
                                                return At.apply(
                                                    this,
                                                    arguments
                                                );
                                            };
                                        })();
                                    typeof y < "u" &&
                                        "function" == typeof y.subscribe &&
                                        y.subscribe(null, re);
                                    const Ge = A,
                                        it = `${C.packageName.toLowerCase()}://`;
                                    _a().handleOpenURL = (function () {
                                        var At = (0, p.Z)(function* (vt) {
                                            if (
                                                (vt
                                                    .toLowerCase()
                                                    .startsWith(it) &&
                                                    re({ url: vt }),
                                                "function" == typeof Ge)
                                            )
                                                try {
                                                    Ge(vt);
                                                } catch (xr) {
                                                    console.error(xr);
                                                }
                                        });
                                        return function (vt) {
                                            return At.apply(this, arguments);
                                        };
                                    })();
                                }
                            }
                        )),
                        (this.underlyingResolver = null),
                        (this._redirectPersistence = Ms),
                        (this._completeRedirectFn = Nh),
                        (this._overrideRedirectResult = Mo);
                }
                _initialize(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        return (
                            yield m.selectUnderlyingResolver(),
                            m.assertedUnderlyingResolver._initialize(f)
                        );
                    })();
                }
                _openPopup(f, m, y, A) {
                    var C = this;
                    return (0, p.Z)(function* () {
                        return (
                            yield C.selectUnderlyingResolver(),
                            C.assertedUnderlyingResolver._openPopup(f, m, y, A)
                        );
                    })();
                }
                _openRedirect(f, m, y, A) {
                    var C = this;
                    return (0, p.Z)(function* () {
                        return (
                            yield C.selectUnderlyingResolver(),
                            C.assertedUnderlyingResolver._openRedirect(
                                f,
                                m,
                                y,
                                A
                            )
                        );
                    })();
                }
                _isIframeWebStorageSupported(f, m) {
                    this.assertedUnderlyingResolver._isIframeWebStorageSupported(
                        f,
                        m
                    );
                }
                _originValidation(f) {
                    return this.assertedUnderlyingResolver._originValidation(f);
                }
                get _shouldInitProactively() {
                    return Gh() || this.browserResolver._shouldInitProactively;
                }
                get assertedUnderlyingResolver() {
                    return (
                        Tg(this.underlyingResolver, "internal-error"),
                        this.underlyingResolver
                    );
                }
                selectUnderlyingResolver() {
                    var f = this;
                    return (0, p.Z)(function* () {
                        if (f.underlyingResolver) return;
                        const m = yield (function tI() {
                            return qc.apply(this, arguments);
                        })();
                        f.underlyingResolver = m
                            ? f.cordovaResolver
                            : f.browserResolver;
                    })();
                }
            }
            function Zc(v) {
                return v.unwrap();
            }
            function Wh(v) {
                return bt(v);
            }
            function bt(v) {
                const { _tokenResponse: f } =
                    v instanceof O.ZR ? v.customData : v;
                if (!f) return null;
                if (
                    !(v instanceof O.ZR) &&
                    "temporaryProof" in f &&
                    "phoneNumber" in f
                )
                    return Ar.credentialFromResult(v);
                const m = f.providerId;
                if (!m || "password" === m) return null;
                let y;
                switch (m) {
                    case "google.com":
                        y = na;
                        break;
                    case "facebook.com":
                        y = Ku;
                        break;
                    case "github.com":
                        y = ra;
                        break;
                    case "twitter.com":
                        y = Io;
                        break;
                    default:
                        const {
                            oauthIdToken: A,
                            oauthAccessToken: C,
                            oauthTokenSecret: H,
                            pendingToken: re,
                            nonce: Ge,
                        } = f;
                        return C || H || A || re
                            ? re
                                ? m.startsWith("saml.")
                                    ? es._create(m, re)
                                    : $i._fromParams({
                                          providerId: m,
                                          signInMethod: m,
                                          pendingToken: re,
                                          idToken: A,
                                          accessToken: C,
                                      })
                                : new Eo(m).credential({
                                      idToken: A,
                                      accessToken: C,
                                      rawNonce: Ge,
                                  })
                            : null;
                }
                return v instanceof O.ZR
                    ? y.credentialFromError(v)
                    : y.credentialFromResult(v);
            }
            function vn(v, f) {
                return f
                    .catch((m) => {
                        throw (
                            (m instanceof O.ZR &&
                                (function zh(v, f) {
                                    var m, y;
                                    const A =
                                        null === (m = f.customData) ||
                                        void 0 === m
                                            ? void 0
                                            : m._tokenResponse;
                                    if (
                                        "auth/multi-factor-auth-required" ===
                                        (null === (y = f) || void 0 === y
                                            ? void 0
                                            : y.code)
                                    )
                                        f.resolver = new fr(
                                            v,
                                            (function qp(v, f) {
                                                var m;
                                                const y = (0, O.m9)(v),
                                                    A = f;
                                                return (
                                                    j(
                                                        f.customData
                                                            .operationType,
                                                        y,
                                                        "argument-error"
                                                    ),
                                                    j(
                                                        null ===
                                                            (m =
                                                                A.customData
                                                                    ._serverResponse) ||
                                                            void 0 === m
                                                            ? void 0
                                                            : m.mfaPendingCredential,
                                                        y,
                                                        "argument-error"
                                                    ),
                                                    $a._fromError(y, A)
                                                );
                                            })(v, f)
                                        );
                                    else if (A) {
                                        const C = bt(f),
                                            H = f;
                                        C &&
                                            ((H.credential = C),
                                            (H.tenantId = A.tenantId || void 0),
                                            (H.email = A.email || void 0),
                                            (H.phoneNumber =
                                                A.phoneNumber || void 0));
                                    }
                                })(v, m),
                            m)
                        );
                    })
                    .then((m) => {
                        const A = m.user;
                        return {
                            operationType: m.operationType,
                            credential: Wh(m),
                            additionalUserInfo: _y(m),
                            user: Bn.getOrCreate(A),
                        };
                    });
            }
            function ru(v, f) {
                return hr.apply(this, arguments);
            }
            function hr() {
                return (hr = (0, p.Z)(function* (v, f) {
                    const m = yield f;
                    return {
                        verificationId: m.verificationId,
                        confirm: (y) => vn(v, m.confirm(y)),
                    };
                })).apply(this, arguments);
            }
            class fr {
                constructor(f, m) {
                    (this.resolver = m),
                        (this.auth = (function ss(v) {
                            return v.wrapped();
                        })(f));
                }
                get session() {
                    return this.resolver.session;
                }
                get hints() {
                    return this.resolver.hints;
                }
                resolveSignIn(f) {
                    return vn(Zc(this.auth), this.resolver.resolveSignIn(f));
                }
            }
            class Bn {
                constructor(f) {
                    (this._delegate = f),
                        (this.multiFactor = (function wy(v) {
                            const f = (0, O.m9)(v);
                            return (
                                Ju.has(f) || Ju.set(f, vy._fromUser(f)),
                                Ju.get(f)
                            );
                        })(f));
                }
                static getOrCreate(f) {
                    return (
                        Bn.USER_MAP.has(f) || Bn.USER_MAP.set(f, new Bn(f)),
                        Bn.USER_MAP.get(f)
                    );
                }
                delete() {
                    return this._delegate.delete();
                }
                reload() {
                    return this._delegate.reload();
                }
                toJSON() {
                    return this._delegate.toJSON();
                }
                getIdTokenResult(f) {
                    return this._delegate.getIdTokenResult(f);
                }
                getIdToken(f) {
                    return this._delegate.getIdToken(f);
                }
                linkAndRetrieveDataWithCredential(f) {
                    return this.linkWithCredential(f);
                }
                linkWithCredential(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        return vn(m.auth, M(m._delegate, f));
                    })();
                }
                linkWithPhoneNumber(f, m) {
                    var y = this;
                    return (0, p.Z)(function* () {
                        return ru(
                            y.auth,
                            (function Ps(v, f, m) {
                                return rl.apply(this, arguments);
                            })(y._delegate, f, m)
                        );
                    })();
                }
                linkWithPopup(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        return vn(
                            m.auth,
                            (function ng(v, f, m) {
                                return al.apply(this, arguments);
                            })(m._delegate, f, ya)
                        );
                    })();
                }
                linkWithRedirect(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        return (
                            yield bg(Z(m.auth)),
                            (function Vc(v, f, m) {
                                return (function Uc(v, f, m) {
                                    return No.apply(this, arguments);
                                })(v, f, m);
                            })(m._delegate, f, ya)
                        );
                    })();
                }
                reauthenticateAndRetrieveDataWithCredential(f) {
                    return this.reauthenticateWithCredential(f);
                }
                reauthenticateWithCredential(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        return vn(m.auth, ae(m._delegate, f));
                    })();
                }
                reauthenticateWithPhoneNumber(f, m) {
                    return ru(
                        this.auth,
                        (function il(v, f, m) {
                            return Js.apply(this, arguments);
                        })(this._delegate, f, m)
                    );
                }
                reauthenticateWithPopup(f) {
                    return vn(
                        this.auth,
                        (function Py(v, f, m) {
                            return tg.apply(this, arguments);
                        })(this._delegate, f, ya)
                    );
                }
                reauthenticateWithRedirect(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        return (
                            yield bg(Z(m.auth)),
                            (function Ja(v, f, m) {
                                return (function Rh(v, f, m) {
                                    return Lc.apply(this, arguments);
                                })(v, f, m);
                            })(m._delegate, f, ya)
                        );
                    })();
                }
                sendEmailVerification(f) {
                    return (function ph(v, f) {
                        return gh.apply(this, arguments);
                    })(this._delegate, f);
                }
                unlink(f) {
                    var m = this;
                    return (0, p.Z)(function* () {
                        return (
                            yield (function gc(v, f) {
                                return ia.apply(this, arguments);
                            })(m._delegate, f),
                            m
                        );
                    })();
                }
                updateEmail(f) {
                    return (function Cc(v, f) {
                        return mh((0, O.m9)(v), f, null);
                    })(this._delegate, f);
                }
                updatePassword(f) {
                    return (function fy(v, f) {
                        return mh((0, O.m9)(v), null, f);
                    })(this._delegate, f);
                }
                updatePhoneNumber(f) {
                    return (function Xp(v, f) {
                        return Sh.apply(this, arguments);
                    })(this._delegate, f);
                }
                updateProfile(f) {
                    return (function $p(v, f) {
                        return Ic.apply(this, arguments);
                    })(this._delegate, f);
                }
                verifyBeforeUpdateEmail(f, m) {
                    return (function vc(v, f, m) {
                        return wc.apply(this, arguments);
                    })(this._delegate, f, m);
                }
                get emailVerified() {
                    return this._delegate.emailVerified;
                }
                get isAnonymous() {
                    return this._delegate.isAnonymous;
                }
                get metadata() {
                    return this._delegate.metadata;
                }
                get phoneNumber() {
                    return this._delegate.phoneNumber;
                }
                get providerData() {
                    return this._delegate.providerData;
                }
                get refreshToken() {
                    return this._delegate.refreshToken;
                }
                get tenantId() {
                    return this._delegate.tenantId;
                }
                get displayName() {
                    return this._delegate.displayName;
                }
                get email() {
                    return this._delegate.email;
                }
                get photoURL() {
                    return this._delegate.photoURL;
                }
                get providerId() {
                    return this._delegate.providerId;
                }
                get uid() {
                    return this._delegate.uid;
                }
                get auth() {
                    return this._delegate.auth;
                }
            }
            Bn.USER_MAP = new WeakMap();
            const ni = j;
            let ro = (() => {
                class v {
                    constructor(m, y) {
                        if (((this.app = m), y.isInitialized()))
                            return (
                                (this._delegate = y.getImmediate()),
                                void this.linkUnderlyingAuth()
                            );
                        const { apiKey: A } = m.options;
                        ni(A, "invalid-api-key", { appName: m.name }),
                            ni(A, "invalid-api-key", { appName: m.name });
                        const C = typeof window < "u" ? ya : void 0;
                        (this._delegate = y.initialize({
                            options: {
                                persistence: dv(A, m.name),
                                popupRedirectResolver: C,
                            },
                        })),
                            this._delegate._updateErrorMap(Se),
                            this.linkUnderlyingAuth();
                    }
                    get emulatorConfig() {
                        return this._delegate.emulatorConfig;
                    }
                    get currentUser() {
                        return this._delegate.currentUser
                            ? Bn.getOrCreate(this._delegate.currentUser)
                            : null;
                    }
                    get languageCode() {
                        return this._delegate.languageCode;
                    }
                    set languageCode(m) {
                        this._delegate.languageCode = m;
                    }
                    get settings() {
                        return this._delegate.settings;
                    }
                    get tenantId() {
                        return this._delegate.tenantId;
                    }
                    set tenantId(m) {
                        this._delegate.tenantId = m;
                    }
                    useDeviceLanguage() {
                        this._delegate.useDeviceLanguage();
                    }
                    signOut() {
                        return this._delegate.signOut();
                    }
                    useEmulator(m, y) {
                        !(function Fe(v, f, m) {
                            const y = Z(v);
                            j(y._canInitEmulator, y, "emulator-config-failed"),
                                j(
                                    /^https?:\/\//.test(f),
                                    y,
                                    "invalid-emulator-scheme"
                                );
                            const A = !!m?.disableWarnings,
                                C = et(f),
                                { host: H, port: re } = (function Cn(v) {
                                    const f = et(v),
                                        m = /(\/\/)?([^?#/]+)/.exec(
                                            v.substr(f.length)
                                        );
                                    if (!m) return { host: "", port: null };
                                    const y = m[2].split("@").pop() || "",
                                        A = /^(\[[^\]]+\])(:|$)/.exec(y);
                                    if (A) {
                                        const C = A[1];
                                        return {
                                            host: C,
                                            port: Yt(y.substr(C.length + 1)),
                                        };
                                    }
                                    {
                                        const [C, H] = y.split(":");
                                        return { host: C, port: Yt(H) };
                                    }
                                })(f);
                            (y.config.emulator = {
                                url: `${C}//${H}${
                                    null === re ? "" : `:${re}`
                                }/`,
                            }),
                                (y.settings.appVerificationDisabledForTesting =
                                    !0),
                                (y.emulatorConfig = Object.freeze({
                                    host: H,
                                    port: re,
                                    protocol: C.replace(":", ""),
                                    options: Object.freeze({
                                        disableWarnings: A,
                                    }),
                                })),
                                A ||
                                    (function bn() {
                                        function v() {
                                            const f =
                                                    document.createElement("p"),
                                                m = f.style;
                                            (f.innerText =
                                                "Running in emulator mode. Do not use with production credentials."),
                                                (m.position = "fixed"),
                                                (m.width = "100%"),
                                                (m.backgroundColor = "#ffffff"),
                                                (m.border =
                                                    ".1em solid #000000"),
                                                (m.color = "#b50000"),
                                                (m.bottom = "0px"),
                                                (m.left = "0px"),
                                                (m.margin = "0px"),
                                                (m.zIndex = "10000"),
                                                (m.textAlign = "center"),
                                                f.classList.add(
                                                    "firebase-emulator-warning"
                                                ),
                                                document.body.appendChild(f);
                                        }
                                        typeof console < "u" &&
                                            "function" == typeof console.info &&
                                            console.info(
                                                "WARNING: You are using the Auth Emulator, which is intended for local testing only.  Do not use with production credentials."
                                            ),
                                            typeof window < "u" &&
                                                typeof document < "u" &&
                                                ("loading" ===
                                                document.readyState
                                                    ? window.addEventListener(
                                                          "DOMContentLoaded",
                                                          v
                                                      )
                                                    : v());
                                    })();
                        })(this._delegate, m, y);
                    }
                    applyActionCode(m) {
                        return (function xs(v, f) {
                            return aa.apply(this, arguments);
                        })(this._delegate, m);
                    }
                    checkActionCode(m) {
                        return bo(this._delegate, m);
                    }
                    confirmPasswordReset(m, y) {
                        return (function As(v, f, m) {
                            return Tr.apply(this, arguments);
                        })(this._delegate, m, y);
                    }
                    createUserWithEmailAndPassword(m, y) {
                        var A = this;
                        return (0, p.Z)(function* () {
                            return vn(
                                A._delegate,
                                (function cr(v, f, m) {
                                    return ts.apply(this, arguments);
                                })(A._delegate, m, y)
                            );
                        })();
                    }
                    fetchProvidersForEmail(m) {
                        return this.fetchSignInMethodsForEmail(m);
                    }
                    fetchSignInMethodsForEmail(m) {
                        return (function _c(v, f) {
                            return yc.apply(this, arguments);
                        })(this._delegate, m);
                    }
                    isSignInWithEmailLink(m) {
                        return (function cy(v, f) {
                            return (
                                "EMAIL_SIGNIN" === Ua.parseLink(f)?.operation
                            );
                        })(0, m);
                    }
                    getRedirectResult() {
                        var m = this;
                        return (0, p.Z)(function* () {
                            ni(
                                ko(),
                                m._delegate,
                                "operation-not-supported-in-this-environment"
                            );
                            const y = yield (function Mh(v, f) {
                                return Xs.apply(this, arguments);
                            })(m._delegate, ya);
                            return y
                                ? vn(m._delegate, Promise.resolve(y))
                                : { credential: null, user: null };
                        })();
                    }
                    addFrameworkForLogging(m) {
                        !(function iv(v, f) {
                            Z(v)._logFramework(f);
                        })(this._delegate, m);
                    }
                    onAuthStateChanged(m, y, A) {
                        const { next: C, error: H, complete: re } = qh(m, y, A);
                        return this._delegate.onAuthStateChanged(C, H, re);
                    }
                    onIdTokenChanged(m, y, A) {
                        const { next: C, error: H, complete: re } = qh(m, y, A);
                        return this._delegate.onIdTokenChanged(C, H, re);
                    }
                    sendSignInLinkToEmail(m, y) {
                        return (function la(v, f, m) {
                            return ns.apply(this, arguments);
                        })(this._delegate, m, y);
                    }
                    sendPasswordResetEmail(m, y) {
                        return (function Sn(v, f, m) {
                            return Ss.apply(this, arguments);
                        })(this._delegate, m, y || void 0);
                    }
                    setPersistence(m) {
                        var y = this;
                        return (0, p.Z)(function* () {
                            let A;
                            switch (
                                ((function lv(v, f) {
                                    Kc(
                                        Object.values(Ri).includes(f),
                                        v,
                                        "invalid-persistence-type"
                                    ),
                                        (0, O.b$)()
                                            ? Kc(
                                                  f !== Ri.SESSION,
                                                  v,
                                                  "unsupported-persistence-type"
                                              )
                                            : (0, O.UG)()
                                            ? Kc(
                                                  f === Ri.NONE,
                                                  v,
                                                  "unsupported-persistence-type"
                                              )
                                            : Ig()
                                            ? Kc(
                                                  f === Ri.NONE ||
                                                      (f === Ri.LOCAL &&
                                                          (0, O.hl)()),
                                                  v,
                                                  "unsupported-persistence-type"
                                              )
                                            : Kc(
                                                  f === Ri.NONE || Eg(),
                                                  v,
                                                  "unsupported-persistence-type"
                                              );
                                })(y._delegate, m),
                                m)
                            ) {
                                case Ri.SESSION:
                                    A = Ms;
                                    break;
                                case Ri.LOCAL:
                                    A = (yield X(Ys)._isAvailable()) ? Ys : To;
                                    break;
                                case Ri.NONE:
                                    A = Zt;
                                    break;
                                default:
                                    return Ae("argument-error", {
                                        appName: y._delegate.name,
                                    });
                            }
                            return y._delegate.setPersistence(A);
                        })();
                    }
                    signInAndRetrieveDataWithCredential(m) {
                        return this.signInWithCredential(m);
                    }
                    signInAnonymously() {
                        return vn(
                            this._delegate,
                            (function lr(v) {
                                return fc.apply(this, arguments);
                            })(this._delegate)
                        );
                    }
                    signInWithCredential(m) {
                        return vn(this._delegate, Rt(this._delegate, m));
                    }
                    signInWithCustomToken(m) {
                        return vn(
                            this._delegate,
                            (function qt(v, f) {
                                return we.apply(this, arguments);
                            })(this._delegate, m)
                        );
                    }
                    signInWithEmailAndPassword(m, y) {
                        return vn(
                            this._delegate,
                            (function fh(v, f, m) {
                                return Rt((0, O.m9)(v), qu.credential(f, m));
                            })(this._delegate, m, y)
                        );
                    }
                    signInWithEmailLink(m, y) {
                        return vn(
                            this._delegate,
                            (function Hp(v, f, m) {
                                return mc.apply(this, arguments);
                            })(this._delegate, m, y)
                        );
                    }
                    signInWithPhoneNumber(m, y) {
                        return ru(
                            this._delegate,
                            (function Jp(v, f, m) {
                                return Ur.apply(this, arguments);
                            })(this._delegate, m, y)
                        );
                    }
                    signInWithPopup(m) {
                        var y = this;
                        return (0, p.Z)(function* () {
                            return (
                                ni(
                                    ko(),
                                    y._delegate,
                                    "operation-not-supported-in-this-environment"
                                ),
                                vn(
                                    y._delegate,
                                    (function Ny(v, f, m) {
                                        return ol.apply(this, arguments);
                                    })(y._delegate, m, ya)
                                )
                            );
                        })();
                    }
                    signInWithRedirect(m) {
                        var y = this;
                        return (0, p.Z)(function* () {
                            return (
                                ni(
                                    ko(),
                                    y._delegate,
                                    "operation-not-supported-in-this-environment"
                                ),
                                yield bg(y._delegate),
                                (function pa(v, f, m) {
                                    return (function Qa(v, f, m) {
                                        return ga.apply(this, arguments);
                                    })(v, f, m);
                                })(y._delegate, m, ya)
                            );
                        })();
                    }
                    updateCurrentUser(m) {
                        return this._delegate.updateCurrentUser(m);
                    }
                    verifyPasswordResetCode(m) {
                        return (function ua(v, f) {
                            return ei.apply(this, arguments);
                        })(this._delegate, m);
                    }
                    unwrap() {
                        return this._delegate;
                    }
                    _delete() {
                        return this._delegate._delete();
                    }
                    linkUnderlyingAuth() {
                        this._delegate.wrapped = () => this;
                    }
                }
                return (v.Persistence = Ri), v;
            })();
            function qh(v, f, m) {
                let y = v;
                "function" != typeof v &&
                    ({ next: y, error: f, complete: m } = v);
                const A = y;
                return {
                    next: (H) => A(H && Bn.getOrCreate(H)),
                    error: f,
                    complete: m,
                };
            }
            function dv(v, f) {
                const m = (function nI(v, f) {
                    const m = cv();
                    if (!m) return [];
                    const y = ne(Cg, v, f);
                    switch (m.getItem(y)) {
                        case Ri.NONE:
                            return [Zt];
                        case Ri.LOCAL:
                            return [Ys, Ms];
                        case Ri.SESSION:
                            return [Ms];
                        default:
                            return [];
                    }
                })(v, f);
                if (
                    (typeof self < "u" && !m.includes(Ys) && m.push(Ys),
                    typeof window < "u")
                )
                    for (const y of [To, Ms]) m.includes(y) || m.push(y);
                return m.includes(Zt) || m.push(Zt), m;
            }
            class Yc {
                constructor() {
                    (this.providerId = "phone"),
                        (this._delegate = new Ar(Zc(Q.Z.auth())));
                }
                static credential(f, m) {
                    return Ar.credential(f, m);
                }
                verifyPhoneNumber(f, m) {
                    return this._delegate.verifyPhoneNumber(f, m);
                }
                unwrap() {
                    return this._delegate;
                }
            }
            (Yc.PHONE_SIGN_IN_METHOD = Ar.PHONE_SIGN_IN_METHOD),
                (Yc.PROVIDER_ID = Ar.PROVIDER_ID);
            const hv = j;
            class Sg {
                constructor(f, m, y = Q.Z.app()) {
                    var A;
                    hv(
                        null === (A = y.options) || void 0 === A
                            ? void 0
                            : A.apiKey,
                        "invalid-api-key",
                        { appName: y.name }
                    ),
                        (this._delegate = new Ac(f, m, y.auth())),
                        (this.type = this._delegate.type);
                }
                clear() {
                    this._delegate.clear();
                }
                render() {
                    return this._delegate.render();
                }
                verify() {
                    return this._delegate.verify();
                }
            }
            !(function pr(v) {
                v.INTERNAL.registerComponent(
                    new se.wA(
                        "auth-compat",
                        (f) => {
                            const m = f
                                    .getProvider("app-compat")
                                    .getImmediate(),
                                y = f.getProvider("auth");
                            return new ro(m, y);
                        },
                        "PUBLIC"
                    )
                        .setServiceProps({
                            ActionCodeInfo: {
                                Operation: {
                                    EMAIL_SIGNIN: "EMAIL_SIGNIN",
                                    PASSWORD_RESET: "PASSWORD_RESET",
                                    RECOVER_EMAIL: "RECOVER_EMAIL",
                                    REVERT_SECOND_FACTOR_ADDITION:
                                        "REVERT_SECOND_FACTOR_ADDITION",
                                    VERIFY_AND_CHANGE_EMAIL:
                                        "VERIFY_AND_CHANGE_EMAIL",
                                    VERIFY_EMAIL: "VERIFY_EMAIL",
                                },
                            },
                            EmailAuthProvider: qu,
                            FacebookAuthProvider: Ku,
                            GithubAuthProvider: ra,
                            GoogleAuthProvider: na,
                            OAuthProvider: Eo,
                            SAMLAuthProvider: ur,
                            PhoneAuthProvider: Yc,
                            PhoneMultiFactorGenerator: Zy,
                            RecaptchaVerifier: Sg,
                            TwitterAuthProvider: Io,
                            Auth: ro,
                            AuthCredential: Dn,
                            Error: O.ZR,
                        })
                        .setInstantiationMode("LAZY")
                        .setMultipleInstances(!1)
                ),
                    v.registerVersion("@firebase/auth-compat", "0.2.18");
            })(Q.Z);
        },
        8306: (pt, Me, P) => {
            P.d(Me, { y: () => U });
            var p = P(930),
                Q = P(727),
                O = P(8822),
                ie = P(4671);
            var se = P(2416),
                ge = P(576),
                fe = P(2806);
            let U = (() => {
                class Ee {
                    constructor(He) {
                        He && (this._subscribe = He);
                    }
                    lift(He) {
                        const ce = new Ee();
                        return (ce.source = this), (ce.operator = He), ce;
                    }
                    subscribe(He, ce, de) {
                        const nt = (function Le(Ee) {
                            return (
                                (Ee && Ee instanceof p.Lv) ||
                                ((function J(Ee) {
                                    return (
                                        Ee &&
                                        (0, ge.m)(Ee.next) &&
                                        (0, ge.m)(Ee.error) &&
                                        (0, ge.m)(Ee.complete)
                                    );
                                })(Ee) &&
                                    (0, Q.Nn)(Ee))
                            );
                        })(He)
                            ? He
                            : new p.Hp(He, ce, de);
                        return (
                            (0, fe.x)(() => {
                                const { operator: Qe, source: Ae } = this;
                                nt.add(
                                    Qe
                                        ? Qe.call(nt, Ae)
                                        : Ae
                                        ? this._subscribe(nt)
                                        : this._trySubscribe(nt)
                                );
                            }),
                            nt
                        );
                    }
                    _trySubscribe(He) {
                        try {
                            return this._subscribe(He);
                        } catch (ce) {
                            He.error(ce);
                        }
                    }
                    forEach(He, ce) {
                        return new (ce = B(ce))((de, nt) => {
                            const Qe = new p.Hp({
                                next: (Ae) => {
                                    try {
                                        He(Ae);
                                    } catch (ve) {
                                        nt(ve), Qe.unsubscribe();
                                    }
                                },
                                error: nt,
                                complete: de,
                            });
                            this.subscribe(Qe);
                        });
                    }
                    _subscribe(He) {
                        var ce;
                        return null === (ce = this.source) || void 0 === ce
                            ? void 0
                            : ce.subscribe(He);
                    }
                    [O.L]() {
                        return this;
                    }
                    pipe(...He) {
                        return (function _e(Ee) {
                            return 0 === Ee.length
                                ? ie.y
                                : 1 === Ee.length
                                ? Ee[0]
                                : function (He) {
                                      return Ee.reduce((ce, de) => de(ce), He);
                                  };
                        })(He)(this);
                    }
                    toPromise(He) {
                        return new (He = B(He))((ce, de) => {
                            let nt;
                            this.subscribe(
                                (Qe) => (nt = Qe),
                                (Qe) => de(Qe),
                                () => ce(nt)
                            );
                        });
                    }
                }
                return (Ee.create = (Se) => new Ee(Se)), Ee;
            })();
            function B(Ee) {
                var Se;
                return null !== (Se = Ee ?? se.v.Promise) && void 0 !== Se
                    ? Se
                    : Promise;
            }
        },
        7579: (pt, Me, P) => {
            P.d(Me, { x: () => se });
            var p = P(8306),
                Q = P(727);
            const ie = (0, P(3888).d)(
                (fe) =>
                    function () {
                        fe(this),
                            (this.name = "ObjectUnsubscribedError"),
                            (this.message = "object unsubscribed");
                    }
            );
            var he = P(8737),
                _e = P(2806);
            let se = (() => {
                class fe extends p.y {
                    constructor() {
                        super(),
                            (this.closed = !1),
                            (this.currentObservers = null),
                            (this.observers = []),
                            (this.isStopped = !1),
                            (this.hasError = !1),
                            (this.thrownError = null);
                    }
                    lift(B) {
                        const J = new ge(this, this);
                        return (J.operator = B), J;
                    }
                    _throwIfClosed() {
                        if (this.closed) throw new ie();
                    }
                    next(B) {
                        (0, _e.x)(() => {
                            if ((this._throwIfClosed(), !this.isStopped)) {
                                this.currentObservers ||
                                    (this.currentObservers = Array.from(
                                        this.observers
                                    ));
                                for (const J of this.currentObservers)
                                    J.next(B);
                            }
                        });
                    }
                    error(B) {
                        (0, _e.x)(() => {
                            if ((this._throwIfClosed(), !this.isStopped)) {
                                (this.hasError = this.isStopped = !0),
                                    (this.thrownError = B);
                                const { observers: J } = this;
                                for (; J.length; ) J.shift().error(B);
                            }
                        });
                    }
                    complete() {
                        (0, _e.x)(() => {
                            if ((this._throwIfClosed(), !this.isStopped)) {
                                this.isStopped = !0;
                                const { observers: B } = this;
                                for (; B.length; ) B.shift().complete();
                            }
                        });
                    }
                    unsubscribe() {
                        (this.isStopped = this.closed = !0),
                            (this.observers = this.currentObservers = null);
                    }
                    get observed() {
                        var B;
                        return (
                            (null === (B = this.observers) || void 0 === B
                                ? void 0
                                : B.length) > 0
                        );
                    }
                    _trySubscribe(B) {
                        return this._throwIfClosed(), super._trySubscribe(B);
                    }
                    _subscribe(B) {
                        return (
                            this._throwIfClosed(),
                            this._checkFinalizedStatuses(B),
                            this._innerSubscribe(B)
                        );
                    }
                    _innerSubscribe(B) {
                        const {
                            hasError: J,
                            isStopped: Le,
                            observers: Ee,
                        } = this;
                        return J || Le
                            ? Q.Lc
                            : ((this.currentObservers = null),
                              Ee.push(B),
                              new Q.w0(() => {
                                  (this.currentObservers = null),
                                      (0, he.P)(Ee, B);
                              }));
                    }
                    _checkFinalizedStatuses(B) {
                        const {
                            hasError: J,
                            thrownError: Le,
                            isStopped: Ee,
                        } = this;
                        J ? B.error(Le) : Ee && B.complete();
                    }
                    asObservable() {
                        const B = new p.y();
                        return (B.source = this), B;
                    }
                }
                return (fe.create = (U, B) => new ge(U, B)), fe;
            })();
            class ge extends se {
                constructor(U, B) {
                    super(), (this.destination = U), (this.source = B);
                }
                next(U) {
                    var B, J;
                    null ===
                        (J =
                            null === (B = this.destination) || void 0 === B
                                ? void 0
                                : B.next) ||
                        void 0 === J ||
                        J.call(B, U);
                }
                error(U) {
                    var B, J;
                    null ===
                        (J =
                            null === (B = this.destination) || void 0 === B
                                ? void 0
                                : B.error) ||
                        void 0 === J ||
                        J.call(B, U);
                }
                complete() {
                    var U, B;
                    null ===
                        (B =
                            null === (U = this.destination) || void 0 === U
                                ? void 0
                                : U.complete) ||
                        void 0 === B ||
                        B.call(U);
                }
                _subscribe(U) {
                    var B, J;
                    return null !==
                        (J =
                            null === (B = this.source) || void 0 === B
                                ? void 0
                                : B.subscribe(U)) && void 0 !== J
                        ? J
                        : Q.Lc;
                }
            }
        },
        930: (pt, Me, P) => {
            P.d(Me, { Hp: () => He, Lv: () => J });
            var p = P(576),
                Q = P(727),
                O = P(2416),
                ie = P(7849),
                he = P(5032);
            const _e = fe("C", void 0, void 0);
            function fe(Ae, ve, De) {
                return { kind: Ae, value: ve, error: De };
            }
            var U = P(3410),
                B = P(2806);
            class J extends Q.w0 {
                constructor(ve) {
                    super(),
                        (this.isStopped = !1),
                        ve
                            ? ((this.destination = ve),
                              (0, Q.Nn)(ve) && ve.add(this))
                            : (this.destination = Qe);
                }
                static create(ve, De, We) {
                    return new He(ve, De, We);
                }
                next(ve) {
                    this.isStopped
                        ? nt(
                              (function ge(Ae) {
                                  return fe("N", Ae, void 0);
                              })(ve),
                              this
                          )
                        : this._next(ve);
                }
                error(ve) {
                    this.isStopped
                        ? nt(
                              (function se(Ae) {
                                  return fe("E", void 0, Ae);
                              })(ve),
                              this
                          )
                        : ((this.isStopped = !0), this._error(ve));
                }
                complete() {
                    this.isStopped
                        ? nt(_e, this)
                        : ((this.isStopped = !0), this._complete());
                }
                unsubscribe() {
                    this.closed ||
                        ((this.isStopped = !0),
                        super.unsubscribe(),
                        (this.destination = null));
                }
                _next(ve) {
                    this.destination.next(ve);
                }
                _error(ve) {
                    try {
                        this.destination.error(ve);
                    } finally {
                        this.unsubscribe();
                    }
                }
                _complete() {
                    try {
                        this.destination.complete();
                    } finally {
                        this.unsubscribe();
                    }
                }
            }
            const Le = Function.prototype.bind;
            function Ee(Ae, ve) {
                return Le.call(Ae, ve);
            }
            class Se {
                constructor(ve) {
                    this.partialObserver = ve;
                }
                next(ve) {
                    const { partialObserver: De } = this;
                    if (De.next)
                        try {
                            De.next(ve);
                        } catch (We) {
                            ce(We);
                        }
                }
                error(ve) {
                    const { partialObserver: De } = this;
                    if (De.error)
                        try {
                            De.error(ve);
                        } catch (We) {
                            ce(We);
                        }
                    else ce(ve);
                }
                complete() {
                    const { partialObserver: ve } = this;
                    if (ve.complete)
                        try {
                            ve.complete();
                        } catch (De) {
                            ce(De);
                        }
                }
            }
            class He extends J {
                constructor(ve, De, We) {
                    let Ue;
                    if ((super(), (0, p.m)(ve) || !ve))
                        Ue = {
                            next: ve ?? void 0,
                            error: De ?? void 0,
                            complete: We ?? void 0,
                        };
                    else {
                        let j;
                        this && O.v.useDeprecatedNextContext
                            ? ((j = Object.create(ve)),
                              (j.unsubscribe = () => this.unsubscribe()),
                              (Ue = {
                                  next: ve.next && Ee(ve.next, j),
                                  error: ve.error && Ee(ve.error, j),
                                  complete: ve.complete && Ee(ve.complete, j),
                              }))
                            : (Ue = ve);
                    }
                    this.destination = new Se(Ue);
                }
            }
            function ce(Ae) {
                O.v.useDeprecatedSynchronousErrorHandling
                    ? (0, B.O)(Ae)
                    : (0, ie.h)(Ae);
            }
            function nt(Ae, ve) {
                const { onStoppedNotification: De } = O.v;
                De && U.z.setTimeout(() => De(Ae, ve));
            }
            const Qe = {
                closed: !0,
                next: he.Z,
                error: function de(Ae) {
                    throw Ae;
                },
                complete: he.Z,
            };
        },
        727: (pt, Me, P) => {
            P.d(Me, { Lc: () => _e, w0: () => he, Nn: () => se });
            var p = P(576);
            const O = (0, P(3888).d)(
                (fe) =>
                    function (B) {
                        fe(this),
                            (this.message = B
                                ? `${
                                      B.length
                                  } errors occurred during unsubscription:\n${B.map(
                                      (J, Le) => `${Le + 1}) ${J.toString()}`
                                  ).join("\n  ")}`
                                : ""),
                            (this.name = "UnsubscriptionError"),
                            (this.errors = B);
                    }
            );
            var ie = P(8737);
            class he {
                constructor(U) {
                    (this.initialTeardown = U),
                        (this.closed = !1),
                        (this._parentage = null),
                        (this._finalizers = null);
                }
                unsubscribe() {
                    let U;
                    if (!this.closed) {
                        this.closed = !0;
                        const { _parentage: B } = this;
                        if (B)
                            if (((this._parentage = null), Array.isArray(B)))
                                for (const Ee of B) Ee.remove(this);
                            else B.remove(this);
                        const { initialTeardown: J } = this;
                        if ((0, p.m)(J))
                            try {
                                J();
                            } catch (Ee) {
                                U = Ee instanceof O ? Ee.errors : [Ee];
                            }
                        const { _finalizers: Le } = this;
                        if (Le) {
                            this._finalizers = null;
                            for (const Ee of Le)
                                try {
                                    ge(Ee);
                                } catch (Se) {
                                    (U = U ?? []),
                                        Se instanceof O
                                            ? (U = [...U, ...Se.errors])
                                            : U.push(Se);
                                }
                        }
                        if (U) throw new O(U);
                    }
                }
                add(U) {
                    var B;
                    if (U && U !== this)
                        if (this.closed) ge(U);
                        else {
                            if (U instanceof he) {
                                if (U.closed || U._hasParent(this)) return;
                                U._addParent(this);
                            }
                            (this._finalizers =
                                null !== (B = this._finalizers) && void 0 !== B
                                    ? B
                                    : []).push(U);
                        }
                }
                _hasParent(U) {
                    const { _parentage: B } = this;
                    return B === U || (Array.isArray(B) && B.includes(U));
                }
                _addParent(U) {
                    const { _parentage: B } = this;
                    this._parentage = Array.isArray(B)
                        ? (B.push(U), B)
                        : B
                        ? [B, U]
                        : U;
                }
                _removeParent(U) {
                    const { _parentage: B } = this;
                    B === U
                        ? (this._parentage = null)
                        : Array.isArray(B) && (0, ie.P)(B, U);
                }
                remove(U) {
                    const { _finalizers: B } = this;
                    B && (0, ie.P)(B, U),
                        U instanceof he && U._removeParent(this);
                }
            }
            he.EMPTY = (() => {
                const fe = new he();
                return (fe.closed = !0), fe;
            })();
            const _e = he.EMPTY;
            function se(fe) {
                return (
                    fe instanceof he ||
                    (fe &&
                        "closed" in fe &&
                        (0, p.m)(fe.remove) &&
                        (0, p.m)(fe.add) &&
                        (0, p.m)(fe.unsubscribe))
                );
            }
            function ge(fe) {
                (0, p.m)(fe) ? fe() : fe.unsubscribe();
            }
        },
        2416: (pt, Me, P) => {
            P.d(Me, { v: () => p });
            const p = {
                onUnhandledError: null,
                onStoppedNotification: null,
                Promise: void 0,
                useDeprecatedSynchronousErrorHandling: !1,
                useDeprecatedNextContext: !1,
            };
        },
        515: (pt, Me, P) => {
            P.d(Me, { E: () => Q });
            const Q = new (P(8306).y)((he) => he.complete());
        },
        8996: (pt, Me, P) => {
            P.d(Me, { D: () => ve });
            var p = P(8421),
                Q = P(5363),
                O = P(9468),
                _e = P(8306),
                ge = P(2202),
                fe = P(576),
                U = P(9672);
            function J(De, We) {
                if (!De) throw new Error("Iterable cannot be null");
                return new _e.y((Ue) => {
                    (0, U.f)(Ue, We, () => {
                        const j = De[Symbol.asyncIterator]();
                        (0, U.f)(
                            Ue,
                            We,
                            () => {
                                j.next().then((Ce) => {
                                    Ce.done ? Ue.complete() : Ue.next(Ce.value);
                                });
                            },
                            0,
                            !0
                        );
                    });
                });
            }
            var Le = P(3670),
                Ee = P(8239),
                Se = P(1144),
                He = P(6495),
                ce = P(2206),
                de = P(4532),
                nt = P(3260);
            function ve(De, We) {
                return We
                    ? (function Ae(De, We) {
                          if (null != De) {
                              if ((0, Le.c)(De))
                                  return (function ie(De, We) {
                                      return (0, p.Xf)(De).pipe(
                                          (0, O.R)(We),
                                          (0, Q.Q)(We)
                                      );
                                  })(De, We);
                              if ((0, Se.z)(De))
                                  return (function se(De, We) {
                                      return new _e.y((Ue) => {
                                          let j = 0;
                                          return We.schedule(function () {
                                              j === De.length
                                                  ? Ue.complete()
                                                  : (Ue.next(De[j++]),
                                                    Ue.closed ||
                                                        this.schedule());
                                          });
                                      });
                                  })(De, We);
                              if ((0, Ee.t)(De))
                                  return (function he(De, We) {
                                      return (0, p.Xf)(De).pipe(
                                          (0, O.R)(We),
                                          (0, Q.Q)(We)
                                      );
                                  })(De, We);
                              if ((0, ce.D)(De)) return J(De, We);
                              if ((0, He.T)(De))
                                  return (function B(De, We) {
                                      return new _e.y((Ue) => {
                                          let j;
                                          return (
                                              (0, U.f)(Ue, We, () => {
                                                  (j = De[ge.h]()),
                                                      (0, U.f)(
                                                          Ue,
                                                          We,
                                                          () => {
                                                              let Ce, Y;
                                                              try {
                                                                  ({
                                                                      value: Ce,
                                                                      done: Y,
                                                                  } = j.next());
                                                              } catch (te) {
                                                                  return void Ue.error(
                                                                      te
                                                                  );
                                                              }
                                                              Y
                                                                  ? Ue.complete()
                                                                  : Ue.next(Ce);
                                                          },
                                                          0,
                                                          !0
                                                      );
                                              }),
                                              () =>
                                                  (0, fe.m)(j?.return) &&
                                                  j.return()
                                          );
                                      });
                                  })(De, We);
                              if ((0, nt.L)(De))
                                  return (function Qe(De, We) {
                                      return J((0, nt.Q)(De), We);
                                  })(De, We);
                          }
                          throw (0, de.z)(De);
                      })(De, We)
                    : (0, p.Xf)(De);
            }
        },
        8421: (pt, Me, P) => {
            P.d(Me, { Xf: () => Le });
            var p = P(655),
                Q = P(1144),
                O = P(8239),
                ie = P(8306),
                he = P(3670),
                _e = P(2206),
                se = P(4532),
                ge = P(6495),
                fe = P(3260),
                U = P(576),
                B = P(7849),
                J = P(8822);
            function Le(Ae) {
                if (Ae instanceof ie.y) return Ae;
                if (null != Ae) {
                    if ((0, he.c)(Ae))
                        return (function Ee(Ae) {
                            return new ie.y((ve) => {
                                const De = Ae[J.L]();
                                if ((0, U.m)(De.subscribe))
                                    return De.subscribe(ve);
                                throw new TypeError(
                                    "Provided object does not correctly implement Symbol.observable"
                                );
                            });
                        })(Ae);
                    if ((0, Q.z)(Ae))
                        return (function Se(Ae) {
                            return new ie.y((ve) => {
                                for (
                                    let De = 0;
                                    De < Ae.length && !ve.closed;
                                    De++
                                )
                                    ve.next(Ae[De]);
                                ve.complete();
                            });
                        })(Ae);
                    if ((0, O.t)(Ae))
                        return (function He(Ae) {
                            return new ie.y((ve) => {
                                Ae.then(
                                    (De) => {
                                        ve.closed ||
                                            (ve.next(De), ve.complete());
                                    },
                                    (De) => ve.error(De)
                                ).then(null, B.h);
                            });
                        })(Ae);
                    if ((0, _e.D)(Ae)) return de(Ae);
                    if ((0, ge.T)(Ae))
                        return (function ce(Ae) {
                            return new ie.y((ve) => {
                                for (const De of Ae)
                                    if ((ve.next(De), ve.closed)) return;
                                ve.complete();
                            });
                        })(Ae);
                    if ((0, fe.L)(Ae))
                        return (function nt(Ae) {
                            return de((0, fe.Q)(Ae));
                        })(Ae);
                }
                throw (0, se.z)(Ae);
            }
            function de(Ae) {
                return new ie.y((ve) => {
                    (function Qe(Ae, ve) {
                        var De, We, Ue, j;
                        return (0, p.mG)(this, void 0, void 0, function* () {
                            try {
                                for (
                                    De = (0, p.KL)(Ae);
                                    !(We = yield De.next()).done;

                                )
                                    if ((ve.next(We.value), ve.closed)) return;
                            } catch (Ce) {
                                Ue = { error: Ce };
                            } finally {
                                try {
                                    We &&
                                        !We.done &&
                                        (j = De.return) &&
                                        (yield j.call(De));
                                } finally {
                                    if (Ue) throw Ue.error;
                                }
                            }
                            ve.complete();
                        });
                    })(Ae, ve).catch((De) => ve.error(De));
                });
            }
        },
        6451: (pt, Me, P) => {
            P.d(Me, { T: () => _e });
            var p = P(8189),
                Q = P(8421),
                O = P(515),
                ie = P(7669),
                he = P(8996);
            function _e(...se) {
                const ge = (0, ie.yG)(se),
                    fe = (0, ie._6)(se, 1 / 0),
                    U = se;
                return U.length
                    ? 1 === U.length
                        ? (0, Q.Xf)(U[0])
                        : (0, p.J)(fe)((0, he.D)(U, ge))
                    : O.E;
            }
        },
        5403: (pt, Me, P) => {
            P.d(Me, { x: () => Q });
            var p = P(930);
            function Q(ie, he, _e, se, ge) {
                return new O(ie, he, _e, se, ge);
            }
            class O extends p.Lv {
                constructor(he, _e, se, ge, fe, U) {
                    super(he),
                        (this.onFinalize = fe),
                        (this.shouldUnsubscribe = U),
                        (this._next = _e
                            ? function (B) {
                                  try {
                                      _e(B);
                                  } catch (J) {
                                      he.error(J);
                                  }
                              }
                            : super._next),
                        (this._error = ge
                            ? function (B) {
                                  try {
                                      ge(B);
                                  } catch (J) {
                                      he.error(J);
                                  } finally {
                                      this.unsubscribe();
                                  }
                              }
                            : super._error),
                        (this._complete = se
                            ? function () {
                                  try {
                                      se();
                                  } catch (B) {
                                      he.error(B);
                                  } finally {
                                      this.unsubscribe();
                                  }
                              }
                            : super._complete);
                }
                unsubscribe() {
                    var he;
                    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
                        const { closed: _e } = this;
                        super.unsubscribe(),
                            !_e &&
                                (null === (he = this.onFinalize) ||
                                    void 0 === he ||
                                    he.call(this));
                    }
                }
            }
        },
        4004: (pt, Me, P) => {
            P.d(Me, { U: () => O });
            var p = P(4482),
                Q = P(5403);
            function O(ie, he) {
                return (0, p.e)((_e, se) => {
                    let ge = 0;
                    _e.subscribe(
                        (0, Q.x)(se, (fe) => {
                            se.next(ie.call(he, fe, ge++));
                        })
                    );
                });
            }
        },
        8189: (pt, Me, P) => {
            P.d(Me, { J: () => O });
            var p = P(5577),
                Q = P(4671);
            function O(ie = 1 / 0) {
                return (0, p.z)(Q.y, ie);
            }
        },
        5577: (pt, Me, P) => {
            P.d(Me, { z: () => ge });
            var p = P(4004),
                Q = P(8421),
                O = P(4482),
                ie = P(9672),
                he = P(5403),
                se = P(576);
            function ge(fe, U, B = 1 / 0) {
                return (0, se.m)(U)
                    ? ge(
                          (J, Le) =>
                              (0, p.U)((Ee, Se) => U(J, Ee, Le, Se))(
                                  (0, Q.Xf)(fe(J, Le))
                              ),
                          B
                      )
                    : ("number" == typeof U && (B = U),
                      (0, O.e)((J, Le) =>
                          (function _e(fe, U, B, J, Le, Ee, Se, He) {
                              const ce = [];
                              let de = 0,
                                  nt = 0,
                                  Qe = !1;
                              const Ae = () => {
                                      Qe && !ce.length && !de && U.complete();
                                  },
                                  ve = (We) => (de < J ? De(We) : ce.push(We)),
                                  De = (We) => {
                                      Ee && U.next(We), de++;
                                      let Ue = !1;
                                      (0, Q.Xf)(B(We, nt++)).subscribe(
                                          (0, he.x)(
                                              U,
                                              (j) => {
                                                  Le?.(j),
                                                      Ee ? ve(j) : U.next(j);
                                              },
                                              () => {
                                                  Ue = !0;
                                              },
                                              void 0,
                                              () => {
                                                  if (Ue)
                                                      try {
                                                          for (
                                                              de--;
                                                              ce.length &&
                                                              de < J;

                                                          ) {
                                                              const j =
                                                                  ce.shift();
                                                              Se
                                                                  ? (0, ie.f)(
                                                                        U,
                                                                        Se,
                                                                        () =>
                                                                            De(
                                                                                j
                                                                            )
                                                                    )
                                                                  : De(j);
                                                          }
                                                          Ae();
                                                      } catch (j) {
                                                          U.error(j);
                                                      }
                                              }
                                          )
                                      );
                                  };
                              return (
                                  fe.subscribe(
                                      (0, he.x)(U, ve, () => {
                                          (Qe = !0), Ae();
                                      })
                                  ),
                                  () => {
                                      He?.();
                                  }
                              );
                          })(J, Le, fe, B)
                      ));
            }
        },
        5363: (pt, Me, P) => {
            P.d(Me, { Q: () => ie });
            var p = P(9672),
                Q = P(4482),
                O = P(5403);
            function ie(he, _e = 0) {
                return (0, Q.e)((se, ge) => {
                    se.subscribe(
                        (0, O.x)(
                            ge,
                            (fe) => (0, p.f)(ge, he, () => ge.next(fe), _e),
                            () => (0, p.f)(ge, he, () => ge.complete(), _e),
                            (fe) => (0, p.f)(ge, he, () => ge.error(fe), _e)
                        )
                    );
                });
            }
        },
        3099: (pt, Me, P) => {
            P.d(Me, { B: () => he });
            var p = P(8421),
                Q = P(7579),
                O = P(930),
                ie = P(4482);
            function he(se = {}) {
                const {
                    connector: ge = () => new Q.x(),
                    resetOnError: fe = !0,
                    resetOnComplete: U = !0,
                    resetOnRefCountZero: B = !0,
                } = se;
                return (J) => {
                    let Le,
                        Ee,
                        Se,
                        He = 0,
                        ce = !1,
                        de = !1;
                    const nt = () => {
                            Ee?.unsubscribe(), (Ee = void 0);
                        },
                        Qe = () => {
                            nt(), (Le = Se = void 0), (ce = de = !1);
                        },
                        Ae = () => {
                            const ve = Le;
                            Qe(), ve?.unsubscribe();
                        };
                    return (0, ie.e)((ve, De) => {
                        He++, !de && !ce && nt();
                        const We = (Se = Se ?? ge());
                        De.add(() => {
                            He--, 0 === He && !de && !ce && (Ee = _e(Ae, B));
                        }),
                            We.subscribe(De),
                            !Le &&
                                He > 0 &&
                                ((Le = new O.Hp({
                                    next: (Ue) => We.next(Ue),
                                    error: (Ue) => {
                                        (de = !0),
                                            nt(),
                                            (Ee = _e(Qe, fe, Ue)),
                                            We.error(Ue);
                                    },
                                    complete: () => {
                                        (ce = !0),
                                            nt(),
                                            (Ee = _e(Qe, U)),
                                            We.complete();
                                    },
                                })),
                                (0, p.Xf)(ve).subscribe(Le));
                    })(J);
                };
            }
            function _e(se, ge, ...fe) {
                if (!0 === ge) return void se();
                if (!1 === ge) return;
                const U = new O.Hp({
                    next: () => {
                        U.unsubscribe(), se();
                    },
                });
                return ge(...fe).subscribe(U);
            }
        },
        9468: (pt, Me, P) => {
            P.d(Me, { R: () => Q });
            var p = P(4482);
            function Q(O, ie = 0) {
                return (0, p.e)((he, _e) => {
                    _e.add(O.schedule(() => he.subscribe(_e), ie));
                });
            }
        },
        8505: (pt, Me, P) => {
            P.d(Me, { b: () => he });
            var p = P(576),
                Q = P(4482),
                O = P(5403),
                ie = P(4671);
            function he(_e, se, ge) {
                const fe =
                    (0, p.m)(_e) || se || ge
                        ? { next: _e, error: se, complete: ge }
                        : _e;
                return fe
                    ? (0, Q.e)((U, B) => {
                          var J;
                          null === (J = fe.subscribe) ||
                              void 0 === J ||
                              J.call(fe);
                          let Le = !0;
                          U.subscribe(
                              (0, O.x)(
                                  B,
                                  (Ee) => {
                                      var Se;
                                      null === (Se = fe.next) ||
                                          void 0 === Se ||
                                          Se.call(fe, Ee),
                                          B.next(Ee);
                                  },
                                  () => {
                                      var Ee;
                                      (Le = !1),
                                          null === (Ee = fe.complete) ||
                                              void 0 === Ee ||
                                              Ee.call(fe),
                                          B.complete();
                                  },
                                  (Ee) => {
                                      var Se;
                                      (Le = !1),
                                          null === (Se = fe.error) ||
                                              void 0 === Se ||
                                              Se.call(fe, Ee),
                                          B.error(Ee);
                                  },
                                  () => {
                                      var Ee, Se;
                                      Le &&
                                          (null === (Ee = fe.unsubscribe) ||
                                              void 0 === Ee ||
                                              Ee.call(fe)),
                                          null === (Se = fe.finalize) ||
                                              void 0 === Se ||
                                              Se.call(fe);
                                  }
                              )
                          );
                      })
                    : ie.y;
            }
        },
        4408: (pt, Me, P) => {
            P.d(Me, { o: () => he });
            var p = P(727);
            class Q extends p.w0 {
                constructor(se, ge) {
                    super();
                }
                schedule(se, ge = 0) {
                    return this;
                }
            }
            const O = {
                setInterval(_e, se, ...ge) {
                    const { delegate: fe } = O;
                    return fe?.setInterval
                        ? fe.setInterval(_e, se, ...ge)
                        : setInterval(_e, se, ...ge);
                },
                clearInterval(_e) {
                    const { delegate: se } = O;
                    return (se?.clearInterval || clearInterval)(_e);
                },
                delegate: void 0,
            };
            var ie = P(8737);
            class he extends Q {
                constructor(se, ge) {
                    super(se, ge),
                        (this.scheduler = se),
                        (this.work = ge),
                        (this.pending = !1);
                }
                schedule(se, ge = 0) {
                    if (this.closed) return this;
                    this.state = se;
                    const fe = this.id,
                        U = this.scheduler;
                    return (
                        null != fe &&
                            (this.id = this.recycleAsyncId(U, fe, ge)),
                        (this.pending = !0),
                        (this.delay = ge),
                        (this.id =
                            this.id || this.requestAsyncId(U, this.id, ge)),
                        this
                    );
                }
                requestAsyncId(se, ge, fe = 0) {
                    return O.setInterval(se.flush.bind(se, this), fe);
                }
                recycleAsyncId(se, ge, fe = 0) {
                    if (null != fe && this.delay === fe && !1 === this.pending)
                        return ge;
                    O.clearInterval(ge);
                }
                execute(se, ge) {
                    if (this.closed)
                        return new Error("executing a cancelled action");
                    this.pending = !1;
                    const fe = this._execute(se, ge);
                    if (fe) return fe;
                    !1 === this.pending &&
                        null != this.id &&
                        (this.id = this.recycleAsyncId(
                            this.scheduler,
                            this.id,
                            null
                        ));
                }
                _execute(se, ge) {
                    let U,
                        fe = !1;
                    try {
                        this.work(se);
                    } catch (B) {
                        (fe = !0),
                            (U =
                                B ||
                                new Error(
                                    "Scheduled action threw falsy error"
                                ));
                    }
                    if (fe) return this.unsubscribe(), U;
                }
                unsubscribe() {
                    if (!this.closed) {
                        const { id: se, scheduler: ge } = this,
                            { actions: fe } = ge;
                        (this.work = this.state = this.scheduler = null),
                            (this.pending = !1),
                            (0, ie.P)(fe, this),
                            null != se &&
                                (this.id = this.recycleAsyncId(ge, se, null)),
                            (this.delay = null),
                            super.unsubscribe();
                    }
                }
            }
        },
        7565: (pt, Me, P) => {
            P.d(Me, { v: () => O });
            var p = P(6063);
            class Q {
                constructor(he, _e = Q.now) {
                    (this.schedulerActionCtor = he), (this.now = _e);
                }
                schedule(he, _e = 0, se) {
                    return new this.schedulerActionCtor(this, he).schedule(
                        se,
                        _e
                    );
                }
            }
            Q.now = p.l.now;
            class O extends Q {
                constructor(he, _e = Q.now) {
                    super(he, _e),
                        (this.actions = []),
                        (this._active = !1),
                        (this._scheduled = void 0);
                }
                flush(he) {
                    const { actions: _e } = this;
                    if (this._active) return void _e.push(he);
                    let se;
                    this._active = !0;
                    do {
                        if ((se = he.execute(he.state, he.delay))) break;
                    } while ((he = _e.shift()));
                    if (((this._active = !1), se)) {
                        for (; (he = _e.shift()); ) he.unsubscribe();
                        throw se;
                    }
                }
            }
        },
        4986: (pt, Me, P) => {
            P.d(Me, { z: () => O });
            var p = P(4408);
            const O = new (P(7565).v)(p.o);
        },
        6063: (pt, Me, P) => {
            P.d(Me, { l: () => p });
            const p = {
                now: () => (p.delegate || Date).now(),
                delegate: void 0,
            };
        },
        3410: (pt, Me, P) => {
            P.d(Me, { z: () => p });
            const p = {
                setTimeout(Q, O, ...ie) {
                    const { delegate: he } = p;
                    return he?.setTimeout
                        ? he.setTimeout(Q, O, ...ie)
                        : setTimeout(Q, O, ...ie);
                },
                clearTimeout(Q) {
                    const { delegate: O } = p;
                    return (O?.clearTimeout || clearTimeout)(Q);
                },
                delegate: void 0,
            };
        },
        2202: (pt, Me, P) => {
            P.d(Me, { h: () => Q });
            const Q = (function p() {
                return "function" == typeof Symbol && Symbol.iterator
                    ? Symbol.iterator
                    : "@@iterator";
            })();
        },
        8822: (pt, Me, P) => {
            P.d(Me, { L: () => p });
            const p =
                ("function" == typeof Symbol && Symbol.observable) ||
                "@@observable";
        },
        7669: (pt, Me, P) => {
            P.d(Me, { _6: () => _e, jO: () => ie, yG: () => he });
            var p = P(576);
            function O(se) {
                return se[se.length - 1];
            }
            function ie(se) {
                return (0, p.m)(O(se)) ? se.pop() : void 0;
            }
            function he(se) {
                return (function Q(se) {
                    return se && (0, p.m)(se.schedule);
                })(O(se))
                    ? se.pop()
                    : void 0;
            }
            function _e(se, ge) {
                return "number" == typeof O(se) ? se.pop() : ge;
            }
        },
        8737: (pt, Me, P) => {
            function p(Q, O) {
                if (Q) {
                    const ie = Q.indexOf(O);
                    0 <= ie && Q.splice(ie, 1);
                }
            }
            P.d(Me, { P: () => p });
        },
        3888: (pt, Me, P) => {
            function p(Q) {
                const ie = Q((he) => {
                    Error.call(he), (he.stack = new Error().stack);
                });
                return (
                    (ie.prototype = Object.create(Error.prototype)),
                    (ie.prototype.constructor = ie),
                    ie
                );
            }
            P.d(Me, { d: () => p });
        },
        2806: (pt, Me, P) => {
            P.d(Me, { O: () => ie, x: () => O });
            var p = P(2416);
            let Q = null;
            function O(he) {
                if (p.v.useDeprecatedSynchronousErrorHandling) {
                    const _e = !Q;
                    if (
                        (_e && (Q = { errorThrown: !1, error: null }), he(), _e)
                    ) {
                        const { errorThrown: se, error: ge } = Q;
                        if (((Q = null), se)) throw ge;
                    }
                } else he();
            }
            function ie(he) {
                p.v.useDeprecatedSynchronousErrorHandling &&
                    Q &&
                    ((Q.errorThrown = !0), (Q.error = he));
            }
        },
        9672: (pt, Me, P) => {
            function p(Q, O, ie, he = 0, _e = !1) {
                const se = O.schedule(function () {
                    ie(),
                        _e
                            ? Q.add(this.schedule(null, he))
                            : this.unsubscribe();
                }, he);
                if ((Q.add(se), !_e)) return se;
            }
            P.d(Me, { f: () => p });
        },
        4671: (pt, Me, P) => {
            function p(Q) {
                return Q;
            }
            P.d(Me, { y: () => p });
        },
        1144: (pt, Me, P) => {
            P.d(Me, { z: () => p });
            const p = (Q) =>
                Q && "number" == typeof Q.length && "function" != typeof Q;
        },
        2206: (pt, Me, P) => {
            P.d(Me, { D: () => Q });
            var p = P(576);
            function Q(O) {
                return (
                    Symbol.asyncIterator && (0, p.m)(O?.[Symbol.asyncIterator])
                );
            }
        },
        576: (pt, Me, P) => {
            function p(Q) {
                return "function" == typeof Q;
            }
            P.d(Me, { m: () => p });
        },
        3670: (pt, Me, P) => {
            P.d(Me, { c: () => O });
            var p = P(8822),
                Q = P(576);
            function O(ie) {
                return (0, Q.m)(ie[p.L]);
            }
        },
        6495: (pt, Me, P) => {
            P.d(Me, { T: () => O });
            var p = P(2202),
                Q = P(576);
            function O(ie) {
                return (0, Q.m)(ie?.[p.h]);
            }
        },
        8239: (pt, Me, P) => {
            P.d(Me, { t: () => Q });
            var p = P(576);
            function Q(O) {
                return (0, p.m)(O?.then);
            }
        },
        3260: (pt, Me, P) => {
            P.d(Me, { L: () => ie, Q: () => O });
            var p = P(655),
                Q = P(576);
            function O(he) {
                return (0, p.FC)(this, arguments, function* () {
                    const se = he.getReader();
                    try {
                        for (;;) {
                            const { value: ge, done: fe } = yield (0, p.qq)(
                                se.read()
                            );
                            if (fe) return yield (0, p.qq)(void 0);
                            yield yield (0, p.qq)(ge);
                        }
                    } finally {
                        se.releaseLock();
                    }
                });
            }
            function ie(he) {
                return (0, Q.m)(he?.getReader);
            }
        },
        4482: (pt, Me, P) => {
            P.d(Me, { A: () => Q, e: () => O });
            var p = P(576);
            function Q(ie) {
                return (0, p.m)(ie?.lift);
            }
            function O(ie) {
                return (he) => {
                    if (Q(he))
                        return he.lift(function (_e) {
                            try {
                                return ie(_e, this);
                            } catch (se) {
                                this.error(se);
                            }
                        });
                    throw new TypeError(
                        "Unable to lift unknown Observable type"
                    );
                };
            }
        },
        5032: (pt, Me, P) => {
            function p() {}
            P.d(Me, { Z: () => p });
        },
        7849: (pt, Me, P) => {
            P.d(Me, { h: () => O });
            var p = P(2416),
                Q = P(3410);
            function O(ie) {
                Q.z.setTimeout(() => {
                    const { onUnhandledError: he } = p.v;
                    if (!he) throw ie;
                    he(ie);
                });
            }
        },
        4532: (pt, Me, P) => {
            function p(Q) {
                return new TypeError(
                    `You provided ${
                        null !== Q && "object" == typeof Q
                            ? "an invalid object"
                            : `'${Q}'`
                    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
                );
            }
            P.d(Me, { z: () => p });
        },
        655: (pt, Me, P) => {
            function ie(Y, te) {
                var X = {};
                for (var pe in Y)
                    Object.prototype.hasOwnProperty.call(Y, pe) &&
                        te.indexOf(pe) < 0 &&
                        (X[pe] = Y[pe]);
                if (
                    null != Y &&
                    "function" == typeof Object.getOwnPropertySymbols
                ) {
                    var oe = 0;
                    for (
                        pe = Object.getOwnPropertySymbols(Y);
                        oe < pe.length;
                        oe++
                    )
                        te.indexOf(pe[oe]) < 0 &&
                            Object.prototype.propertyIsEnumerable.call(
                                Y,
                                pe[oe]
                            ) &&
                            (X[pe[oe]] = Y[pe[oe]]);
                }
                return X;
            }
            function ge(Y, te, X, pe) {
                return new (X || (X = Promise))(function (Be, ct) {
                    function Gt(rn) {
                        try {
                            Ke(pe.next(rn));
                        } catch (Yn) {
                            ct(Yn);
                        }
                    }
                    function Pt(rn) {
                        try {
                            Ke(pe.throw(rn));
                        } catch (Yn) {
                            ct(Yn);
                        }
                    }
                    function Ke(rn) {
                        rn.done
                            ? Be(rn.value)
                            : (function oe(Be) {
                                  return Be instanceof X
                                      ? Be
                                      : new X(function (ct) {
                                            ct(Be);
                                        });
                              })(rn.value).then(Gt, Pt);
                    }
                    Ke((pe = pe.apply(Y, te || [])).next());
                });
            }
            function ce(Y) {
                return this instanceof ce ? ((this.v = Y), this) : new ce(Y);
            }
            function de(Y, te, X) {
                if (!Symbol.asyncIterator)
                    throw new TypeError("Symbol.asyncIterator is not defined.");
                var oe,
                    pe = X.apply(Y, te || []),
                    Be = [];
                return (
                    (oe = {}),
                    ct("next"),
                    ct("throw"),
                    ct("return"),
                    (oe[Symbol.asyncIterator] = function () {
                        return this;
                    }),
                    oe
                );
                function ct(yn) {
                    pe[yn] &&
                        (oe[yn] = function (Jt) {
                            return new Promise(function (qn, kt) {
                                Be.push([yn, Jt, qn, kt]) > 1 || Gt(yn, Jt);
                            });
                        });
                }
                function Gt(yn, Jt) {
                    try {
                        !(function Pt(yn) {
                            yn.value instanceof ce
                                ? Promise.resolve(yn.value.v).then(Ke, rn)
                                : Yn(Be[0][2], yn);
                        })(pe[yn](Jt));
                    } catch (qn) {
                        Yn(Be[0][3], qn);
                    }
                }
                function Ke(yn) {
                    Gt("next", yn);
                }
                function rn(yn) {
                    Gt("throw", yn);
                }
                function Yn(yn, Jt) {
                    yn(Jt), Be.shift(), Be.length && Gt(Be[0][0], Be[0][1]);
                }
            }
            function Qe(Y) {
                if (!Symbol.asyncIterator)
                    throw new TypeError("Symbol.asyncIterator is not defined.");
                var X,
                    te = Y[Symbol.asyncIterator];
                return te
                    ? te.call(Y)
                    : ((Y = (function J(Y) {
                          var te =
                                  "function" == typeof Symbol &&
                                  Symbol.iterator,
                              X = te && Y[te],
                              pe = 0;
                          if (X) return X.call(Y);
                          if (Y && "number" == typeof Y.length)
                              return {
                                  next: function () {
                                      return (
                                          Y && pe >= Y.length && (Y = void 0),
                                          { value: Y && Y[pe++], done: !Y }
                                      );
                                  },
                              };
                          throw new TypeError(
                              te
                                  ? "Object is not iterable."
                                  : "Symbol.iterator is not defined."
                          );
                      })(Y)),
                      (X = {}),
                      pe("next"),
                      pe("throw"),
                      pe("return"),
                      (X[Symbol.asyncIterator] = function () {
                          return this;
                      }),
                      X);
                function pe(Be) {
                    X[Be] =
                        Y[Be] &&
                        function (ct) {
                            return new Promise(function (Gt, Pt) {
                                !(function oe(Be, ct, Gt, Pt) {
                                    Promise.resolve(Pt).then(function (Ke) {
                                        Be({ value: Ke, done: Gt });
                                    }, ct);
                                })(Gt, Pt, (ct = Y[Be](ct)).done, ct.value);
                            });
                        };
                }
            }
            P.d(Me, {
                FC: () => de,
                KL: () => Qe,
                _T: () => ie,
                mG: () => ge,
                qq: () => ce,
            });
        },
        4650: (pt, Me, P) => {
            P.d(Me, {
                $8M: () => bh,
                $Z: () => DI,
                AFp: () => Jm,
                AaK: () => ge,
                CHM: () => Tn,
                CRH: () => Ub,
                CZH: () => Wl,
                CqO: () => iC,
                D6c: () => Fx,
                EJc: () => m0,
                EpF: () => ym,
                F4k: () => rC,
                FYo: () => Lw,
                FiY: () => No,
                G48: () => hD,
                GfV: () => Uw,
                Gpc: () => B,
                JOm: () => tr,
                KtG: () => St,
                LFG: () => Un,
                LSH: () => no,
                Lbi: () => Xb,
                MAs: () => gm,
                MMx: () => Gw,
                NdJ: () => Rf,
                OlP: () => mn,
                PXZ: () => lD,
                Q6J: () => Af,
                QGY: () => lw,
                QP$: () => Od,
                Qsj: () => $f,
                R0b: () => Zi,
                RDi: () => jy,
                Rgc: () => $l,
                SBq: () => jl,
                Sil: () => t_,
                Suo: () => Xw,
                TTD: () => Ti,
                TgZ: () => gd,
                X6Q: () => dD,
                XFs: () => dt,
                Xpm: () => L,
                Xts: () => Dv,
                Y36: () => rd,
                YKP: () => ub,
                YNc: () => sw,
                Yjl: () => le,
                Yz7: () => Jt,
                ZZ4: () => F0,
                _Bn: () => sb,
                _UZ: () => aw,
                _Vd: () => Du,
                _c5: () => ID,
                _uU: () => _w,
                aQg: () => __,
                c2e: () => g0,
                cJS: () => kt,
                cg1: () => Dw,
                dDg: () => r_,
                deG: () => Yp,
                dqk: () => qe,
                eFA: () => S0,
                ekj: () => kf,
                eoX: () => aD,
                f3M: () => Qa,
                g9A: () => p0,
                h0i: () => Tu,
                hGG: () => V0,
                hM9: () => WA,
                hij: () => oi,
                iGM: () => Vb,
                ifc: () => Wt,
                ip1: () => Zf,
                kL8: () => UC,
                lG2: () => ne,
                lqb: () => as,
                lri: () => b0,
                n5z: () => Kp,
                oAB: () => ot,
                oxw: () => yd,
                q4F: () => hb,
                qLn: () => El,
                qOj: () => Wo,
                qZA: () => xf,
                rWj: () => D0,
                sBO: () => h_,
                sIi: () => Us,
                s_b: () => Nd,
                soG: () => e_,
                tb: () => eD,
                tp0: () => Xs,
                uIk: () => dd,
                vHH: () => Se,
                vpe: () => ms,
                wAp: () => Nt,
                xp6: () => pI,
                z2F: () => Xf,
                zSh: () => jg,
                zs3: () => Vo,
            });
            var p = P(7579),
                Q = P(727),
                O = P(8306),
                ie = P(6451),
                he = P(3099);
            function _e(s) {
                for (let o in s) if (s[o] === _e) return o;
                throw Error(
                    "Could not find renamed property on target object."
                );
            }
            function se(s, o) {
                for (const u in o)
                    o.hasOwnProperty(u) &&
                        !s.hasOwnProperty(u) &&
                        (s[u] = o[u]);
            }
            function ge(s) {
                if ("string" == typeof s) return s;
                if (Array.isArray(s)) return "[" + s.map(ge).join(", ") + "]";
                if (null == s) return "" + s;
                if (s.overriddenName) return `${s.overriddenName}`;
                if (s.name) return `${s.name}`;
                const o = s.toString();
                if (null == o) return "" + o;
                const u = o.indexOf("\n");
                return -1 === u ? o : o.substring(0, u);
            }
            function fe(s, o) {
                return null == s || "" === s
                    ? null === o
                        ? ""
                        : o
                    : null == o || "" === o
                    ? s
                    : s + " " + o;
            }
            const U = _e({ __forward_ref__: _e });
            function B(s) {
                return (
                    (s.__forward_ref__ = B),
                    (s.toString = function () {
                        return ge(this());
                    }),
                    s
                );
            }
            function J(s) {
                return Le(s) ? s() : s;
            }
            function Le(s) {
                return (
                    "function" == typeof s &&
                    s.hasOwnProperty(U) &&
                    s.__forward_ref__ === B
                );
            }
            class Se extends Error {
                constructor(o, u) {
                    super(
                        (function He(s, o) {
                            return `NG0${Math.abs(s)}${
                                o ? ": " + o.trim() : ""
                            }`;
                        })(o, u)
                    ),
                        (this.code = o);
                }
            }
            function ce(s) {
                return "string" == typeof s ? s : null == s ? "" : String(s);
            }
            function ve(s, o) {
                throw new Se(-201, !1);
            }
            function Pt(s, o) {
                null == s &&
                    (function Ke(s, o, u, c) {
                        throw new Error(
                            `ASSERTION ERROR: ${s}` +
                                (null == c
                                    ? ""
                                    : ` [Expected=> ${u} ${c} ${o} <=Actual]`)
                        );
                    })(o, s, null, "!=");
            }
            function Jt(s) {
                return {
                    token: s.token,
                    providedIn: s.providedIn || null,
                    factory: s.factory,
                    value: void 0,
                };
            }
            function kt(s) {
                return {
                    providers: s.providers || [],
                    imports: s.imports || [],
                };
            }
            function xt(s) {
                return Or(s, Ir) || Or(s, Fr);
            }
            function Or(s, o) {
                return s.hasOwnProperty(o) ? s[o] : null;
            }
            function Nn(s) {
                return s && (s.hasOwnProperty(Cr) || s.hasOwnProperty(sr))
                    ? s[Cr]
                    : null;
            }
            const Ir = _e({ ɵprov: _e }),
                Cr = _e({ ɵinj: _e }),
                Fr = _e({ ngInjectableDef: _e }),
                sr = _e({ ngInjectorDef: _e });
            var dt = (() => (
                ((dt = dt || {})[(dt.Default = 0)] = "Default"),
                (dt[(dt.Host = 1)] = "Host"),
                (dt[(dt.Self = 2)] = "Self"),
                (dt[(dt.SkipSelf = 4)] = "SkipSelf"),
                (dt[(dt.Optional = 8)] = "Optional"),
                dt
            ))();
            let or;
            function Pn(s) {
                const o = or;
                return (or = s), o;
            }
            function br(s, o, u) {
                const c = xt(s);
                return c && "root" == c.providedIn
                    ? void 0 === c.value
                        ? (c.value = c.factory())
                        : c.value
                    : u & dt.Optional
                    ? null
                    : void 0 !== o
                    ? o
                    : void ve(ge(s));
            }
            function ln(s) {
                return { toString: s }.toString();
            }
            var Fn = (() => (
                    ((Fn = Fn || {})[(Fn.OnPush = 0)] = "OnPush"),
                    (Fn[(Fn.Default = 1)] = "Default"),
                    Fn
                ))(),
                Wt = (() => {
                    return (
                        ((s = Wt || (Wt = {}))[(s.Emulated = 0)] = "Emulated"),
                        (s[(s.None = 2)] = "None"),
                        (s[(s.ShadowDom = 3)] = "ShadowDom"),
                        Wt
                    );
                    var s;
                })();
            const qe = (() =>
                    (typeof globalThis < "u" && globalThis) ||
                    (typeof global < "u" && global) ||
                    (typeof window < "u" && window) ||
                    (typeof self < "u" &&
                        typeof WorkerGlobalScope < "u" &&
                        self instanceof WorkerGlobalScope &&
                        self))(),
                Qn = {},
                Tt = [],
                yr = _e({ ɵcmp: _e }),
                Ln = _e({ ɵdir: _e }),
                vr = _e({ ɵpipe: _e }),
                Xt = _e({ ɵmod: _e }),
                Jn = _e({ ɵfac: _e }),
                V = _e({ __NG_ELEMENT_ID__: _e });
            let W = 0;
            function L(s) {
                return ln(() => {
                    const u = !0 === s.standalone,
                        c = {},
                        d = {
                            type: s.type,
                            providersResolver: null,
                            decls: s.decls,
                            vars: s.vars,
                            factory: null,
                            template: s.template || null,
                            consts: s.consts || null,
                            ngContentSelectors: s.ngContentSelectors,
                            hostBindings: s.hostBindings || null,
                            hostVars: s.hostVars || 0,
                            hostAttrs: s.hostAttrs || null,
                            contentQueries: s.contentQueries || null,
                            declaredInputs: c,
                            inputs: null,
                            outputs: null,
                            exportAs: s.exportAs || null,
                            onPush: s.changeDetection === Fn.OnPush,
                            directiveDefs: null,
                            pipeDefs: null,
                            standalone: u,
                            dependencies: (u && s.dependencies) || null,
                            getStandaloneInjector: null,
                            selectors: s.selectors || Tt,
                            viewQuery: s.viewQuery || null,
                            features: s.features || null,
                            data: s.data || {},
                            encapsulation: s.encapsulation || Wt.Emulated,
                            id: "c" + W++,
                            styles: s.styles || Tt,
                            _: null,
                            setInput: null,
                            schemas: s.schemas || null,
                            tView: null,
                        },
                        g = s.dependencies,
                        w = s.features;
                    return (
                        (d.inputs = Zt(s.inputs, c)),
                        (d.outputs = Zt(s.outputs)),
                        w && w.forEach((I) => I(d)),
                        (d.directiveDefs = g
                            ? () =>
                                  ("function" == typeof g ? g() : g)
                                      .map(G)
                                      .filter(xe)
                            : null),
                        (d.pipeDefs = g
                            ? () =>
                                  ("function" == typeof g ? g() : g)
                                      .map(ze)
                                      .filter(xe)
                            : null),
                        d
                    );
                });
            }
            function G(s) {
                return be(s) || Oe(s);
            }
            function xe(s) {
                return null !== s;
            }
            const Ze = {};
            function ot(s) {
                return ln(() => {
                    const o = {
                        type: s.type,
                        bootstrap: s.bootstrap || Tt,
                        declarations: s.declarations || Tt,
                        imports: s.imports || Tt,
                        exports: s.exports || Tt,
                        transitiveCompileScopes: null,
                        schemas: s.schemas || null,
                        id: s.id || null,
                    };
                    return null != s.id && (Ze[s.id] = s.type), o;
                });
            }
            function Zt(s, o) {
                if (null == s) return Qn;
                const u = {};
                for (const c in s)
                    if (s.hasOwnProperty(c)) {
                        let d = s[c],
                            g = d;
                        Array.isArray(d) && ((g = d[1]), (d = d[0])),
                            (u[d] = c),
                            o && (o[d] = g);
                    }
                return u;
            }
            const ne = L;
            function le(s) {
                return {
                    type: s.type,
                    name: s.name,
                    factory: null,
                    pure: !1 !== s.pure,
                    standalone: !0 === s.standalone,
                    onDestroy: s.type.prototype.ngOnDestroy || null,
                };
            }
            function be(s) {
                return s[yr] || null;
            }
            function Oe(s) {
                return s[Ln] || null;
            }
            function ze(s) {
                return s[vr] || null;
            }
            function ut(s, o) {
                const u = s[Xt] || null;
                if (!u && !0 === o)
                    throw new Error(
                        `Type ${ge(s)} does not have '\u0275mod' property.`
                    );
                return u;
            }
            function Xn(s) {
                return Array.isArray(s) && "object" == typeof s[1];
            }
            function bi(s) {
                return Array.isArray(s) && !0 === s[1];
            }
            function Ts(s) {
                return 0 != (8 & s.flags);
            }
            function Gs(s) {
                return 2 == (2 & s.flags);
            }
            function Hi(s) {
                return 1 == (1 & s.flags);
            }
            function Di(s) {
                return null !== s.template;
            }
            function ea(s) {
                return 0 != (256 & s[2]);
            }
            function wo(s, o) {
                return s.hasOwnProperty(Jn) ? s[Jn] : null;
            }
            class qu {
                constructor(o, u, c) {
                    (this.previousValue = o),
                        (this.currentValue = u),
                        (this.firstChange = c);
                }
                isFirstChange() {
                    return this.firstChange;
                }
            }
            function Ti() {
                return zs;
            }
            function zs(s) {
                return s.type.prototype.ngOnChanges && (s.setInput = Ku), Eo;
            }
            function Eo() {
                const s = ra(this),
                    o = s?.current;
                if (o) {
                    const u = s.previous;
                    if (u === Qn) s.previous = o;
                    else for (let c in o) u[c] = o[c];
                    (s.current = null), this.ngOnChanges(o);
                }
            }
            function Ku(s, o, u, c) {
                const d =
                        ra(s) ||
                        (function Zu(s, o) {
                            return (s[na] = o);
                        })(s, { previous: Qn, current: null }),
                    g = d.current || (d.current = {}),
                    w = d.previous,
                    I = this.declaredInputs[u],
                    b = w[I];
                (g[I] = new qu(b && b.currentValue, o, w === Qn)), (s[c] = o);
            }
            Ti.ngInherit = !0;
            const na = "__ngSimpleChanges__";
            function ra(s) {
                return s[na] || null;
            }
            function lr(s) {
                for (; Array.isArray(s); ) s = s[0];
                return s;
            }
            function Wi(s, o) {
                return lr(o[s]);
            }
            function jr(s, o) {
                return lr(o[s.index]);
            }
            function ia(s, o) {
                return s.data[o];
            }
            function Vr(s, o) {
                const u = o[s];
                return Xn(u) ? u : u[0];
            }
            function Si(s) {
                return 4 == (4 & s[2]);
            }
            function Ks(s) {
                return 64 == (64 & s[2]);
            }
            function Ai(s, o) {
                return null == o ? null : s[o];
            }
            function Co(s) {
                s[18] = 0;
            }
            function oa(s, o) {
                s[5] += o;
                let u = s,
                    c = s[3];
                for (
                    ;
                    null !== c &&
                    ((1 === o && 1 === u[5]) || (-1 === o && 0 === u[5]));

                )
                    (c[5] += o), (u = c), (c = c[3]);
            }
            const Rt = { lFrame: Ec(null), bindingsEnabled: !0 };
            function Ye() {
                return Rt.bindingsEnabled;
            }
            function we() {
                return Rt.lFrame.lView;
            }
            function Ct() {
                return Rt.lFrame.tView;
            }
            function Tn(s) {
                return (Rt.lFrame.contextLView = s), s[8];
            }
            function St(s) {
                return (Rt.lFrame.contextLView = null), s;
            }
            function Sn() {
                let s = Ss();
                for (; null !== s && 64 === s.type; ) s = s.parent;
                return s;
            }
            function Ss() {
                return Rt.lFrame.currentTNode;
            }
            function Tr(s, o) {
                const u = Rt.lFrame;
                (u.currentTNode = s), (u.isParent = o);
            }
            function xs() {
                return Rt.lFrame.isParent;
            }
            function la() {
                return Rt.lFrame.bindingIndex++;
            }
            function mc(s, o) {
                const u = Rt.lFrame;
                (u.bindingIndex = u.bindingRootIndex = s), Qu(o);
            }
            function Qu(s) {
                Rt.lFrame.currentDirectiveIndex = s;
            }
            function yc() {
                return Rt.lFrame.currentQueryIndex;
            }
            function ph(s) {
                Rt.lFrame.currentQueryIndex = s;
            }
            function gh(s) {
                const o = s[1];
                return 2 === o.type ? o.declTNode : 1 === o.type ? s[6] : null;
            }
            function vc(s, o, u) {
                if (u & dt.SkipSelf) {
                    let d = o,
                        g = s;
                    for (
                        ;
                        !((d = d.parent),
                        null !== d ||
                            u & dt.Host ||
                            ((d = gh(g)),
                            null === d || ((g = g[15]), 10 & d.type)));

                    );
                    if (null === d) return !1;
                    (o = d), (s = g);
                }
                const c = (Rt.lFrame = hy());
                return (c.currentTNode = o), (c.lView = s), !0;
            }
            function wc(s) {
                const o = hy(),
                    u = s[1];
                (Rt.lFrame = o),
                    (o.currentTNode = u.firstChild),
                    (o.lView = s),
                    (o.tView = u),
                    (o.contextLView = s),
                    (o.bindingIndex = u.bindingStartIndex),
                    (o.inI18n = !1);
            }
            function hy() {
                const s = Rt.lFrame,
                    o = null === s ? null : s.child;
                return null === o ? Ec(s) : o;
            }
            function Ec(s) {
                const o = {
                    currentTNode: null,
                    isParent: !0,
                    lView: null,
                    tView: null,
                    selectedIndex: -1,
                    contextLView: null,
                    elementDepthCount: 0,
                    currentNamespace: null,
                    currentDirectiveIndex: -1,
                    bindingRootIndex: -1,
                    bindingIndex: -1,
                    currentQueryIndex: 0,
                    parent: s,
                    child: null,
                    inI18n: !1,
                };
                return null !== s && (s.child = o), o;
            }
            function $p() {
                const s = Rt.lFrame;
                return (
                    (Rt.lFrame = s.parent),
                    (s.currentTNode = null),
                    (s.lView = null),
                    s
                );
            }
            const Ic = $p;
            function Cc() {
                const s = $p();
                (s.isParent = !0),
                    (s.tView = null),
                    (s.selectedIndex = -1),
                    (s.contextLView = null),
                    (s.elementDepthCount = 0),
                    (s.currentDirectiveIndex = -1),
                    (s.currentNamespace = null),
                    (s.bindingRootIndex = -1),
                    (s.bindingIndex = -1),
                    (s.currentQueryIndex = 0);
            }
            function Sr() {
                return Rt.lFrame.selectedIndex;
            }
            function Zs(s) {
                Rt.lFrame.selectedIndex = s;
            }
            function Rn() {
                const s = Rt.lFrame;
                return ia(s.tView, s.selectedIndex);
            }
            function _h(s, o) {
                for (let u = o.directiveStart, c = o.directiveEnd; u < c; u++) {
                    const g = s.data[u].type.prototype,
                        {
                            ngAfterContentInit: w,
                            ngAfterContentChecked: I,
                            ngAfterViewInit: b,
                            ngAfterViewChecked: S,
                            ngOnDestroy: x,
                        } = g;
                    w && (s.contentHooks || (s.contentHooks = [])).push(-u, w),
                        I &&
                            ((s.contentHooks || (s.contentHooks = [])).push(
                                u,
                                I
                            ),
                            (
                                s.contentCheckHooks ||
                                (s.contentCheckHooks = [])
                            ).push(u, I)),
                        b && (s.viewHooks || (s.viewHooks = [])).push(-u, b),
                        S &&
                            ((s.viewHooks || (s.viewHooks = [])).push(u, S),
                            (s.viewCheckHooks || (s.viewCheckHooks = [])).push(
                                u,
                                S
                            )),
                        null != x &&
                            (s.destroyHooks || (s.destroyHooks = [])).push(
                                u,
                                x
                            );
                }
            }
            function Wp(s, o, u) {
                Do(s, o, 3, u);
            }
            function zp(s, o, u, c) {
                (3 & s[2]) === u && Do(s, o, u, c);
            }
            function yh(s, o) {
                let u = s[2];
                (3 & u) === o && ((u &= 2047), (u += 1), (s[2] = u));
            }
            function Do(s, o, u, c) {
                const g = c ?? -1,
                    w = o.length - 1;
                let I = 0;
                for (let b = void 0 !== c ? 65535 & s[18] : 0; b < w; b++)
                    if ("number" == typeof o[b + 1]) {
                        if (((I = o[b]), null != c && I >= c)) break;
                    } else
                        o[b] < 0 && (s[18] += 65536),
                            (I < g || -1 == g) &&
                                (zE(s, u, o, b),
                                (s[18] = (4294901760 & s[18]) + b + 2)),
                            b++;
            }
            function zE(s, o, u, c) {
                const d = u[c] < 0,
                    g = u[c + 1],
                    I = s[d ? -u[c] : u[c]];
                if (d) {
                    if (s[2] >> 11 < s[18] >> 16 && (3 & s[2]) === o) {
                        s[2] += 2048;
                        try {
                            g.call(I);
                        } finally {
                        }
                    }
                } else
                    try {
                        g.call(I);
                    } finally {
                    }
            }
            class ja {
                constructor(o, u, c) {
                    (this.factory = o),
                        (this.resolving = !1),
                        (this.canSeeViewProviders = u),
                        (this.injectImpl = c);
                }
            }
            function Ju(s, o, u) {
                let c = 0;
                for (; c < u.length; ) {
                    const d = u[c];
                    if ("number" == typeof d) {
                        if (0 !== d) break;
                        c++;
                        const g = u[c++],
                            w = u[c++],
                            I = u[c++];
                        s.setAttribute(o, w, I, g);
                    } else {
                        const g = d,
                            w = u[++c];
                        Xu(g)
                            ? s.setProperty(o, g, w)
                            : s.setAttribute(o, g, w),
                            c++;
                    }
                }
                return c;
            }
            function wy(s) {
                return 3 === s || 4 === s || 6 === s;
            }
            function Xu(s) {
                return 64 === s.charCodeAt(0);
            }
            function Dc(s, o) {
                if (null !== o && 0 !== o.length)
                    if (null === s || 0 === s.length) s = o.slice();
                    else {
                        let u = -1;
                        for (let c = 0; c < o.length; c++) {
                            const d = o[c];
                            "number" == typeof d
                                ? (u = d)
                                : 0 === u ||
                                  Ey(
                                      s,
                                      u,
                                      d,
                                      null,
                                      -1 === u || 2 === u ? o[++c] : null
                                  );
                        }
                    }
                return s;
            }
            function Ey(s, o, u, c, d) {
                let g = 0,
                    w = s.length;
                if (-1 === o) w = -1;
                else
                    for (; g < s.length; ) {
                        const I = s[g++];
                        if ("number" == typeof I) {
                            if (I === o) {
                                w = -1;
                                break;
                            }
                            if (I > o) {
                                w = g - 1;
                                break;
                            }
                        }
                    }
                for (; g < s.length; ) {
                    const I = s[g];
                    if ("number" == typeof I) break;
                    if (I === u) {
                        if (null === c)
                            return void (null !== d && (s[g + 1] = d));
                        if (c === s[g + 1]) return void (s[g + 2] = d);
                    }
                    g++, null !== c && g++, null !== d && g++;
                }
                -1 !== w && (s.splice(w, 0, o), (g = w + 1)),
                    s.splice(g++, 0, u),
                    null !== c && s.splice(g++, 0, c),
                    null !== d && s.splice(g++, 0, d);
            }
            function Iy(s) {
                return -1 !== s;
            }
            function el(s) {
                return 32767 & s;
            }
            function To(s, o) {
                let u = (function UT(s) {
                        return s >> 16;
                    })(s),
                    c = o;
                for (; u > 0; ) (c = c[15]), u--;
                return c;
            }
            let Cy = !0;
            function Ms(s) {
                const o = Cy;
                return (Cy = s), o;
            }
            let rs = 0;
            const An = {};
            function da(s, o) {
                const u = Ga(s, o);
                if (-1 !== u) return u;
                const c = o[1];
                c.firstCreatePass &&
                    ((s.injectorIndex = o.length),
                    vh(c.data, s),
                    vh(o, null),
                    vh(c.blueprint, null));
                const d = Tc(s, o),
                    g = s.injectorIndex;
                if (Iy(d)) {
                    const w = el(d),
                        I = To(d, o),
                        b = I[1].data;
                    for (let S = 0; S < 8; S++) o[g + S] = I[w + S] | b[w + S];
                }
                return (o[g + 8] = d), g;
            }
            function vh(s, o) {
                s.push(0, 0, 0, 0, 0, 0, 0, 0, o);
            }
            function Ga(s, o) {
                return -1 === s.injectorIndex ||
                    (s.parent && s.parent.injectorIndex === s.injectorIndex) ||
                    null === o[s.injectorIndex + 8]
                    ? -1
                    : s.injectorIndex;
            }
            function Tc(s, o) {
                if (s.parent && -1 !== s.parent.injectorIndex)
                    return s.parent.injectorIndex;
                let u = 0,
                    c = null,
                    d = o;
                for (; null !== d; ) {
                    if (((c = Ys(d)), null === c)) return -1;
                    if ((u++, (d = d[15]), -1 !== c.injectorIndex))
                        return c.injectorIndex | (u << 16);
                }
                return -1;
            }
            function So(s, o, u) {
                !(function Dy(s, o, u) {
                    let c;
                    "string" == typeof u
                        ? (c = u.charCodeAt(0) || 0)
                        : u.hasOwnProperty(V) && (c = u[V]),
                        null == c && (c = u[V] = rs++);
                    const d = 255 & c;
                    o.data[s + (d >> 5)] |= 1 << d;
                })(s, o, u);
            }
            function dr(s, o, u) {
                if (u & dt.Optional) return s;
                ve();
            }
            function Mt(s, o, u, c) {
                if (
                    (u & dt.Optional && void 0 === c && (c = null),
                    0 == (u & (dt.Self | dt.Host)))
                ) {
                    const d = s[9],
                        g = Pn(void 0);
                    try {
                        return d
                            ? d.get(o, c, u & dt.Optional)
                            : br(o, c, u & dt.Optional);
                    } finally {
                        Pn(g);
                    }
                }
                return dr(c, 0, u);
            }
            function wh(s, o, u, c = dt.Default, d) {
                if (null !== s) {
                    if (1024 & o[2]) {
                        const w = (function YE(s, o, u, c, d) {
                            let g = s,
                                w = o;
                            for (
                                ;
                                null !== g &&
                                null !== w &&
                                1024 & w[2] &&
                                !(256 & w[2]);

                            ) {
                                const I = Wa(g, w, u, c | dt.Self, An);
                                if (I !== An) return I;
                                let b = g.parent;
                                if (!b) {
                                    const S = w[21];
                                    if (S) {
                                        const x = S.get(u, An, c);
                                        if (x !== An) return x;
                                    }
                                    (b = Ys(w)), (w = w[15]);
                                }
                                g = b;
                            }
                            return d;
                        })(s, o, u, c, An);
                        if (w !== An) return w;
                    }
                    const g = Wa(s, o, u, c, An);
                    if (g !== An) return g;
                }
                return Mt(o, u, c, d);
            }
            function Wa(s, o, u, c, d) {
                const g = (function Eh(s) {
                    if ("string" == typeof s) return s.charCodeAt(0) || 0;
                    const o = s.hasOwnProperty(V) ? s[V] : void 0;
                    return "number" == typeof o ? (o >= 0 ? 255 & o : Ih) : o;
                })(u);
                if ("function" == typeof g) {
                    if (!vc(o, s, c))
                        return c & dt.Host ? dr(d, 0, c) : Mt(o, u, c, d);
                    try {
                        const w = g(c);
                        if (null != w || c & dt.Optional) return w;
                        ve();
                    } finally {
                        Ic();
                    }
                } else if ("number" == typeof g) {
                    let w = null,
                        I = Ga(s, o),
                        b = -1,
                        S = c & dt.Host ? o[16][6] : null;
                    for (
                        (-1 === I || c & dt.SkipSelf) &&
                        ((b = -1 === I ? Tc(s, o) : o[I + 8]),
                        -1 !== b && is(c, !1)
                            ? ((w = o[1]), (I = el(b)), (o = To(b, o)))
                            : (I = -1));
                        -1 !== I;

                    ) {
                        const x = o[1];
                        if (Ns(g, I, x.data)) {
                            const k = tl(I, o, u, w, c, S);
                            if (k !== An) return k;
                        }
                        (b = o[I + 8]),
                            -1 !== b &&
                            is(c, o[1].data[I + 8] === S) &&
                            Ns(g, I, o)
                                ? ((w = x), (I = el(b)), (o = To(b, o)))
                                : (I = -1);
                    }
                }
                return d;
            }
            function tl(s, o, u, c, d, g) {
                const w = o[1],
                    I = w.data[s + 8],
                    x = nl(
                        I,
                        w,
                        u,
                        null == c ? Gs(I) && Cy : c != w && 0 != (3 & I.type),
                        d & dt.Host && g === I
                    );
                return null !== x ? ha(o, w, x, I) : An;
            }
            function nl(s, o, u, c, d) {
                const g = s.providerIndexes,
                    w = o.data,
                    I = 1048575 & g,
                    b = s.directiveStart,
                    x = g >> 20,
                    z = d ? I + x : s.directiveEnd;
                for (let ee = c ? I : I + x; ee < z; ee++) {
                    const Te = w[ee];
                    if ((ee < b && u === Te) || (ee >= b && Te.type === u))
                        return ee;
                }
                if (d) {
                    const ee = w[b];
                    if (ee && Di(ee) && ee.type === u) return b;
                }
                return null;
            }
            function ha(s, o, u, c) {
                let d = s[u];
                const g = o.data;
                if (
                    (function bc(s) {
                        return s instanceof ja;
                    })(d)
                ) {
                    const w = d;
                    w.resolving &&
                        (function nt(s, o) {
                            const u = o
                                ? `. Dependency path: ${o.join(" > ")} > ${s}`
                                : "";
                            throw new Se(
                                -200,
                                `Circular dependency in DI detected for ${s}${u}`
                            );
                        })(
                            (function de(s) {
                                return "function" == typeof s
                                    ? s.name || s.toString()
                                    : "object" == typeof s &&
                                      null != s &&
                                      "function" == typeof s.type
                                    ? s.type.name || s.type.toString()
                                    : ce(s);
                            })(g[u])
                        );
                    const I = Ms(w.canSeeViewProviders);
                    w.resolving = !0;
                    const b = w.injectImpl ? Pn(w.injectImpl) : null;
                    vc(s, c, dt.Default);
                    try {
                        (d = s[u] = w.factory(void 0, g, s, c)),
                            o.firstCreatePass &&
                                u >= c.directiveStart &&
                                (function _y(s, o, u) {
                                    const {
                                        ngOnChanges: c,
                                        ngOnInit: d,
                                        ngDoCheck: g,
                                    } = o.type.prototype;
                                    if (c) {
                                        const w = zs(o);
                                        (
                                            u.preOrderHooks ||
                                            (u.preOrderHooks = [])
                                        ).push(s, w),
                                            (
                                                u.preOrderCheckHooks ||
                                                (u.preOrderCheckHooks = [])
                                            ).push(s, w);
                                    }
                                    d &&
                                        (
                                            u.preOrderHooks ||
                                            (u.preOrderHooks = [])
                                        ).push(0 - s, d),
                                        g &&
                                            ((
                                                u.preOrderHooks ||
                                                (u.preOrderHooks = [])
                                            ).push(s, g),
                                            (
                                                u.preOrderCheckHooks ||
                                                (u.preOrderCheckHooks = [])
                                            ).push(s, g));
                                })(u, g[u], o);
                    } finally {
                        null !== b && Pn(b), Ms(I), (w.resolving = !1), Ic();
                    }
                }
                return d;
            }
            function Ns(s, o, u) {
                return !!(u[o + (s >> 5)] & (1 << s));
            }
            function is(s, o) {
                return !(s & dt.Self || (s & dt.Host && o));
            }
            class xo {
                constructor(o, u) {
                    (this._tNode = o), (this._lView = u);
                }
                get(o, u, c) {
                    return wh(this._tNode, this._lView, o, c, u);
                }
            }
            function Ih() {
                return new xo(Sn(), we());
            }
            function Kp(s) {
                return ln(() => {
                    const o = s.prototype.constructor,
                        u = o[Jn] || Ch(o),
                        c = Object.prototype;
                    let d = Object.getPrototypeOf(s.prototype).constructor;
                    for (; d && d !== c; ) {
                        const g = d[Jn] || Ch(d);
                        if (g && g !== u) return g;
                        d = Object.getPrototypeOf(d);
                    }
                    return (g) => new g();
                });
            }
            function Ch(s) {
                return Le(s)
                    ? () => {
                          const o = Ch(J(s));
                          return o && o();
                      }
                    : wo(s);
            }
            function Ys(s) {
                const o = s[1],
                    u = o.type;
                return 2 === u ? o.declTNode : 1 === u ? s[6] : null;
            }
            function bh(s) {
                return (function Ao(s, o) {
                    if ("class" === o) return s.classes;
                    if ("style" === o) return s.styles;
                    const u = s.attrs;
                    if (u) {
                        const c = u.length;
                        let d = 0;
                        for (; d < c; ) {
                            const g = u[d];
                            if (wy(g)) break;
                            if (0 === g) d += 2;
                            else if ("number" == typeof g)
                                for (d++; d < c && "string" == typeof u[d]; )
                                    d++;
                            else {
                                if (g === o) return u[d + 1];
                                d += 2;
                            }
                        }
                    }
                    return null;
                })(Sn(), s);
            }
            const fa = "__parameters__";
            function za(s, o, u) {
                return ln(() => {
                    const c = (function Sc(s) {
                        return function (...u) {
                            if (s) {
                                const c = s(...u);
                                for (const d in c) this[d] = c[d];
                            }
                        };
                    })(o);
                    function d(...g) {
                        if (this instanceof d) return c.apply(this, g), this;
                        const w = new d(...g);
                        return (I.annotation = w), I;
                        function I(b, S, x) {
                            const k = b.hasOwnProperty(fa)
                                ? b[fa]
                                : Object.defineProperty(b, fa, { value: [] })[
                                      fa
                                  ];
                            for (; k.length <= x; ) k.push(null);
                            return (k[x] = k[x] || []).push(w), b;
                        }
                    }
                    return (
                        u && (d.prototype = Object.create(u.prototype)),
                        (d.prototype.ngMetadataName = s),
                        (d.annotationCls = d),
                        d
                    );
                });
            }
            class mn {
                constructor(o, u) {
                    (this._desc = o),
                        (this.ngMetadataName = "InjectionToken"),
                        (this.ɵprov = void 0),
                        "number" == typeof u
                            ? (this.__NG_ELEMENT_ID__ = u)
                            : void 0 !== u &&
                              (this.ɵprov = Jt({
                                  token: this,
                                  providedIn: u.providedIn || "root",
                                  factory: u.factory,
                              }));
                }
                get multi() {
                    return this;
                }
                toString() {
                    return `InjectionToken ${this._desc}`;
                }
            }
            const Yp = new mn("AnalyzeForEntryComponents");
            function Ur(s, o) {
                void 0 === o && (o = s);
                for (let u = 0; u < s.length; u++) {
                    let c = s[u];
                    Array.isArray(c)
                        ? (o === s && (o = s.slice(0, u)), Ur(c, o))
                        : o !== s && o.push(c);
                }
                return o;
            }
            function Ps(s, o) {
                s.forEach((u) => (Array.isArray(u) ? Ps(u, o) : o(u)));
            }
            function rl(s, o, u) {
                o >= s.length ? s.push(u) : s.splice(o, 0, u);
            }
            function il(s, o) {
                return o >= s.length - 1 ? s.pop() : s.splice(o, 1)[0];
            }
            function Hr(s, o, u) {
                let c = sl(s, o);
                return (
                    c >= 0
                        ? (s[1 | c] = u)
                        : ((c = ~c),
                          (function Xp(s, o, u, c) {
                              let d = s.length;
                              if (d == o) s.push(u, c);
                              else if (1 === d) s.push(c, s[0]), (s[0] = u);
                              else {
                                  for (d--, s.push(s[d - 1], s[d]); d > o; )
                                      (s[d] = s[d - 2]), d--;
                                  (s[o] = u), (s[o + 1] = c);
                              }
                          })(s, c, o, u)),
                    c
                );
            }
            function eg(s, o) {
                const u = sl(s, o);
                if (u >= 0) return s[1 | u];
            }
            function sl(s, o) {
                return (function Mc(s, o, u) {
                    let c = 0,
                        d = s.length >> u;
                    for (; d !== c; ) {
                        const g = c + ((d - c) >> 1),
                            w = s[g << u];
                        if (o === w) return g << u;
                        w > o ? (d = g) : (c = g + 1);
                    }
                    return ~(d << u);
                })(s, o, 1);
            }
            const kc = {},
                Za = "__NG_DI_FLAG__",
                Ah = "ngTempTokenPath",
                Oc = /\n/gm,
                Fc = "__source";
            let ul;
            function Mo(s) {
                const o = ul;
                return (ul = s), o;
            }
            function Ya(s, o = dt.Default) {
                if (void 0 === ul) throw new Se(-203, !1);
                return null === ul
                    ? br(s, void 0, o)
                    : ul.get(s, o & dt.Optional ? null : void 0, o);
            }
            function Un(s, o = dt.Default) {
                return (
                    (function an() {
                        return or;
                    })() || Ya
                )(J(s), o);
            }
            function Qa(s, o = dt.Default) {
                return Un(s, o);
            }
            function ga(s) {
                const o = [];
                for (let u = 0; u < s.length; u++) {
                    const c = J(s[u]);
                    if (Array.isArray(c)) {
                        if (0 === c.length) throw new Se(900, !1);
                        let d,
                            g = dt.Default;
                        for (let w = 0; w < c.length; w++) {
                            const I = c[w],
                                b = Rh(I);
                            "number" == typeof b
                                ? -1 === b
                                    ? (d = I.token)
                                    : (g |= b)
                                : (d = I);
                        }
                        o.push(Un(d, g));
                    } else o.push(Un(c));
                }
                return o;
            }
            function Ja(s, o) {
                return (s[Za] = o), (s.prototype[Za] = o), s;
            }
            function Rh(s) {
                return s[Za];
            }
            const No = Ja(za("Optional"), 8),
                Xs = Ja(za("SkipSelf"), 4);
            let gl;
            function jy(s) {
                gl = s;
            }
            class zy {
                constructor(o) {
                    this.changingThisBreaksApplicationSecurity = o;
                }
                toString() {
                    return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`;
                }
            }
            function to(s) {
                return s instanceof zy
                    ? s.changingThisBreaksApplicationSecurity
                    : s;
            }
            const Vh =
                    /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,
                Uh =
                    /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
            var er = (() => (
                ((er = er || {})[(er.NONE = 0)] = "NONE"),
                (er[(er.HTML = 1)] = "HTML"),
                (er[(er.STYLE = 2)] = "STYLE"),
                (er[(er.SCRIPT = 3)] = "SCRIPT"),
                (er[(er.URL = 4)] = "URL"),
                (er[(er.RESOURCE_URL = 5)] = "RESOURCE_URL"),
                er
            ))();
            function no(s) {
                const o = (function ko() {
                    const s = we();
                    return s && s[12];
                })();
                return o
                    ? o.sanitize(er.URL, s) || ""
                    : (function ma(s, o) {
                          const u = (function Zy(s) {
                              return (
                                  (s instanceof zy && s.getTypeName()) || null
                              );
                          })(s);
                          if (null != u && u !== o) {
                              if ("ResourceURL" === u && "URL" === o) return !0;
                              throw new Error(
                                  `Required a safe ${o}, got a ${u} (see https://g.co/ng/security#xss)`
                              );
                          }
                          return u === o;
                      })(s, "URL")
                    ? to(s)
                    : (function tu(s) {
                          return (s = String(s)).match(Vh) || s.match(Uh)
                              ? s
                              : "unsafe:" + s;
                      })(ce(s));
            }
            function qc(s) {
                return s.ngOriginalError;
            }
            class El {
                constructor() {
                    this._console = console;
                }
                handleError(o) {
                    const u = this._findOriginalError(o);
                    this._console.error("ERROR", o),
                        u && this._console.error("ORIGINAL ERROR", u);
                }
                _findOriginalError(o) {
                    let u = o && qc(o);
                    for (; u && qc(u); ) u = qc(u);
                    return u || null;
                }
            }
            const Tg = new Map();
            let ya = 0;
            const fr = "__ngContext__";
            function Bn(s, o) {
                Xn(o)
                    ? ((s[fr] = o[20]),
                      (function ss(s) {
                          Tg.set(s[20], s);
                      })(o))
                    : (s[fr] = o);
            }
            function ni(s) {
                const o = s[fr];
                return "number" == typeof o
                    ? (function Wh(s) {
                          return Tg.get(s) || null;
                      })(o)
                    : o || null;
            }
            function ro(s) {
                const o = ni(s);
                return o ? (Xn(o) ? o : o.lView) : null;
            }
            const m = (() =>
                (
                    (typeof requestAnimationFrame < "u" &&
                        requestAnimationFrame) ||
                    setTimeout
                ).bind(qe))();
            function re(s) {
                return s instanceof Function ? s() : s;
            }
            var tr = (() => (
                ((tr = tr || {})[(tr.Important = 1)] = "Important"),
                (tr[(tr.DashCase = 2)] = "DashCase"),
                tr
            ))();
            function iu(s, o) {
                return undefined(s, o);
            }
            function os(s) {
                const o = s[3];
                return bi(o) ? o[3] : o;
            }
            function su(s) {
                return ou(s[13]);
            }
            function nr(s) {
                return ou(s[4]);
            }
            function ou(s) {
                for (; null !== s && !bi(s); ) s = s[4];
                return s;
            }
            function ri(s, o, u, c, d) {
                if (null != c) {
                    let g,
                        w = !1;
                    bi(c) ? (g = c) : Xn(c) && ((w = !0), (c = c[0]));
                    const I = lr(c);
                    0 === s && null !== u
                        ? null == d
                            ? Yh(o, u, I)
                            : wa(o, u, I, d || null, !0)
                        : 1 === s && null !== u
                        ? wa(o, u, I, d || null, !0)
                        : 2 === s
                        ? (function Pg(s, o, u) {
                              const c = Rg(s, o);
                              c &&
                                  (function GT(s, o, u, c) {
                                      s.removeChild(o, u, c);
                                  })(s, c, o, u);
                          })(o, I, w)
                        : 3 === s && o.destroyNode(I),
                        null != g &&
                            (function oI(s, o, u, c, d) {
                                const g = u[7];
                                g !== lr(u) && ri(o, s, c, g, d);
                                for (let I = 10; I < u.length; I++) {
                                    const b = u[I];
                                    td(b[1], b, s, o, c, g);
                                }
                            })(o, s, g, u, d);
                }
            }
            function fv(s, o, u) {
                return s.createElement(o, u);
            }
            function gv(s, o) {
                const u = s[9],
                    c = u.indexOf(o),
                    d = o[3];
                512 & o[2] && ((o[2] &= -513), oa(d, -1)), u.splice(c, 1);
            }
            function Rr(s, o) {
                if (s.length <= 10) return;
                const u = 10 + o,
                    c = s[u];
                if (c) {
                    const d = c[17];
                    null !== d && d !== s && gv(d, c),
                        o > 0 && (s[u - 1][4] = c[4]);
                    const g = il(s, 10 + o);
                    !(function va(s, o) {
                        td(s, o, o[11], 2, null, null),
                            (o[0] = null),
                            (o[6] = null);
                    })(c[1], c);
                    const w = g[19];
                    null !== w && w.detachView(g[1]),
                        (c[3] = null),
                        (c[4] = null),
                        (c[2] &= -65);
                }
                return c;
            }
            function mv(s, o) {
                if (!(128 & o[2])) {
                    const u = o[11];
                    u.destroyNode && td(s, o, u, 3, null, null),
                        (function jT(s) {
                            let o = s[13];
                            if (!o) return _v(s[1], s);
                            for (; o; ) {
                                let u = null;
                                if (Xn(o)) u = o[13];
                                else {
                                    const c = o[10];
                                    c && (u = c);
                                }
                                if (!u) {
                                    for (; o && !o[4] && o !== s; )
                                        Xn(o) && _v(o[1], o), (o = o[3]);
                                    null === o && (o = s),
                                        Xn(o) && _v(o[1], o),
                                        (u = o && o[4]);
                                }
                                o = u;
                            }
                        })(o);
                }
            }
            function _v(s, o) {
                if (!(128 & o[2])) {
                    (o[2] &= -65),
                        (o[2] |= 128),
                        (function $T(s, o) {
                            let u;
                            if (null != s && null != (u = s.destroyHooks))
                                for (let c = 0; c < u.length; c += 2) {
                                    const d = o[u[c]];
                                    if (!(d instanceof ja)) {
                                        const g = u[c + 1];
                                        if (Array.isArray(g))
                                            for (
                                                let w = 0;
                                                w < g.length;
                                                w += 2
                                            ) {
                                                const I = d[g[w]],
                                                    b = g[w + 1];
                                                try {
                                                    b.call(I);
                                                } finally {
                                                }
                                            }
                                        else
                                            try {
                                                g.call(d);
                                            } finally {
                                            }
                                    }
                                }
                        })(s, o),
                        (function HT(s, o) {
                            const u = s.cleanup,
                                c = o[7];
                            let d = -1;
                            if (null !== u)
                                for (let g = 0; g < u.length - 1; g += 2)
                                    if ("string" == typeof u[g]) {
                                        const w = u[g + 1],
                                            I =
                                                "function" == typeof w
                                                    ? w(o)
                                                    : lr(o[w]),
                                            b = c[(d = u[g + 2])],
                                            S = u[g + 3];
                                        "boolean" == typeof S
                                            ? I.removeEventListener(u[g], b, S)
                                            : S >= 0
                                            ? c[(d = S)]()
                                            : c[(d = -S)].unsubscribe(),
                                            (g += 2);
                                    } else {
                                        const w = c[(d = u[g + 1])];
                                        u[g].call(w);
                                    }
                            if (null !== c) {
                                for (let g = d + 1; g < c.length; g++) c[g]();
                                o[7] = null;
                            }
                        })(s, o),
                        1 === o[1].type && o[11].destroy();
                    const u = o[17];
                    if (null !== u && bi(o[3])) {
                        u !== o[3] && gv(u, o);
                        const c = o[19];
                        null !== c && c.detachView(s);
                    }
                    !(function zh(s) {
                        Tg.delete(s[20]);
                    })(o);
                }
            }
            function iI(s, o, u) {
                return (function yv(s, o, u) {
                    let c = o;
                    for (; null !== c && 40 & c.type; ) c = (o = c).parent;
                    if (null === c) return u[0];
                    if (2 & c.flags) {
                        const d = s.data[c.directiveStart].encapsulation;
                        if (d === Wt.None || d === Wt.Emulated) return null;
                    }
                    return jr(c, u);
                })(s, o.parent, u);
            }
            function wa(s, o, u, c, d) {
                s.insertBefore(o, u, c, d);
            }
            function Yh(s, o, u) {
                s.appendChild(o, u);
            }
            function Cl(s, o, u, c, d) {
                null !== c ? wa(s, o, u, c, d) : Yh(s, o, u);
            }
            function Rg(s, o) {
                return s.parentNode(o);
            }
            let vv = function Qh(s, o, u) {
                return 40 & s.type ? jr(s, u) : null;
            };
            function Jh(s, o, u, c) {
                const d = iI(s, c, o),
                    g = o[11],
                    I = (function ed(s, o, u) {
                        return vv(s, o, u);
                    })(c.parent || o[6], c, o);
                if (null != d)
                    if (Array.isArray(u))
                        for (let b = 0; b < u.length; b++)
                            Cl(g, d, u[b], I, !1);
                    else Cl(g, d, u, I, !1);
            }
            function Xh(s, o) {
                if (null !== o) {
                    const u = o.type;
                    if (3 & u) return jr(o, s);
                    if (4 & u) return Ng(-1, s[o.index]);
                    if (8 & u) {
                        const c = o.child;
                        if (null !== c) return Xh(s, c);
                        {
                            const d = s[o.index];
                            return bi(d) ? Ng(-1, d) : lr(d);
                        }
                    }
                    if (32 & u) return iu(o, s)() || lr(s[o.index]);
                    {
                        const c = Ev(s, o);
                        return null !== c
                            ? Array.isArray(c)
                                ? c[0]
                                : Xh(os(s[16]), c)
                            : Xh(s, o.next);
                    }
                }
                return null;
            }
            function Ev(s, o) {
                return null !== o ? s[16][6].projection[o.projection] : null;
            }
            function Ng(s, o) {
                const u = 10 + s + 1;
                if (u < o.length) {
                    const c = o[u],
                        d = c[1].firstChild;
                    if (null !== d) return Xh(c, d);
                }
                return o[7];
            }
            function kg(s, o, u, c, d, g, w) {
                for (; null != u; ) {
                    const I = c[u.index],
                        b = u.type;
                    if (
                        (w && 0 === o && (I && Bn(lr(I), c), (u.flags |= 4)),
                        64 != (64 & u.flags))
                    )
                        if (8 & b)
                            kg(s, o, u.child, c, d, g, !1), ri(o, s, d, I, g);
                        else if (32 & b) {
                            const S = iu(u, c);
                            let x;
                            for (; (x = S()); ) ri(o, s, d, x, g);
                            ri(o, s, d, I, g);
                        } else
                            16 & b ? sI(s, o, c, u, d, g) : ri(o, s, d, I, g);
                    u = w ? u.projectionNext : u.next;
                }
            }
            function td(s, o, u, c, d, g) {
                kg(u, c, s.firstChild, o, d, g, !1);
            }
            function sI(s, o, u, c, d, g) {
                const w = u[16],
                    b = w[6].projection[c.projection];
                if (Array.isArray(b))
                    for (let S = 0; S < b.length; S++) ri(o, s, d, b[S], g);
                else kg(s, o, b, w[3], d, g, !0);
            }
            function Og(s, o, u) {
                s.setAttribute(o, "style", u);
            }
            function ef(s, o, u) {
                "" === u
                    ? s.removeAttribute(o, "class")
                    : s.setAttribute(o, "class", u);
            }
            function Fg(s, o, u) {
                let c = s.length;
                for (;;) {
                    const d = s.indexOf(o, u);
                    if (-1 === d) return d;
                    if (0 === d || s.charCodeAt(d - 1) <= 32) {
                        const g = o.length;
                        if (d + g === c || s.charCodeAt(d + g) <= 32) return d;
                    }
                    u = d + 1;
                }
            }
            const aI = "ng-template";
            function uI(s, o, u) {
                let c = 0;
                for (; c < s.length; ) {
                    let d = s[c++];
                    if (u && "class" === d) {
                        if (((d = s[c]), -1 !== Fg(d.toLowerCase(), o, 0)))
                            return !0;
                    } else if (1 === d) {
                        for (
                            ;
                            c < s.length && "string" == typeof (d = s[c++]);

                        )
                            if (d.toLowerCase() === o) return !0;
                        return !1;
                    }
                }
                return !1;
            }
            function lI(s) {
                return 4 === s.type && s.value !== aI;
            }
            function qT(s, o, u) {
                return o === (4 !== s.type || u ? s.value : aI);
            }
            function KT(s, o, u) {
                let c = 4;
                const d = s.attrs || [],
                    g = (function YT(s) {
                        for (let o = 0; o < s.length; o++)
                            if (wy(s[o])) return o;
                        return s.length;
                    })(d);
                let w = !1;
                for (let I = 0; I < o.length; I++) {
                    const b = o[I];
                    if ("number" != typeof b) {
                        if (!w)
                            if (4 & c) {
                                if (
                                    ((c = 2 | (1 & c)),
                                    ("" !== b && !qT(s, b, u)) ||
                                        ("" === b && 1 === o.length))
                                ) {
                                    if (Fs(c)) return !1;
                                    w = !0;
                                }
                            } else {
                                const S = 8 & c ? b : o[++I];
                                if (8 & c && null !== s.attrs) {
                                    if (!uI(s.attrs, S, u)) {
                                        if (Fs(c)) return !1;
                                        w = !0;
                                    }
                                    continue;
                                }
                                const k = cI(8 & c ? "class" : b, d, lI(s), u);
                                if (-1 === k) {
                                    if (Fs(c)) return !1;
                                    w = !0;
                                    continue;
                                }
                                if ("" !== S) {
                                    let z;
                                    z = k > g ? "" : d[k + 1].toLowerCase();
                                    const ee = 8 & c ? z : null;
                                    if (
                                        (ee && -1 !== Fg(ee, S, 0)) ||
                                        (2 & c && S !== z)
                                    ) {
                                        if (Fs(c)) return !1;
                                        w = !0;
                                    }
                                }
                            }
                    } else {
                        if (!w && !Fs(c) && !Fs(b)) return !1;
                        if (w && Fs(b)) continue;
                        (w = !1), (c = b | (1 & c));
                    }
                }
                return Fs(c) || w;
            }
            function Fs(s) {
                return 0 == (1 & s);
            }
            function cI(s, o, u, c) {
                if (null === o) return -1;
                let d = 0;
                if (c || !u) {
                    let g = !1;
                    for (; d < o.length; ) {
                        const w = o[d];
                        if (w === s) return d;
                        if (3 === w || 6 === w) g = !0;
                        else {
                            if (1 === w || 2 === w) {
                                let I = o[++d];
                                for (; "string" == typeof I; ) I = o[++d];
                                continue;
                            }
                            if (4 === w) break;
                            if (0 === w) {
                                d += 4;
                                continue;
                            }
                        }
                        d += g ? 1 : 2;
                    }
                    return -1;
                }
                return (function QT(s, o) {
                    let u = s.indexOf(4);
                    if (u > -1)
                        for (u++; u < s.length; ) {
                            const c = s[u];
                            if ("number" == typeof c) return -1;
                            if (c === o) return u;
                            u++;
                        }
                    return -1;
                })(o, s);
            }
            function Cv(s, o, u = !1) {
                for (let c = 0; c < o.length; c++)
                    if (KT(s, o[c], u)) return !0;
                return !1;
            }
            function dI(s, o) {
                return s ? ":not(" + o.trim() + ")" : o;
            }
            function hI(s) {
                let o = s[0],
                    u = 1,
                    c = 2,
                    d = "",
                    g = !1;
                for (; u < s.length; ) {
                    let w = s[u];
                    if ("string" == typeof w)
                        if (2 & c) {
                            const I = s[++u];
                            d +=
                                "[" +
                                w +
                                (I.length > 0 ? '="' + I + '"' : "") +
                                "]";
                        } else 8 & c ? (d += "." + w) : 4 & c && (d += " " + w);
                    else
                        "" !== d && !Fs(w) && ((o += dI(g, d)), (d = "")),
                            (c = w),
                            (g = g || !Fs(c));
                    u++;
                }
                return "" !== d && (o += dI(g, d)), o;
            }
            const Bt = {};
            function pI(s) {
                Ea(Ct(), we(), Sr() + s, !1);
            }
            function Ea(s, o, u, c) {
                if (!c)
                    if (3 == (3 & o[2])) {
                        const g = s.preOrderCheckHooks;
                        null !== g && Wp(o, g, u);
                    } else {
                        const g = s.preOrderHooks;
                        null !== g && zp(o, g, 0, u);
                    }
                Zs(u);
            }
            const Dv = new mn("ENVIRONMENT_INITIALIZER"),
                Vg = new mn("INJECTOR_DEF_TYPES");
            function gI(...s) {
                return { ɵproviders: mI(0, s) };
            }
            function mI(s, ...o) {
                const u = [],
                    c = new Set();
                let d;
                return (
                    Ps(o, (g) => {
                        const w = g;
                        Sv(w, u, [], c) && (d || (d = []), d.push(w));
                    }),
                    void 0 !== d && Tv(d, u),
                    u
                );
            }
            function Tv(s, o) {
                for (let u = 0; u < s.length; u++) {
                    const { providers: d } = s[u];
                    Ps(d, (g) => {
                        o.push(g);
                    });
                }
            }
            function Sv(s, o, u, c) {
                if (!(s = J(s))) return !1;
                let d = null,
                    g = Nn(s);
                const w = !g && be(s);
                if (g || w) {
                    if (w && !w.standalone) return !1;
                    d = s;
                } else {
                    const b = s.ngModule;
                    if (((g = Nn(b)), !g)) return !1;
                    d = b;
                }
                const I = c.has(d);
                if (w) {
                    if (I) return !1;
                    if ((c.add(d), w.dependencies)) {
                        const b =
                            "function" == typeof w.dependencies
                                ? w.dependencies()
                                : w.dependencies;
                        for (const S of b) Sv(S, o, u, c);
                    }
                } else {
                    if (!g) return !1;
                    {
                        if (null != g.imports && !I) {
                            let S;
                            c.add(d);
                            try {
                                Ps(g.imports, (x) => {
                                    Sv(x, o, u, c) &&
                                        (S || (S = []), S.push(x));
                                });
                            } finally {
                            }
                            void 0 !== S && Tv(S, o);
                        }
                        if (!I) {
                            const S = wo(d) || (() => new d());
                            o.push(
                                { provide: d, useFactory: S, deps: Tt },
                                { provide: Vg, useValue: d, multi: !0 },
                                {
                                    provide: Dv,
                                    useValue: () => Un(d),
                                    multi: !0,
                                }
                            );
                        }
                        const b = g.providers;
                        null == b ||
                            I ||
                            Ps(b, (x) => {
                                o.push(x);
                            });
                    }
                }
                return d !== s && void 0 !== s.providers;
            }
            const _I = _e({ provide: String, useValue: _e });
            function Ug(s) {
                return null !== s && "object" == typeof s && _I in s;
            }
            function au(s) {
                return "function" == typeof s;
            }
            const Bg = new mn("INJECTOR", -1);
            class nf {
                get(o, u = kc) {
                    if (u === kc) {
                        const c = new Error(
                            `NullInjectorError: No provider for ${ge(o)}!`
                        );
                        throw ((c.name = "NullInjectorError"), c);
                    }
                    return u;
                }
            }
            const jg = new mn("Set Injector scope."),
                rf = {},
                xn = {};
            let fn;
            function Kt() {
                return void 0 === fn && (fn = new nf()), fn;
            }
            class as {}
            class kn extends as {
                constructor(o, u, c, d) {
                    super(),
                        (this.parent = u),
                        (this.source = c),
                        (this.scopes = d),
                        (this.records = new Map()),
                        (this._ngOnDestroyHooks = new Set()),
                        (this._onDestroyHooks = []),
                        (this._destroyed = !1),
                        qi(o, (w) => this.processProvider(w)),
                        this.records.set(Bg, Mn(void 0, this)),
                        d.has("environment") &&
                            this.records.set(as, Mn(void 0, this));
                    const g = this.records.get(jg);
                    null != g &&
                        "string" == typeof g.value &&
                        this.scopes.add(g.value),
                        (this.injectorDefTypes = new Set(
                            this.get(Vg.multi, Tt, dt.Self)
                        ));
                }
                get destroyed() {
                    return this._destroyed;
                }
                destroy() {
                    this.assertNotDestroyed(), (this._destroyed = !0);
                    try {
                        for (const o of this._ngOnDestroyHooks) o.ngOnDestroy();
                        for (const o of this._onDestroyHooks) o();
                    } finally {
                        this.records.clear(),
                            this._ngOnDestroyHooks.clear(),
                            this.injectorDefTypes.clear(),
                            (this._onDestroyHooks.length = 0);
                    }
                }
                onDestroy(o) {
                    this._onDestroyHooks.push(o);
                }
                get(o, u = kc, c = dt.Default) {
                    this.assertNotDestroyed();
                    const d = Mo(this),
                        g = Pn(void 0);
                    try {
                        if (!(c & dt.SkipSelf)) {
                            let I = this.records.get(o);
                            if (void 0 === I) {
                                const b =
                                    (function oS(s) {
                                        return (
                                            "function" == typeof s ||
                                            ("object" == typeof s &&
                                                s instanceof mn)
                                        );
                                    })(o) && xt(o);
                                (I =
                                    b && this.injectableDefInScope(b)
                                        ? Mn(sf(o), rf)
                                        : null),
                                    this.records.set(o, I);
                            }
                            if (null != I) return this.hydrate(o, I);
                        }
                        return (c & dt.Self ? Kt() : this.parent).get(
                            o,
                            (u = c & dt.Optional && u === kc ? null : u)
                        );
                    } catch (w) {
                        if ("NullInjectorError" === w.name) {
                            if (((w[Ah] = w[Ah] || []).unshift(ge(o)), d))
                                throw w;
                            return (function Lc(s, o, u, c) {
                                const d = s[Ah];
                                throw (
                                    (o[Fc] && d.unshift(o[Fc]),
                                    (s.message = (function Vc(
                                        s,
                                        o,
                                        u,
                                        c = null
                                    ) {
                                        s =
                                            s &&
                                            "\n" === s.charAt(0) &&
                                            "\u0275" == s.charAt(1)
                                                ? s.slice(2)
                                                : s;
                                        let d = ge(o);
                                        if (Array.isArray(o))
                                            d = o.map(ge).join(" -> ");
                                        else if ("object" == typeof o) {
                                            let g = [];
                                            for (let w in o)
                                                if (o.hasOwnProperty(w)) {
                                                    let I = o[w];
                                                    g.push(
                                                        w +
                                                            ":" +
                                                            ("string" ==
                                                            typeof I
                                                                ? JSON.stringify(
                                                                      I
                                                                  )
                                                                : ge(I))
                                                    );
                                                }
                                            d = `{${g.join(", ")}}`;
                                        }
                                        return `${u}${
                                            c ? "(" + c + ")" : ""
                                        }[${d}]: ${s.replace(Oc, "\n  ")}`;
                                    })("\n" + s.message, d, u, c)),
                                    (s.ngTokenPath = d),
                                    (s[Ah] = null),
                                    s)
                                );
                            })(w, o, "R3InjectorError", this.source);
                        }
                        throw w;
                    } finally {
                        Pn(g), Mo(d);
                    }
                }
                resolveInjectorInitializers() {
                    const o = Mo(this),
                        u = Pn(void 0);
                    try {
                        const c = this.get(Dv.multi, Tt, dt.Self);
                        for (const d of c) d();
                    } finally {
                        Mo(o), Pn(u);
                    }
                }
                toString() {
                    const o = [],
                        u = this.records;
                    for (const c of u.keys()) o.push(ge(c));
                    return `R3Injector[${o.join(", ")}]`;
                }
                assertNotDestroyed() {
                    if (this._destroyed) throw new Se(205, !1);
                }
                processProvider(o) {
                    let u = au((o = J(o))) ? o : J(o && o.provide);
                    const c = (function af(s) {
                        return Ug(s) ? Mn(void 0, s.useValue) : Mn(xv(s), rf);
                    })(o);
                    if (au(o) || !0 !== o.multi) this.records.get(u);
                    else {
                        let d = this.records.get(u);
                        d ||
                            ((d = Mn(void 0, rf, !0)),
                            (d.factory = () => ga(d.multi)),
                            this.records.set(u, d)),
                            (u = o),
                            d.multi.push(o);
                    }
                    this.records.set(u, c);
                }
                hydrate(o, u) {
                    return (
                        u.value === rf &&
                            ((u.value = xn), (u.value = u.factory())),
                        "object" == typeof u.value &&
                            u.value &&
                            (function Mi(s) {
                                return (
                                    null !== s &&
                                    "object" == typeof s &&
                                    "function" == typeof s.ngOnDestroy
                                );
                            })(u.value) &&
                            this._ngOnDestroyHooks.add(u.value),
                        u.value
                    );
                }
                injectableDefInScope(o) {
                    if (!o.providedIn) return !1;
                    const u = J(o.providedIn);
                    return "string" == typeof u
                        ? "any" === u || this.scopes.has(u)
                        : this.injectorDefTypes.has(u);
                }
            }
            function sf(s) {
                const o = xt(s),
                    u = null !== o ? o.factory : wo(s);
                if (null !== u) return u;
                if (s instanceof mn) throw new Se(204, !1);
                if (s instanceof Function)
                    return (function sS(s) {
                        const o = s.length;
                        if (o > 0)
                            throw (
                                ((function Js(s, o) {
                                    const u = [];
                                    for (let c = 0; c < s; c++) u.push(o);
                                    return u;
                                })(o, "?"),
                                new Se(204, !1))
                            );
                        const u = (function fi(s) {
                            const o = s && (s[Ir] || s[Fr]);
                            if (o) {
                                const u = (function ir(s) {
                                    if (s.hasOwnProperty("name")) return s.name;
                                    const o = ("" + s).match(
                                        /^function\s*([^\s(]+)/
                                    );
                                    return null === o ? "" : o[1];
                                })(s);
                                return (
                                    console.warn(
                                        `DEPRECATED: DI is instantiating a token "${u}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${u}" class.`
                                    ),
                                    o
                                );
                            }
                            return null;
                        })(s);
                        return null !== u ? () => u.factory(s) : () => new s();
                    })(s);
                throw new Se(204, !1);
            }
            function xv(s, o, u) {
                let c;
                if (au(s)) {
                    const d = J(s);
                    return wo(d) || sf(d);
                }
                if (Ug(s)) c = () => J(s.useValue);
                else if (
                    (function yI(s) {
                        return !(!s || !s.useFactory);
                    })(s)
                )
                    c = () => s.useFactory(...ga(s.deps || []));
                else if (
                    (function Av(s) {
                        return !(!s || !s.useExisting);
                    })(s)
                )
                    c = () => Un(J(s.useExisting));
                else {
                    const d = J(s && (s.useClass || s.provide));
                    if (
                        !(function en(s) {
                            return !!s.deps;
                        })(s)
                    )
                        return wo(d) || sf(d);
                    c = () => new d(...ga(s.deps));
                }
                return c;
            }
            function Mn(s, o, u = !1) {
                return { factory: s, value: o, multi: u ? [] : void 0 };
            }
            function Rv(s) {
                return !!s.ɵproviders;
            }
            function qi(s, o) {
                for (const u of s)
                    Array.isArray(u)
                        ? qi(u, o)
                        : Rv(u)
                        ? qi(u.ɵproviders, o)
                        : o(u);
            }
            function wI(s, o = null, u = null, c) {
                const d = EI(s, o, u, c);
                return d.resolveInjectorInitializers(), d;
            }
            function EI(s, o = null, u = null, c, d = new Set()) {
                const g = [u || Tt, gI(s)];
                return (
                    (c = c || ("object" == typeof s ? void 0 : ge(s))),
                    new kn(g, o || Kt(), c || null, d)
                );
            }
            let Vo = (() => {
                class s {
                    static create(u, c) {
                        if (Array.isArray(u)) return wI({ name: "" }, c, u, "");
                        {
                            const d = u.name ?? "";
                            return wI({ name: d }, u.parent, u.providers, d);
                        }
                    }
                }
                return (
                    (s.THROW_IF_NOT_FOUND = kc),
                    (s.NULL = new nf()),
                    (s.ɵprov = Jt({
                        token: s,
                        providedIn: "any",
                        factory: () => Un(Bg),
                    })),
                    (s.__NG_ELEMENT_ID__ = -1),
                    s
                );
            })();
            function rd(s, o = dt.Default) {
                const u = we();
                return null === u ? Un(s, o) : wh(Sn(), u, J(s), o);
            }
            function DI() {
                throw new Error("invalid");
            }
            function id(s, o) {
                return (s << 17) | (o << 2);
            }
            function Ls(s) {
                return (s >> 17) & 32767;
            }
            function Yg(s) {
                return 2 | s;
            }
            function Bo(s) {
                return (131068 & s) >> 2;
            }
            function Qg(s, o) {
                return (-131069 & s) | (o << 2);
            }
            function Sl(s) {
                return 1 | s;
            }
            function $v(s, o) {
                const u = s.contentQueries;
                if (null !== u)
                    for (let c = 0; c < u.length; c += 2) {
                        const d = u[c],
                            g = u[c + 1];
                        if (-1 !== g) {
                            const w = s.data[g];
                            ph(d), w.contentQueries(2, o[g], g);
                        }
                    }
            }
            function ld(s, o, u, c, d, g, w, I, b, S, x) {
                const k = o.blueprint.slice();
                return (
                    (k[0] = d),
                    (k[2] = 76 | c),
                    (null !== x || (s && 1024 & s[2])) && (k[2] |= 1024),
                    Co(k),
                    (k[3] = k[15] = s),
                    (k[8] = u),
                    (k[10] = w || (s && s[10])),
                    (k[11] = I || (s && s[11])),
                    (k[12] = b || (s && s[12]) || null),
                    (k[9] = S || (s && s[9]) || null),
                    (k[6] = g),
                    (k[20] = (function Zc() {
                        return ya++;
                    })()),
                    (k[21] = x),
                    (k[16] = 2 == o.type ? s[16] : k),
                    k
                );
            }
            function cd(s, o, u, c, d) {
                let g = s.data[o];
                if (null === g)
                    (g = (function On(s, o, u, c, d) {
                        const g = Ss(),
                            w = xs(),
                            b = (s.data[o] = (function CS(s, o, u, c, d, g) {
                                return {
                                    type: u,
                                    index: c,
                                    insertBeforeIndex: null,
                                    injectorIndex: o ? o.injectorIndex : -1,
                                    directiveStart: -1,
                                    directiveEnd: -1,
                                    directiveStylingLast: -1,
                                    propertyBindings: null,
                                    flags: 0,
                                    providerIndexes: 0,
                                    value: d,
                                    attrs: g,
                                    mergedAttrs: null,
                                    localNames: null,
                                    initialInputs: void 0,
                                    inputs: null,
                                    outputs: null,
                                    tViews: null,
                                    next: null,
                                    projectionNext: null,
                                    child: null,
                                    parent: o,
                                    projection: null,
                                    styles: null,
                                    stylesWithoutHost: null,
                                    residualStyles: void 0,
                                    classes: null,
                                    classesWithoutHost: null,
                                    residualClasses: void 0,
                                    classBindings: 0,
                                    styleBindings: 0,
                                };
                            })(0, w ? g : g && g.parent, u, o, c, d));
                        return (
                            null === s.firstChild && (s.firstChild = b),
                            null !== g &&
                                (w
                                    ? null == g.child &&
                                      null !== b.parent &&
                                      (g.child = b)
                                    : null === g.next && (g.next = b)),
                            b
                        );
                    })(s, o, u, c, d)),
                        (function cy() {
                            return Rt.lFrame.inI18n;
                        })() && (g.flags |= 64);
                else if (64 & g.type) {
                    (g.type = u), (g.value = c), (g.attrs = d);
                    const w = (function As() {
                        const s = Rt.lFrame,
                            o = s.currentTNode;
                        return s.isParent ? o : o.parent;
                    })();
                    g.injectorIndex = null === w ? -1 : w.injectorIndex;
                }
                return Tr(g, !0), g;
            }
            function _i(s, o, u, c) {
                if (0 === u) return -1;
                const d = o.length;
                for (let g = 0; g < u; g++)
                    o.push(c), s.blueprint.push(c), s.data.push(null);
                return d;
            }
            function fu(s, o, u) {
                wc(o);
                try {
                    const c = s.viewQuery;
                    null !== c && Qv(1, c, u);
                    const d = s.template;
                    null !== d && tm(s, o, d, 1, u),
                        s.firstCreatePass && (s.firstCreatePass = !1),
                        s.staticContentQueries && $v(s, o),
                        s.staticViewQueries && Qv(2, s.viewQuery, u);
                    const g = s.components;
                    null !== g &&
                        (function Al(s, o) {
                            for (let u = 0; u < o.length; u++) zI(s, o[u]);
                        })(o, g);
                } catch (c) {
                    throw (
                        (s.firstCreatePass &&
                            ((s.incompleteFirstPass = !0),
                            (s.firstCreatePass = !1)),
                        c)
                    );
                } finally {
                    (o[2] &= -5), Cc();
                }
            }
            function xl(s, o, u, c) {
                const d = o[2];
                if (128 != (128 & d)) {
                    wc(o);
                    try {
                        Co(o),
                            (function fh(s) {
                                return (Rt.lFrame.bindingIndex = s);
                            })(s.bindingStartIndex),
                            null !== u && tm(s, o, u, 2, c);
                        const w = 3 == (3 & d);
                        if (w) {
                            const S = s.preOrderCheckHooks;
                            null !== S && Wp(o, S, null);
                        } else {
                            const S = s.preOrderHooks;
                            null !== S && zp(o, S, 0, null), yh(o, 0);
                        }
                        if (
                            ((function WI(s) {
                                for (let o = su(s); null !== o; o = nr(o)) {
                                    if (!o[2]) continue;
                                    const u = o[9];
                                    for (let c = 0; c < u.length; c++) {
                                        const d = u[c],
                                            g = d[3];
                                        0 == (512 & d[2]) && oa(g, 1),
                                            (d[2] |= 512);
                                    }
                                }
                            })(o),
                            (function NS(s) {
                                for (let o = su(s); null !== o; o = nr(o))
                                    for (let u = 10; u < o.length; u++) {
                                        const c = o[u],
                                            d = c[1];
                                        Ks(c) && xl(d, c, d.template, c[8]);
                                    }
                            })(o),
                            null !== s.contentQueries && $v(s, o),
                            w)
                        ) {
                            const S = s.contentCheckHooks;
                            null !== S && Wp(o, S);
                        } else {
                            const S = s.contentHooks;
                            null !== S && zp(o, S, 1), yh(o, 1);
                        }
                        !(function yf(s, o) {
                            const u = s.hostBindingOpCodes;
                            if (null !== u)
                                try {
                                    for (let c = 0; c < u.length; c++) {
                                        const d = u[c];
                                        if (d < 0) Zs(~d);
                                        else {
                                            const g = d,
                                                w = u[++c],
                                                I = u[++c];
                                            mc(w, g), I(2, o[g]);
                                        }
                                    }
                                } finally {
                                    Zs(-1);
                                }
                        })(s, o);
                        const I = s.components;
                        null !== I &&
                            (function em(s, o) {
                                for (let u = 0; u < o.length; u++) am(s, o[u]);
                            })(o, I);
                        const b = s.viewQuery;
                        if ((null !== b && Qv(2, b, c), w)) {
                            const S = s.viewCheckHooks;
                            null !== S && Wp(o, S);
                        } else {
                            const S = s.viewHooks;
                            null !== S && zp(o, S, 2), yh(o, 2);
                        }
                        !0 === s.firstUpdatePass && (s.firstUpdatePass = !1),
                            (o[2] &= -41),
                            512 & o[2] && ((o[2] &= -513), oa(o[3], -1));
                    } finally {
                        Cc();
                    }
                }
            }
            function FI(s, o, u, c) {
                const d = o[10],
                    w = Si(o);
                try {
                    !w && d.begin && d.begin(),
                        w && fu(s, o, c),
                        xl(s, o, u, c);
                } finally {
                    !w && d.end && d.end();
                }
            }
            function tm(s, o, u, c, d) {
                const g = Sr(),
                    w = 2 & c;
                try {
                    Zs(-1), w && o.length > 22 && Ea(s, o, 22, !1), u(c, d);
                } finally {
                    Zs(g);
                }
            }
            function nm(s, o, u) {
                !Ye() ||
                    ((function AS(s, o, u, c) {
                        const d = u.directiveStart,
                            g = u.directiveEnd;
                        s.firstCreatePass || da(u, o), Bn(c, o);
                        const w = u.initialInputs;
                        for (let I = d; I < g; I++) {
                            const b = s.data[I],
                                S = Di(b);
                            S && RS(o, u, b);
                            const x = ha(o, s, I, u);
                            Bn(x, o),
                                null !== w && Zv(0, I - d, x, b, 0, w),
                                S && (Vr(u.index, o)[8] = x);
                        }
                    })(s, o, u, jr(u, o)),
                    128 == (128 & u.flags) &&
                        (function im(s, o, u) {
                            const c = u.directiveStart,
                                d = u.directiveEnd,
                                g = u.index,
                                w = (function dy() {
                                    return Rt.lFrame.currentDirectiveIndex;
                                })();
                            try {
                                Zs(g);
                                for (let I = c; I < d; I++) {
                                    const b = s.data[I],
                                        S = o[I];
                                    Qu(I),
                                        (null !== b.hostBindings ||
                                            0 !== b.hostVars ||
                                            null !== b.hostAttrs) &&
                                            sm(b, S);
                                }
                            } finally {
                                Zs(-1), Qu(w);
                            }
                        })(s, o, u));
            }
            function Ho(s, o, u = jr) {
                const c = o.localNames;
                if (null !== c) {
                    let d = o.index + 1;
                    for (let g = 0; g < c.length; g += 2) {
                        const w = c[g + 1],
                            I = -1 === w ? u(o, s) : s[w];
                        s[d++] = I;
                    }
                }
            }
            function rm(s) {
                const o = s.tView;
                return null === o || o.incompleteFirstPass
                    ? (s.tView = gu(
                          1,
                          null,
                          s.template,
                          s.decls,
                          s.vars,
                          s.directiveDefs,
                          s.pipeDefs,
                          s.viewQuery,
                          s.schemas,
                          s.consts
                      ))
                    : o;
            }
            function gu(s, o, u, c, d, g, w, I, b, S) {
                const x = 22 + c,
                    k = x + d,
                    z = (function LI(s, o) {
                        const u = [];
                        for (let c = 0; c < o; c++) u.push(c < s ? null : Bt);
                        return u;
                    })(x, k),
                    ee = "function" == typeof S ? S() : S;
                return (z[1] = {
                    type: s,
                    blueprint: z,
                    template: u,
                    queries: null,
                    viewQuery: I,
                    declTNode: o,
                    data: z.slice().fill(null, x),
                    bindingStartIndex: x,
                    expandoStartIndex: k,
                    hostBindingOpCodes: null,
                    firstCreatePass: !0,
                    firstUpdatePass: !0,
                    staticViewQueries: !1,
                    staticContentQueries: !1,
                    preOrderHooks: null,
                    preOrderCheckHooks: null,
                    contentHooks: null,
                    contentCheckHooks: null,
                    viewHooks: null,
                    viewCheckHooks: null,
                    destroyHooks: null,
                    cleanup: null,
                    contentQueries: null,
                    components: null,
                    directiveRegistry: "function" == typeof g ? g() : g,
                    pipeRegistry: "function" == typeof w ? w() : w,
                    firstChild: null,
                    schemas: b,
                    consts: ee,
                    incompleteFirstPass: !1,
                });
            }
            function VI(s, o, u, c) {
                const d = Jv(o);
                null === u
                    ? d.push(c)
                    : (d.push(u),
                      s.firstCreatePass && Xv(s).push(c, d.length - 1));
            }
            function UI(s, o, u) {
                for (let c in s)
                    if (s.hasOwnProperty(c)) {
                        const d = s[c];
                        (u = null === u ? {} : u).hasOwnProperty(c)
                            ? u[c].push(o, d)
                            : (u[c] = [o, d]);
                    }
                return u;
            }
            function Wv(s, o, u, c) {
                let d = !1;
                if (Ye()) {
                    const g = (function $I(s, o, u) {
                            const c = s.directiveRegistry;
                            let d = null;
                            if (c)
                                for (let g = 0; g < c.length; g++) {
                                    const w = c[g];
                                    Cv(u, w.selectors, !1) &&
                                        (d || (d = []),
                                        So(da(u, o), s, w.type),
                                        Di(w)
                                            ? (vf(s, u), d.unshift(w))
                                            : d.push(w));
                                }
                            return d;
                        })(s, o, u),
                        w = null === c ? null : { "": -1 };
                    if (null !== g) {
                        (d = !0), qv(u, s.data.length, g.length);
                        for (let x = 0; x < g.length; x++) {
                            const k = g[x];
                            k.providersResolver && k.providersResolver(k);
                        }
                        let I = !1,
                            b = !1,
                            S = _i(s, o, g.length, null);
                        for (let x = 0; x < g.length; x++) {
                            const k = g[x];
                            (u.mergedAttrs = Dc(u.mergedAttrs, k.hostAttrs)),
                                Kv(s, u, o, S, k),
                                zv(S, k, w),
                                null !== k.contentQueries && (u.flags |= 8),
                                (null !== k.hostBindings ||
                                    null !== k.hostAttrs ||
                                    0 !== k.hostVars) &&
                                    (u.flags |= 128);
                            const z = k.type.prototype;
                            !I &&
                                (z.ngOnChanges || z.ngOnInit || z.ngDoCheck) &&
                                ((
                                    s.preOrderHooks || (s.preOrderHooks = [])
                                ).push(u.index),
                                (I = !0)),
                                !b &&
                                    (z.ngOnChanges || z.ngDoCheck) &&
                                    ((
                                        s.preOrderCheckHooks ||
                                        (s.preOrderCheckHooks = [])
                                    ).push(u.index),
                                    (b = !0)),
                                S++;
                        }
                        !(function bS(s, o) {
                            const c = o.directiveEnd,
                                d = s.data,
                                g = o.attrs,
                                w = [];
                            let I = null,
                                b = null;
                            for (let S = o.directiveStart; S < c; S++) {
                                const x = d[S],
                                    k = x.inputs,
                                    z = null === g || lI(o) ? null : MS(k, g);
                                w.push(z),
                                    (I = UI(k, S, I)),
                                    (b = UI(x.outputs, S, b));
                            }
                            null !== I &&
                                (I.hasOwnProperty("class") && (o.flags |= 16),
                                I.hasOwnProperty("style") && (o.flags |= 32)),
                                (o.initialInputs = w),
                                (o.inputs = I),
                                (o.outputs = b);
                        })(s, u);
                    }
                    w &&
                        (function xS(s, o, u) {
                            if (o) {
                                const c = (s.localNames = []);
                                for (let d = 0; d < o.length; d += 2) {
                                    const g = u[o[d + 1]];
                                    if (null == g) throw new Se(-301, !1);
                                    c.push(o[d], g);
                                }
                            }
                        })(u, c, w);
                }
                return (u.mergedAttrs = Dc(u.mergedAttrs, u.attrs)), d;
            }
            function HI(s, o, u, c, d, g) {
                const w = g.hostBindings;
                if (w) {
                    let I = s.hostBindingOpCodes;
                    null === I && (I = s.hostBindingOpCodes = []);
                    const b = ~o.index;
                    (function SS(s) {
                        let o = s.length;
                        for (; o > 0; ) {
                            const u = s[--o];
                            if ("number" == typeof u && u < 0) return u;
                        }
                        return 0;
                    })(I) != b && I.push(b),
                        I.push(c, d, w);
                }
            }
            function sm(s, o) {
                null !== s.hostBindings && s.hostBindings(1, o);
            }
            function vf(s, o) {
                (o.flags |= 2),
                    (s.components || (s.components = [])).push(o.index);
            }
            function zv(s, o, u) {
                if (u) {
                    if (o.exportAs)
                        for (let c = 0; c < o.exportAs.length; c++)
                            u[o.exportAs[c]] = s;
                    Di(o) && (u[""] = s);
                }
            }
            function qv(s, o, u) {
                (s.flags |= 1),
                    (s.directiveStart = o),
                    (s.directiveEnd = o + u),
                    (s.providerIndexes = o);
            }
            function Kv(s, o, u, c, d) {
                s.data[c] = d;
                const g = d.factory || (d.factory = wo(d.type)),
                    w = new ja(g, Di(d), rd);
                (s.blueprint[c] = w),
                    (u[c] = w),
                    HI(s, o, 0, c, _i(s, u, d.hostVars, Bt), d);
            }
            function RS(s, o, u) {
                const c = jr(o, s),
                    d = rm(u),
                    g = s[10],
                    w = Ef(
                        s,
                        ld(
                            s,
                            d,
                            null,
                            u.onPush ? 32 : 16,
                            c,
                            o,
                            g,
                            g.createRenderer(c, u),
                            null,
                            null,
                            null
                        )
                    );
                s[o.index] = w;
            }
            function $o(s, o, u, c, d, g) {
                const w = jr(s, o);
                !(function om(s, o, u, c, d, g, w) {
                    if (null == g) s.removeAttribute(o, d, u);
                    else {
                        const I = null == w ? ce(g) : w(g, c || "", d);
                        s.setAttribute(o, d, I, u);
                    }
                })(o[11], w, g, s.value, u, c, d);
            }
            function Zv(s, o, u, c, d, g) {
                const w = g[o];
                if (null !== w) {
                    const I = c.setInput;
                    for (let b = 0; b < w.length; ) {
                        const S = w[b++],
                            x = w[b++],
                            k = w[b++];
                        null !== I ? c.setInput(u, k, S, x) : (u[x] = k);
                    }
                }
            }
            function MS(s, o) {
                let u = null,
                    c = 0;
                for (; c < o.length; ) {
                    const d = o[c];
                    if (0 !== d)
                        if (5 !== d) {
                            if ("number" == typeof d) break;
                            s.hasOwnProperty(d) &&
                                (null === u && (u = []),
                                u.push(d, s[d], o[c + 1])),
                                (c += 2);
                        } else c += 2;
                    else c += 4;
                }
                return u;
            }
            function GI(s, o, u, c) {
                return new Array(s, !0, !1, o, null, 0, c, u, null, null);
            }
            function am(s, o) {
                const u = Vr(o, s);
                if (Ks(u)) {
                    const c = u[1];
                    48 & u[2] ? xl(c, u, c.template, u[8]) : u[5] > 0 && wf(u);
                }
            }
            function wf(s) {
                for (let c = su(s); null !== c; c = nr(c))
                    for (let d = 10; d < c.length; d++) {
                        const g = c[d];
                        if (512 & g[2]) {
                            const w = g[1];
                            xl(w, g, w.template, g[8]);
                        } else g[5] > 0 && wf(g);
                    }
                const u = s[1].components;
                if (null !== u)
                    for (let c = 0; c < u.length; c++) {
                        const d = Vr(u[c], s);
                        Ks(d) && d[5] > 0 && wf(d);
                    }
            }
            function zI(s, o) {
                const u = Vr(o, s),
                    c = u[1];
                (function PS(s, o) {
                    for (let u = o.length; u < s.blueprint.length; u++)
                        o.push(s.blueprint[u]);
                })(c, u),
                    fu(c, u, u[8]);
            }
            function Ef(s, o) {
                return s[13] ? (s[14][4] = o) : (s[13] = o), (s[14] = o), o;
            }
            function If(s) {
                for (; s; ) {
                    s[2] |= 32;
                    const o = os(s);
                    if (ea(s) && !o) return s;
                    s = o;
                }
                return null;
            }
            function KI(s) {
                !(function qI(s) {
                    for (let o = 0; o < s.components.length; o++) {
                        const u = s.components[o],
                            c = ro(u);
                        if (null !== c) {
                            const d = c[1];
                            FI(d, c, d.template, u);
                        }
                    }
                })(s[8]);
            }
            function Qv(s, o, u) {
                ph(0), o(s, u);
            }
            const FS = (() => Promise.resolve(null))();
            function Jv(s) {
                return s[7] || (s[7] = []);
            }
            function Xv(s) {
                return s.cleanup || (s.cleanup = []);
            }
            function ew(s, o) {
                const u = s[9],
                    c = u ? u.get(El, null) : null;
                c && c.handleError(o);
            }
            function Cf(s, o, u, c, d) {
                for (let g = 0; g < u.length; ) {
                    const w = u[g++],
                        I = u[g++],
                        b = o[w],
                        S = s.data[w];
                    null !== S.setInput ? S.setInput(b, d, c, I) : (b[I] = d);
                }
            }
            function um(s, o, u) {
                let c = u ? s.styles : null,
                    d = u ? s.classes : null,
                    g = 0;
                if (null !== o)
                    for (let w = 0; w < o.length; w++) {
                        const I = o[w];
                        "number" == typeof I
                            ? (g = I)
                            : 1 == g
                            ? (d = fe(d, I))
                            : 2 == g && (c = fe(c, I + ": " + o[++w] + ";"));
                    }
                u ? (s.styles = c) : (s.stylesWithoutHost = c),
                    u ? (s.classes = d) : (s.classesWithoutHost = d);
            }
            function VS() {
                const s = Sn();
                _h(we()[1], s);
            }
            function Wo(s) {
                let o = (function rw(s) {
                        return Object.getPrototypeOf(s.prototype).constructor;
                    })(s.type),
                    u = !0;
                const c = [s];
                for (; o; ) {
                    let d;
                    if (Di(s)) d = o.ɵcmp || o.ɵdir;
                    else {
                        if (o.ɵcmp) throw new Se(903, !1);
                        d = o.ɵdir;
                    }
                    if (d) {
                        if (u) {
                            c.push(d);
                            const w = s;
                            (w.inputs = lm(s.inputs)),
                                (w.declaredInputs = lm(s.declaredInputs)),
                                (w.outputs = lm(s.outputs));
                            const I = d.hostBindings;
                            I && dm(s, I);
                            const b = d.viewQuery,
                                S = d.contentQueries;
                            if (
                                (b && mu(s, b),
                                S && cm(s, S),
                                se(s.inputs, d.inputs),
                                se(s.declaredInputs, d.declaredInputs),
                                se(s.outputs, d.outputs),
                                Di(d) && d.data.animation)
                            ) {
                                const x = s.data;
                                x.animation = (x.animation || []).concat(
                                    d.data.animation
                                );
                            }
                        }
                        const g = d.features;
                        if (g)
                            for (let w = 0; w < g.length; w++) {
                                const I = g[w];
                                I && I.ngInherit && I(s), I === Wo && (u = !1);
                            }
                    }
                    o = Object.getPrototypeOf(o);
                }
                !(function YI(s) {
                    let o = 0,
                        u = null;
                    for (let c = s.length - 1; c >= 0; c--) {
                        const d = s[c];
                        (d.hostVars = o += d.hostVars),
                            (d.hostAttrs = Dc(
                                d.hostAttrs,
                                (u = Dc(u, d.hostAttrs))
                            ));
                    }
                })(c);
            }
            function lm(s) {
                return s === Qn ? {} : s === Tt ? [] : s;
            }
            function mu(s, o) {
                const u = s.viewQuery;
                s.viewQuery = u
                    ? (c, d) => {
                          o(c, d), u(c, d);
                      }
                    : o;
            }
            function cm(s, o) {
                const u = s.contentQueries;
                s.contentQueries = u
                    ? (c, d, g) => {
                          o(c, d, g), u(c, d, g);
                      }
                    : o;
            }
            function dm(s, o) {
                const u = s.hostBindings;
                s.hostBindings = u
                    ? (c, d) => {
                          o(c, d), u(c, d);
                      }
                    : o;
            }
            let bf = null;
            function ba() {
                if (!bf) {
                    const s = qe.Symbol;
                    if (s && s.iterator) bf = s.iterator;
                    else {
                        const o = Object.getOwnPropertyNames(Map.prototype);
                        for (let u = 0; u < o.length; ++u) {
                            const c = o[u];
                            "entries" !== c &&
                                "size" !== c &&
                                Map.prototype[c] === Map.prototype.entries &&
                                (bf = c);
                        }
                    }
                }
                return bf;
            }
            function Us(s) {
                return (
                    !!iw(s) &&
                    (Array.isArray(s) || (!(s instanceof Map) && ba() in s))
                );
            }
            function iw(s) {
                return (
                    null !== s &&
                    ("function" == typeof s || "object" == typeof s)
                );
            }
            function ii(s, o, u) {
                return !Object.is(s[o], u) && ((s[o] = u), !0);
            }
            function dd(s, o, u, c) {
                const d = we();
                return ii(d, la(), o) && (Ct(), $o(Rn(), d, s, o, u, c)), dd;
            }
            function sw(s, o, u, c, d, g, w, I) {
                const b = we(),
                    S = Ct(),
                    x = s + 22,
                    k = S.firstCreatePass
                        ? (function WS(s, o, u, c, d, g, w, I, b) {
                              const S = o.consts,
                                  x = cd(o, s, 4, w || null, Ai(S, I));
                              Wv(o, u, x, Ai(S, b)), _h(o, x);
                              const k = (x.tViews = gu(
                                  2,
                                  x,
                                  c,
                                  d,
                                  g,
                                  o.directiveRegistry,
                                  o.pipeRegistry,
                                  null,
                                  o.schemas,
                                  S
                              ));
                              return (
                                  null !== o.queries &&
                                      (o.queries.template(o, x),
                                      (k.queries = o.queries.embeddedTView(x))),
                                  x
                              );
                          })(x, S, b, o, u, c, d, g, w)
                        : S.data[x];
                Tr(k, !1);
                const z = b[11].createComment("");
                Jh(S, b, z, k),
                    Bn(z, b),
                    Ef(b, (b[x] = GI(z, b, z, k))),
                    Hi(k) && nm(S, b, k),
                    null != w && Ho(b, k, I);
            }
            function gm(s) {
                return (function Xr(s, o) {
                    return s[o];
                })(
                    (function Rs() {
                        return Rt.lFrame.contextLView;
                    })(),
                    22 + s
                );
            }
            function Af(s, o, u) {
                const c = we();
                return (
                    ii(c, la(), o) &&
                        (function us(s, o, u, c, d, g, w, I) {
                            const b = jr(o, u);
                            let x,
                                S = o.inputs;
                            !I && null != S && (x = S[c])
                                ? (Cf(s, u, x, c, d),
                                  Gs(o) &&
                                      (function BI(s, o) {
                                          const u = Vr(o, s);
                                          16 & u[2] || (u[2] |= 32);
                                      })(u, o.index))
                                : 3 & o.type &&
                                  ((c = (function DS(s) {
                                      return "class" === s
                                          ? "className"
                                          : "for" === s
                                          ? "htmlFor"
                                          : "formaction" === s
                                          ? "formAction"
                                          : "innerHtml" === s
                                          ? "innerHTML"
                                          : "readonly" === s
                                          ? "readOnly"
                                          : "tabindex" === s
                                          ? "tabIndex"
                                          : s;
                                  })(c)),
                                  (d = null != w ? w(d, o.value || "", c) : d),
                                  g.setProperty(b, c, d));
                        })(Ct(), Rn(), c, s, o, c[11], u, !1),
                    Af
                );
            }
            function pd(s, o, u, c, d) {
                const w = d ? "class" : "style";
                Cf(s, u, o.inputs[w], w, c);
            }
            function gd(s, o, u, c) {
                const d = we(),
                    g = Ct(),
                    w = 22 + s,
                    I = d[11],
                    b = (d[w] = fv(
                        I,
                        o,
                        (function Gp() {
                            return Rt.lFrame.currentNamespace;
                        })()
                    )),
                    S = g.firstCreatePass
                        ? (function kl(s, o, u, c, d, g, w) {
                              const I = o.consts,
                                  S = cd(o, s, 2, d, Ai(I, g));
                              return (
                                  Wv(o, u, S, Ai(I, w)),
                                  null !== S.attrs && um(S, S.attrs, !1),
                                  null !== S.mergedAttrs &&
                                      um(S, S.mergedAttrs, !0),
                                  null !== o.queries &&
                                      o.queries.elementStart(o, S),
                                  S
                              );
                          })(w, g, d, 0, o, u, c)
                        : g.data[w];
                Tr(S, !0);
                const x = S.mergedAttrs;
                null !== x && Ju(I, b, x);
                const k = S.classes;
                null !== k && ef(I, b, k);
                const z = S.styles;
                return (
                    null !== z && Og(I, b, z),
                    64 != (64 & S.flags) && Jh(g, d, b, S),
                    0 ===
                        (function q() {
                            return Rt.lFrame.elementDepthCount;
                        })() && Bn(b, d),
                    (function ae() {
                        Rt.lFrame.elementDepthCount++;
                    })(),
                    Hi(S) &&
                        (nm(g, d, S),
                        (function pu(s, o, u) {
                            if (Ts(o)) {
                                const d = o.directiveEnd;
                                for (let g = o.directiveStart; g < d; g++) {
                                    const w = s.data[g];
                                    w.contentQueries &&
                                        w.contentQueries(1, u[g], g);
                                }
                            }
                        })(g, S, d)),
                    null !== c && Ho(d, S),
                    gd
                );
            }
            function xf() {
                let s = Sn();
                xs()
                    ? (function aa() {
                          Rt.lFrame.isParent = !1;
                      })()
                    : ((s = s.parent), Tr(s, !1));
                const o = s;
                !(function Pe() {
                    Rt.lFrame.elementDepthCount--;
                })();
                const u = Ct();
                return (
                    u.firstCreatePass &&
                        (_h(u, s), Ts(s) && u.queries.elementEnd(s)),
                    null != o.classesWithoutHost &&
                        (function yy(s) {
                            return 0 != (16 & s.flags);
                        })(o) &&
                        pd(u, o, we(), o.classesWithoutHost, !0),
                    null != o.stylesWithoutHost &&
                        (function qE(s) {
                            return 0 != (32 & s.flags);
                        })(o) &&
                        pd(u, o, we(), o.stylesWithoutHost, !1),
                    xf
                );
            }
            function aw(s, o, u, c) {
                return gd(s, o, u, c), xf(), aw;
            }
            function ym() {
                return we();
            }
            function lw(s) {
                return !!s && "function" == typeof s.then;
            }
            function rC(s) {
                return !!s && "function" == typeof s.subscribe;
            }
            const iC = rC;
            function Rf(s, o, u, c) {
                const d = we(),
                    g = Ct(),
                    w = Sn();
                return (
                    (function oC(s, o, u, c, d, g, w, I) {
                        const b = Hi(c),
                            x = s.firstCreatePass && Xv(s),
                            k = o[8],
                            z = Jv(o);
                        let ee = !0;
                        if (3 & c.type || I) {
                            const Je = jr(c, o),
                                st = I ? I(Je) : Je,
                                Dt = z.length,
                                ke = I ? (tn) => I(lr(tn[c.index])) : c.index;
                            let Et = null;
                            if (
                                (!I &&
                                    b &&
                                    (Et = (function sC(s, o, u, c) {
                                        const d = s.cleanup;
                                        if (null != d)
                                            for (
                                                let g = 0;
                                                g < d.length - 1;
                                                g += 2
                                            ) {
                                                const w = d[g];
                                                if (w === u && d[g + 1] === c) {
                                                    const I = o[7],
                                                        b = d[g + 2];
                                                    return I.length > b
                                                        ? I[b]
                                                        : null;
                                                }
                                                "string" == typeof w &&
                                                    (g += 2);
                                            }
                                        return null;
                                    })(s, o, d, c.index)),
                                null !== Et)
                            )
                                ((
                                    Et.__ngLastListenerFn__ || Et
                                ).__ngNextListenerFn__ = g),
                                    (Et.__ngLastListenerFn__ = g),
                                    (ee = !1);
                            else {
                                g = ao(c, o, k, g, !1);
                                const tn = u.listen(st, d, g);
                                z.push(g, tn), x && x.push(d, ke, Dt, Dt + 1);
                            }
                        } else g = ao(c, o, k, g, !1);
                        const Te = c.outputs;
                        let je;
                        if (ee && null !== Te && (je = Te[d])) {
                            const Je = je.length;
                            if (Je)
                                for (let st = 0; st < Je; st += 2) {
                                    const zn =
                                            o[je[st]][je[st + 1]].subscribe(g),
                                        Nu = z.length;
                                    z.push(g, zn),
                                        x && x.push(d, c.index, Nu, -(Nu + 1));
                                }
                        }
                    })(g, d, d[11], w, s, o, 0, c),
                    Rf
                );
            }
            function _d(s, o, u, c) {
                try {
                    return !1 !== u(c);
                } catch (d) {
                    return ew(s, d), !1;
                }
            }
            function ao(s, o, u, c, d) {
                return function g(w) {
                    if (w === Function) return c;
                    If(2 & s.flags ? Vr(s.index, o) : o);
                    let b = _d(o, 0, c, w),
                        S = g.__ngNextListenerFn__;
                    for (; S; )
                        (b = _d(o, 0, S, w) && b), (S = S.__ngNextListenerFn__);
                    return (
                        d &&
                            !1 === b &&
                            (w.preventDefault(), (w.returnValue = !1)),
                        b
                    );
                };
            }
            function yd(s = 1) {
                return (function fy(s) {
                    return (Rt.lFrame.contextLView = (function mh(s, o) {
                        for (; s > 0; ) (o = o[15]), s--;
                        return o;
                    })(s, Rt.lFrame.contextLView))[8];
                })(s);
            }
            function dC(s, o, u, c, d) {
                const g = s[u + 1],
                    w = null === o;
                let I = c ? Ls(g) : Bo(g),
                    b = !1;
                for (; 0 !== I && (!1 === b || w); ) {
                    const x = s[I + 1];
                    KS(s[I], o) && ((b = !0), (s[I + 1] = c ? Sl(x) : Yg(x))),
                        (I = c ? Ls(x) : Bo(x));
                }
                b && (s[u + 1] = c ? Yg(g) : Sl(g));
            }
            function KS(s, o) {
                return (
                    null === s ||
                    null == o ||
                    (Array.isArray(s) ? s[1] : s) === o ||
                    (!(!Array.isArray(s) || "string" != typeof o) &&
                        sl(s, o) >= 0)
                );
            }
            function kf(s, o) {
                return (
                    (function lo(s, o, u, c) {
                        const d = we(),
                            g = Ct(),
                            w = (function ns(s) {
                                const o = Rt.lFrame,
                                    u = o.bindingIndex;
                                return (o.bindingIndex = o.bindingIndex + s), u;
                            })(2);
                        g.firstUpdatePass &&
                            (function wC(s, o, u, c) {
                                const d = s.data;
                                if (null === d[u + 1]) {
                                    const g = d[Sr()],
                                        w = (function Of(s, o) {
                                            return o >= s.expandoStartIndex;
                                        })(s, u);
                                    (function mw(s, o) {
                                        return 0 != (s.flags & (o ? 16 : 32));
                                    })(g, c) &&
                                        null === o &&
                                        !w &&
                                        (o = !1),
                                        (o = (function Ed(s, o, u, c) {
                                            const d = (function _c(s) {
                                                const o =
                                                    Rt.lFrame
                                                        .currentDirectiveIndex;
                                                return -1 === o ? null : s[o];
                                            })(s);
                                            let g = c
                                                ? o.residualClasses
                                                : o.residualStyles;
                                            if (null === d)
                                                0 ===
                                                    (c
                                                        ? o.classBindings
                                                        : o.styleBindings) &&
                                                    ((u = wu(
                                                        (u = vm(
                                                            null,
                                                            s,
                                                            o,
                                                            u,
                                                            c
                                                        )),
                                                        o.attrs,
                                                        c
                                                    )),
                                                    (g = null));
                                            else {
                                                const w =
                                                    o.directiveStylingLast;
                                                if (-1 === w || s[w] !== d)
                                                    if (
                                                        ((u = vm(
                                                            d,
                                                            s,
                                                            o,
                                                            u,
                                                            c
                                                        )),
                                                        null === g)
                                                    ) {
                                                        let b = (function JS(
                                                            s,
                                                            o,
                                                            u
                                                        ) {
                                                            const c = u
                                                                ? o.classBindings
                                                                : o.styleBindings;
                                                            if (0 !== Bo(c))
                                                                return s[Ls(c)];
                                                        })(s, o, c);
                                                        void 0 !== b &&
                                                            Array.isArray(b) &&
                                                            ((b = vm(
                                                                null,
                                                                s,
                                                                o,
                                                                b[1],
                                                                c
                                                            )),
                                                            (b = wu(
                                                                b,
                                                                o.attrs,
                                                                c
                                                            )),
                                                            (function EC(
                                                                s,
                                                                o,
                                                                u,
                                                                c
                                                            ) {
                                                                s[
                                                                    Ls(
                                                                        u
                                                                            ? o.classBindings
                                                                            : o.styleBindings
                                                                    )
                                                                ] = c;
                                                            })(s, o, c, b));
                                                    } else
                                                        g = (function IC(
                                                            s,
                                                            o,
                                                            u
                                                        ) {
                                                            let c;
                                                            const d =
                                                                o.directiveEnd;
                                                            for (
                                                                let g =
                                                                    1 +
                                                                    o.directiveStylingLast;
                                                                g < d;
                                                                g++
                                                            )
                                                                c = wu(
                                                                    c,
                                                                    s[g]
                                                                        .hostAttrs,
                                                                    u
                                                                );
                                                            return wu(
                                                                c,
                                                                o.attrs,
                                                                u
                                                            );
                                                        })(s, o, c);
                                            }
                                            return (
                                                void 0 !== g &&
                                                    (c
                                                        ? (o.residualClasses =
                                                              g)
                                                        : (o.residualStyles =
                                                              g)),
                                                u
                                            );
                                        })(d, g, o, c)),
                                        (function cC(s, o, u, c, d, g) {
                                            let w = g
                                                    ? o.classBindings
                                                    : o.styleBindings,
                                                I = Ls(w),
                                                b = Bo(w);
                                            s[c] = u;
                                            let x,
                                                S = !1;
                                            if (Array.isArray(u)) {
                                                const k = u;
                                                (x = k[1]),
                                                    (null === x ||
                                                        sl(k, x) > 0) &&
                                                        (S = !0);
                                            } else x = u;
                                            if (d)
                                                if (0 !== b) {
                                                    const z = Ls(s[I + 1]);
                                                    (s[c + 1] = id(z, I)),
                                                        0 !== z &&
                                                            (s[z + 1] = Qg(
                                                                s[z + 1],
                                                                c
                                                            )),
                                                        (s[I + 1] =
                                                            (function gS(s, o) {
                                                                return (
                                                                    (131071 &
                                                                        s) |
                                                                    (o << 17)
                                                                );
                                                            })(s[I + 1], c));
                                                } else
                                                    (s[c + 1] = id(I, 0)),
                                                        0 !== I &&
                                                            (s[I + 1] = Qg(
                                                                s[I + 1],
                                                                c
                                                            )),
                                                        (I = c);
                                            else
                                                (s[c + 1] = id(b, 0)),
                                                    0 === I
                                                        ? (I = c)
                                                        : (s[b + 1] = Qg(
                                                              s[b + 1],
                                                              c
                                                          )),
                                                    (b = c);
                                            S && (s[c + 1] = Yg(s[c + 1])),
                                                dC(s, x, c, !0),
                                                dC(s, x, c, !1),
                                                (function qS(s, o, u, c, d) {
                                                    const g = d
                                                        ? s.residualClasses
                                                        : s.residualStyles;
                                                    null != g &&
                                                        "string" == typeof o &&
                                                        sl(g, o) >= 0 &&
                                                        (u[c + 1] = Sl(
                                                            u[c + 1]
                                                        ));
                                                })(o, x, s, c, g),
                                                (w = id(I, b)),
                                                g
                                                    ? (o.classBindings = w)
                                                    : (o.styleBindings = w);
                                        })(d, g, o, u, w, c);
                                }
                            })(g, s, w, c),
                            o !== Bt &&
                                ii(d, w, o) &&
                                (function CC(s, o, u, c, d, g, w, I) {
                                    if (!(3 & o.type)) return;
                                    const b = s.data,
                                        S = b[I + 1];
                                    Im(
                                        (function Tl(s) {
                                            return 1 == (1 & s);
                                        })(S)
                                            ? Em(b, o, u, d, Bo(S), w)
                                            : void 0
                                    ) ||
                                        (Im(g) ||
                                            ((function Fv(s) {
                                                return 2 == (2 & s);
                                            })(S) &&
                                                (g = Em(b, null, u, d, I, w))),
                                        (function zT(s, o, u, c, d) {
                                            if (o)
                                                d
                                                    ? s.addClass(u, c)
                                                    : s.removeClass(u, c);
                                            else {
                                                let g =
                                                    -1 === c.indexOf("-")
                                                        ? void 0
                                                        : tr.DashCase;
                                                null == d
                                                    ? s.removeStyle(u, c, g)
                                                    : ("string" == typeof d &&
                                                          d.endsWith(
                                                              "!important"
                                                          ) &&
                                                          ((d = d.slice(
                                                              0,
                                                              -10
                                                          )),
                                                          (g |= tr.Important)),
                                                      s.setStyle(u, c, d, g));
                                            }
                                        })(c, w, Wi(Sr(), u), d, g));
                                })(
                                    g,
                                    g.data[Sr()],
                                    d,
                                    d[11],
                                    s,
                                    (d[w + 1] = (function bC(s, o) {
                                        return (
                                            null == s ||
                                                ("string" == typeof o
                                                    ? (s += o)
                                                    : "object" == typeof s &&
                                                      (s = ge(to(s)))),
                                            s
                                        );
                                    })(o, u)),
                                    c,
                                    w
                                );
                    })(s, o, null, !0),
                    kf
                );
            }
            function vm(s, o, u, c, d) {
                let g = null;
                const w = u.directiveEnd;
                let I = u.directiveStylingLast;
                for (
                    -1 === I ? (I = u.directiveStart) : I++;
                    I < w && ((g = o[I]), (c = wu(c, g.hostAttrs, d)), g !== s);

                )
                    I++;
                return null !== s && (u.directiveStylingLast = I), c;
            }
            function wu(s, o, u) {
                const c = u ? 1 : 2;
                let d = -1;
                if (null !== o)
                    for (let g = 0; g < o.length; g++) {
                        const w = o[g];
                        "number" == typeof w
                            ? (d = w)
                            : d === c &&
                              (Array.isArray(s) ||
                                  (s = void 0 === s ? [] : ["", s]),
                              Hr(s, w, !!u || o[++g]));
                    }
                return void 0 === s ? null : s;
            }
            function Em(s, o, u, c, d, g) {
                const w = null === o;
                let I;
                for (; d > 0; ) {
                    const b = s[d],
                        S = Array.isArray(b),
                        x = S ? b[1] : b,
                        k = null === x;
                    let z = u[d + 1];
                    z === Bt && (z = k ? Tt : void 0);
                    let ee = k ? eg(z, c) : x === c ? z : void 0;
                    if (
                        (S && !Im(ee) && (ee = eg(b, c)),
                        Im(ee) && ((I = ee), w))
                    )
                        return I;
                    const Te = s[d + 1];
                    d = w ? Ls(Te) : Bo(Te);
                }
                if (null !== o) {
                    let b = g ? o.residualClasses : o.residualStyles;
                    null != b && (I = eg(b, c));
                }
                return I;
            }
            function Im(s) {
                return void 0 !== s;
            }
            function _w(s, o = "") {
                const u = we(),
                    c = Ct(),
                    d = s + 22,
                    g = c.firstCreatePass ? cd(c, d, 1, o, null) : c.data[d],
                    w = (u[d] = (function $r(s, o) {
                        return s.createText(o);
                    })(u[11], o));
                Jh(c, u, w, g), Tr(g, !1);
            }
            function oi(s, o, u) {
                const c = we(),
                    d = (function oo(s, o, u, c) {
                        return ii(s, la(), u) ? o + ce(u) + c : Bt;
                    })(c, s, o, u);
                return (
                    d !== Bt &&
                        (function Go(s, o, u) {
                            const c = Wi(o, s);
                            !(function rI(s, o, u) {
                                s.setValue(o, u);
                            })(s[11], c, u);
                        })(c, Sr(), d),
                    oi
                );
            }
            const Ll = void 0;
            var aA = [
                "en",
                [["a", "p"], ["AM", "PM"], Ll],
                [["AM", "PM"], Ll, Ll],
                [
                    ["S", "M", "T", "W", "T", "F", "S"],
                    ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                    [
                        "Sunday",
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday",
                    ],
                    ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
                ],
                Ll,
                [
                    [
                        "J",
                        "F",
                        "M",
                        "A",
                        "M",
                        "J",
                        "J",
                        "A",
                        "S",
                        "O",
                        "N",
                        "D",
                    ],
                    [
                        "Jan",
                        "Feb",
                        "Mar",
                        "Apr",
                        "May",
                        "Jun",
                        "Jul",
                        "Aug",
                        "Sep",
                        "Oct",
                        "Nov",
                        "Dec",
                    ],
                    [
                        "January",
                        "February",
                        "March",
                        "April",
                        "May",
                        "June",
                        "July",
                        "August",
                        "September",
                        "October",
                        "November",
                        "December",
                    ],
                ],
                Ll,
                [
                    ["B", "A"],
                    ["BC", "AD"],
                    ["Before Christ", "Anno Domini"],
                ],
                0,
                [6, 0],
                ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"],
                ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"],
                ["{1}, {0}", Ll, "{1} 'at' {0}", Ll],
                [
                    ".",
                    ",",
                    ";",
                    "%",
                    "+",
                    "-",
                    "E",
                    "\xd7",
                    "\u2030",
                    "\u221e",
                    "NaN",
                    ":",
                ],
                ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"],
                "USD",
                "$",
                "US Dollar",
                {},
                "ltr",
                function oA(s) {
                    const u = Math.floor(Math.abs(s)),
                        c = s.toString().replace(/^[^.]*\.?/, "").length;
                    return 1 === u && 0 === c ? 1 : 5;
                },
            ];
            let Id = {};
            function Dw(s) {
                const o = (function ho(s) {
                    return s.toLowerCase().replace(/_/g, "-");
                })(s);
                let u = BC(o);
                if (u) return u;
                const c = o.split("-")[0];
                if (((u = BC(c)), u)) return u;
                if ("en" === c) return aA;
                throw new Se(701, !1);
            }
            function UC(s) {
                return Dw(s)[Nt.PluralCase];
            }
            function BC(s) {
                return (
                    s in Id ||
                        (Id[s] =
                            qe.ng &&
                            qe.ng.common &&
                            qe.ng.common.locales &&
                            qe.ng.common.locales[s]),
                    Id[s]
                );
            }
            var Nt = (() => (
                ((Nt = Nt || {})[(Nt.LocaleId = 0)] = "LocaleId"),
                (Nt[(Nt.DayPeriodsFormat = 1)] = "DayPeriodsFormat"),
                (Nt[(Nt.DayPeriodsStandalone = 2)] = "DayPeriodsStandalone"),
                (Nt[(Nt.DaysFormat = 3)] = "DaysFormat"),
                (Nt[(Nt.DaysStandalone = 4)] = "DaysStandalone"),
                (Nt[(Nt.MonthsFormat = 5)] = "MonthsFormat"),
                (Nt[(Nt.MonthsStandalone = 6)] = "MonthsStandalone"),
                (Nt[(Nt.Eras = 7)] = "Eras"),
                (Nt[(Nt.FirstDayOfWeek = 8)] = "FirstDayOfWeek"),
                (Nt[(Nt.WeekendRange = 9)] = "WeekendRange"),
                (Nt[(Nt.DateFormat = 10)] = "DateFormat"),
                (Nt[(Nt.TimeFormat = 11)] = "TimeFormat"),
                (Nt[(Nt.DateTimeFormat = 12)] = "DateTimeFormat"),
                (Nt[(Nt.NumberSymbols = 13)] = "NumberSymbols"),
                (Nt[(Nt.NumberFormats = 14)] = "NumberFormats"),
                (Nt[(Nt.CurrencyCode = 15)] = "CurrencyCode"),
                (Nt[(Nt.CurrencySymbol = 16)] = "CurrencySymbol"),
                (Nt[(Nt.CurrencyName = 17)] = "CurrencyName"),
                (Nt[(Nt.Currencies = 18)] = "Currencies"),
                (Nt[(Nt.Directionality = 19)] = "Directionality"),
                (Nt[(Nt.PluralCase = 20)] = "PluralCase"),
                (Nt[(Nt.ExtraData = 21)] = "ExtraData"),
                Nt
            ))();
            const Vl = "en-US";
            let jC = Vl;
            function Td(s, o, u, c, d) {
                if (((s = J(s)), Array.isArray(s)))
                    for (let g = 0; g < s.length; g++) Td(s[g], o, u, c, d);
                else {
                    const g = Ct(),
                        w = we();
                    let I = au(s) ? s : J(s.provide),
                        b = xv(s);
                    const S = Sn(),
                        x = 1048575 & S.providerIndexes,
                        k = S.directiveStart,
                        z = S.providerIndexes >> 20;
                    if (au(s) || !s.multi) {
                        const ee = new ja(b, d, rd),
                            Te = Sd(I, o, d ? x : x + z, k);
                        -1 === Te
                            ? (So(da(S, w), g, I),
                              Rm(g, s, o.length),
                              o.push(I),
                              S.directiveStart++,
                              S.directiveEnd++,
                              d && (S.providerIndexes += 1048576),
                              u.push(ee),
                              w.push(ee))
                            : ((u[Te] = ee), (w[Te] = ee));
                    } else {
                        const ee = Sd(I, o, x + z, k),
                            Te = Sd(I, o, x, x + z),
                            je = ee >= 0 && u[ee],
                            Je = Te >= 0 && u[Te];
                        if ((d && !Je) || (!d && !je)) {
                            So(da(S, w), g, I);
                            const st = (function UA(s, o, u, c, d) {
                                const g = new ja(s, u, rd);
                                return (
                                    (g.multi = []),
                                    (g.index = o),
                                    (g.componentProviders = 0),
                                    Mm(g, d, c && !u),
                                    g
                                );
                            })(d ? Ow : kw, u.length, d, c, b);
                            !d && Je && (u[Te].providerFactory = st),
                                Rm(g, s, o.length, 0),
                                o.push(I),
                                S.directiveStart++,
                                S.directiveEnd++,
                                d && (S.providerIndexes += 1048576),
                                u.push(st),
                                w.push(st);
                        } else
                            Rm(
                                g,
                                s,
                                ee > -1 ? ee : Te,
                                Mm(u[d ? Te : ee], b, !d && c)
                            );
                        !d && c && Je && u[Te].componentProviders++;
                    }
                }
            }
            function Rm(s, o, u, c) {
                const d = au(o),
                    g = (function vI(s) {
                        return !!s.useClass;
                    })(o);
                if (d || g) {
                    const b = (g ? J(o.useClass) : o).prototype.ngOnDestroy;
                    if (b) {
                        const S = s.destroyHooks || (s.destroyHooks = []);
                        if (!d && o.multi) {
                            const x = S.indexOf(u);
                            -1 === x ? S.push(u, [c, b]) : S[x + 1].push(c, b);
                        } else S.push(u, b);
                    }
                }
            }
            function Mm(s, o, u) {
                return u && s.componentProviders++, s.multi.push(o) - 1;
            }
            function Sd(s, o, u, c) {
                for (let d = u; d < c; d++) if (o[d] === s) return d;
                return -1;
            }
            function kw(s, o, u, c) {
                return Fw(this.multi, []);
            }
            function Ow(s, o, u, c) {
                const d = this.multi;
                let g;
                if (this.providerFactory) {
                    const w = this.providerFactory.componentProviders,
                        I = ha(u, u[1], this.providerFactory.index, c);
                    (g = I.slice(0, w)), Fw(d, g);
                    for (let b = w; b < I.length; b++) g.push(I[b]);
                } else (g = []), Fw(d, g);
                return g;
            }
            function Fw(s, o) {
                for (let u = 0; u < s.length; u++) o.push((0, s[u])());
                return o;
            }
            function sb(s, o = []) {
                return (u) => {
                    u.providersResolver = (c, d) =>
                        (function Pi(s, o, u) {
                            const c = Ct();
                            if (c.firstCreatePass) {
                                const d = Di(s);
                                Td(u, c.data, c.blueprint, d, !0),
                                    Td(o, c.data, c.blueprint, d, !1);
                            }
                        })(c, d ? d(s) : s, o);
                };
            }
            class ab {
                resolveComponentFactory(o) {
                    throw (function BA(s) {
                        const o = Error(
                            `No component factory found for ${ge(
                                s
                            )}. Did you add it to @NgModule.entryComponents?`
                        );
                        return (o.ngComponent = s), o;
                    })(o);
                }
            }
            let Du = (() => {
                class s {}
                return (s.NULL = new ab()), s;
            })();
            class Tu {}
            class ub {}
            class lb {}
            function HA() {
                return Bl(Sn(), we());
            }
            function Bl(s, o) {
                return new jl(jr(s, o));
            }
            let jl = (() => {
                class s {
                    constructor(u) {
                        this.nativeElement = u;
                    }
                }
                return (s.__NG_ELEMENT_ID__ = HA), s;
            })();
            function cb(s) {
                return s instanceof jl ? s.nativeElement : s;
            }
            class Lw {}
            let $f = (() => {
                    class s {}
                    return (
                        (s.__NG_ELEMENT_ID__ = () =>
                            (function $A() {
                                const s = we(),
                                    u = Vr(Sn().index, s);
                                return (Xn(u) ? u : s)[11];
                            })()),
                        s
                    );
                })(),
                Vw = (() => {
                    class s {}
                    return (
                        (s.ɵprov = Jt({
                            token: s,
                            providedIn: "root",
                            factory: () => null,
                        })),
                        s
                    );
                })();
            class Uw {
                constructor(o) {
                    (this.full = o),
                        (this.major = o.split(".")[0]),
                        (this.minor = o.split(".")[1]),
                        (this.patch = o.split(".").slice(2).join("."));
                }
            }
            const hb = new Uw("14.0.6"),
                Gf = {};
            function Wf(s, o, u, c, d = !1) {
                for (; null !== u; ) {
                    const g = o[u.index];
                    if ((null !== g && c.push(lr(g)), bi(g)))
                        for (let I = 10; I < g.length; I++) {
                            const b = g[I],
                                S = b[1].firstChild;
                            null !== S && Wf(b[1], b, S, c);
                        }
                    const w = u.type;
                    if (8 & w) Wf(s, o, u.child, c);
                    else if (32 & w) {
                        const I = iu(u, o);
                        let b;
                        for (; (b = I()); ) c.push(b);
                    } else if (16 & w) {
                        const I = Ev(o, u);
                        if (Array.isArray(I)) c.push(...I);
                        else {
                            const b = os(o[16]);
                            Wf(b[1], b, I, c, !0);
                        }
                    }
                    u = d ? u.projectionNext : u.next;
                }
                return c;
            }
            class Ad {
                constructor(o, u) {
                    (this._lView = o),
                        (this._cdRefInjectingView = u),
                        (this._appRef = null),
                        (this._attachedToViewContainer = !1);
                }
                get rootNodes() {
                    const o = this._lView,
                        u = o[1];
                    return Wf(u, o, u.firstChild, []);
                }
                get context() {
                    return this._lView[8];
                }
                set context(o) {
                    this._lView[8] = o;
                }
                get destroyed() {
                    return 128 == (128 & this._lView[2]);
                }
                destroy() {
                    if (this._appRef) this._appRef.detachView(this);
                    else if (this._attachedToViewContainer) {
                        const o = this._lView[3];
                        if (bi(o)) {
                            const u = o[8],
                                c = u ? u.indexOf(this) : -1;
                            c > -1 && (Rr(o, c), il(u, c));
                        }
                        this._attachedToViewContainer = !1;
                    }
                    mv(this._lView[1], this._lView);
                }
                onDestroy(o) {
                    VI(this._lView[1], this._lView, null, o);
                }
                markForCheck() {
                    If(this._cdRefInjectingView || this._lView);
                }
                detach() {
                    this._lView[2] &= -65;
                }
                reattach() {
                    this._lView[2] |= 64;
                }
                detectChanges() {
                    !(function Yv(s, o, u) {
                        const c = o[10];
                        c.begin && c.begin();
                        try {
                            xl(s, o, s.template, u);
                        } catch (d) {
                            throw (ew(o, d), d);
                        } finally {
                            c.end && c.end();
                        }
                    })(this._lView[1], this._lView, this.context);
                }
                checkNoChanges() {}
                attachToViewContainerRef() {
                    if (this._appRef) throw new Se(902, !1);
                    this._attachedToViewContainer = !0;
                }
                detachFromAppRef() {
                    (this._appRef = null),
                        (function Il(s, o) {
                            td(s, o, o[11], 2, null, null);
                        })(this._lView[1], this._lView);
                }
                attachToAppRef(o) {
                    if (this._attachedToViewContainer) throw new Se(902, !1);
                    this._appRef = o;
                }
            }
            class Bw extends Ad {
                constructor(o) {
                    super(o), (this._view = o);
                }
                detectChanges() {
                    KI(this._view);
                }
                checkNoChanges() {}
                get context() {
                    return null;
                }
            }
            class jw extends Du {
                constructor(o) {
                    super(), (this.ngModule = o);
                }
                resolveComponentFactory(o) {
                    const u = be(o);
                    return new zf(u, this.ngModule);
                }
            }
            function fb(s) {
                const o = [];
                for (let u in s)
                    s.hasOwnProperty(u) &&
                        o.push({ propName: s[u], templateName: u });
                return o;
            }
            class Pm {
                constructor(o, u) {
                    (this.injector = o), (this.parentInjector = u);
                }
                get(o, u, c) {
                    const d = this.injector.get(o, Gf, c);
                    return d !== Gf || u === Gf
                        ? d
                        : this.parentInjector.get(o, u, c);
                }
            }
            class zf extends lb {
                constructor(o, u) {
                    super(),
                        (this.componentDef = o),
                        (this.ngModule = u),
                        (this.componentType = o.type),
                        (this.selector = (function fI(s) {
                            return s.map(hI).join(",");
                        })(o.selectors)),
                        (this.ngContentSelectors = o.ngContentSelectors
                            ? o.ngContentSelectors
                            : []),
                        (this.isBoundToModule = !!u);
                }
                get inputs() {
                    return fb(this.componentDef.inputs);
                }
                get outputs() {
                    return fb(this.componentDef.outputs);
                }
                create(o, u, c, d) {
                    let g =
                        (d = d || this.ngModule) instanceof as
                            ? d
                            : d?.injector;
                    g &&
                        null !== this.componentDef.getStandaloneInjector &&
                        (g = this.componentDef.getStandaloneInjector(g) || g);
                    const w = g ? new Pm(o, g) : o,
                        I = w.get(Lw, null);
                    if (null === I) throw new Se(407, !1);
                    const b = w.get(Vw, null),
                        S = I.createRenderer(null, this.componentDef),
                        x = this.componentDef.selectors[0][0] || "div",
                        k = c
                            ? (function IS(s, o, u) {
                                  return s.selectRootElement(
                                      o,
                                      u === Wt.ShadowDom
                                  );
                              })(S, c, this.componentDef.encapsulation)
                            : fv(
                                  I.createRenderer(null, this.componentDef),
                                  x,
                                  (function GA(s) {
                                      const o = s.toLowerCase();
                                      return "svg" === o
                                          ? "svg"
                                          : "math" === o
                                          ? "math"
                                          : null;
                                  })(x)
                              ),
                        z = this.componentDef.onPush ? 288 : 272,
                        ee = (function nw(s, o) {
                            return {
                                components: [],
                                scheduler: s || m,
                                clean: FS,
                                playerHandler: o || null,
                                flags: 0,
                            };
                        })(),
                        Te = gu(
                            0,
                            null,
                            null,
                            1,
                            0,
                            null,
                            null,
                            null,
                            null,
                            null
                        ),
                        je = ld(null, Te, ee, z, null, null, I, S, b, w, null);
                    let Je, st;
                    wc(je);
                    try {
                        const Dt = (function LS(s, o, u, c, d, g) {
                            const w = u[1];
                            u[22] = s;
                            const b = cd(w, 22, 2, "#host", null),
                                S = (b.mergedAttrs = o.hostAttrs);
                            null !== S &&
                                (um(b, S, !0),
                                null !== s &&
                                    (Ju(d, s, S),
                                    null !== b.classes && ef(d, s, b.classes),
                                    null !== b.styles && Og(d, s, b.styles)));
                            const x = c.createRenderer(s, o),
                                k = ld(
                                    u,
                                    rm(o),
                                    null,
                                    o.onPush ? 32 : 16,
                                    u[22],
                                    b,
                                    c,
                                    x,
                                    g || null,
                                    null,
                                    null
                                );
                            return (
                                w.firstCreatePass &&
                                    (So(da(b, u), w, o.type),
                                    vf(w, b),
                                    qv(b, u.length, 1)),
                                Ef(u, k),
                                (u[22] = k)
                            );
                        })(k, this.componentDef, je, I, S);
                        if (k)
                            if (c) Ju(S, k, ["ng-version", hb.full]);
                            else {
                                const { attrs: ke, classes: Et } = (function XT(
                                    s
                                ) {
                                    const o = [],
                                        u = [];
                                    let c = 1,
                                        d = 2;
                                    for (; c < s.length; ) {
                                        let g = s[c];
                                        if ("string" == typeof g)
                                            2 === d
                                                ? "" !== g && o.push(g, s[++c])
                                                : 8 === d && u.push(g);
                                        else {
                                            if (!Fs(d)) break;
                                            d = g;
                                        }
                                        c++;
                                    }
                                    return { attrs: o, classes: u };
                                })(this.componentDef.selectors[0]);
                                ke && Ju(S, k, ke),
                                    Et &&
                                        Et.length > 0 &&
                                        ef(S, k, Et.join(" "));
                            }
                        if (((st = ia(Te, 22)), void 0 !== u)) {
                            const ke = (st.projection = []);
                            for (
                                let Et = 0;
                                Et < this.ngContentSelectors.length;
                                Et++
                            ) {
                                const tn = u[Et];
                                ke.push(null != tn ? Array.from(tn) : null);
                            }
                        }
                        (Je = (function tw(s, o, u, c, d) {
                            const g = u[1],
                                w = (function TS(s, o, u) {
                                    const c = Sn();
                                    s.firstCreatePass &&
                                        (u.providersResolver &&
                                            u.providersResolver(u),
                                        Kv(s, c, o, _i(s, o, 1, null), u));
                                    const d = ha(o, s, c.directiveStart, c);
                                    Bn(d, o);
                                    const g = jr(c, o);
                                    return g && Bn(g, o), d;
                                })(g, u, o);
                            if ((c.components.push(w), (s[8] = w), null !== d))
                                for (const b of d) b(w, o);
                            if (o.contentQueries) {
                                const b = Sn();
                                o.contentQueries(1, w, b.directiveStart);
                            }
                            const I = Sn();
                            return (
                                !g.firstCreatePass ||
                                    (null === o.hostBindings &&
                                        null === o.hostAttrs) ||
                                    (Zs(I.index),
                                    HI(
                                        u[1],
                                        I,
                                        0,
                                        I.directiveStart,
                                        I.directiveEnd,
                                        o
                                    ),
                                    sm(o, w)),
                                w
                            );
                        })(Dt, this.componentDef, je, ee, [VS])),
                            fu(Te, je, null);
                    } finally {
                        Cc();
                    }
                    return new gb(this.componentType, Je, Bl(st, je), je, st);
                }
            }
            class gb extends class jA {} {
                constructor(o, u, c, d, g) {
                    super(),
                        (this.location = c),
                        (this._rootLView = d),
                        (this._tNode = g),
                        (this.instance = u),
                        (this.hostView = this.changeDetectorRef = new Bw(d)),
                        (this.componentType = o);
                }
                get injector() {
                    return new xo(this._tNode, this._rootLView);
                }
                destroy() {
                    this.hostView.destroy();
                }
                onDestroy(o) {
                    this.hostView.onDestroy(o);
                }
            }
            function WA(s, o) {
                return new $w(s, o ?? null);
            }
            class $w extends Tu {
                constructor(o, u) {
                    super(),
                        (this._parent = u),
                        (this._bootstrapComponents = []),
                        (this.injector = this),
                        (this.destroyCbs = []),
                        (this.componentFactoryResolver = new jw(this));
                    const c = ut(o);
                    (this._bootstrapComponents = re(c.bootstrap)),
                        (this._r3Injector = EI(
                            o,
                            u,
                            [
                                { provide: Tu, useValue: this },
                                {
                                    provide: Du,
                                    useValue: this.componentFactoryResolver,
                                },
                            ],
                            ge(o),
                            new Set(["environment"])
                        )),
                        this._r3Injector.resolveInjectorInitializers(),
                        (this.instance = this.get(o));
                }
                get(o, u = Vo.THROW_IF_NOT_FOUND, c = dt.Default) {
                    return o === Vo || o === Tu || o === Bg
                        ? this
                        : this._r3Injector.get(o, u, c);
                }
                destroy() {
                    const o = this._r3Injector;
                    !o.destroyed && o.destroy(),
                        this.destroyCbs.forEach((u) => u()),
                        (this.destroyCbs = null);
                }
                onDestroy(o) {
                    this.destroyCbs.push(o);
                }
            }
            class xd extends ub {
                constructor(o) {
                    super(), (this.moduleType = o);
                }
                create(o) {
                    return new $w(this.moduleType, o);
                }
            }
            class zA extends Tu {
                constructor(o, u, c) {
                    super(),
                        (this.componentFactoryResolver = new jw(this)),
                        (this.instance = null);
                    const d = new kn(
                        [
                            ...o,
                            { provide: Tu, useValue: this },
                            {
                                provide: Du,
                                useValue: this.componentFactoryResolver,
                            },
                        ],
                        u || Kt(),
                        c,
                        new Set(["environment"])
                    );
                    (this.injector = d), d.resolveInjectorInitializers();
                }
                destroy() {
                    this.injector.destroy();
                }
                onDestroy(o) {
                    this.injector.onDestroy(o);
                }
            }
            function Gw(s, o = null, u = null) {
                return new zA(s, o, u).injector;
            }
            function xb(s) {
                return (o) => {
                    setTimeout(s, void 0, o);
                };
            }
            const ms = class CP extends p.x {
                constructor(o = !1) {
                    super(), (this.__isAsync = o);
                }
                emit(o) {
                    super.next(o);
                }
                subscribe(o, u, c) {
                    let d = o,
                        g = u || (() => null),
                        w = c;
                    if (o && "object" == typeof o) {
                        const b = o;
                        (d = b.next?.bind(b)),
                            (g = b.error?.bind(b)),
                            (w = b.complete?.bind(b));
                    }
                    this.__isAsync &&
                        ((g = xb(g)), d && (d = xb(d)), w && (w = xb(w)));
                    const I = super.subscribe({
                        next: d,
                        error: g,
                        complete: w,
                    });
                    return o instanceof Q.w0 && o.add(I), I;
                }
            };
            function ox() {
                return this._results[ba()]();
            }
            class qf {
                constructor(o = !1) {
                    (this._emitDistinctChangesOnly = o),
                        (this.dirty = !0),
                        (this._results = []),
                        (this._changesDetected = !1),
                        (this._changes = null),
                        (this.length = 0),
                        (this.first = void 0),
                        (this.last = void 0);
                    const u = ba(),
                        c = qf.prototype;
                    c[u] || (c[u] = ox);
                }
                get changes() {
                    return this._changes || (this._changes = new ms());
                }
                get(o) {
                    return this._results[o];
                }
                map(o) {
                    return this._results.map(o);
                }
                filter(o) {
                    return this._results.filter(o);
                }
                find(o) {
                    return this._results.find(o);
                }
                reduce(o, u) {
                    return this._results.reduce(o, u);
                }
                forEach(o) {
                    this._results.forEach(o);
                }
                some(o) {
                    return this._results.some(o);
                }
                toArray() {
                    return this._results.slice();
                }
                toString() {
                    return this._results.toString();
                }
                reset(o, u) {
                    const c = this;
                    c.dirty = !1;
                    const d = Ur(o);
                    (this._changesDetected = !(function Jp(s, o, u) {
                        if (s.length !== o.length) return !1;
                        for (let c = 0; c < s.length; c++) {
                            let d = s[c],
                                g = o[c];
                            if ((u && ((d = u(d)), (g = u(g))), g !== d))
                                return !1;
                        }
                        return !0;
                    })(c._results, d, u)) &&
                        ((c._results = d),
                        (c.length = d.length),
                        (c.last = d[this.length - 1]),
                        (c.first = d[0]));
                }
                notifyOnChanges() {
                    this._changes &&
                        (this._changesDetected ||
                            !this._emitDistinctChangesOnly) &&
                        this._changes.emit(this);
                }
                setDirty() {
                    this.dirty = !0;
                }
                destroy() {
                    this.changes.complete(), this.changes.unsubscribe();
                }
            }
            let $l = (() => {
                class s {}
                return (s.__NG_ELEMENT_ID__ = Zw), s;
            })();
            const qw = $l,
                Kw = class extends qw {
                    constructor(o, u, c) {
                        super(),
                            (this._declarationLView = o),
                            (this._declarationTContainer = u),
                            (this.elementRef = c);
                    }
                    createEmbeddedView(o, u) {
                        const c = this._declarationTContainer.tViews,
                            d = ld(
                                this._declarationLView,
                                c,
                                o,
                                16,
                                null,
                                c.declTNode,
                                null,
                                null,
                                null,
                                null,
                                u || null
                            );
                        d[17] =
                            this._declarationLView[
                                this._declarationTContainer.index
                            ];
                        const w = this._declarationLView[19];
                        return (
                            null !== w && (d[19] = w.createEmbeddedView(c)),
                            fu(c, d, o),
                            new Ad(d)
                        );
                    }
                };
            function Zw() {
                return Md(Sn(), we());
            }
            function Md(s, o) {
                return 4 & s.type ? new Kw(o, s, Bl(s, o)) : null;
            }
            let Nd = (() => {
                class s {}
                return (s.__NG_ELEMENT_ID__ = Pd), s;
            })();
            function Pd() {
                return Yw(Sn(), we());
            }
            const ax = Nd,
                Rb = class extends ax {
                    constructor(o, u, c) {
                        super(),
                            (this._lContainer = o),
                            (this._hostTNode = u),
                            (this._hostLView = c);
                    }
                    get element() {
                        return Bl(this._hostTNode, this._hostLView);
                    }
                    get injector() {
                        return new xo(this._hostTNode, this._hostLView);
                    }
                    get parentInjector() {
                        const o = Tc(this._hostTNode, this._hostLView);
                        if (Iy(o)) {
                            const u = To(o, this._hostLView),
                                c = el(o);
                            return new xo(u[1].data[c + 8], u);
                        }
                        return new xo(null, this._hostLView);
                    }
                    clear() {
                        for (; this.length > 0; ) this.remove(this.length - 1);
                    }
                    get(o) {
                        const u = Mb(this._lContainer);
                        return (null !== u && u[o]) || null;
                    }
                    get length() {
                        return this._lContainer.length - 10;
                    }
                    createEmbeddedView(o, u, c) {
                        let d, g;
                        "number" == typeof c
                            ? (d = c)
                            : null != c && ((d = c.index), (g = c.injector));
                        const w = o.createEmbeddedView(u || {}, g);
                        return this.insert(w, d), w;
                    }
                    createComponent(o, u, c, d, g) {
                        const w =
                            o &&
                            !(function Ka(s) {
                                return "function" == typeof s;
                            })(o);
                        let I;
                        if (w) I = u;
                        else {
                            const k = u || {};
                            (I = k.index),
                                (c = k.injector),
                                (d = k.projectableNodes),
                                (g = k.environmentInjector || k.ngModuleRef);
                        }
                        const b = w ? o : new zf(be(o)),
                            S = c || this.parentInjector;
                        if (!g && null == b.ngModule) {
                            const z = (w ? S : this.parentInjector).get(
                                as,
                                null
                            );
                            z && (g = z);
                        }
                        const x = b.create(S, d, void 0, g);
                        return this.insert(x.hostView, I), x;
                    }
                    insert(o, u) {
                        const c = o._lView,
                            d = c[1];
                        if (
                            (function sa(s) {
                                return bi(s[3]);
                            })(c)
                        ) {
                            const x = this.indexOf(o);
                            if (-1 !== x) this.detach(x);
                            else {
                                const k = c[3],
                                    z = new Rb(k, k[6], k[3]);
                                z.detach(z.indexOf(o));
                            }
                        }
                        const g = this._adjustIndex(u),
                            w = this._lContainer;
                        !(function Zh(s, o, u, c) {
                            const d = 10 + c,
                                g = u.length;
                            c > 0 && (u[d - 1][4] = o),
                                c < g - 10
                                    ? ((o[4] = u[d]), rl(u, 10 + c, o))
                                    : (u.push(o), (o[4] = null)),
                                (o[3] = u);
                            const w = o[17];
                            null !== w &&
                                u !== w &&
                                (function pv(s, o) {
                                    const u = s[9];
                                    o[16] !== o[3][3][16] && (s[2] = !0),
                                        null === u ? (s[9] = [o]) : u.push(o);
                                })(w, o);
                            const I = o[19];
                            null !== I && I.insertView(s), (o[2] |= 64);
                        })(d, c, w, g);
                        const I = Ng(g, w),
                            b = c[11],
                            S = Rg(b, w[7]);
                        return (
                            null !== S &&
                                (function Lo(s, o, u, c, d, g) {
                                    (c[0] = d),
                                        (c[6] = o),
                                        td(s, c, u, 1, d, g);
                                })(d, w[6], b, c, S, I),
                            o.attachToViewContainerRef(),
                            rl(Vm(w), g, o),
                            o
                        );
                    }
                    move(o, u) {
                        return this.insert(o, u);
                    }
                    indexOf(o) {
                        const u = Mb(this._lContainer);
                        return null !== u ? u.indexOf(o) : -1;
                    }
                    remove(o) {
                        const u = this._adjustIndex(o, -1),
                            c = Rr(this._lContainer, u);
                        c && (il(Vm(this._lContainer), u), mv(c[1], c));
                    }
                    detach(o) {
                        const u = this._adjustIndex(o, -1),
                            c = Rr(this._lContainer, u);
                        return c && null != il(Vm(this._lContainer), u)
                            ? new Ad(c)
                            : null;
                    }
                    _adjustIndex(o, u = 0) {
                        return o ?? this.length + u;
                    }
                };
            function Mb(s) {
                return s[8];
            }
            function Vm(s) {
                return s[8] || (s[8] = []);
            }
            function Yw(s, o) {
                let u;
                const c = o[s.index];
                if (bi(c)) u = c;
                else {
                    let d;
                    if (8 & s.type) d = lr(c);
                    else {
                        const g = o[11];
                        d = g.createComment("");
                        const w = jr(s, o);
                        wa(
                            g,
                            Rg(g, w),
                            d,
                            (function WT(s, o) {
                                return s.nextSibling(o);
                            })(g, w),
                            !1
                        );
                    }
                    (o[s.index] = u = GI(c, o, d, s)), Ef(o, u);
                }
                return new Rb(u, s, o);
            }
            class Qw {
                constructor(o) {
                    (this.queryList = o), (this.matches = null);
                }
                clone() {
                    return new Qw(this.queryList);
                }
                setDirty() {
                    this.queryList.setDirty();
                }
            }
            class Bm {
                constructor(o = []) {
                    this.queries = o;
                }
                createEmbeddedView(o) {
                    const u = o.queries;
                    if (null !== u) {
                        const c =
                                null !== o.contentQueries
                                    ? o.contentQueries[0]
                                    : u.length,
                            d = [];
                        for (let g = 0; g < c; g++) {
                            const w = u.getByIndex(g);
                            d.push(
                                this.queries[w.indexInDeclarationView].clone()
                            );
                        }
                        return new Bm(d);
                    }
                    return null;
                }
                insertView(o) {
                    this.dirtyQueriesWithMatches(o);
                }
                detachView(o) {
                    this.dirtyQueriesWithMatches(o);
                }
                dirtyQueriesWithMatches(o) {
                    for (let u = 0; u < this.queries.length; u++)
                        null !== kd(o, u).matches && this.queries[u].setDirty();
                }
            }
            class kb {
                constructor(o, u, c = null) {
                    (this.predicate = o), (this.flags = u), (this.read = c);
                }
            }
            class Jw {
                constructor(o = []) {
                    this.queries = o;
                }
                elementStart(o, u) {
                    for (let c = 0; c < this.queries.length; c++)
                        this.queries[c].elementStart(o, u);
                }
                elementEnd(o) {
                    for (let u = 0; u < this.queries.length; u++)
                        this.queries[u].elementEnd(o);
                }
                embeddedTView(o) {
                    let u = null;
                    for (let c = 0; c < this.length; c++) {
                        const d = null !== u ? u.length : 0,
                            g = this.getByIndex(c).embeddedTView(o, d);
                        g &&
                            ((g.indexInDeclarationView = c),
                            null !== u ? u.push(g) : (u = [g]));
                    }
                    return null !== u ? new Jw(u) : null;
                }
                template(o, u) {
                    for (let c = 0; c < this.queries.length; c++)
                        this.queries[c].template(o, u);
                }
                getByIndex(o) {
                    return this.queries[o];
                }
                get length() {
                    return this.queries.length;
                }
                track(o) {
                    this.queries.push(o);
                }
            }
            class jm {
                constructor(o, u = -1) {
                    (this.metadata = o),
                        (this.matches = null),
                        (this.indexInDeclarationView = -1),
                        (this.crossesNgTemplate = !1),
                        (this._appliesToNextNode = !0),
                        (this._declarationNodeIndex = u);
                }
                elementStart(o, u) {
                    this.isApplyingToNode(u) && this.matchTNode(o, u);
                }
                elementEnd(o) {
                    this._declarationNodeIndex === o.index &&
                        (this._appliesToNextNode = !1);
                }
                template(o, u) {
                    this.elementStart(o, u);
                }
                embeddedTView(o, u) {
                    return this.isApplyingToNode(o)
                        ? ((this.crossesNgTemplate = !0),
                          this.addMatch(-o.index, u),
                          new jm(this.metadata))
                        : null;
                }
                isApplyingToNode(o) {
                    if (
                        this._appliesToNextNode &&
                        1 != (1 & this.metadata.flags)
                    ) {
                        const u = this._declarationNodeIndex;
                        let c = o.parent;
                        for (; null !== c && 8 & c.type && c.index !== u; )
                            c = c.parent;
                        return u === (null !== c ? c.index : -1);
                    }
                    return this._appliesToNextNode;
                }
                matchTNode(o, u) {
                    const c = this.metadata.predicate;
                    if (Array.isArray(c))
                        for (let d = 0; d < c.length; d++) {
                            const g = c[d];
                            this.matchTNodeWithReadOption(o, u, Ob(u, g)),
                                this.matchTNodeWithReadOption(
                                    o,
                                    u,
                                    nl(u, o, g, !1, !1)
                                );
                        }
                    else
                        c === $l
                            ? 4 & u.type &&
                              this.matchTNodeWithReadOption(o, u, -1)
                            : this.matchTNodeWithReadOption(
                                  o,
                                  u,
                                  nl(u, o, c, !1, !1)
                              );
                }
                matchTNodeWithReadOption(o, u, c) {
                    if (null !== c) {
                        const d = this.metadata.read;
                        if (null !== d)
                            if (
                                d === jl ||
                                d === Nd ||
                                (d === $l && 4 & u.type)
                            )
                                this.addMatch(u.index, -2);
                            else {
                                const g = nl(u, o, d, !1, !1);
                                null !== g && this.addMatch(u.index, g);
                            }
                        else this.addMatch(u.index, c);
                    }
                }
                addMatch(o, u) {
                    null === this.matches
                        ? (this.matches = [o, u])
                        : this.matches.push(o, u);
                }
            }
            function Ob(s, o) {
                const u = s.localNames;
                if (null !== u)
                    for (let c = 0; c < u.length; c += 2)
                        if (u[c] === o) return u[c + 1];
                return null;
            }
            function ux(s, o, u, c) {
                return -1 === u
                    ? (function Fb(s, o) {
                          return 11 & s.type
                              ? Bl(s, o)
                              : 4 & s.type
                              ? Md(s, o)
                              : null;
                      })(o, s)
                    : -2 === u
                    ? (function lx(s, o, u) {
                          return u === jl
                              ? Bl(o, s)
                              : u === $l
                              ? Md(o, s)
                              : u === Nd
                              ? Yw(o, s)
                              : void 0;
                      })(s, o, c)
                    : ha(s, s[1], u, o);
            }
            function Lb(s, o, u, c) {
                const d = o[19].queries[c];
                if (null === d.matches) {
                    const g = s.data,
                        w = u.matches,
                        I = [];
                    for (let b = 0; b < w.length; b += 2) {
                        const S = w[b];
                        I.push(
                            S < 0
                                ? null
                                : ux(o, g[S], w[b + 1], u.metadata.read)
                        );
                    }
                    d.matches = I;
                }
                return d.matches;
            }
            function Hm(s, o, u, c) {
                const d = s.queries.getByIndex(u),
                    g = d.matches;
                if (null !== g) {
                    const w = Lb(s, o, d, u);
                    for (let I = 0; I < g.length; I += 2) {
                        const b = g[I];
                        if (b > 0) c.push(w[I / 2]);
                        else {
                            const S = g[I + 1],
                                x = o[-b];
                            for (let k = 10; k < x.length; k++) {
                                const z = x[k];
                                z[17] === z[3] && Hm(z[1], z, S, c);
                            }
                            if (null !== x[9]) {
                                const k = x[9];
                                for (let z = 0; z < k.length; z++) {
                                    const ee = k[z];
                                    Hm(ee[1], ee, S, c);
                                }
                            }
                        }
                    }
                }
                return c;
            }
            function Vb(s) {
                const o = we(),
                    u = Ct(),
                    c = yc();
                ph(c + 1);
                const d = kd(u, c);
                if (s.dirty && Si(o) === (2 == (2 & d.metadata.flags))) {
                    if (null === d.matches) s.reset([]);
                    else {
                        const g = d.crossesNgTemplate
                            ? Hm(u, o, c, [])
                            : Lb(u, o, d, c);
                        s.reset(g, cb), s.notifyOnChanges();
                    }
                    return !0;
                }
                return !1;
            }
            function Xw(s, o, u, c) {
                const d = Ct();
                if (d.firstCreatePass) {
                    const g = Sn();
                    (function jb(s, o, u) {
                        null === s.queries && (s.queries = new Jw()),
                            s.queries.track(new jm(o, u));
                    })(d, new kb(o, u, c), g.index),
                        (function hx(s, o) {
                            const u =
                                s.contentQueries || (s.contentQueries = []);
                            o !== (u.length ? u[u.length - 1] : -1) &&
                                u.push(s.queries.length - 1, o);
                        })(d, s),
                        2 == (2 & u) && (d.staticContentQueries = !0);
                }
                !(function Bb(s, o, u) {
                    const c = new qf(4 == (4 & u));
                    VI(s, o, c, c.destroy),
                        null === o[19] && (o[19] = new Bm()),
                        o[19].queries.push(new Qw(c));
                })(d, we(), u);
            }
            function Ub() {
                return (function dx(s, o) {
                    return s[19].queries[o].queryList;
                })(we(), yc());
            }
            function kd(s, o) {
                return s.queries.getByIndex(o);
            }
            function Od(s) {
                const o = be(s) || Oe(s) || ze(s);
                return null !== o && o.standalone;
            }
            function Qm(...s) {}
            const Zf = new mn("Application Initializer");
            let Wl = (() => {
                class s {
                    constructor(u) {
                        (this.appInits = u),
                            (this.resolve = Qm),
                            (this.reject = Qm),
                            (this.initialized = !1),
                            (this.done = !1),
                            (this.donePromise = new Promise((c, d) => {
                                (this.resolve = c), (this.reject = d);
                            }));
                    }
                    runInitializers() {
                        if (this.initialized) return;
                        const u = [],
                            c = () => {
                                (this.done = !0), this.resolve();
                            };
                        if (this.appInits)
                            for (let d = 0; d < this.appInits.length; d++) {
                                const g = this.appInits[d]();
                                if (lw(g)) u.push(g);
                                else if (iC(g)) {
                                    const w = new Promise((I, b) => {
                                        g.subscribe({ complete: I, error: b });
                                    });
                                    u.push(w);
                                }
                            }
                        Promise.all(u)
                            .then(() => {
                                c();
                            })
                            .catch((d) => {
                                this.reject(d);
                            }),
                            0 === u.length && c(),
                            (this.initialized = !0);
                    }
                }
                return (
                    (s.ɵfac = function (u) {
                        return new (u || s)(Un(Zf, 8));
                    }),
                    (s.ɵprov = Jt({
                        token: s,
                        factory: s.ɵfac,
                        providedIn: "root",
                    })),
                    s
                );
            })();
            const Jm = new mn("AppId", {
                providedIn: "root",
                factory: function Xm() {
                    return `${Yf()}${Yf()}${Yf()}`;
                },
            });
            function Yf() {
                return String.fromCharCode(97 + Math.floor(25 * Math.random()));
            }
            const p0 = new mn("Platform Initializer"),
                Xb = new mn("Platform ID", {
                    providedIn: "platform",
                    factory: () => "unknown",
                }),
                eD = new mn("appBootstrapListener");
            let g0 = (() => {
                class s {
                    log(u) {
                        console.log(u);
                    }
                    warn(u) {
                        console.warn(u);
                    }
                }
                return (
                    (s.ɵfac = function (u) {
                        return new (u || s)();
                    }),
                    (s.ɵprov = Jt({
                        token: s,
                        factory: s.ɵfac,
                        providedIn: "platform",
                    })),
                    s
                );
            })();
            const e_ = new mn("LocaleId", {
                    providedIn: "root",
                    factory: () =>
                        Qa(e_, dt.Optional | dt.SkipSelf) ||
                        (function tD() {
                            return (
                                (typeof $localize < "u" && $localize.locale) ||
                                Vl
                            );
                        })(),
                }),
                m0 = new mn("DefaultCurrencyCode", {
                    providedIn: "root",
                    factory: () => "USD",
                });
            class di {
                constructor(o, u) {
                    (this.ngModuleFactory = o), (this.componentFactories = u);
                }
            }
            let t_ = (() => {
                class s {
                    compileModuleSync(u) {
                        return new xd(u);
                    }
                    compileModuleAsync(u) {
                        return Promise.resolve(this.compileModuleSync(u));
                    }
                    compileModuleAndAllComponentsSync(u) {
                        const c = this.compileModuleSync(u),
                            g = re(ut(u).declarations).reduce((w, I) => {
                                const b = be(I);
                                return b && w.push(new zf(b)), w;
                            }, []);
                        return new di(c, g);
                    }
                    compileModuleAndAllComponentsAsync(u) {
                        return Promise.resolve(
                            this.compileModuleAndAllComponentsSync(u)
                        );
                    }
                    clearCache() {}
                    clearCacheFor(u) {}
                    getModuleId(u) {}
                }
                return (
                    (s.ɵfac = function (u) {
                        return new (u || s)();
                    }),
                    (s.ɵprov = Jt({
                        token: s,
                        factory: s.ɵfac,
                        providedIn: "root",
                    })),
                    s
                );
            })();
            const v0 = (() => Promise.resolve(0))();
            function w0(s) {
                typeof Zone > "u"
                    ? v0.then(() => {
                          s && s.apply(null, null);
                      })
                    : Zone.current.scheduleMicroTask("scheduleMicrotask", s);
            }
            class Zi {
                constructor({
                    enableLongStackTrace: o = !1,
                    shouldCoalesceEventChangeDetection: u = !1,
                    shouldCoalesceRunChangeDetection: c = !1,
                }) {
                    if (
                        ((this.hasPendingMacrotasks = !1),
                        (this.hasPendingMicrotasks = !1),
                        (this.isStable = !0),
                        (this.onUnstable = new ms(!1)),
                        (this.onMicrotaskEmpty = new ms(!1)),
                        (this.onStable = new ms(!1)),
                        (this.onError = new ms(!1)),
                        typeof Zone > "u")
                    )
                        throw new Se(908, !1);
                    Zone.assertZonePatched();
                    const d = this;
                    (d._nesting = 0),
                        (d._outer = d._inner = Zone.current),
                        Zone.TaskTrackingZoneSpec &&
                            (d._inner = d._inner.fork(
                                new Zone.TaskTrackingZoneSpec()
                            )),
                        o &&
                            Zone.longStackTraceZoneSpec &&
                            (d._inner = d._inner.fork(
                                Zone.longStackTraceZoneSpec
                            )),
                        (d.shouldCoalesceEventChangeDetection = !c && u),
                        (d.shouldCoalesceRunChangeDetection = c),
                        (d.lastRequestAnimationFrameId = -1),
                        (d.nativeRequestAnimationFrame = (function E0() {
                            let s = qe.requestAnimationFrame,
                                o = qe.cancelAnimationFrame;
                            if (typeof Zone < "u" && s && o) {
                                const u =
                                    s[Zone.__symbol__("OriginalDelegate")];
                                u && (s = u);
                                const c =
                                    o[Zone.__symbol__("OriginalDelegate")];
                                c && (o = c);
                            }
                            return {
                                nativeRequestAnimationFrame: s,
                                nativeCancelAnimationFrame: o,
                            };
                        })().nativeRequestAnimationFrame),
                        (function C0(s) {
                            const o = () => {
                                !(function I0(s) {
                                    s.isCheckStableRunning ||
                                        -1 !== s.lastRequestAnimationFrameId ||
                                        ((s.lastRequestAnimationFrameId =
                                            s.nativeRequestAnimationFrame.call(
                                                qe,
                                                () => {
                                                    s.fakeTopEventTask ||
                                                        (s.fakeTopEventTask =
                                                            Zone.root.scheduleEventTask(
                                                                "fakeTopEventTask",
                                                                () => {
                                                                    (s.lastRequestAnimationFrameId =
                                                                        -1),
                                                                        n_(s),
                                                                        (s.isCheckStableRunning =
                                                                            !0),
                                                                        Vd(s),
                                                                        (s.isCheckStableRunning =
                                                                            !1);
                                                                },
                                                                void 0,
                                                                () => {},
                                                                () => {}
                                                            )),
                                                        s.fakeTopEventTask.invoke();
                                                }
                                            )),
                                        n_(s));
                                })(s);
                            };
                            s._inner = s._inner.fork({
                                name: "angular",
                                properties: { isAngularZone: !0 },
                                onInvokeTask: (u, c, d, g, w, I) => {
                                    try {
                                        return sD(s), u.invokeTask(d, g, w, I);
                                    } finally {
                                        ((s.shouldCoalesceEventChangeDetection &&
                                            "eventTask" === g.type) ||
                                            s.shouldCoalesceRunChangeDetection) &&
                                            o(),
                                            Ud(s);
                                    }
                                },
                                onInvoke: (u, c, d, g, w, I, b) => {
                                    try {
                                        return sD(s), u.invoke(d, g, w, I, b);
                                    } finally {
                                        s.shouldCoalesceRunChangeDetection &&
                                            o(),
                                            Ud(s);
                                    }
                                },
                                onHasTask: (u, c, d, g) => {
                                    u.hasTask(d, g),
                                        c === d &&
                                            ("microTask" == g.change
                                                ? ((s._hasPendingMicrotasks =
                                                      g.microTask),
                                                  n_(s),
                                                  Vd(s))
                                                : "macroTask" == g.change &&
                                                  (s.hasPendingMacrotasks =
                                                      g.macroTask));
                                },
                                onHandleError: (u, c, d, g) => (
                                    u.handleError(d, g),
                                    s.runOutsideAngular(() =>
                                        s.onError.emit(g)
                                    ),
                                    !1
                                ),
                            });
                        })(d);
                }
                static isInAngularZone() {
                    return (
                        typeof Zone < "u" &&
                        !0 === Zone.current.get("isAngularZone")
                    );
                }
                static assertInAngularZone() {
                    if (!Zi.isInAngularZone()) throw new Se(909, !1);
                }
                static assertNotInAngularZone() {
                    if (Zi.isInAngularZone()) throw new Se(909, !1);
                }
                run(o, u, c) {
                    return this._inner.run(o, u, c);
                }
                runTask(o, u, c, d) {
                    const g = this._inner,
                        w = g.scheduleEventTask(
                            "NgZoneEvent: " + d,
                            o,
                            Dx,
                            Qm,
                            Qm
                        );
                    try {
                        return g.runTask(w, u, c);
                    } finally {
                        g.cancelTask(w);
                    }
                }
                runGuarded(o, u, c) {
                    return this._inner.runGuarded(o, u, c);
                }
                runOutsideAngular(o) {
                    return this._outer.run(o);
                }
            }
            const Dx = {};
            function Vd(s) {
                if (0 == s._nesting && !s.hasPendingMicrotasks && !s.isStable)
                    try {
                        s._nesting++, s.onMicrotaskEmpty.emit(null);
                    } finally {
                        if ((s._nesting--, !s.hasPendingMicrotasks))
                            try {
                                s.runOutsideAngular(() =>
                                    s.onStable.emit(null)
                                );
                            } finally {
                                s.isStable = !0;
                            }
                    }
            }
            function n_(s) {
                s.hasPendingMicrotasks = !!(
                    s._hasPendingMicrotasks ||
                    ((s.shouldCoalesceEventChangeDetection ||
                        s.shouldCoalesceRunChangeDetection) &&
                        -1 !== s.lastRequestAnimationFrameId)
                );
            }
            function sD(s) {
                s._nesting++,
                    s.isStable && ((s.isStable = !1), s.onUnstable.emit(null));
            }
            function Ud(s) {
                s._nesting--, Vd(s);
            }
            class oD {
                constructor() {
                    (this.hasPendingMicrotasks = !1),
                        (this.hasPendingMacrotasks = !1),
                        (this.isStable = !0),
                        (this.onUnstable = new ms()),
                        (this.onMicrotaskEmpty = new ms()),
                        (this.onStable = new ms()),
                        (this.onError = new ms());
                }
                run(o, u, c) {
                    return o.apply(u, c);
                }
                runGuarded(o, u, c) {
                    return o.apply(u, c);
                }
                runOutsideAngular(o) {
                    return o();
                }
                runTask(o, u, c, d) {
                    return o.apply(u, c);
                }
            }
            const b0 = new mn(""),
                D0 = new mn("");
            let Ru,
                r_ = (() => {
                    class s {
                        constructor(u, c, d) {
                            (this._ngZone = u),
                                (this.registry = c),
                                (this._pendingCount = 0),
                                (this._isZoneStable = !0),
                                (this._didWork = !1),
                                (this._callbacks = []),
                                (this.taskTrackingZone = null),
                                Ru ||
                                    ((function Tx(s) {
                                        Ru = s;
                                    })(d),
                                    d.addToWindow(c)),
                                this._watchAngularEvents(),
                                u.run(() => {
                                    this.taskTrackingZone =
                                        typeof Zone > "u"
                                            ? null
                                            : Zone.current.get(
                                                  "TaskTrackingZone"
                                              );
                                });
                        }
                        _watchAngularEvents() {
                            this._ngZone.onUnstable.subscribe({
                                next: () => {
                                    (this._didWork = !0),
                                        (this._isZoneStable = !1);
                                },
                            }),
                                this._ngZone.runOutsideAngular(() => {
                                    this._ngZone.onStable.subscribe({
                                        next: () => {
                                            Zi.assertNotInAngularZone(),
                                                w0(() => {
                                                    (this._isZoneStable = !0),
                                                        this._runCallbacksIfReady();
                                                });
                                        },
                                    });
                                });
                        }
                        increasePendingRequestCount() {
                            return (
                                (this._pendingCount += 1),
                                (this._didWork = !0),
                                this._pendingCount
                            );
                        }
                        decreasePendingRequestCount() {
                            if (
                                ((this._pendingCount -= 1),
                                this._pendingCount < 0)
                            )
                                throw new Error(
                                    "pending async requests below zero"
                                );
                            return (
                                this._runCallbacksIfReady(), this._pendingCount
                            );
                        }
                        isStable() {
                            return (
                                this._isZoneStable &&
                                0 === this._pendingCount &&
                                !this._ngZone.hasPendingMacrotasks
                            );
                        }
                        _runCallbacksIfReady() {
                            if (this.isStable())
                                w0(() => {
                                    for (; 0 !== this._callbacks.length; ) {
                                        let u = this._callbacks.pop();
                                        clearTimeout(u.timeoutId),
                                            u.doneCb(this._didWork);
                                    }
                                    this._didWork = !1;
                                });
                            else {
                                let u = this.getPendingTasks();
                                (this._callbacks = this._callbacks.filter(
                                    (c) =>
                                        !c.updateCb ||
                                        !c.updateCb(u) ||
                                        (clearTimeout(c.timeoutId), !1)
                                )),
                                    (this._didWork = !0);
                            }
                        }
                        getPendingTasks() {
                            return this.taskTrackingZone
                                ? this.taskTrackingZone.macroTasks.map((u) => ({
                                      source: u.source,
                                      creationLocation: u.creationLocation,
                                      data: u.data,
                                  }))
                                : [];
                        }
                        addCallback(u, c, d) {
                            let g = -1;
                            c &&
                                c > 0 &&
                                (g = setTimeout(() => {
                                    (this._callbacks = this._callbacks.filter(
                                        (w) => w.timeoutId !== g
                                    )),
                                        u(
                                            this._didWork,
                                            this.getPendingTasks()
                                        );
                                }, c)),
                                this._callbacks.push({
                                    doneCb: u,
                                    timeoutId: g,
                                    updateCb: d,
                                });
                        }
                        whenStable(u, c, d) {
                            if (d && !this.taskTrackingZone)
                                throw new Error(
                                    'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                                );
                            this.addCallback(u, c, d),
                                this._runCallbacksIfReady();
                        }
                        getPendingRequestCount() {
                            return this._pendingCount;
                        }
                        registerApplication(u) {
                            this.registry.registerApplication(u, this);
                        }
                        unregisterApplication(u) {
                            this.registry.unregisterApplication(u);
                        }
                        findProviders(u, c, d) {
                            return [];
                        }
                    }
                    return (
                        (s.ɵfac = function (u) {
                            return new (u || s)(Un(Zi), Un(aD), Un(D0));
                        }),
                        (s.ɵprov = Jt({ token: s, factory: s.ɵfac })),
                        s
                    );
                })(),
                aD = (() => {
                    class s {
                        constructor() {
                            this._applications = new Map();
                        }
                        registerApplication(u, c) {
                            this._applications.set(u, c);
                        }
                        unregisterApplication(u) {
                            this._applications.delete(u);
                        }
                        unregisterAllApplications() {
                            this._applications.clear();
                        }
                        getTestability(u) {
                            return this._applications.get(u) || null;
                        }
                        getAllTestabilities() {
                            return Array.from(this._applications.values());
                        }
                        getAllRootElements() {
                            return Array.from(this._applications.keys());
                        }
                        findTestabilityInTree(u, c = !0) {
                            return (
                                Ru?.findTestabilityInTree(this, u, c) ?? null
                            );
                        }
                    }
                    return (
                        (s.ɵfac = function (u) {
                            return new (u || s)();
                        }),
                        (s.ɵprov = Jt({
                            token: s,
                            factory: s.ɵfac,
                            providedIn: "platform",
                        })),
                        s
                    );
                })(),
                Mu = null;
            const uD = new mn("AllowMultipleToken"),
                Ma = new mn("PlatformDestroyListeners");
            class lD {
                constructor(o, u) {
                    (this.name = o), (this.token = u);
                }
            }
            function S0(s, o, u = []) {
                const c = `Platform: ${o}`,
                    d = new mn(c);
                return (g = []) => {
                    let w = zl();
                    if (!w || w.injector.get(uD, !1)) {
                        const I = [...u, ...g, { provide: d, useValue: !0 }];
                        s
                            ? s(I)
                            : (function Fi(s) {
                                  if (Mu && !Mu.get(uD, !1))
                                      throw new Se(400, !1);
                                  Mu = s;
                                  const o = s.get(s_);
                                  (function Bd(s) {
                                      const o = s.get(p0, null);
                                      o && o.forEach((u) => u());
                                  })(s);
                              })(
                                  (function x0(s = [], o) {
                                      return Vo.create({
                                          name: o,
                                          providers: [
                                              {
                                                  provide: jg,
                                                  useValue: "platform",
                                              },
                                              {
                                                  provide: Ma,
                                                  useValue: new Set([
                                                      () => (Mu = null),
                                                  ]),
                                              },
                                              ...s,
                                          ],
                                      });
                                  })(I, c)
                              );
                    }
                    return (function A0(s) {
                        const o = zl();
                        if (!o) throw new Se(401, !1);
                        return o;
                    })();
                };
            }
            function zl() {
                return Mu?.get(s_) ?? null;
            }
            let s_ = (() => {
                class s {
                    constructor(u) {
                        (this._injector = u),
                            (this._modules = []),
                            (this._destroyListeners = []),
                            (this._destroyed = !1);
                    }
                    bootstrapModuleFactory(u, c) {
                        const d = (function R0(s, o) {
                                let u;
                                return (
                                    (u =
                                        "noop" === s
                                            ? new oD()
                                            : ("zone.js" === s ? void 0 : s) ||
                                              new Zi(o)),
                                    u
                                );
                            })(
                                c?.ngZone,
                                (function o_(s) {
                                    return {
                                        enableLongStackTrace: !1,
                                        shouldCoalesceEventChangeDetection:
                                            !(!s || !s.ngZoneEventCoalescing) ||
                                            !1,
                                        shouldCoalesceRunChangeDetection:
                                            !(!s || !s.ngZoneRunCoalescing) ||
                                            !1,
                                    };
                                })(c)
                            ),
                            g = [{ provide: Zi, useValue: d }];
                        return d.run(() => {
                            const w = Vo.create({
                                    providers: g,
                                    parent: this.injector,
                                    name: u.moduleType.name,
                                }),
                                I = u.create(w),
                                b = I.injector.get(El, null);
                            if (!b) throw new Se(402, !1);
                            return (
                                d.runOutsideAngular(() => {
                                    const S = d.onError.subscribe({
                                        next: (x) => {
                                            b.handleError(x);
                                        },
                                    });
                                    I.onDestroy(() => {
                                        a_(this._modules, I), S.unsubscribe();
                                    });
                                }),
                                (function Jf(s, o, u) {
                                    try {
                                        const c = u();
                                        return lw(c)
                                            ? c.catch((d) => {
                                                  throw (
                                                      (o.runOutsideAngular(() =>
                                                          s.handleError(d)
                                                      ),
                                                      d)
                                                  );
                                              })
                                            : c;
                                    } catch (c) {
                                        throw (
                                            (o.runOutsideAngular(() =>
                                                s.handleError(c)
                                            ),
                                            c)
                                        );
                                    }
                                })(b, d, () => {
                                    const S = I.injector.get(Wl);
                                    return (
                                        S.runInitializers(),
                                        S.donePromise.then(
                                            () => (
                                                (function Sw(s) {
                                                    Pt(
                                                        s,
                                                        "Expected localeId to be defined"
                                                    ),
                                                        "string" == typeof s &&
                                                            (jC = s
                                                                .toLowerCase()
                                                                .replace(
                                                                    /_/g,
                                                                    "-"
                                                                ));
                                                })(
                                                    I.injector.get(e_, Vl) || Vl
                                                ),
                                                this._moduleDoBootstrap(I),
                                                I
                                            )
                                        )
                                    );
                                })
                            );
                        });
                    }
                    bootstrapModule(u, c = []) {
                        const d = jd({}, c);
                        return (function i_(s, o, u) {
                            const c = new xd(u);
                            return Promise.resolve(c);
                        })(0, 0, u).then((g) =>
                            this.bootstrapModuleFactory(g, d)
                        );
                    }
                    _moduleDoBootstrap(u) {
                        const c = u.injector.get(Xf);
                        if (u._bootstrapComponents.length > 0)
                            u._bootstrapComponents.forEach((d) =>
                                c.bootstrap(d)
                            );
                        else {
                            if (!u.instance.ngDoBootstrap)
                                throw new Se(403, !1);
                            u.instance.ngDoBootstrap(c);
                        }
                        this._modules.push(u);
                    }
                    onDestroy(u) {
                        this._destroyListeners.push(u);
                    }
                    get injector() {
                        return this._injector;
                    }
                    destroy() {
                        if (this._destroyed) throw new Se(404, !1);
                        this._modules.slice().forEach((c) => c.destroy()),
                            this._destroyListeners.forEach((c) => c());
                        const u = this._injector.get(Ma, null);
                        u && (u.forEach((c) => c()), u.clear()),
                            (this._destroyed = !0);
                    }
                    get destroyed() {
                        return this._destroyed;
                    }
                }
                return (
                    (s.ɵfac = function (u) {
                        return new (u || s)(Un(Vo));
                    }),
                    (s.ɵprov = Jt({
                        token: s,
                        factory: s.ɵfac,
                        providedIn: "platform",
                    })),
                    s
                );
            })();
            function jd(s, o) {
                return Array.isArray(o) ? o.reduce(jd, s) : { ...s, ...o };
            }
            let Xf = (() => {
                class s {
                    constructor(u, c, d) {
                        (this._zone = u),
                            (this._injector = c),
                            (this._exceptionHandler = d),
                            (this._bootstrapListeners = []),
                            (this._views = []),
                            (this._runningTick = !1),
                            (this._stable = !0),
                            (this._destroyed = !1),
                            (this._destroyListeners = []),
                            (this.componentTypes = []),
                            (this.components = []),
                            (this._onMicrotaskEmptySubscription =
                                this._zone.onMicrotaskEmpty.subscribe({
                                    next: () => {
                                        this._zone.run(() => {
                                            this.tick();
                                        });
                                    },
                                }));
                        const g = new O.y((I) => {
                                (this._stable =
                                    this._zone.isStable &&
                                    !this._zone.hasPendingMacrotasks &&
                                    !this._zone.hasPendingMicrotasks),
                                    this._zone.runOutsideAngular(() => {
                                        I.next(this._stable), I.complete();
                                    });
                            }),
                            w = new O.y((I) => {
                                let b;
                                this._zone.runOutsideAngular(() => {
                                    b = this._zone.onStable.subscribe(() => {
                                        Zi.assertNotInAngularZone(),
                                            w0(() => {
                                                !this._stable &&
                                                    !this._zone
                                                        .hasPendingMacrotasks &&
                                                    !this._zone
                                                        .hasPendingMicrotasks &&
                                                    ((this._stable = !0),
                                                    I.next(!0));
                                            });
                                    });
                                });
                                const S = this._zone.onUnstable.subscribe(
                                    () => {
                                        Zi.assertInAngularZone(),
                                            this._stable &&
                                                ((this._stable = !1),
                                                this._zone.runOutsideAngular(
                                                    () => {
                                                        I.next(!1);
                                                    }
                                                ));
                                    }
                                );
                                return () => {
                                    b.unsubscribe(), S.unsubscribe();
                                };
                            });
                        this.isStable = (0, ie.T)(g, w.pipe((0, he.B)()));
                    }
                    get destroyed() {
                        return this._destroyed;
                    }
                    get injector() {
                        return this._injector;
                    }
                    bootstrap(u, c) {
                        const d = u instanceof lb;
                        if (!this._injector.get(Wl).done)
                            throw (!d && Od(u), new Se(405, false));
                        let w;
                        (w = d
                            ? u
                            : this._injector
                                  .get(Du)
                                  .resolveComponentFactory(u)),
                            this.componentTypes.push(w.componentType);
                        const I = (function Qf(s) {
                                return s.isBoundToModule;
                            })(w)
                                ? void 0
                                : this._injector.get(Tu),
                            S = w.create(Vo.NULL, [], c || w.selector, I),
                            x = S.location.nativeElement,
                            k = S.injector.get(b0, null);
                        return (
                            k?.registerApplication(x),
                            S.onDestroy(() => {
                                this.detachView(S.hostView),
                                    a_(this.components, S),
                                    k?.unregisterApplication(x);
                            }),
                            this._loadComponent(S),
                            S
                        );
                    }
                    tick() {
                        if (this._runningTick) throw new Se(101, !1);
                        try {
                            this._runningTick = !0;
                            for (let u of this._views) u.detectChanges();
                        } catch (u) {
                            this._zone.runOutsideAngular(() =>
                                this._exceptionHandler.handleError(u)
                            );
                        } finally {
                            this._runningTick = !1;
                        }
                    }
                    attachView(u) {
                        const c = u;
                        this._views.push(c), c.attachToAppRef(this);
                    }
                    detachView(u) {
                        const c = u;
                        a_(this._views, c), c.detachFromAppRef();
                    }
                    _loadComponent(u) {
                        this.attachView(u.hostView),
                            this.tick(),
                            this.components.push(u),
                            this._injector
                                .get(eD, [])
                                .concat(this._bootstrapListeners)
                                .forEach((d) => d(u));
                    }
                    ngOnDestroy() {
                        if (!this._destroyed)
                            try {
                                this._destroyListeners.forEach((u) => u()),
                                    this._views
                                        .slice()
                                        .forEach((u) => u.destroy()),
                                    this._onMicrotaskEmptySubscription.unsubscribe();
                            } finally {
                                (this._destroyed = !0),
                                    (this._views = []),
                                    (this._bootstrapListeners = []),
                                    (this._destroyListeners = []);
                            }
                    }
                    onDestroy(u) {
                        return (
                            this._destroyListeners.push(u),
                            () => a_(this._destroyListeners, u)
                        );
                    }
                    destroy() {
                        if (this._destroyed) throw new Se(406, !1);
                        const u = this._injector;
                        u.destroy && !u.destroyed && u.destroy();
                    }
                    get viewCount() {
                        return this._views.length;
                    }
                    warnIfDestroyed() {}
                }
                return (
                    (s.ɵfac = function (u) {
                        return new (u || s)(Un(Zi), Un(Vo), Un(El));
                    }),
                    (s.ɵprov = Jt({
                        token: s,
                        factory: s.ɵfac,
                        providedIn: "root",
                    })),
                    s
                );
            })();
            function a_(s, o) {
                const u = s.indexOf(o);
                u > -1 && s.splice(u, 1);
            }
            let c_ = !0,
                M0 = !1;
            function dD() {
                return (M0 = !0), c_;
            }
            function hD() {
                if (M0)
                    throw new Error(
                        "Cannot enable prod mode after platform setup."
                    );
                c_ = !1;
            }
            let h_ = (() => {
                class s {}
                return (s.__NG_ELEMENT_ID__ = ep), s;
            })();
            function ep(s) {
                return (function ql(s, o, u) {
                    if (Gs(s) && !u) {
                        const c = Vr(s.index, o);
                        return new Ad(c, c);
                    }
                    return 47 & s.type ? new Ad(o[16], o) : null;
                })(Sn(), we(), 16 == (16 & s));
            }
            class mD {
                constructor() {}
                supports(o) {
                    return Us(o);
                }
                create(o) {
                    return new Nx(o);
                }
            }
            const Mx = (s, o) => o;
            class Nx {
                constructor(o) {
                    (this.length = 0),
                        (this._linkedRecords = null),
                        (this._unlinkedRecords = null),
                        (this._previousItHead = null),
                        (this._itHead = null),
                        (this._itTail = null),
                        (this._additionsHead = null),
                        (this._additionsTail = null),
                        (this._movesHead = null),
                        (this._movesTail = null),
                        (this._removalsHead = null),
                        (this._removalsTail = null),
                        (this._identityChangesHead = null),
                        (this._identityChangesTail = null),
                        (this._trackByFn = o || Mx);
                }
                forEachItem(o) {
                    let u;
                    for (u = this._itHead; null !== u; u = u._next) o(u);
                }
                forEachOperation(o) {
                    let u = this._itHead,
                        c = this._removalsHead,
                        d = 0,
                        g = null;
                    for (; u || c; ) {
                        const w =
                                !c || (u && u.currentIndex < k0(c, d, g))
                                    ? u
                                    : c,
                            I = k0(w, d, g),
                            b = w.currentIndex;
                        if (w === c) d--, (c = c._nextRemoved);
                        else if (((u = u._next), null == w.previousIndex)) d++;
                        else {
                            g || (g = []);
                            const S = I - d,
                                x = b - d;
                            if (S != x) {
                                for (let z = 0; z < S; z++) {
                                    const ee = z < g.length ? g[z] : (g[z] = 0),
                                        Te = ee + z;
                                    x <= Te && Te < S && (g[z] = ee + 1);
                                }
                                g[w.previousIndex] = x - S;
                            }
                        }
                        I !== b && o(w, I, b);
                    }
                }
                forEachPreviousItem(o) {
                    let u;
                    for (
                        u = this._previousItHead;
                        null !== u;
                        u = u._nextPrevious
                    )
                        o(u);
                }
                forEachAddedItem(o) {
                    let u;
                    for (u = this._additionsHead; null !== u; u = u._nextAdded)
                        o(u);
                }
                forEachMovedItem(o) {
                    let u;
                    for (u = this._movesHead; null !== u; u = u._nextMoved)
                        o(u);
                }
                forEachRemovedItem(o) {
                    let u;
                    for (u = this._removalsHead; null !== u; u = u._nextRemoved)
                        o(u);
                }
                forEachIdentityChange(o) {
                    let u;
                    for (
                        u = this._identityChangesHead;
                        null !== u;
                        u = u._nextIdentityChange
                    )
                        o(u);
                }
                diff(o) {
                    if ((null == o && (o = []), !Us(o))) throw new Se(900, !1);
                    return this.check(o) ? this : null;
                }
                onDestroy() {}
                check(o) {
                    this._reset();
                    let d,
                        g,
                        w,
                        u = this._itHead,
                        c = !1;
                    if (Array.isArray(o)) {
                        this.length = o.length;
                        for (let I = 0; I < this.length; I++)
                            (g = o[I]),
                                (w = this._trackByFn(I, g)),
                                null !== u && Object.is(u.trackById, w)
                                    ? (c &&
                                          (u = this._verifyReinsertion(
                                              u,
                                              g,
                                              w,
                                              I
                                          )),
                                      Object.is(u.item, g) ||
                                          this._addIdentityChange(u, g))
                                    : ((u = this._mismatch(u, g, w, I)),
                                      (c = !0)),
                                (u = u._next);
                    } else
                        (d = 0),
                            (function HS(s, o) {
                                if (Array.isArray(s))
                                    for (let u = 0; u < s.length; u++) o(s[u]);
                                else {
                                    const u = s[ba()]();
                                    let c;
                                    for (; !(c = u.next()).done; ) o(c.value);
                                }
                            })(o, (I) => {
                                (w = this._trackByFn(d, I)),
                                    null !== u && Object.is(u.trackById, w)
                                        ? (c &&
                                              (u = this._verifyReinsertion(
                                                  u,
                                                  I,
                                                  w,
                                                  d
                                              )),
                                          Object.is(u.item, I) ||
                                              this._addIdentityChange(u, I))
                                        : ((u = this._mismatch(u, I, w, d)),
                                          (c = !0)),
                                    (u = u._next),
                                    d++;
                            }),
                            (this.length = d);
                    return (
                        this._truncate(u), (this.collection = o), this.isDirty
                    );
                }
                get isDirty() {
                    return (
                        null !== this._additionsHead ||
                        null !== this._movesHead ||
                        null !== this._removalsHead ||
                        null !== this._identityChangesHead
                    );
                }
                _reset() {
                    if (this.isDirty) {
                        let o;
                        for (
                            o = this._previousItHead = this._itHead;
                            null !== o;
                            o = o._next
                        )
                            o._nextPrevious = o._next;
                        for (
                            o = this._additionsHead;
                            null !== o;
                            o = o._nextAdded
                        )
                            o.previousIndex = o.currentIndex;
                        for (
                            this._additionsHead = this._additionsTail = null,
                                o = this._movesHead;
                            null !== o;
                            o = o._nextMoved
                        )
                            o.previousIndex = o.currentIndex;
                        (this._movesHead = this._movesTail = null),
                            (this._removalsHead = this._removalsTail = null),
                            (this._identityChangesHead =
                                this._identityChangesTail =
                                    null);
                    }
                }
                _mismatch(o, u, c, d) {
                    let g;
                    return (
                        null === o
                            ? (g = this._itTail)
                            : ((g = o._prev), this._remove(o)),
                        null !==
                        (o =
                            null === this._unlinkedRecords
                                ? null
                                : this._unlinkedRecords.get(c, null))
                            ? (Object.is(o.item, u) ||
                                  this._addIdentityChange(o, u),
                              this._reinsertAfter(o, g, d))
                            : null !==
                              (o =
                                  null === this._linkedRecords
                                      ? null
                                      : this._linkedRecords.get(c, d))
                            ? (Object.is(o.item, u) ||
                                  this._addIdentityChange(o, u),
                              this._moveAfter(o, g, d))
                            : (o = this._addAfter(new Px(u, c), g, d)),
                        o
                    );
                }
                _verifyReinsertion(o, u, c, d) {
                    let g =
                        null === this._unlinkedRecords
                            ? null
                            : this._unlinkedRecords.get(c, null);
                    return (
                        null !== g
                            ? (o = this._reinsertAfter(g, o._prev, d))
                            : o.currentIndex != d &&
                              ((o.currentIndex = d), this._addToMoves(o, d)),
                        o
                    );
                }
                _truncate(o) {
                    for (; null !== o; ) {
                        const u = o._next;
                        this._addToRemovals(this._unlink(o)), (o = u);
                    }
                    null !== this._unlinkedRecords &&
                        this._unlinkedRecords.clear(),
                        null !== this._additionsTail &&
                            (this._additionsTail._nextAdded = null),
                        null !== this._movesTail &&
                            (this._movesTail._nextMoved = null),
                        null !== this._itTail && (this._itTail._next = null),
                        null !== this._removalsTail &&
                            (this._removalsTail._nextRemoved = null),
                        null !== this._identityChangesTail &&
                            (this._identityChangesTail._nextIdentityChange =
                                null);
                }
                _reinsertAfter(o, u, c) {
                    null !== this._unlinkedRecords &&
                        this._unlinkedRecords.remove(o);
                    const d = o._prevRemoved,
                        g = o._nextRemoved;
                    return (
                        null === d
                            ? (this._removalsHead = g)
                            : (d._nextRemoved = g),
                        null === g
                            ? (this._removalsTail = d)
                            : (g._prevRemoved = d),
                        this._insertAfter(o, u, c),
                        this._addToMoves(o, c),
                        o
                    );
                }
                _moveAfter(o, u, c) {
                    return (
                        this._unlink(o),
                        this._insertAfter(o, u, c),
                        this._addToMoves(o, c),
                        o
                    );
                }
                _addAfter(o, u, c) {
                    return (
                        this._insertAfter(o, u, c),
                        (this._additionsTail =
                            null === this._additionsTail
                                ? (this._additionsHead = o)
                                : (this._additionsTail._nextAdded = o)),
                        o
                    );
                }
                _insertAfter(o, u, c) {
                    const d = null === u ? this._itHead : u._next;
                    return (
                        (o._next = d),
                        (o._prev = u),
                        null === d ? (this._itTail = o) : (d._prev = o),
                        null === u ? (this._itHead = o) : (u._next = o),
                        null === this._linkedRecords &&
                            (this._linkedRecords = new Na()),
                        this._linkedRecords.put(o),
                        (o.currentIndex = c),
                        o
                    );
                }
                _remove(o) {
                    return this._addToRemovals(this._unlink(o));
                }
                _unlink(o) {
                    null !== this._linkedRecords &&
                        this._linkedRecords.remove(o);
                    const u = o._prev,
                        c = o._next;
                    return (
                        null === u ? (this._itHead = c) : (u._next = c),
                        null === c ? (this._itTail = u) : (c._prev = u),
                        o
                    );
                }
                _addToMoves(o, u) {
                    return (
                        o.previousIndex === u ||
                            (this._movesTail =
                                null === this._movesTail
                                    ? (this._movesHead = o)
                                    : (this._movesTail._nextMoved = o)),
                        o
                    );
                }
                _addToRemovals(o) {
                    return (
                        null === this._unlinkedRecords &&
                            (this._unlinkedRecords = new Na()),
                        this._unlinkedRecords.put(o),
                        (o.currentIndex = null),
                        (o._nextRemoved = null),
                        null === this._removalsTail
                            ? ((this._removalsTail = this._removalsHead = o),
                              (o._prevRemoved = null))
                            : ((o._prevRemoved = this._removalsTail),
                              (this._removalsTail =
                                  this._removalsTail._nextRemoved =
                                      o)),
                        o
                    );
                }
                _addIdentityChange(o, u) {
                    return (
                        (o.item = u),
                        (this._identityChangesTail =
                            null === this._identityChangesTail
                                ? (this._identityChangesHead = o)
                                : (this._identityChangesTail._nextIdentityChange =
                                      o)),
                        o
                    );
                }
            }
            class Px {
                constructor(o, u) {
                    (this.item = o),
                        (this.trackById = u),
                        (this.currentIndex = null),
                        (this.previousIndex = null),
                        (this._nextPrevious = null),
                        (this._prev = null),
                        (this._next = null),
                        (this._prevDup = null),
                        (this._nextDup = null),
                        (this._prevRemoved = null),
                        (this._nextRemoved = null),
                        (this._nextAdded = null),
                        (this._nextMoved = null),
                        (this._nextIdentityChange = null);
                }
            }
            class ip {
                constructor() {
                    (this._head = null), (this._tail = null);
                }
                add(o) {
                    null === this._head
                        ? ((this._head = this._tail = o),
                          (o._nextDup = null),
                          (o._prevDup = null))
                        : ((this._tail._nextDup = o),
                          (o._prevDup = this._tail),
                          (o._nextDup = null),
                          (this._tail = o));
                }
                get(o, u) {
                    let c;
                    for (c = this._head; null !== c; c = c._nextDup)
                        if (
                            (null === u || u <= c.currentIndex) &&
                            Object.is(c.trackById, o)
                        )
                            return c;
                    return null;
                }
                remove(o) {
                    const u = o._prevDup,
                        c = o._nextDup;
                    return (
                        null === u ? (this._head = c) : (u._nextDup = c),
                        null === c ? (this._tail = u) : (c._prevDup = u),
                        null === this._head
                    );
                }
            }
            class Na {
                constructor() {
                    this.map = new Map();
                }
                put(o) {
                    const u = o.trackById;
                    let c = this.map.get(u);
                    c || ((c = new ip()), this.map.set(u, c)), c.add(o);
                }
                get(o, u) {
                    const d = this.map.get(o);
                    return d ? d.get(o, u) : null;
                }
                remove(o) {
                    const u = o.trackById;
                    return this.map.get(u).remove(o) && this.map.delete(u), o;
                }
                get isEmpty() {
                    return 0 === this.map.size;
                }
                clear() {
                    this.map.clear();
                }
            }
            function k0(s, o, u) {
                const c = s.previousIndex;
                if (null === c) return c;
                let d = 0;
                return u && c < u.length && (d = u[c]), c + o + d;
            }
            class O0 {
                constructor() {}
                supports(o) {
                    return o instanceof Map || iw(o);
                }
                create() {
                    return new _D();
                }
            }
            class _D {
                constructor() {
                    (this._records = new Map()),
                        (this._mapHead = null),
                        (this._appendAfter = null),
                        (this._previousMapHead = null),
                        (this._changesHead = null),
                        (this._changesTail = null),
                        (this._additionsHead = null),
                        (this._additionsTail = null),
                        (this._removalsHead = null),
                        (this._removalsTail = null);
                }
                get isDirty() {
                    return (
                        null !== this._additionsHead ||
                        null !== this._changesHead ||
                        null !== this._removalsHead
                    );
                }
                forEachItem(o) {
                    let u;
                    for (u = this._mapHead; null !== u; u = u._next) o(u);
                }
                forEachPreviousItem(o) {
                    let u;
                    for (
                        u = this._previousMapHead;
                        null !== u;
                        u = u._nextPrevious
                    )
                        o(u);
                }
                forEachChangedItem(o) {
                    let u;
                    for (u = this._changesHead; null !== u; u = u._nextChanged)
                        o(u);
                }
                forEachAddedItem(o) {
                    let u;
                    for (u = this._additionsHead; null !== u; u = u._nextAdded)
                        o(u);
                }
                forEachRemovedItem(o) {
                    let u;
                    for (u = this._removalsHead; null !== u; u = u._nextRemoved)
                        o(u);
                }
                diff(o) {
                    if (o) {
                        if (!(o instanceof Map || iw(o))) throw new Se(900, !1);
                    } else o = new Map();
                    return this.check(o) ? this : null;
                }
                onDestroy() {}
                check(o) {
                    this._reset();
                    let u = this._mapHead;
                    if (
                        ((this._appendAfter = null),
                        this._forEach(o, (c, d) => {
                            if (u && u.key === d)
                                this._maybeAddToChanges(u, c),
                                    (this._appendAfter = u),
                                    (u = u._next);
                            else {
                                const g = this._getOrCreateRecordForKey(d, c);
                                u = this._insertBeforeOrAppend(u, g);
                            }
                        }),
                        u)
                    ) {
                        u._prev && (u._prev._next = null),
                            (this._removalsHead = u);
                        for (let c = u; null !== c; c = c._nextRemoved)
                            c === this._mapHead && (this._mapHead = null),
                                this._records.delete(c.key),
                                (c._nextRemoved = c._next),
                                (c.previousValue = c.currentValue),
                                (c.currentValue = null),
                                (c._prev = null),
                                (c._next = null);
                    }
                    return (
                        this._changesTail &&
                            (this._changesTail._nextChanged = null),
                        this._additionsTail &&
                            (this._additionsTail._nextAdded = null),
                        this.isDirty
                    );
                }
                _insertBeforeOrAppend(o, u) {
                    if (o) {
                        const c = o._prev;
                        return (
                            (u._next = o),
                            (u._prev = c),
                            (o._prev = u),
                            c && (c._next = u),
                            o === this._mapHead && (this._mapHead = u),
                            (this._appendAfter = o),
                            o
                        );
                    }
                    return (
                        this._appendAfter
                            ? ((this._appendAfter._next = u),
                              (u._prev = this._appendAfter))
                            : (this._mapHead = u),
                        (this._appendAfter = u),
                        null
                    );
                }
                _getOrCreateRecordForKey(o, u) {
                    if (this._records.has(o)) {
                        const d = this._records.get(o);
                        this._maybeAddToChanges(d, u);
                        const g = d._prev,
                            w = d._next;
                        return (
                            g && (g._next = w),
                            w && (w._prev = g),
                            (d._next = null),
                            (d._prev = null),
                            d
                        );
                    }
                    const c = new Gd(o);
                    return (
                        this._records.set(o, c),
                        (c.currentValue = u),
                        this._addToAdditions(c),
                        c
                    );
                }
                _reset() {
                    if (this.isDirty) {
                        let o;
                        for (
                            this._previousMapHead = this._mapHead,
                                o = this._previousMapHead;
                            null !== o;
                            o = o._next
                        )
                            o._nextPrevious = o._next;
                        for (
                            o = this._changesHead;
                            null !== o;
                            o = o._nextChanged
                        )
                            o.previousValue = o.currentValue;
                        for (
                            o = this._additionsHead;
                            null != o;
                            o = o._nextAdded
                        )
                            o.previousValue = o.currentValue;
                        (this._changesHead = this._changesTail = null),
                            (this._additionsHead = this._additionsTail = null),
                            (this._removalsHead = null);
                    }
                }
                _maybeAddToChanges(o, u) {
                    Object.is(u, o.currentValue) ||
                        ((o.previousValue = o.currentValue),
                        (o.currentValue = u),
                        this._addToChanges(o));
                }
                _addToAdditions(o) {
                    null === this._additionsHead
                        ? (this._additionsHead = this._additionsTail = o)
                        : ((this._additionsTail._nextAdded = o),
                          (this._additionsTail = o));
                }
                _addToChanges(o) {
                    null === this._changesHead
                        ? (this._changesHead = this._changesTail = o)
                        : ((this._changesTail._nextChanged = o),
                          (this._changesTail = o));
                }
                _forEach(o, u) {
                    o instanceof Map
                        ? o.forEach(u)
                        : Object.keys(o).forEach((c) => u(o[c], c));
                }
            }
            class Gd {
                constructor(o) {
                    (this.key = o),
                        (this.previousValue = null),
                        (this.currentValue = null),
                        (this._nextPrevious = null),
                        (this._next = null),
                        (this._prev = null),
                        (this._nextAdded = null),
                        (this._nextRemoved = null),
                        (this._nextChanged = null);
                }
            }
            function yD() {
                return new F0([new mD()]);
            }
            let F0 = (() => {
                class s {
                    constructor(u) {
                        this.factories = u;
                    }
                    static create(u, c) {
                        if (null != c) {
                            const d = c.factories.slice();
                            u = u.concat(d);
                        }
                        return new s(u);
                    }
                    static extend(u) {
                        return {
                            provide: s,
                            useFactory: (c) => s.create(u, c || yD()),
                            deps: [[s, new Xs(), new No()]],
                        };
                    }
                    find(u) {
                        const c = this.factories.find((d) => d.supports(u));
                        if (null != c) return c;
                        throw new Se(901, !1);
                    }
                }
                return (
                    (s.ɵprov = Jt({
                        token: s,
                        providedIn: "root",
                        factory: yD,
                    })),
                    s
                );
            })();
            function vD() {
                return new __([new O0()]);
            }
            let __ = (() => {
                class s {
                    constructor(u) {
                        this.factories = u;
                    }
                    static create(u, c) {
                        if (c) {
                            const d = c.factories.slice();
                            u = u.concat(d);
                        }
                        return new s(u);
                    }
                    static extend(u) {
                        return {
                            provide: s,
                            useFactory: (c) => s.create(u, c || vD()),
                            deps: [[s, new Xs(), new No()]],
                        };
                    }
                    find(u) {
                        const c = this.factories.find((d) => d.supports(u));
                        if (c) return c;
                        throw new Se(901, !1);
                    }
                }
                return (
                    (s.ɵprov = Jt({
                        token: s,
                        providedIn: "root",
                        factory: vD,
                    })),
                    s
                );
            })();
            const ID = S0(null, "core", []);
            let V0 = (() => {
                class s {
                    constructor(u) {}
                }
                return (
                    (s.ɵfac = function (u) {
                        return new (u || s)(Un(Xf));
                    }),
                    (s.ɵmod = ot({ type: s })),
                    (s.ɵinj = kt({})),
                    s
                );
            })();
            function Fx(s) {
                return "boolean" == typeof s ? s : null != s && "false" !== s;
            }
        },
        3942: (pt, Me, P) => {
            P.d(Me, { Z: () => Se });
            var p = P(2090),
                Q = P(4859),
                O = P(9681),
                ie = P(1877);
            class he {
                constructor(ce, de) {
                    (this._delegate = ce),
                        (this.firebase = de),
                        (0, O._addComponent)(
                            ce,
                            new Q.wA("app-compat", () => this, "PUBLIC")
                        ),
                        (this.container = ce.container);
                }
                get automaticDataCollectionEnabled() {
                    return this._delegate.automaticDataCollectionEnabled;
                }
                set automaticDataCollectionEnabled(ce) {
                    this._delegate.automaticDataCollectionEnabled = ce;
                }
                get name() {
                    return this._delegate.name;
                }
                get options() {
                    return this._delegate.options;
                }
                delete() {
                    return new Promise((ce) => {
                        this._delegate.checkDestroyed(), ce();
                    }).then(
                        () => (
                            this.firebase.INTERNAL.removeApp(this.name),
                            (0, O.deleteApp)(this._delegate)
                        )
                    );
                }
                _getService(ce, de = O._DEFAULT_ENTRY_NAME) {
                    var nt;
                    this._delegate.checkDestroyed();
                    const Qe = this._delegate.container.getProvider(ce);
                    return (
                        !Qe.isInitialized() &&
                            "EXPLICIT" ===
                                (null === (nt = Qe.getComponent()) ||
                                void 0 === nt
                                    ? void 0
                                    : nt.instantiationMode) &&
                            Qe.initialize(),
                        Qe.getImmediate({ identifier: de })
                    );
                }
                _removeServiceInstance(ce, de = O._DEFAULT_ENTRY_NAME) {
                    this._delegate.container.getProvider(ce).clearInstance(de);
                }
                _addComponent(ce) {
                    (0, O._addComponent)(this._delegate, ce);
                }
                _addOrOverwriteComponent(ce) {
                    (0, O._addOrOverwriteComponent)(this._delegate, ce);
                }
                toJSON() {
                    return {
                        name: this.name,
                        automaticDataCollectionEnabled:
                            this.automaticDataCollectionEnabled,
                        options: this.options,
                    };
                }
            }
            const se = new p.LL("app-compat", "Firebase", {
                    "no-app":
                        "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
                    "invalid-app-argument":
                        "firebase.{$appName}() takes either no argument or a Firebase App instance.",
                }),
                U = (function fe() {
                    const He = (function ge(He) {
                        const ce = {},
                            de = {
                                __esModule: !0,
                                initializeApp: function Ae(Ue, j = {}) {
                                    const Ce = O.initializeApp(Ue, j);
                                    if ((0, p.r3)(ce, Ce.name))
                                        return ce[Ce.name];
                                    const Y = new He(Ce, de);
                                    return (ce[Ce.name] = Y), Y;
                                },
                                app: Qe,
                                registerVersion: O.registerVersion,
                                setLogLevel: O.setLogLevel,
                                onLog: O.onLog,
                                apps: null,
                                SDK_VERSION: O.SDK_VERSION,
                                INTERNAL: {
                                    registerComponent: function De(Ue) {
                                        const j = Ue.name,
                                            Ce = j.replace("-compat", "");
                                        if (
                                            O._registerComponent(Ue) &&
                                            "PUBLIC" === Ue.type
                                        ) {
                                            const Y = (te = Qe()) => {
                                                if ("function" != typeof te[Ce])
                                                    throw se.create(
                                                        "invalid-app-argument",
                                                        { appName: j }
                                                    );
                                                return te[Ce]();
                                            };
                                            void 0 !== Ue.serviceProps &&
                                                (0, p.ZB)(Y, Ue.serviceProps),
                                                (de[Ce] = Y),
                                                (He.prototype[Ce] = function (
                                                    ...te
                                                ) {
                                                    return this._getService
                                                        .bind(this, j)
                                                        .apply(
                                                            this,
                                                            Ue.multipleInstances
                                                                ? te
                                                                : []
                                                        );
                                                });
                                        }
                                        return "PUBLIC" === Ue.type
                                            ? de[Ce]
                                            : null;
                                    },
                                    removeApp: function nt(Ue) {
                                        delete ce[Ue];
                                    },
                                    useAsService: function We(Ue, j) {
                                        return "serverAuth" === j ? null : j;
                                    },
                                    modularAPIs: O,
                                },
                            };
                        function Qe(Ue) {
                            if (
                                !(0, p.r3)(
                                    ce,
                                    (Ue = Ue || O._DEFAULT_ENTRY_NAME)
                                )
                            )
                                throw se.create("no-app", { appName: Ue });
                            return ce[Ue];
                        }
                        return (
                            (de.default = de),
                            Object.defineProperty(de, "apps", {
                                get: function ve() {
                                    return Object.keys(ce).map((Ue) => ce[Ue]);
                                },
                            }),
                            (Qe.App = He),
                            de
                        );
                    })(he);
                    return (
                        (He.INTERNAL = Object.assign(
                            Object.assign({}, He.INTERNAL),
                            {
                                createFirebaseNamespace: fe,
                                extendNamespace: function ce(de) {
                                    (0, p.ZB)(He, de);
                                },
                                createSubscribe: p.ne,
                                ErrorFactory: p.LL,
                                deepExtend: p.ZB,
                            }
                        )),
                        He
                    );
                })(),
                B = new ie.Yd("@firebase/app-compat");
            if ((0, p.jU)() && void 0 !== self.firebase) {
                B.warn(
                    "\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  "
                );
                const He = self.firebase.SDK_VERSION;
                He &&
                    He.indexOf("LITE") >= 0 &&
                    B.warn(
                        "\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    "
                    );
            }
            const Se = U;
            !(function Ee(He) {
                (0, O.registerVersion)("@firebase/app-compat", "0.1.30", He);
            })();
        },
        9681: (pt, Me, P) => {
            P.r(Me),
                P.d(Me, {
                    FirebaseError: () => ie.ZR,
                    SDK_VERSION: () => Ir,
                    _DEFAULT_ENTRY_NAME: () => Pt,
                    _addComponent: () => yn,
                    _addOrOverwriteComponent: () => Jt,
                    _apps: () => rn,
                    _clearComponents: () => Or,
                    _components: () => Yn,
                    _getProvider: () => kt,
                    _registerComponent: () => qn,
                    _removeServiceInstance: () => xt,
                    deleteApp: () => dt,
                    getApp: () => Fr,
                    getApps: () => sr,
                    initializeApp: () => Cr,
                    onLog: () => Pn,
                    registerVersion: () => an,
                    setLogLevel: () => br,
                });
            var p = P(5861),
                Q = P(4859),
                O = P(1877),
                ie = P(2090),
                he = P(8766);
            class _e {
                constructor($) {
                    this.container = $;
                }
                getPlatformInfoString() {
                    return this.container
                        .getProviders()
                        .map((G) => {
                            if (
                                (function se(L) {
                                    return "VERSION" === L.getComponent()?.type;
                                })(G)
                            ) {
                                const xe = G.getImmediate();
                                return `${xe.library}/${xe.version}`;
                            }
                            return null;
                        })
                        .filter((G) => G)
                        .join(" ");
                }
            }
            const ge = "@firebase/app",
                U = new O.Yd("@firebase/app"),
                Pt = "[DEFAULT]",
                Ke = {
                    [ge]: "fire-core",
                    "@firebase/app-compat": "fire-core-compat",
                    "@firebase/analytics": "fire-analytics",
                    "@firebase/analytics-compat": "fire-analytics-compat",
                    "@firebase/app-check": "fire-app-check",
                    "@firebase/app-check-compat": "fire-app-check-compat",
                    "@firebase/auth": "fire-auth",
                    "@firebase/auth-compat": "fire-auth-compat",
                    "@firebase/database": "fire-rtdb",
                    "@firebase/database-compat": "fire-rtdb-compat",
                    "@firebase/functions": "fire-fn",
                    "@firebase/functions-compat": "fire-fn-compat",
                    "@firebase/installations": "fire-iid",
                    "@firebase/installations-compat": "fire-iid-compat",
                    "@firebase/messaging": "fire-fcm",
                    "@firebase/messaging-compat": "fire-fcm-compat",
                    "@firebase/performance": "fire-perf",
                    "@firebase/performance-compat": "fire-perf-compat",
                    "@firebase/remote-config": "fire-rc",
                    "@firebase/remote-config-compat": "fire-rc-compat",
                    "@firebase/storage": "fire-gcs",
                    "@firebase/storage-compat": "fire-gcs-compat",
                    "@firebase/firestore": "fire-fst",
                    "@firebase/firestore-compat": "fire-fst-compat",
                    "fire-js": "fire-js",
                    firebase: "fire-js-all",
                },
                rn = new Map(),
                Yn = new Map();
            function yn(L, $) {
                try {
                    L.container.addComponent($);
                } catch (G) {
                    U.debug(
                        `Component ${$.name} failed to register with FirebaseApp ${L.name}`,
                        G
                    );
                }
            }
            function Jt(L, $) {
                L.container.addOrOverwriteComponent($);
            }
            function qn(L) {
                const $ = L.name;
                if (Yn.has($))
                    return (
                        U.debug(
                            `There were multiple attempts to register component ${$}.`
                        ),
                        !1
                    );
                Yn.set($, L);
                for (const G of rn.values()) yn(G, L);
                return !0;
            }
            function kt(L, $) {
                const G = L.container
                    .getProvider("heartbeat")
                    .getImmediate({ optional: !0 });
                return G && G.triggerHeartbeat(), L.container.getProvider($);
            }
            function xt(L, $, G = Pt) {
                kt(L, $).clearInstance(G);
            }
            function Or() {
                Yn.clear();
            }
            const ir = new ie.LL("app", "Firebase", {
                "no-app":
                    "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
                "bad-app-name": "Illegal App name: '{$appName}",
                "duplicate-app":
                    "Firebase App named '{$appName}' already exists with different options or config",
                "app-deleted":
                    "Firebase App named '{$appName}' already deleted",
                "invalid-app-argument":
                    "firebase.{$appName}() takes either no argument or a Firebase App instance.",
                "invalid-log-argument":
                    "First argument to `onLog` must be null or a function.",
                "storage-open":
                    "Error thrown when opening storage. Original error: {$originalErrorMessage}.",
                "storage-get":
                    "Error thrown when reading from storage. Original error: {$originalErrorMessage}.",
                "storage-set":
                    "Error thrown when writing to storage. Original error: {$originalErrorMessage}.",
                "storage-delete":
                    "Error thrown when deleting from storage. Original error: {$originalErrorMessage}.",
            });
            class Nn {
                constructor($, G, xe) {
                    (this._isDeleted = !1),
                        (this._options = Object.assign({}, $)),
                        (this._config = Object.assign({}, G)),
                        (this._name = G.name),
                        (this._automaticDataCollectionEnabled =
                            G.automaticDataCollectionEnabled),
                        (this._container = xe),
                        this.container.addComponent(
                            new Q.wA("app", () => this, "PUBLIC")
                        );
                }
                get automaticDataCollectionEnabled() {
                    return (
                        this.checkDestroyed(),
                        this._automaticDataCollectionEnabled
                    );
                }
                set automaticDataCollectionEnabled($) {
                    this.checkDestroyed(),
                        (this._automaticDataCollectionEnabled = $);
                }
                get name() {
                    return this.checkDestroyed(), this._name;
                }
                get options() {
                    return this.checkDestroyed(), this._options;
                }
                get config() {
                    return this.checkDestroyed(), this._config;
                }
                get container() {
                    return this._container;
                }
                get isDeleted() {
                    return this._isDeleted;
                }
                set isDeleted($) {
                    this._isDeleted = $;
                }
                checkDestroyed() {
                    if (this.isDeleted)
                        throw ir.create("app-deleted", { appName: this._name });
                }
            }
            const Ir = "9.9.1";
            function Cr(L, $ = {}) {
                "object" != typeof $ && ($ = { name: $ });
                const G = Object.assign(
                        { name: Pt, automaticDataCollectionEnabled: !1 },
                        $
                    ),
                    xe = G.name;
                if ("string" != typeof xe || !xe)
                    throw ir.create("bad-app-name", { appName: String(xe) });
                const Ze = rn.get(xe);
                if (Ze) {
                    if ((0, ie.vZ)(L, Ze.options) && (0, ie.vZ)(G, Ze.config))
                        return Ze;
                    throw ir.create("duplicate-app", { appName: xe });
                }
                const ot = new Q.H0(xe);
                for (const Zt of Yn.values()) ot.addComponent(Zt);
                const sn = new Nn(L, G, ot);
                return rn.set(xe, sn), sn;
            }
            function Fr(L = Pt) {
                const $ = rn.get(L);
                if (!$) throw ir.create("no-app", { appName: L });
                return $;
            }
            function sr() {
                return Array.from(rn.values());
            }
            function dt(L) {
                return or.apply(this, arguments);
            }
            function or() {
                return (or = (0, p.Z)(function* (L) {
                    const $ = L.name;
                    rn.has($) &&
                        (rn.delete($),
                        yield Promise.all(
                            L.container.getProviders().map((G) => G.delete())
                        ),
                        (L.isDeleted = !0));
                })).apply(this, arguments);
            }
            function an(L, $, G) {
                var xe;
                let Ze = null !== (xe = Ke[L]) && void 0 !== xe ? xe : L;
                G && (Ze += `-${G}`);
                const ot = Ze.match(/\s|\//),
                    sn = $.match(/\s|\//);
                if (ot || sn) {
                    const Zt = [
                        `Unable to register library "${Ze}" with version "${$}":`,
                    ];
                    return (
                        ot &&
                            Zt.push(
                                `library name "${Ze}" contains illegal characters (whitespace or "/")`
                            ),
                        ot && sn && Zt.push("and"),
                        sn &&
                            Zt.push(
                                `version name "${$}" contains illegal characters (whitespace or "/")`
                            ),
                        void U.warn(Zt.join(" "))
                    );
                }
                qn(
                    new Q.wA(
                        `${Ze}-version`,
                        () => ({ library: Ze, version: $ }),
                        "VERSION"
                    )
                );
            }
            function Pn(L, $) {
                if (null !== L && "function" != typeof L)
                    throw ir.create("invalid-log-argument");
                (0, O.Am)(L, $);
            }
            function br(L) {
                (0, O.Ub)(L);
            }
            const Fn = "firebase-heartbeat-store";
            let Lr = null;
            function Dr() {
                return (
                    Lr ||
                        (Lr = (0, he.X3)("firebase-heartbeat-database", 1, {
                            upgrade: (L, $) => {
                                0 === $ && L.createObjectStore(Fn);
                            },
                        }).catch((L) => {
                            throw ir.create("storage-open", {
                                originalErrorMessage: L.message,
                            });
                        })),
                    Lr
                );
            }
            function qe() {
                return (qe = (0, p.Z)(function* (L) {
                    var $;
                    try {
                        return (yield Dr())
                            .transaction(Fn)
                            .objectStore(Fn)
                            .get(Qn(L));
                    } catch (G) {
                        throw ir.create("storage-get", {
                            originalErrorMessage:
                                null === ($ = G) || void 0 === $
                                    ? void 0
                                    : $.message,
                        });
                    }
                })).apply(this, arguments);
            }
            function at(L, $) {
                return gn.apply(this, arguments);
            }
            function gn() {
                return (gn = (0, p.Z)(function* (L, $) {
                    var G;
                    try {
                        const Ze = (yield Dr()).transaction(Fn, "readwrite");
                        return yield Ze.objectStore(Fn).put($, Qn(L)), Ze.done;
                    } catch (xe) {
                        throw ir.create("storage-set", {
                            originalErrorMessage:
                                null === (G = xe) || void 0 === G
                                    ? void 0
                                    : G.message,
                        });
                    }
                })).apply(this, arguments);
            }
            function Qn(L) {
                return `${L.name}!${L.options.appId}`;
            }
            class Ln {
                constructor($) {
                    (this.container = $), (this._heartbeatsCache = null);
                    const G = this.container.getProvider("app").getImmediate();
                    (this._storage = new Jn(G)),
                        (this._heartbeatsCachePromise = this._storage
                            .read()
                            .then((xe) => ((this._heartbeatsCache = xe), xe)));
                }
                triggerHeartbeat() {
                    var $ = this;
                    return (0, p.Z)(function* () {
                        const xe = $.container
                                .getProvider("platform-logger")
                                .getImmediate()
                                .getPlatformInfoString(),
                            Ze = vr();
                        if (
                            (null === $._heartbeatsCache &&
                                ($._heartbeatsCache =
                                    yield $._heartbeatsCachePromise),
                            $._heartbeatsCache.lastSentHeartbeatDate !== Ze &&
                                !$._heartbeatsCache.heartbeats.some(
                                    (ot) => ot.date === Ze
                                ))
                        )
                            return (
                                $._heartbeatsCache.heartbeats.push({
                                    date: Ze,
                                    agent: xe,
                                }),
                                ($._heartbeatsCache.heartbeats =
                                    $._heartbeatsCache.heartbeats.filter(
                                        (ot) => {
                                            const sn = new Date(
                                                ot.date
                                            ).valueOf();
                                            return Date.now() - sn <= 2592e6;
                                        }
                                    )),
                                $._storage.overwrite($._heartbeatsCache)
                            );
                    })();
                }
                getHeartbeatsHeader() {
                    var $ = this;
                    return (0, p.Z)(function* () {
                        if (
                            (null === $._heartbeatsCache &&
                                (yield $._heartbeatsCachePromise),
                            null === $._heartbeatsCache ||
                                0 === $._heartbeatsCache.heartbeats.length)
                        )
                            return "";
                        const G = vr(),
                            { heartbeatsToSend: xe, unsentEntries: Ze } =
                                (function Xt(L, $ = 1024) {
                                    const G = [];
                                    let xe = L.slice();
                                    for (const Ze of L) {
                                        const ot = G.find(
                                            (sn) => sn.agent === Ze.agent
                                        );
                                        if (ot) {
                                            if (
                                                (ot.dates.push(Ze.date),
                                                V(G) > $)
                                            ) {
                                                ot.dates.pop();
                                                break;
                                            }
                                        } else if (
                                            (G.push({
                                                agent: Ze.agent,
                                                dates: [Ze.date],
                                            }),
                                            V(G) > $)
                                        ) {
                                            G.pop();
                                            break;
                                        }
                                        xe = xe.slice(1);
                                    }
                                    return {
                                        heartbeatsToSend: G,
                                        unsentEntries: xe,
                                    };
                                })($._heartbeatsCache.heartbeats),
                            ot = (0, ie.L)(
                                JSON.stringify({ version: 2, heartbeats: xe })
                            );
                        return (
                            ($._heartbeatsCache.lastSentHeartbeatDate = G),
                            Ze.length > 0
                                ? (($._heartbeatsCache.heartbeats = Ze),
                                  yield $._storage.overwrite(
                                      $._heartbeatsCache
                                  ))
                                : (($._heartbeatsCache.heartbeats = []),
                                  $._storage.overwrite($._heartbeatsCache)),
                            ot
                        );
                    })();
                }
            }
            function vr() {
                return new Date().toISOString().substring(0, 10);
            }
            class Jn {
                constructor($) {
                    (this.app = $),
                        (this._canUseIndexedDBPromise =
                            this.runIndexedDBEnvironmentCheck());
                }
                runIndexedDBEnvironmentCheck() {
                    return (0, p.Z)(function* () {
                        return (
                            !!(0, ie.hl)() &&
                            (0, ie.eu)()
                                .then(() => !0)
                                .catch(() => !1)
                        );
                    })();
                }
                read() {
                    var $ = this;
                    return (0, p.Z)(function* () {
                        return (
                            ((yield $._canUseIndexedDBPromise) &&
                                (yield (function Wt(L) {
                                    return qe.apply(this, arguments);
                                })($.app))) || { heartbeats: [] }
                        );
                    })();
                }
                overwrite($) {
                    var G = this;
                    return (0, p.Z)(function* () {
                        var xe;
                        if (yield G._canUseIndexedDBPromise) {
                            const ot = yield G.read();
                            return at(G.app, {
                                lastSentHeartbeatDate:
                                    null !== (xe = $.lastSentHeartbeatDate) &&
                                    void 0 !== xe
                                        ? xe
                                        : ot.lastSentHeartbeatDate,
                                heartbeats: $.heartbeats,
                            });
                        }
                    })();
                }
                add($) {
                    var G = this;
                    return (0, p.Z)(function* () {
                        var xe;
                        if (yield G._canUseIndexedDBPromise) {
                            const ot = yield G.read();
                            return at(G.app, {
                                lastSentHeartbeatDate:
                                    null !== (xe = $.lastSentHeartbeatDate) &&
                                    void 0 !== xe
                                        ? xe
                                        : ot.lastSentHeartbeatDate,
                                heartbeats: [...ot.heartbeats, ...$.heartbeats],
                            });
                        }
                    })();
                }
            }
            function V(L) {
                return (0, ie.L)(JSON.stringify({ version: 2, heartbeats: L }))
                    .length;
            }
            !(function W(L) {
                qn(new Q.wA("platform-logger", ($) => new _e($), "PRIVATE")),
                    qn(new Q.wA("heartbeat", ($) => new Ln($), "PRIVATE")),
                    an(ge, "0.7.29", L),
                    an(ge, "0.7.29", "esm2017"),
                    an("fire-js", "");
            })("");
        },
        4859: (pt, Me, P) => {
            P.d(Me, { H0: () => ge, wA: () => O, zt: () => he });
            var p = P(5861),
                Q = P(2090);
            class O {
                constructor(U, B, J) {
                    (this.name = U),
                        (this.instanceFactory = B),
                        (this.type = J),
                        (this.multipleInstances = !1),
                        (this.serviceProps = {}),
                        (this.instantiationMode = "LAZY"),
                        (this.onInstanceCreated = null);
                }
                setInstantiationMode(U) {
                    return (this.instantiationMode = U), this;
                }
                setMultipleInstances(U) {
                    return (this.multipleInstances = U), this;
                }
                setServiceProps(U) {
                    return (this.serviceProps = U), this;
                }
                setInstanceCreatedCallback(U) {
                    return (this.onInstanceCreated = U), this;
                }
            }
            const ie = "[DEFAULT]";
            class he {
                constructor(U, B) {
                    (this.name = U),
                        (this.container = B),
                        (this.component = null),
                        (this.instances = new Map()),
                        (this.instancesDeferred = new Map()),
                        (this.instancesOptions = new Map()),
                        (this.onInitCallbacks = new Map());
                }
                get(U) {
                    const B = this.normalizeInstanceIdentifier(U);
                    if (!this.instancesDeferred.has(B)) {
                        const J = new Q.BH();
                        if (
                            (this.instancesDeferred.set(B, J),
                            this.isInitialized(B) ||
                                this.shouldAutoInitialize())
                        )
                            try {
                                const Le = this.getOrInitializeService({
                                    instanceIdentifier: B,
                                });
                                Le && J.resolve(Le);
                            } catch {}
                    }
                    return this.instancesDeferred.get(B).promise;
                }
                getImmediate(U) {
                    var B;
                    const J = this.normalizeInstanceIdentifier(U?.identifier),
                        Le = null !== (B = U?.optional) && void 0 !== B && B;
                    if (
                        !this.isInitialized(J) &&
                        !this.shouldAutoInitialize()
                    ) {
                        if (Le) return null;
                        throw Error(`Service ${this.name} is not available`);
                    }
                    try {
                        return this.getOrInitializeService({
                            instanceIdentifier: J,
                        });
                    } catch (Ee) {
                        if (Le) return null;
                        throw Ee;
                    }
                }
                getComponent() {
                    return this.component;
                }
                setComponent(U) {
                    if (U.name !== this.name)
                        throw Error(
                            `Mismatching Component ${U.name} for Provider ${this.name}.`
                        );
                    if (this.component)
                        throw Error(
                            `Component for ${this.name} has already been provided`
                        );
                    if (((this.component = U), this.shouldAutoInitialize())) {
                        if (
                            (function se(fe) {
                                return "EAGER" === fe.instantiationMode;
                            })(U)
                        )
                            try {
                                this.getOrInitializeService({
                                    instanceIdentifier: ie,
                                });
                            } catch {}
                        for (const [B, J] of this.instancesDeferred.entries()) {
                            const Le = this.normalizeInstanceIdentifier(B);
                            try {
                                const Ee = this.getOrInitializeService({
                                    instanceIdentifier: Le,
                                });
                                J.resolve(Ee);
                            } catch {}
                        }
                    }
                }
                clearInstance(U = ie) {
                    this.instancesDeferred.delete(U),
                        this.instancesOptions.delete(U),
                        this.instances.delete(U);
                }
                delete() {
                    var U = this;
                    return (0, p.Z)(function* () {
                        const B = Array.from(U.instances.values());
                        yield Promise.all([
                            ...B.filter((J) => "INTERNAL" in J).map((J) =>
                                J.INTERNAL.delete()
                            ),
                            ...B.filter((J) => "_delete" in J).map((J) =>
                                J._delete()
                            ),
                        ]);
                    })();
                }
                isComponentSet() {
                    return null != this.component;
                }
                isInitialized(U = ie) {
                    return this.instances.has(U);
                }
                getOptions(U = ie) {
                    return this.instancesOptions.get(U) || {};
                }
                initialize(U = {}) {
                    const { options: B = {} } = U,
                        J = this.normalizeInstanceIdentifier(
                            U.instanceIdentifier
                        );
                    if (this.isInitialized(J))
                        throw Error(
                            `${this.name}(${J}) has already been initialized`
                        );
                    if (!this.isComponentSet())
                        throw Error(
                            `Component ${this.name} has not been registered yet`
                        );
                    const Le = this.getOrInitializeService({
                        instanceIdentifier: J,
                        options: B,
                    });
                    for (const [Ee, Se] of this.instancesDeferred.entries())
                        J === this.normalizeInstanceIdentifier(Ee) &&
                            Se.resolve(Le);
                    return Le;
                }
                onInit(U, B) {
                    var J;
                    const Le = this.normalizeInstanceIdentifier(B),
                        Ee =
                            null !== (J = this.onInitCallbacks.get(Le)) &&
                            void 0 !== J
                                ? J
                                : new Set();
                    Ee.add(U), this.onInitCallbacks.set(Le, Ee);
                    const Se = this.instances.get(Le);
                    return (
                        Se && U(Se, Le),
                        () => {
                            Ee.delete(U);
                        }
                    );
                }
                invokeOnInitCallbacks(U, B) {
                    const J = this.onInitCallbacks.get(B);
                    if (J)
                        for (const Le of J)
                            try {
                                Le(U, B);
                            } catch {}
                }
                getOrInitializeService({
                    instanceIdentifier: U,
                    options: B = {},
                }) {
                    let J = this.instances.get(U);
                    if (
                        !J &&
                        this.component &&
                        ((J = this.component.instanceFactory(this.container, {
                            instanceIdentifier:
                                ((fe = U), fe === ie ? void 0 : fe),
                            options: B,
                        })),
                        this.instances.set(U, J),
                        this.instancesOptions.set(U, B),
                        this.invokeOnInitCallbacks(J, U),
                        this.component.onInstanceCreated)
                    )
                        try {
                            this.component.onInstanceCreated(
                                this.container,
                                U,
                                J
                            );
                        } catch {}
                    var fe;
                    return J || null;
                }
                normalizeInstanceIdentifier(U = ie) {
                    return this.component
                        ? this.component.multipleInstances
                            ? U
                            : ie
                        : U;
                }
                shouldAutoInitialize() {
                    return (
                        !!this.component &&
                        "EXPLICIT" !== this.component.instantiationMode
                    );
                }
            }
            class ge {
                constructor(U) {
                    (this.name = U), (this.providers = new Map());
                }
                addComponent(U) {
                    const B = this.getProvider(U.name);
                    if (B.isComponentSet())
                        throw new Error(
                            `Component ${U.name} has already been registered with ${this.name}`
                        );
                    B.setComponent(U);
                }
                addOrOverwriteComponent(U) {
                    this.getProvider(U.name).isComponentSet() &&
                        this.providers.delete(U.name),
                        this.addComponent(U);
                }
                getProvider(U) {
                    if (this.providers.has(U)) return this.providers.get(U);
                    const B = new he(U, this);
                    return this.providers.set(U, B), B;
                }
                getProviders() {
                    return Array.from(this.providers.values());
                }
            }
        },
        2833: (pt, Me, P) => {
            var p = P(5861),
                Q = P(9681),
                O = P(4859),
                ie = P(2090),
                he = P(8766);
            const _e = "@firebase/installations",
                se = "0.5.12",
                fe = `w:${se}`,
                U = "FIS_v2",
                He = new ie.LL("installations", "Installations", {
                    "missing-app-config-values":
                        'Missing App configuration value: "{$valueName}"',
                    "not-registered":
                        "Firebase Installation is not registered.",
                    "installation-not-found":
                        "Firebase Installation not found.",
                    "request-failed":
                        '{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',
                    "app-offline":
                        "Could not process request. Application offline.",
                    "delete-pending-registration":
                        "Can't delete installation while there is a pending registration request.",
                });
            function ce(Z) {
                return Z instanceof ie.ZR && Z.code.includes("request-failed");
            }
            function de({ projectId: Z }) {
                return `https://firebaseinstallations.googleapis.com/v1/projects/${Z}/installations`;
            }
            function nt(Z) {
                return {
                    token: Z.token,
                    requestStatus: 2,
                    expiresIn: j(Z.expiresIn),
                    creationTime: Date.now(),
                };
            }
            function Qe(Z, ye) {
                return Ae.apply(this, arguments);
            }
            function Ae() {
                return (Ae = (0, p.Z)(function* (Z, ye) {
                    const et = (yield ye.json()).error;
                    return He.create("request-failed", {
                        requestName: Z,
                        serverCode: et.code,
                        serverMessage: et.message,
                        serverStatus: et.status,
                    });
                })).apply(this, arguments);
            }
            function ve({ apiKey: Z }) {
                return new Headers({
                    "Content-Type": "application/json",
                    Accept: "application/json",
                    "x-goog-api-key": Z,
                });
            }
            function De(Z, { refreshToken: ye }) {
                const Fe = ve(Z);
                return (
                    Fe.append(
                        "Authorization",
                        (function Ce(Z) {
                            return `${U} ${Z}`;
                        })(ye)
                    ),
                    Fe
                );
            }
            function We(Z) {
                return Ue.apply(this, arguments);
            }
            function Ue() {
                return (Ue = (0, p.Z)(function* (Z) {
                    const ye = yield Z();
                    return ye.status >= 500 && ye.status < 600 ? Z() : ye;
                })).apply(this, arguments);
            }
            function j(Z) {
                return Number(Z.replace("s", "000"));
            }
            function Y(Z, ye) {
                return te.apply(this, arguments);
            }
            function te() {
                return (te = (0, p.Z)(function* (
                    { appConfig: Z, heartbeatServiceProvider: ye },
                    { fid: Fe }
                ) {
                    const et = de(Z),
                        Cn = ve(Z),
                        Yt = ye.getImmediate({ optional: !0 });
                    if (Yt) {
                        const jt = yield Yt.getHeartbeatsHeader();
                        jt && Cn.append("x-firebase-client", jt);
                    }
                    const Dn = {
                            method: "POST",
                            headers: Cn,
                            body: JSON.stringify({
                                fid: Fe,
                                authVersion: U,
                                appId: Z.appId,
                                sdkVersion: fe,
                            }),
                        },
                        Ci = yield We(() => fetch(et, Dn));
                    if (Ci.ok) {
                        const jt = yield Ci.json();
                        return {
                            fid: jt.fid || Fe,
                            registrationStatus: 2,
                            refreshToken: jt.refreshToken,
                            authToken: nt(jt.authToken),
                        };
                    }
                    throw yield Qe("Create Installation", Ci);
                })).apply(this, arguments);
            }
            function X(Z) {
                return new Promise((ye) => {
                    setTimeout(ye, Z);
                });
            }
            const oe = /^[cdef][\w-]{21}$/;
            function ct() {
                try {
                    const Z = new Uint8Array(17);
                    (self.crypto || self.msCrypto).getRandomValues(Z),
                        (Z[0] = 112 + (Z[0] % 16));
                    const Fe = (function Gt(Z) {
                        return (function pe(Z) {
                            return btoa(String.fromCharCode(...Z))
                                .replace(/\+/g, "-")
                                .replace(/\//g, "_");
                        })(Z).substr(0, 22);
                    })(Z);
                    return oe.test(Fe) ? Fe : "";
                } catch {
                    return "";
                }
            }
            function Pt(Z) {
                return `${Z.appName}!${Z.appId}`;
            }
            const Ke = new Map();
            function rn(Z, ye) {
                const Fe = Pt(Z);
                Jt(Fe, ye),
                    (function qn(Z, ye) {
                        const Fe = (function xt() {
                            return (
                                !kt &&
                                    "BroadcastChannel" in self &&
                                    ((kt = new BroadcastChannel(
                                        "[Firebase] FID Change"
                                    )),
                                    (kt.onmessage = (Z) => {
                                        Jt(Z.data.key, Z.data.fid);
                                    })),
                                kt
                            );
                        })();
                        Fe && Fe.postMessage({ key: Z, fid: ye }),
                            (function Or() {
                                0 === Ke.size &&
                                    kt &&
                                    (kt.close(), (kt = null));
                            })();
                    })(Fe, ye);
            }
            function Jt(Z, ye) {
                const Fe = Ke.get(Z);
                if (Fe) for (const et of Fe) et(ye);
            }
            let kt = null;
            const Nn = "firebase-installations-store";
            let Ir = null;
            function Cr() {
                return (
                    Ir ||
                        (Ir = (0, he.X3)("firebase-installations-database", 1, {
                            upgrade: (Z, ye) => {
                                0 === ye && Z.createObjectStore(Nn);
                            },
                        })),
                    Ir
                );
            }
            function Fr(Z, ye) {
                return sr.apply(this, arguments);
            }
            function sr() {
                return (sr = (0, p.Z)(function* (Z, ye) {
                    const Fe = Pt(Z),
                        Cn = (yield Cr()).transaction(Nn, "readwrite"),
                        Yt = Cn.objectStore(Nn),
                        bn = yield Yt.get(Fe);
                    return (
                        yield Yt.put(ye, Fe),
                        yield Cn.done,
                        (!bn || bn.fid !== ye.fid) && rn(Z, ye.fid),
                        ye
                    );
                })).apply(this, arguments);
            }
            function dt(Z) {
                return or.apply(this, arguments);
            }
            function or() {
                return (or = (0, p.Z)(function* (Z) {
                    const ye = Pt(Z),
                        et = (yield Cr()).transaction(Nn, "readwrite");
                    yield et.objectStore(Nn).delete(ye), yield et.done;
                })).apply(this, arguments);
            }
            function an(Z, ye) {
                return Pn.apply(this, arguments);
            }
            function Pn() {
                return (Pn = (0, p.Z)(function* (Z, ye) {
                    const Fe = Pt(Z),
                        Cn = (yield Cr()).transaction(Nn, "readwrite"),
                        Yt = Cn.objectStore(Nn),
                        bn = yield Yt.get(Fe),
                        Dn = ye(bn);
                    return (
                        void 0 === Dn
                            ? yield Yt.delete(Fe)
                            : yield Yt.put(Dn, Fe),
                        yield Cn.done,
                        Dn && (!bn || bn.fid !== Dn.fid) && rn(Z, Dn.fid),
                        Dn
                    );
                })).apply(this, arguments);
            }
            function br(Z) {
                return Qr.apply(this, arguments);
            }
            function Qr() {
                return (Qr = (0, p.Z)(function* (Z) {
                    let ye;
                    const Fe = yield an(Z.appConfig, (et) => {
                        const Cn = ln(et),
                            Yt = Fn(Z, Cn);
                        return (
                            (ye = Yt.registrationPromise), Yt.installationEntry
                        );
                    });
                    return "" === Fe.fid
                        ? { installationEntry: yield ye }
                        : { installationEntry: Fe, registrationPromise: ye };
                })).apply(this, arguments);
            }
            function ln(Z) {
                return gn(Z || { fid: ct(), registrationStatus: 0 });
            }
            function Fn(Z, ye) {
                if (0 === ye.registrationStatus) {
                    if (!navigator.onLine)
                        return {
                            installationEntry: ye,
                            registrationPromise: Promise.reject(
                                He.create("app-offline")
                            ),
                        };
                    const Fe = {
                            fid: ye.fid,
                            registrationStatus: 1,
                            registrationTime: Date.now(),
                        },
                        et = (function Lr(Z, ye) {
                            return Dr.apply(this, arguments);
                        })(Z, Fe);
                    return { installationEntry: Fe, registrationPromise: et };
                }
                return 1 === ye.registrationStatus
                    ? { installationEntry: ye, registrationPromise: Wt(Z) }
                    : { installationEntry: ye };
            }
            function Dr() {
                return (Dr = (0, p.Z)(function* (Z, ye) {
                    try {
                        const Fe = yield Y(Z, ye);
                        return Fr(Z.appConfig, Fe);
                    } catch (Fe) {
                        throw (
                            (ce(Fe) && 409 === Fe.customData.serverCode
                                ? yield dt(Z.appConfig)
                                : yield Fr(Z.appConfig, {
                                      fid: ye.fid,
                                      registrationStatus: 0,
                                  }),
                            Fe)
                        );
                    }
                })).apply(this, arguments);
            }
            function Wt(Z) {
                return qe.apply(this, arguments);
            }
            function qe() {
                return (qe = (0, p.Z)(function* (Z) {
                    let ye = yield at(Z.appConfig);
                    for (; 1 === ye.registrationStatus; )
                        yield X(100), (ye = yield at(Z.appConfig));
                    if (0 === ye.registrationStatus) {
                        const {
                            installationEntry: Fe,
                            registrationPromise: et,
                        } = yield br(Z);
                        return et || Fe;
                    }
                    return ye;
                })).apply(this, arguments);
            }
            function at(Z) {
                return an(Z, (ye) => {
                    if (!ye) throw He.create("installation-not-found");
                    return gn(ye);
                });
            }
            function gn(Z) {
                return (function Qn(Z) {
                    return (
                        1 === Z.registrationStatus &&
                        Z.registrationTime + 1e4 < Date.now()
                    );
                })(Z)
                    ? { fid: Z.fid, registrationStatus: 0 }
                    : Z;
            }
            function Tt(Z, ye) {
                return yr.apply(this, arguments);
            }
            function yr() {
                return (yr = (0, p.Z)(function* (
                    { appConfig: Z, heartbeatServiceProvider: ye },
                    Fe
                ) {
                    const et = Ln(Z, Fe),
                        Cn = De(Z, Fe),
                        Yt = ye.getImmediate({ optional: !0 });
                    if (Yt) {
                        const jt = yield Yt.getHeartbeatsHeader();
                        jt && Cn.append("x-firebase-client", jt);
                    }
                    const Dn = {
                            method: "POST",
                            headers: Cn,
                            body: JSON.stringify({
                                installation: {
                                    sdkVersion: fe,
                                    appId: Z.appId,
                                },
                            }),
                        },
                        Ci = yield We(() => fetch(et, Dn));
                    if (Ci.ok) return nt(yield Ci.json());
                    throw yield Qe("Generate Auth Token", Ci);
                })).apply(this, arguments);
            }
            function Ln(Z, { fid: ye }) {
                return `${de(Z)}/${ye}/authTokens:generate`;
            }
            function vr(Z) {
                return Xt.apply(this, arguments);
            }
            function Xt() {
                return (Xt = (0, p.Z)(function* (Z, ye = !1) {
                    let Fe;
                    const et = yield an(Z.appConfig, (Yt) => {
                        if (!G(Yt)) throw He.create("not-registered");
                        const bn = Yt.authToken;
                        if (!ye && xe(bn)) return Yt;
                        if (1 === bn.requestStatus) return (Fe = Jn(Z, ye)), Yt;
                        {
                            if (!navigator.onLine)
                                throw He.create("app-offline");
                            const Dn = ot(Yt);
                            return (Fe = L(Z, Dn)), Dn;
                        }
                    });
                    return Fe ? yield Fe : et.authToken;
                })).apply(this, arguments);
            }
            function Jn(Z, ye) {
                return V.apply(this, arguments);
            }
            function V() {
                return (V = (0, p.Z)(function* (Z, ye) {
                    let Fe = yield W(Z.appConfig);
                    for (; 1 === Fe.authToken.requestStatus; )
                        yield X(100), (Fe = yield W(Z.appConfig));
                    const et = Fe.authToken;
                    return 0 === et.requestStatus ? vr(Z, ye) : et;
                })).apply(this, arguments);
            }
            function W(Z) {
                return an(Z, (ye) => {
                    if (!G(ye)) throw He.create("not-registered");
                    return (function sn(Z) {
                        return (
                            1 === Z.requestStatus &&
                            Z.requestTime + 1e4 < Date.now()
                        );
                    })(ye.authToken)
                        ? Object.assign(Object.assign({}, ye), {
                              authToken: { requestStatus: 0 },
                          })
                        : ye;
                });
            }
            function L(Z, ye) {
                return $.apply(this, arguments);
            }
            function $() {
                return ($ = (0, p.Z)(function* (Z, ye) {
                    try {
                        const Fe = yield Tt(Z, ye),
                            et = Object.assign(Object.assign({}, ye), {
                                authToken: Fe,
                            });
                        return yield Fr(Z.appConfig, et), Fe;
                    } catch (Fe) {
                        if (
                            !ce(Fe) ||
                            (401 !== Fe.customData.serverCode &&
                                404 !== Fe.customData.serverCode)
                        ) {
                            const et = Object.assign(Object.assign({}, ye), {
                                authToken: { requestStatus: 0 },
                            });
                            yield Fr(Z.appConfig, et);
                        } else yield dt(Z.appConfig);
                        throw Fe;
                    }
                })).apply(this, arguments);
            }
            function G(Z) {
                return void 0 !== Z && 2 === Z.registrationStatus;
            }
            function xe(Z) {
                return (
                    2 === Z.requestStatus &&
                    !(function Ze(Z) {
                        const ye = Date.now();
                        return (
                            ye < Z.creationTime ||
                            Z.creationTime + Z.expiresIn < ye + 36e5
                        );
                    })(Z)
                );
            }
            function ot(Z) {
                const ye = { requestStatus: 1, requestTime: Date.now() };
                return Object.assign(Object.assign({}, Z), { authToken: ye });
            }
            function ne() {
                return (ne = (0, p.Z)(function* (Z) {
                    const ye = Z,
                        { installationEntry: Fe, registrationPromise: et } =
                            yield br(ye);
                    return (
                        et
                            ? et.catch(console.error)
                            : vr(ye).catch(console.error),
                        Fe.fid
                    );
                })).apply(this, arguments);
            }
            function be() {
                return (be = (0, p.Z)(function* (Z, ye = !1) {
                    const Fe = Z;
                    return yield Oe(Fe), (yield vr(Fe, ye)).token;
                })).apply(this, arguments);
            }
            function Oe(Z) {
                return ze.apply(this, arguments);
            }
            function ze() {
                return (ze = (0, p.Z)(function* (Z) {
                    const { registrationPromise: ye } = yield br(Z);
                    ye && (yield ye);
                })).apply(this, arguments);
            }
            function Vn(Z) {
                return He.create("missing-app-config-values", { valueName: Z });
            }
            const In = "installations",
                Jr = (Z) => {
                    const ye = Z.getProvider("app").getImmediate(),
                        Fe = (function cn(Z) {
                            if (!Z || !Z.options) throw Vn("App Configuration");
                            if (!Z.name) throw Vn("App Name");
                            const ye = ["projectId", "apiKey", "appId"];
                            for (const Fe of ye)
                                if (!Z.options[Fe]) throw Vn(Fe);
                            return {
                                appName: Z.name,
                                projectId: Z.options.projectId,
                                apiKey: Z.options.apiKey,
                                appId: Z.options.appId,
                            };
                        })(ye);
                    return {
                        app: ye,
                        appConfig: Fe,
                        heartbeatServiceProvider: (0, Q._getProvider)(
                            ye,
                            "heartbeat"
                        ),
                        _delete: () => Promise.resolve(),
                    };
                },
                Ot = (Z) => {
                    const ye = Z.getProvider("app").getImmediate(),
                        Fe = (0, Q._getProvider)(ye, In).getImmediate();
                    return {
                        getId: () =>
                            (function Zt(Z) {
                                return ne.apply(this, arguments);
                            })(Fe),
                        getToken: (Cn) =>
                            (function le(Z) {
                                return be.apply(this, arguments);
                            })(Fe, Cn),
                    };
                };
            (function bs() {
                (0, Q._registerComponent)(new O.wA(In, Jr, "PUBLIC")),
                    (0, Q._registerComponent)(
                        new O.wA("installations-internal", Ot, "PRIVATE")
                    );
            })(),
                (0, Q.registerVersion)(_e, se),
                (0, Q.registerVersion)(_e, se, "esm2017");
        },
        1877: (pt, Me, P) => {
            P.d(Me, { Am: () => fe, Ub: () => ge, Yd: () => se, in: () => Q });
            const p = [];
            var Q = (() => {
                return (
                    ((U = Q || (Q = {}))[(U.DEBUG = 0)] = "DEBUG"),
                    (U[(U.VERBOSE = 1)] = "VERBOSE"),
                    (U[(U.INFO = 2)] = "INFO"),
                    (U[(U.WARN = 3)] = "WARN"),
                    (U[(U.ERROR = 4)] = "ERROR"),
                    (U[(U.SILENT = 5)] = "SILENT"),
                    Q
                );
                var U;
            })();
            const O = {
                    debug: Q.DEBUG,
                    verbose: Q.VERBOSE,
                    info: Q.INFO,
                    warn: Q.WARN,
                    error: Q.ERROR,
                    silent: Q.SILENT,
                },
                ie = Q.INFO,
                he = {
                    [Q.DEBUG]: "log",
                    [Q.VERBOSE]: "log",
                    [Q.INFO]: "info",
                    [Q.WARN]: "warn",
                    [Q.ERROR]: "error",
                },
                _e = (U, B, ...J) => {
                    if (B < U.logLevel) return;
                    const Le = new Date().toISOString(),
                        Ee = he[B];
                    if (!Ee)
                        throw new Error(
                            `Attempted to log a message with an invalid logType (value: ${B})`
                        );
                    console[Ee](`[${Le}]  ${U.name}:`, ...J);
                };
            class se {
                constructor(B) {
                    (this.name = B),
                        (this._logLevel = ie),
                        (this._logHandler = _e),
                        (this._userLogHandler = null),
                        p.push(this);
                }
                get logLevel() {
                    return this._logLevel;
                }
                set logLevel(B) {
                    if (!(B in Q))
                        throw new TypeError(
                            `Invalid value "${B}" assigned to \`logLevel\``
                        );
                    this._logLevel = B;
                }
                setLogLevel(B) {
                    this._logLevel = "string" == typeof B ? O[B] : B;
                }
                get logHandler() {
                    return this._logHandler;
                }
                set logHandler(B) {
                    if ("function" != typeof B)
                        throw new TypeError(
                            "Value assigned to `logHandler` must be a function"
                        );
                    this._logHandler = B;
                }
                get userLogHandler() {
                    return this._userLogHandler;
                }
                set userLogHandler(B) {
                    this._userLogHandler = B;
                }
                debug(...B) {
                    this._userLogHandler &&
                        this._userLogHandler(this, Q.DEBUG, ...B),
                        this._logHandler(this, Q.DEBUG, ...B);
                }
                log(...B) {
                    this._userLogHandler &&
                        this._userLogHandler(this, Q.VERBOSE, ...B),
                        this._logHandler(this, Q.VERBOSE, ...B);
                }
                info(...B) {
                    this._userLogHandler &&
                        this._userLogHandler(this, Q.INFO, ...B),
                        this._logHandler(this, Q.INFO, ...B);
                }
                warn(...B) {
                    this._userLogHandler &&
                        this._userLogHandler(this, Q.WARN, ...B),
                        this._logHandler(this, Q.WARN, ...B);
                }
                error(...B) {
                    this._userLogHandler &&
                        this._userLogHandler(this, Q.ERROR, ...B),
                        this._logHandler(this, Q.ERROR, ...B);
                }
            }
            function ge(U) {
                p.forEach((B) => {
                    B.setLogLevel(U);
                });
            }
            function fe(U, B) {
                for (const J of p) {
                    let Le = null;
                    B && B.level && (Le = O[B.level]),
                        (J.userLogHandler =
                            null === U
                                ? null
                                : (Ee, Se, ...He) => {
                                      const ce = He.map((de) => {
                                          if (null == de) return null;
                                          if ("string" == typeof de) return de;
                                          if (
                                              "number" == typeof de ||
                                              "boolean" == typeof de
                                          )
                                              return de.toString();
                                          if (de instanceof Error)
                                              return de.message;
                                          try {
                                              return JSON.stringify(de);
                                          } catch {
                                              return null;
                                          }
                                      })
                                          .filter((de) => de)
                                          .join(" ");
                                      Se >= (Le ?? Ee.logLevel) &&
                                          U({
                                              level: Q[Se].toLowerCase(),
                                              message: ce,
                                              args: He,
                                              type: Ee.name,
                                          });
                                  });
                }
            }
        },
        8766: (pt, Me, P) => {
            P.d(Me, { Lj: () => Ae, X3: () => Qe });
            var p = P(5861);
            let O, ie;
            const se = new WeakMap(),
                ge = new WeakMap(),
                fe = new WeakMap(),
                U = new WeakMap(),
                B = new WeakMap();
            let Ee = {
                get(j, Ce, Y) {
                    if (j instanceof IDBTransaction) {
                        if ("done" === Ce) return ge.get(j);
                        if ("objectStoreNames" === Ce)
                            return j.objectStoreNames || fe.get(j);
                        if ("store" === Ce)
                            return Y.objectStoreNames[1]
                                ? void 0
                                : Y.objectStore(Y.objectStoreNames[0]);
                    }
                    return de(j[Ce]);
                },
                set: (j, Ce, Y) => ((j[Ce] = Y), !0),
                has: (j, Ce) =>
                    (j instanceof IDBTransaction &&
                        ("done" === Ce || "store" === Ce)) ||
                    Ce in j,
            };
            function ce(j) {
                return "function" == typeof j
                    ? (function He(j) {
                          return j !== IDBDatabase.prototype.transaction ||
                              "objectStoreNames" in IDBTransaction.prototype
                              ? (function _e() {
                                    return (
                                        ie ||
                                        (ie = [
                                            IDBCursor.prototype.advance,
                                            IDBCursor.prototype.continue,
                                            IDBCursor.prototype
                                                .continuePrimaryKey,
                                        ])
                                    );
                                })().includes(j)
                                  ? function (...Ce) {
                                        return (
                                            j.apply(nt(this), Ce),
                                            de(se.get(this))
                                        );
                                    }
                                  : function (...Ce) {
                                        return de(j.apply(nt(this), Ce));
                                    }
                              : function (Ce, ...Y) {
                                    const te = j.call(nt(this), Ce, ...Y);
                                    return (
                                        fe.set(te, Ce.sort ? Ce.sort() : [Ce]),
                                        de(te)
                                    );
                                };
                      })(j)
                    : (j instanceof IDBTransaction &&
                          (function Le(j) {
                              if (ge.has(j)) return;
                              const Ce = new Promise((Y, te) => {
                                  const X = () => {
                                          j.removeEventListener("complete", pe),
                                              j.removeEventListener(
                                                  "error",
                                                  oe
                                              ),
                                              j.removeEventListener(
                                                  "abort",
                                                  oe
                                              );
                                      },
                                      pe = () => {
                                          Y(), X();
                                      },
                                      oe = () => {
                                          te(
                                              j.error ||
                                                  new DOMException(
                                                      "AbortError",
                                                      "AbortError"
                                                  )
                                          ),
                                              X();
                                      };
                                  j.addEventListener("complete", pe),
                                      j.addEventListener("error", oe),
                                      j.addEventListener("abort", oe);
                              });
                              ge.set(j, Ce);
                          })(j),
                      ((j, Ce) => Ce.some((Y) => j instanceof Y))(
                          j,
                          (function he() {
                              return (
                                  O ||
                                  (O = [
                                      IDBDatabase,
                                      IDBObjectStore,
                                      IDBIndex,
                                      IDBCursor,
                                      IDBTransaction,
                                  ])
                              );
                          })()
                      )
                          ? new Proxy(j, Ee)
                          : j);
            }
            function de(j) {
                if (j instanceof IDBRequest)
                    return (function J(j) {
                        const Ce = new Promise((Y, te) => {
                            const X = () => {
                                    j.removeEventListener("success", pe),
                                        j.removeEventListener("error", oe);
                                },
                                pe = () => {
                                    Y(de(j.result)), X();
                                },
                                oe = () => {
                                    te(j.error), X();
                                };
                            j.addEventListener("success", pe),
                                j.addEventListener("error", oe);
                        });
                        return (
                            Ce.then((Y) => {
                                Y instanceof IDBCursor && se.set(Y, j);
                            }).catch(() => {}),
                            B.set(Ce, j),
                            Ce
                        );
                    })(j);
                if (U.has(j)) return U.get(j);
                const Ce = ce(j);
                return Ce !== j && (U.set(j, Ce), B.set(Ce, j)), Ce;
            }
            const nt = (j) => B.get(j);
            function Qe(
                j,
                Ce,
                { blocked: Y, upgrade: te, blocking: X, terminated: pe } = {}
            ) {
                const oe = indexedDB.open(j, Ce),
                    Be = de(oe);
                return (
                    te &&
                        oe.addEventListener("upgradeneeded", (ct) => {
                            te(
                                de(oe.result),
                                ct.oldVersion,
                                ct.newVersion,
                                de(oe.transaction)
                            );
                        }),
                    Y && oe.addEventListener("blocked", () => Y()),
                    Be.then((ct) => {
                        pe && ct.addEventListener("close", () => pe()),
                            X &&
                                ct.addEventListener("versionchange", () => X());
                    }).catch(() => {}),
                    Be
                );
            }
            function Ae(j, { blocked: Ce } = {}) {
                const Y = indexedDB.deleteDatabase(j);
                return (
                    Ce && Y.addEventListener("blocked", () => Ce()),
                    de(Y).then(() => {})
                );
            }
            const ve = ["get", "getKey", "getAll", "getAllKeys", "count"],
                De = ["put", "add", "delete", "clear"],
                We = new Map();
            function Ue(j, Ce) {
                if (
                    !(j instanceof IDBDatabase) ||
                    Ce in j ||
                    "string" != typeof Ce
                )
                    return;
                if (We.get(Ce)) return We.get(Ce);
                const Y = Ce.replace(/FromIndex$/, ""),
                    te = Ce !== Y,
                    X = De.includes(Y);
                if (
                    !(Y in (te ? IDBIndex : IDBObjectStore).prototype) ||
                    (!X && !ve.includes(Y))
                )
                    return;
                const pe = (function () {
                    var oe = (0, p.Z)(function* (Be, ...ct) {
                        const Gt = this.transaction(
                            Be,
                            X ? "readwrite" : "readonly"
                        );
                        let Pt = Gt.store;
                        return (
                            te && (Pt = Pt.index(ct.shift())),
                            (yield Promise.all([Pt[Y](...ct), X && Gt.done]))[0]
                        );
                    });
                    return function (ct) {
                        return oe.apply(this, arguments);
                    };
                })();
                return We.set(Ce, pe), pe;
            }
            !(function Se(j) {
                Ee = j(Ee);
            })((j) => ({
                ...j,
                get: (Ce, Y, te) => Ue(Ce, Y) || j.get(Ce, Y, te),
                has: (Ce, Y) => !!Ue(Ce, Y) || j.has(Ce, Y),
            }));
        },
        5861: (pt, Me, P) => {
            function p(O, ie, he, _e, se, ge, fe) {
                try {
                    var U = O[ge](fe),
                        B = U.value;
                } catch (J) {
                    return void he(J);
                }
                U.done ? ie(B) : Promise.resolve(B).then(_e, se);
            }
            function Q(O) {
                return function () {
                    var ie = this,
                        he = arguments;
                    return new Promise(function (_e, se) {
                        var ge = O.apply(ie, he);
                        function fe(B) {
                            p(ge, _e, se, fe, U, "next", B);
                        }
                        function U(B) {
                            p(ge, _e, se, fe, U, "throw", B);
                        }
                        fe(void 0);
                    });
                };
            }
            P.d(Me, { Z: () => Q });
        },
    },
    (pt) => {
        pt((pt.s = 7515));
    },
]);
